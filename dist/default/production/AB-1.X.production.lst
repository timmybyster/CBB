

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Aug 22 10:15:32 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18LF66K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text106,global,reloc=2,class=CODE,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	text113,global,reloc=2,class=CODE,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,delta=1
   139                           	psect	text120,global,reloc=2,class=CODE,delta=1
   140                           	psect	text121,global,reloc=2,class=CODE,delta=1
   141                           	psect	text122,global,reloc=2,class=CODE,delta=1
   142                           	psect	text123,global,reloc=2,class=CODE,delta=1
   143                           	psect	text124,global,reloc=2,class=CODE,delta=1
   144                           	psect	text125,global,reloc=2,class=CODE,delta=1
   145                           	psect	text126,global,reloc=2,class=CODE,delta=1
   146                           	psect	text127,global,reloc=2,class=CODE,delta=1
   147                           	psect	text128,global,reloc=2,class=CODE,delta=1
   148                           	psect	text129,global,reloc=2,class=CODE,delta=1
   149                           	psect	text130,global,reloc=2,class=CODE,delta=1
   150                           	psect	text131,global,reloc=2,class=CODE,delta=1
   151                           	psect	text132,global,reloc=2,class=CODE,delta=1
   152                           	psect	text133,global,reloc=2,class=CODE,delta=1
   153                           	psect	text134,global,reloc=2,class=CODE,delta=1
   154                           	psect	text135,global,reloc=2,class=CODE,delta=1
   155                           	psect	text136,global,reloc=2,class=CODE,delta=1
   156                           	psect	text137,global,reloc=2,class=CODE,delta=1
   157                           	psect	text138,global,reloc=2,class=CODE,delta=1
   158                           	psect	text139,global,reloc=2,class=CODE,delta=1
   159                           	psect	text140,global,reloc=2,class=CODE,delta=1
   160                           	psect	text141,global,reloc=2,class=CODE,delta=1
   161                           	psect	text142,global,reloc=2,class=CODE,delta=1
   162                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=1
   163                           	psect	text144,global,reloc=2,class=CODE,delta=1
   164                           	psect	text145,global,reloc=2,class=CODE,delta=1
   165                           	psect	text146,global,reloc=2,class=CODE,delta=1
   166                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   167                           	psect	text148,global,reloc=2,class=CODE,delta=1
   168                           	psect	text149,global,reloc=2,class=CODE,delta=1
   169                           	psect	text150,global,reloc=2,class=CODE,delta=1
   170                           	psect	text151,global,reloc=2,class=CODE,delta=1
   171                           	psect	text152,global,reloc=2,class=CODE,delta=1
   172                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   173                           	psect	text154,global,reloc=2,class=CODE,delta=1
   174                           	psect	text155,global,reloc=2,class=CODE,delta=1
   175                           	psect	text156,global,reloc=2,class=CODE,delta=1
   176                           	psect	text157,global,reloc=2,class=CODE,delta=1
   177                           	psect	text158,global,reloc=2,class=CODE,delta=1
   178                           	psect	text159,global,reloc=2,class=CODE,delta=1
   179                           	psect	text160,global,reloc=2,class=CODE,delta=1
   180                           	psect	text161,global,reloc=2,class=CODE,delta=1
   181                           	psect	text162,global,reloc=2,class=CODE,delta=1
   182                           	psect	text163,global,reloc=2,class=CODE,delta=1
   183                           	psect	text164,global,reloc=2,class=CODE,delta=1
   184                           	psect	text165,global,reloc=2,class=CODE,delta=1
   185                           	psect	text166,global,reloc=2,class=CODE,delta=1
   186                           	psect	text167,global,reloc=2,class=CODE,delta=1
   187                           	psect	text168,global,reloc=2,class=CODE,delta=1
   188                           	psect	text169,global,reloc=2,class=CODE,delta=1
   189                           	psect	text170,global,reloc=2,class=CODE,delta=1
   190                           	psect	text171,global,reloc=2,class=CODE,delta=1
   191                           	psect	text172,global,reloc=2,class=CODE,delta=1
   192                           	psect	text173,global,reloc=2,class=CODE,delta=1
   193                           	psect	text174,global,reloc=2,class=CODE,delta=1
   194                           	psect	text175,global,reloc=2,class=CODE,delta=1
   195                           	psect	text176,global,reloc=2,class=CODE,delta=1
   196                           	psect	text177,global,reloc=2,class=CODE,delta=1
   197                           	psect	text178,global,reloc=2,class=CODE,delta=1
   198                           	psect	text179,global,reloc=2,class=CODE,delta=1
   199                           	psect	text180,global,reloc=2,class=CODE,delta=1
   200                           	psect	text181,global,reloc=2,class=CODE,delta=1
   201                           	psect	text182,global,reloc=2,class=CODE,delta=1
   202                           	psect	text183,global,reloc=2,class=CODE,delta=1
   203                           	psect	text184,global,reloc=2,class=CODE,delta=1
   204                           	psect	text185,global,reloc=2,class=CODE,delta=1
   205                           	psect	text186,global,reloc=2,class=CODE,delta=1
   206                           	psect	text187,global,reloc=2,class=CODE,delta=1
   207                           	psect	text188,global,reloc=2,class=CODE,delta=1
   208                           	psect	text189,global,reloc=2,class=CODE,delta=1
   209                           	psect	text190,global,reloc=2,class=CODE,delta=1
   210                           	psect	text191,global,reloc=2,class=CODE,delta=1
   211                           	psect	text192,global,reloc=2,class=CODE,delta=1
   212                           	psect	text193,global,reloc=2,class=CODE,delta=1
   213                           	psect	text194,global,reloc=2,class=CODE,delta=1
   214                           	psect	text195,global,reloc=2,class=CODE,delta=1
   215                           	psect	text196,global,reloc=2,class=CODE,delta=1
   216                           	psect	text197,global,reloc=2,class=CODE,delta=1
   217                           	psect	text198,global,reloc=2,class=CODE,delta=1
   218                           	psect	text199,global,reloc=2,class=CODE,delta=1
   219                           	psect	text200,global,reloc=2,class=CODE,delta=1
   220                           	psect	text201,global,reloc=2,class=CODE,delta=1
   221                           	psect	text202,global,reloc=2,class=CODE,delta=1
   222                           	psect	text203,global,reloc=2,class=CODE,delta=1
   223                           	psect	text204,global,reloc=2,class=CODE,delta=1
   224                           	psect	text205,global,reloc=2,class=CODE,delta=1
   225                           	psect	text206,global,reloc=2,class=CODE,delta=1
   226                           	psect	text207,global,reloc=2,class=CODE,delta=1
   227                           	psect	text208,global,reloc=2,class=CODE,delta=1
   228                           	psect	text209,global,reloc=2,class=CODE,delta=1
   229                           	psect	text210,global,reloc=2,class=CODE,delta=1
   230                           	psect	text211,global,reloc=2,class=CODE,delta=1
   231                           	psect	text212,global,reloc=2,class=CODE,delta=1
   232                           	psect	text213,global,reloc=2,class=CODE,delta=1
   233                           	psect	text214,global,reloc=2,class=CODE,delta=1
   234                           	psect	text215,global,reloc=2,class=CODE,delta=1
   235                           	psect	text216,global,reloc=2,class=CODE,delta=1
   236                           	psect	text217,global,reloc=2,class=CODE,delta=1
   237                           	psect	text218,global,reloc=2,class=CODE,delta=1
   238                           	psect	text219,global,reloc=2,class=CODE,delta=1
   239                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   240                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   241                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   242  0000                     
   243                           ; Version 1.41
   244                           ; Generated 25/01/2017 GMT
   245                           ; 
   246                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   247                           ; All rights reserved.
   248                           ; 
   249                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   250                           ; 
   251                           ; Redistribution and use in source and binary forms, with or without modification, are
   252                           ; permitted provided that the following conditions are met:
   253                           ; 
   254                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   255                           ;        conditions and the following disclaimer.
   256                           ; 
   257                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   258                           ;        of conditions and the following disclaimer in the documentation and/or other
   259                           ;        materials provided with the distribution.
   260                           ; 
   261                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   262                           ;        software without specific prior written permission.
   263                           ; 
   264                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   265                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   266                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   267                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   268                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   269                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   270                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   271                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   272                           ; 
   273                           ; 
   274                           ; Code-generator required, PIC18LF66K40 Definitions
   275                           ; 
   276                           ; SFR Addresses
   277  0000                     
   278                           	psect	idataBANK0
   279  007882                     __pidataBANK0:
   280                           	opt stack 0
   281                           
   282                           ;initializer for setBaudRate@F17425
   283  007882  41                 	db	65
   284  007883  54                 	db	84
   285  007884  2B                 	db	43
   286  007885  42                 	db	66
   287  007886  41                 	db	65
   288  007887  55                 	db	85
   289  007888  44                 	db	68
   290  007889  38                 	db	56
   291  00788A  0D                 	db	13
   292  00788B  0A                 	db	10
   293  00788C  00                 	db	0
   294                           
   295                           ;initializer for setSlaveMode@F17418
   296  00788D  41                 	db	65
   297  00788E  54                 	db	84
   298  00788F  2B                 	db	43
   299  007890  52                 	db	82
   300  007891  4F                 	db	79
   301  007892  4C                 	db	76
   302  007893  45                 	db	69
   303  007894  30                 	db	48
   304  007895  0D                 	db	13
   305  007896  0A                 	db	10
   306  007897  00                 	db	0
   307                           
   308                           ;initializer for sendAtCommand@F17415
   309  007898  41                 	db	65
   310  007899  54                 	db	84
   311  00789A  0D                 	db	13
   312  00789B  0A                 	db	10
   313  00789C  00                 	db	0
   314                           
   315                           	psect	idataBANK1
   316  0079E6                     __pidataBANK1:
   317                           	opt stack 0
   318                           
   319                           ;initializer for setDeviceName@F17421
   320  0079E6  41                 	db	65
   321  0079E7  54                 	db	84
   322  0079E8  2B                 	db	43
   323  0079E9  4E                 	db	78
   324  0079EA  41                 	db	65
   325  0079EB  4D                 	db	77
   326  0079EC  45                 	db	69
   327  0079ED  43                 	db	67
   328  0079EE  42                 	db	66
   329  0079EF  42                 	db	66
   330  0079F0  20                 	db	32
   331  0079F1  53                 	db	83
   332  0079F2  4E                 	db	78
   333  0079F3  3A                 	db	58
   334  0079F4  20                 	db	32
   335  0079F5  30                 	db	48
   336  0079F6  30                 	db	48
   337  0079F7  30                 	db	48
   338  0079F8  30                 	db	48
   339  0079F9  0D                 	db	13
   340  0079FA  0A                 	db	10
   341  0079FB  00                 	db	0
   342  0000                     _INT3PPS	set	3571
   343  0000                     _INT0PPS	set	3568
   344  0000                     _PPSLOCKbits	set	3567
   345  0000                     _PPSLOCK	set	3567
   346  0000                     _ANSELBbits	set	3738
   347  0000                     _RC3REG	set	3818
   348  0000                     _TX3REG	set	3819
   349  0000                     _RC3STAbits	set	3822
   350  0000                     _SP3BRGL	set	3820
   351  0000                     _SP3BRGH	set	3821
   352  0000                     _BAUD3CONbits	set	3824
   353  0000                     _TX3STAbits	set	3823
   354  0000                     _PMD5bits	set	3665
   355  0000                     _RE0PPS	set	3698
   356  0000                     _RX3PPS	set	3603
   357  0000                     _CPUDOZEbits	set	3650
   358  0000                     _WPUEbits	set	3758
   359  0000                     _ANSELEbits	set	3759
   360  0000                     _FVRCON	set	3780
   361  0000                     _FVRCONbits	set	3780
   362  0000                     _IPR3bits	set	3618
   363  0000                     _RC7PPS	set	3689
   364  0000                     _SSP1DATPPS	set	3610
   365  0000                     _ANSELAbits	set	3730
   366  0000                     _WDTCON0bits	set	3645
   367  0000                     _ANSELFbits	set	3764
   368  0000                     _ANSELGbits	set	3772
   369  0000                     _PMD2bits	set	3662
   370  0000                     _IPR5bits	set	3620
   371  0000                     _PMD1bits	set	3661
   372  0000                     _OSCCON2bits	set	3652
   373  0000                     _OSCCON1bits	set	3651
   374  0000                     _PIE4bits	set	3629
   375  0000                     _PIR4bits	set	3639
   376  0000                     _PIE3bits	set	3628
   377  0000                     _PIR3bits	set	3638
   378  0000                     _PIE0bits	set	3625
   379  0000                     _PIR0bits	set	3635
   380  0000                     _PIE5bits	set	3630
   381  0000                     _PIR5bits	set	3640
   382  0000                     _ADREF	set	3928
   383  0000                     _ADCLK	set	3927
   384  0000                     _ADPCH	set	3935
   385  0000                     _ADCON1	set	3929
   386  0000                     _PR8	set	3881
   387  0000                     _TMR8	set	3880
   388  0000                     _T8CONbits	set	3882
   389  0000                     _T8CLKCONbits	set	3884
   390  0000                     _ADRES	set	3939
   391  0000                     _TMR1	set	4045
   392  0000                     _TRISDbits	set	3972
   393  0000                     _LATDbits	set	3964
   394  0000                     _LATBbits	set	3962
   395  0000                     _TRISBbits	set	3970
   396  0000                     _TMR0	set	4051
   397  0000                     _LATAbits	set	3961
   398  0000                     _LATHbits	set	3968
   399  0000                     _PORTEbits	set	3981
   400  0000                     _LATEbits	set	3965
   401  0000                     _TRISEbits	set	3973
   402  0000                     _PORTHbits	set	3984
   403  0000                     _ADCON0bits	set	3936
   404  0000                     _TRISHbits	set	3976
   405  0000                     _TRISCbits	set	3971
   406  0000                     _TRISAbits	set	3969
   407  0000                     _PORTAbits	set	3977
   408  0000                     _SSP1BUF	set	3985
   409  0000                     _PORTCbits	set	3979
   410  0000                     _LATCbits	set	3963
   411  0000                     _SSP1CON1bits	set	3989
   412  0000                     _SSP1STATbits	set	3988
   413  0000                     _TRISFbits	set	3974
   414  0000                     _LATGbits	set	3967
   415  0000                     _TRISGbits	set	3975
   416  0000                     _TMR1CLKbits	set	4050
   417  0000                     _T1CONbits	set	4047
   418  0000                     _TMR0L	set	4051
   419  0000                     _TMR0H	set	4052
   420  0000                     _T0CON0bits	set	4053
   421  0000                     _T0CON1bits	set	4054
   422  0000                     _PR6	set	4016
   423  0000                     _TMR6	set	4015
   424  0000                     _T6CONbits	set	4017
   425  0000                     _T6CLKCONbits	set	4019
   426  0000                     _TMR4	set	4021
   427  0000                     _T4CONbits	set	4023
   428  0000                     _T4CLKCONbits	set	4025
   429  0000                     _PR2	set	4028
   430  0000                     _TMR2	set	4027
   431  0000                     _T2CLKCONbits	set	4031
   432  0000                     _LATFbits	set	3966
   433  0000                     _NVMCON2	set	3960
   434  0000                     _NVMDAT	set	3958
   435  0000                     _NVMADRH	set	3957
   436  0000                     _NVMADRL	set	3956
   437  0000                     _NVMCON1bits	set	3959
   438  0000                     _T2CONbits	set	4029
   439  0000                     _PR4	set	4022
   440  0000                     _PORTBbits	set	3978
   441  0000                     _INTCONbits	set	4082
   442                           
   443                           ; #config settings
   444  0000                     
   445                           	psect	cinit
   446  005BFC                     __pcinit:
   447                           	opt stack 0
   448  005BFC                     start_initialization:
   449                           	opt stack 0
   450  005BFC                     __initialization:
   451                           	opt stack 0
   452                           
   453                           ; Initialize objects allocated to BANK1 (22 bytes)
   454                           ; load TBLPTR registers with __pidataBANK1
   455  005BFC  0EE6               	movlw	low __pidataBANK1
   456  005BFE  6EF6               	movwf	tblptrl,c
   457  005C00  0E79               	movlw	high __pidataBANK1
   458  005C02  6EF7               	movwf	tblptrh,c
   459  005C04  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   460  005C06  6EF8               	movwf	tblptru,c
   461  005C08  EE01  F0E4         	lfsr	0,__pdataBANK1
   462  005C0C  EE10 F016          	lfsr	1,22
   463  005C10                     copy_data0:
   464  005C10  0009               	tblrd		*+
   465  005C12  CFF5 FFEE          	movff	tablat,postinc0
   466  005C16  50E5               	movf	postdec1,w,c
   467  005C18  50E1               	movf	fsr1l,w,c
   468  005C1A  E1FA               	bnz	copy_data0
   469                           
   470                           ; Initialize objects allocated to BANK0 (27 bytes)
   471                           ; load TBLPTR registers with __pidataBANK0
   472  005C1C  0E82               	movlw	low __pidataBANK0
   473  005C1E  6EF6               	movwf	tblptrl,c
   474  005C20  0E78               	movlw	high __pidataBANK0
   475  005C22  6EF7               	movwf	tblptrh,c
   476  005C24  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   477  005C26  6EF8               	movwf	tblptru,c
   478  005C28  EE00  F0E4         	lfsr	0,__pdataBANK0
   479  005C2C  EE10 F01B          	lfsr	1,27
   480  005C30                     copy_data1:
   481  005C30  0009               	tblrd		*+
   482  005C32  CFF5 FFEE          	movff	tablat,postinc0
   483  005C36  50E5               	movf	postdec1,w,c
   484  005C38  50E1               	movf	fsr1l,w,c
   485  005C3A  E1FA               	bnz	copy_data1
   486                           
   487                           ; Clear objects allocated to BIGRAM (917 bytes)
   488  005C3C  EE03  F0C0         	lfsr	0,__pbssBIGRAM
   489  005C40  EE13 F095          	lfsr	1,917
   490  005C44                     clear_0:
   491  005C44  6AEE               	clrf	postinc0,c
   492  005C46  50E5               	movf	postdec1,w,c
   493  005C48  50E1               	movf	fsr1l,w,c
   494  005C4A  E1FC               	bnz	clear_0
   495  005C4C  50E2               	movf	fsr1h,w,c
   496  005C4E  E1FA               	bnz	clear_0
   497                           
   498                           ; Clear objects allocated to BANK3 (192 bytes)
   499  005C50  EE03  F000         	lfsr	0,__pbssBANK3
   500  005C54  0EC0               	movlw	192
   501  005C56                     clear_1:
   502  005C56  6AEE               	clrf	postinc0,c
   503  005C58  06E8               	decf	wreg,f,c
   504  005C5A  E1FD               	bnz	clear_1
   505                           
   506                           ; Clear objects allocated to BANK2 (154 bytes)
   507  005C5C  EE02  F000         	lfsr	0,__pbssBANK2
   508  005C60  0E9A               	movlw	154
   509  005C62                     clear_2:
   510  005C62  6AEE               	clrf	postinc0,c
   511  005C64  06E8               	decf	wreg,f,c
   512  005C66  E1FD               	bnz	clear_2
   513                           
   514                           ; Clear objects allocated to BANK1 (228 bytes)
   515  005C68  EE01  F000         	lfsr	0,__pbssBANK1
   516  005C6C  0EE4               	movlw	228
   517  005C6E                     clear_3:
   518  005C6E  6AEE               	clrf	postinc0,c
   519  005C70  06E8               	decf	wreg,f,c
   520  005C72  E1FD               	bnz	clear_3
   521                           
   522                           ; Clear objects allocated to BANK0 (65 bytes)
   523  005C74  EE00  F0A3         	lfsr	0,__pbssBANK0
   524  005C78  0E41               	movlw	65
   525  005C7A                     clear_4:
   526  005C7A  6AEE               	clrf	postinc0,c
   527  005C7C  06E8               	decf	wreg,f,c
   528  005C7E  E1FD               	bnz	clear_4
   529                           
   530                           ; Clear objects allocated to COMRAM (42 bytes)
   531  005C80  EE00  F02D         	lfsr	0,__pbssCOMRAM
   532  005C84  0E2A               	movlw	42
   533  005C86                     clear_5:
   534  005C86  6AEE               	clrf	postinc0,c
   535  005C88  06E8               	decf	wreg,f,c
   536  005C8A  E1FD               	bnz	clear_5
   537  005C8C                     end_of_initialization:
   538                           	opt stack 0
   539  005C8C                     __end_of__initialization:
   540                           	opt stack 0
   541  005C8C  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   542  005C8E  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   543  005C90  0E00               	movlw	low (__Lmediumconst shr (0+16))
   544  005C92  6EF8               	movwf	tblptru,c
   545  005C94  0100               	movlb	0
   546  005C96  EF1B  F034         	goto	_main	;jump to C main() function
   547                           tblptru	equ	0xFF8
   548                           tblptrh	equ	0xFF7
   549                           tblptrl	equ	0xFF6
   550                           tablat	equ	0xFF5
   551                           postinc0	equ	0xFEE
   552                           wreg	equ	0xFE8
   553                           postdec1	equ	0xFE5
   554                           fsr1h	equ	0xFE2
   555                           fsr1l	equ	0xFE1
   556                           
   557                           	psect	bssCOMRAM
   558  00002D                     __pbssCOMRAM:
   559                           	opt stack 0
   560  00002D                     _TAG_Request:
   561                           	opt stack 0
   562  00002D                     	ds	10
   563  000037                     _FLAGS:
   564                           	opt stack 0
   565  000037                     	ds	3
   566  00003A                     _previous_ADC:
   567                           	opt stack 0
   568  00003A                     	ds	2
   569  00003C                     _tx:
   570                           	opt stack 0
   571  00003C                     	ds	2
   572  00003E                     _previousTagADC:
   573                           	opt stack 0
   574  00003E                     	ds	2
   575  000040                     _ii:
   576                           	opt stack 0
   577  000040                     	ds	2
   578  000042                     _UIO_data_out:
   579                           	opt stack 0
   580  000042                     	ds	2
   581  000044                     _index:
   582                           	opt stack 0
   583  000044                     	ds	1
   584  000045                     _j:
   585                           	opt stack 0
   586  000045                     	ds	1
   587  000046                     _gDigit:
   588                           	opt stack 0
   589  000046                     	ds	1
   590  000047                     _tag_state:
   591                           	opt stack 0
   592  000047                     	ds	1
   593  000048                     _bufferRXNextUCA:
   594                           	opt stack 0
   595  000048                     	ds	1
   596  000049                     _bufferRXLenUCA:
   597                           	opt stack 0
   598  000049                     	ds	1
   599  00004A                     _bufferTXNextUCA:
   600                           	opt stack 0
   601  00004A                     	ds	1
   602  00004B                     _bufferTXLenUCA:
   603                           	opt stack 0
   604  00004B                     	ds	1
   605  00004C                     _flagST7540:
   606                           	opt stack 0
   607  00004C                     	ds	1
   608  00004D                     _TAG_Response:
   609                           	opt stack 0
   610  00004D                     	ds	10
   611                           tblptru	equ	0xFF8
   612                           tblptrh	equ	0xFF7
   613                           tblptrl	equ	0xFF6
   614                           tablat	equ	0xFF5
   615                           postinc0	equ	0xFEE
   616                           wreg	equ	0xFE8
   617                           postdec1	equ	0xFE5
   618                           fsr1h	equ	0xFE2
   619                           fsr1l	equ	0xFE1
   620                           
   621                           	psect	bssBANK0
   622  0000A3                     __pbssBANK0:
   623                           	opt stack 0
   624  0000A3                     _COUNTERS:
   625                           	opt stack 0
   626  0000A3                     	ds	19
   627  0000B6                     _readFlag:
   628                           	opt stack 0
   629  0000B6                     	ds	2
   630  0000B8                     _eddState:
   631                           	opt stack 0
   632  0000B8                     	ds	2
   633  0000BA                     _previousADC:
   634                           	opt stack 0
   635  0000BA                     	ds	2
   636  0000BC                     _watchCounter:
   637                           	opt stack 0
   638  0000BC                     	ds	2
   639  0000BE                     _previousStatus:
   640                           	opt stack 0
   641  0000BE                     	ds	2
   642  0000C0                     _setupIndex:
   643                           	opt stack 0
   644  0000C0                     	ds	1
   645  0000C1                     _expectedDets:
   646                           	opt stack 0
   647  0000C1                     	ds	1
   648  0000C2                     _bluetoothStatus:
   649                           	opt stack 0
   650  0000C2                     	ds	1
   651  0000C3                     _bitCounter:
   652                           	opt stack 0
   653  0000C3                     	ds	1
   654  0000C4                     _byteRead:
   655                           	opt stack 0
   656  0000C4                     	ds	1
   657  0000C5                     _halfBits:
   658                           	opt stack 0
   659  0000C5                     	ds	1
   660  0000C6                     _period:
   661                           	opt stack 0
   662  0000C6                     	ds	1
   663  0000C7                     _testCounter:
   664                           	opt stack 0
   665  0000C7                     	ds	1
   666  0000C8                     _packetNumberUC:
   667                           	opt stack 0
   668  0000C8                     	ds	1
   669  0000C9                     _maxProgramAttempts:
   670                           	opt stack 0
   671  0000C9                     	ds	1
   672  0000CA                     _btPacket:
   673                           	opt stack 0
   674  0000CA                     	ds	22
   675  0000E0                     _response:
   676                           	opt stack 0
   677  0000E0                     	ds	4
   678                           tblptru	equ	0xFF8
   679                           tblptrh	equ	0xFF7
   680                           tblptrl	equ	0xFF6
   681                           tablat	equ	0xFF5
   682                           postinc0	equ	0xFEE
   683                           wreg	equ	0xFE8
   684                           postdec1	equ	0xFE5
   685                           fsr1h	equ	0xFE2
   686                           fsr1l	equ	0xFE1
   687                           
   688                           	psect	dataBANK0
   689  0000E4                     __pdataBANK0:
   690                           	opt stack 0
   691  0000E4                     setBaudRate@F17425:
   692                           	opt stack 0
   693  0000E4                     	ds	11
   694  0000EF                     setSlaveMode@F17418:
   695                           	opt stack 0
   696  0000EF                     	ds	11
   697  0000FA                     sendAtCommand@F17415:
   698                           	opt stack 0
   699  0000FA                     	ds	5
   700                           tblptru	equ	0xFF8
   701                           tblptrh	equ	0xFF7
   702                           tblptrl	equ	0xFF6
   703                           tablat	equ	0xFF5
   704                           postinc0	equ	0xFEE
   705                           wreg	equ	0xFE8
   706                           postdec1	equ	0xFE5
   707                           fsr1h	equ	0xFE2
   708                           fsr1l	equ	0xFE1
   709                           
   710                           	psect	bssBANK1
   711  000100                     __pbssBANK1:
   712                           	opt stack 0
   713  000100                     _outgoingQueue:
   714                           	opt stack 0
   715  000100                     	ds	142
   716  00018E                     _dataR:
   717                           	opt stack 0
   718  00018E                     	ds	25
   719  0001A7                     _state:
   720                           	opt stack 0
   721  0001A7                     	ds	61
   722                           tblptru	equ	0xFF8
   723                           tblptrh	equ	0xFF7
   724                           tblptrl	equ	0xFF6
   725                           tablat	equ	0xFF5
   726                           postinc0	equ	0xFEE
   727                           wreg	equ	0xFE8
   728                           postdec1	equ	0xFE5
   729                           fsr1h	equ	0xFE2
   730                           fsr1l	equ	0xFE1
   731                           
   732                           	psect	dataBANK1
   733  0001E4                     __pdataBANK1:
   734                           	opt stack 0
   735  0001E4                     setDeviceName@F17421:
   736                           	opt stack 0
   737  0001E4                     	ds	22
   738                           tblptru	equ	0xFF8
   739                           tblptrh	equ	0xFF7
   740                           tblptrl	equ	0xFF6
   741                           tablat	equ	0xFF5
   742                           postinc0	equ	0xFEE
   743                           wreg	equ	0xFE8
   744                           postdec1	equ	0xFE5
   745                           fsr1h	equ	0xFE2
   746                           fsr1l	equ	0xFE1
   747                           
   748                           	psect	bssBANK2
   749  000200                     __pbssBANK2:
   750                           	opt stack 0
   751  000200                     _bufferTXST7540UCA:
   752                           	opt stack 0
   753  000200                     	ds	79
   754  00024F                     _bufferRXST7540UCA:
   755                           	opt stack 0
   756  00024F                     	ds	75
   757                           tblptru	equ	0xFF8
   758                           tblptrh	equ	0xFF7
   759                           tblptrl	equ	0xFF6
   760                           tablat	equ	0xFF5
   761                           postinc0	equ	0xFEE
   762                           wreg	equ	0xFE8
   763                           postdec1	equ	0xFE5
   764                           fsr1h	equ	0xFE2
   765                           fsr1l	equ	0xFE1
   766                           
   767                           	psect	bssBANK3
   768  000300                     __pbssBANK3:
   769                           	opt stack 0
   770  000300                     _incomingQueue:
   771                           	opt stack 0
   772  000300                     	ds	192
   773                           tblptru	equ	0xFF8
   774                           tblptrh	equ	0xFF7
   775                           tblptrl	equ	0xFF6
   776                           tablat	equ	0xFF5
   777                           postinc0	equ	0xFEE
   778                           wreg	equ	0xFE8
   779                           postdec1	equ	0xFE5
   780                           fsr1h	equ	0xFE2
   781                           fsr1l	equ	0xFE1
   782                           
   783                           	psect	bssBIGRAM
   784  0003C0                     __pbssBIGRAM:
   785                           	opt stack 0
   786  0003C0                     _ABB_1:
   787                           	opt stack 0
   788  0003C0                     	ds	917
   789                           tblptru	equ	0xFF8
   790                           tblptrh	equ	0xFF7
   791                           tblptrl	equ	0xFF6
   792                           tablat	equ	0xFF5
   793                           postinc0	equ	0xFEE
   794                           wreg	equ	0xFE8
   795                           postdec1	equ	0xFE5
   796                           fsr1h	equ	0xFE2
   797                           fsr1l	equ	0xFE1
   798                           
   799                           	psect	cstackBANK1
   800  0001FA                     __pcstackBANK1:
   801                           	opt stack 0
   802  0001FA                     currentStateHandler@i:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0x0
   806  0001FA                     	ds	2
   807                           tblptru	equ	0xFF8
   808                           tblptrh	equ	0xFF7
   809                           tblptrl	equ	0xFF6
   810                           tablat	equ	0xFF5
   811                           postinc0	equ	0xFEE
   812                           wreg	equ	0xFE8
   813                           postdec1	equ	0xFE5
   814                           fsr1h	equ	0xFE2
   815                           fsr1l	equ	0xFE1
   816                           
   817                           	psect	cstackBANK0
   818  000060                     __pcstackBANK0:
   819                           	opt stack 0
   820  000060                     ??_clearEDDStatusbits:
   821  000060                     ?_CRC16:
   822                           	opt stack 0
   823  000060                     ?_readEddADC:
   824                           	opt stack 0
   825  000060                     ?_PacketDataST7540:
   826                           	opt stack 0
   827  000060                     ?___wmul:
   828                           	opt stack 0
   829  000060                     ?___lwdiv:
   830                           	opt stack 0
   831  000060                     ?___lldiv:
   832                           	opt stack 0
   833  000060                     __delay_us@us:
   834                           	opt stack 0
   835  000060                     StartTransmitST7540@discardUC:
   836                           	opt stack 0
   837  000060                     ReceiveNewDataST7540@discardUC:
   838                           	opt stack 0
   839  000060                     Delay_ms@ms:
   840                           	opt stack 0
   841  000060                     writeByteToEeprom@byte:
   842                           	opt stack 0
   843  000060                     readByteFromEeprom@byte:
   844                           	opt stack 0
   845  000060                     initialiseState@specific:
   846                           	opt stack 0
   847  000060                     ReadConfigST7540@frameDataUS:
   848                           	opt stack 0
   849  000060                     CRC16@data_p:
   850                           	opt stack 0
   851  000060                     addPacketToOutgoingQueue@data:
   852                           	opt stack 0
   853  000060                     readMainsInterval@i:
   854                           	opt stack 0
   855  000060                     Tx_Calibration_Pulses@i:
   856                           	opt stack 0
   857  000060                     writeEUSART@data:
   858                           	opt stack 0
   859  000060                     ___wmul@multiplier:
   860                           	opt stack 0
   861  000060                     ___lwdiv@dividend:
   862                           	opt stack 0
   863  000060                     ___lldiv@dividend:
   864                           	opt stack 0
   865                           
   866                           ; 4 bytes @ 0x0
   867  000060                     	ds	1
   868  000061                     __delay_ms@delay:
   869                           	opt stack 0
   870                           
   871                           ; 2 bytes @ 0x1
   872  000061                     	ds	1
   873  000062                     ??_detectRisingEdgeEDD:
   874  000062                     ??_detectFallingEdgeEDD:
   875  000062                     ??_Delay_ms:
   876  000062                     ??_writeByteToEeprom:
   877  000062                     ??_readByteFromEeprom:
   878  000062                     initialiseState@number:
   879                           	opt stack 0
   880  000062                     addPacketToOutgoingQueue@command:
   881                           	opt stack 0
   882  000062                     writeEUSART@size:
   883                           	opt stack 0
   884  000062                     ReadConfigST7540@configDataUS:
   885                           	opt stack 0
   886  000062                     CRC16@length:
   887                           	opt stack 0
   888  000062                     Tx_Calibration_Pulses@j:
   889                           	opt stack 0
   890  000062                     ___wmul@multiplicand:
   891                           	opt stack 0
   892  000062                     ___lwdiv@divisor:
   893                           	opt stack 0
   894                           
   895                           ; 2 bytes @ 0x2
   896  000062                     	ds	1
   897  000063                     ??_writeEUSART:
   898  000063                     addPacketToOutgoingQueue@length:
   899                           	opt stack 0
   900  000063                     Delay_ms@i:
   901                           	opt stack 0
   902  000063                     __delay_ms@i:
   903                           	opt stack 0
   904  000063                     initialiseStates@i:
   905                           	opt stack 0
   906                           
   907                           ; 2 bytes @ 0x3
   908  000063                     	ds	1
   909  000064                     ??_ReadConfigST7540:
   910  000064                     ??_CRC16:
   911  000064                     detectRisingEdgeEDD@change:
   912                           	opt stack 0
   913  000064                     detectFallingEdgeEDD@change:
   914                           	opt stack 0
   915  000064                     ___lwdiv@counter:
   916                           	opt stack 0
   917  000064                     writeByteToEeprom@address:
   918                           	opt stack 0
   919  000064                     readByteFromEeprom@address:
   920                           	opt stack 0
   921  000064                     addPacketToOutgoingQueue@destination:
   922                           	opt stack 0
   923  000064                     Tx_Calibration_Pulses@j_6087:
   924                           	opt stack 0
   925  000064                     ___wmul@product:
   926                           	opt stack 0
   927  000064                     ___lldiv@divisor:
   928                           	opt stack 0
   929                           
   930                           ; 4 bytes @ 0x4
   931  000064                     	ds	1
   932  000065                     Delay_ms@j:
   933                           	opt stack 0
   934  000065                     detectRisingEdgeEDD@currentADC:
   935                           	opt stack 0
   936  000065                     detectFallingEdgeEDD@currentADC:
   937                           	opt stack 0
   938  000065                     ___lwdiv@quotient:
   939                           	opt stack 0
   940  000065                     WriteConfigST7540@frameDataUS:
   941                           	opt stack 0
   942                           
   943                           ; 3 bytes @ 0x5
   944  000065                     	ds	1
   945  000066                     ??_testMemory:
   946  000066                     ??_initialiseDetWindows:
   947  000066                     checkForExistingUID@receivedUID:
   948                           	opt stack 0
   949  000066                     writeStructureToEeprom@structure:
   950                           	opt stack 0
   951  000066                     readStructureFromEeprom@data:
   952                           	opt stack 0
   953  000066                     clearEDDStatusbits@i:
   954                           	opt stack 0
   955  000066                     addDataToOutgoingQueue@data:
   956                           	opt stack 0
   957  000066                     writeEUSART@i:
   958                           	opt stack 0
   959  000066                     power@base:
   960                           	opt stack 0
   961                           
   962                           ; 2 bytes @ 0x6
   963  000066                     	ds	1
   964  000067                     ReadConfigST7540@discardUC:
   965                           	opt stack 0
   966  000067                     Tx_Word@bit_pos:
   967                           	opt stack 0
   968                           
   969                           ; 2 bytes @ 0x7
   970  000067                     	ds	1
   971  000068                     ??_checkForExistingUID:
   972  000068                     ReadConfigST7540@bitsReceivedUC:
   973                           	opt stack 0
   974  000068                     CRC16@i:
   975                           	opt stack 0
   976  000068                     addDataToOutgoingQueue@command:
   977                           	opt stack 0
   978  000068                     writeStructureToEeprom@size:
   979                           	opt stack 0
   980  000068                     readStructureFromEeprom@size:
   981                           	opt stack 0
   982  000068                     power@exponent:
   983                           	opt stack 0
   984  000068                     WriteConfigST7540@configDataUS:
   985                           	opt stack 0
   986  000068                     ___lldiv@quotient:
   987                           	opt stack 0
   988  000068                     setSlaveMode@txreg:
   989                           	opt stack 0
   990  000068                     setDeviceName@txreg:
   991                           	opt stack 0
   992                           
   993                           ; 22 bytes @ 0x8
   994  000068                     	ds	1
   995  000069                     Tx_Word@byte:
   996                           	opt stack 0
   997  000069                     CRC16@data:
   998                           	opt stack 0
   999  000069                     addDataToOutgoingQueue@size:
  1000                           	opt stack 0
  1001                           
  1002                           ; 2 bytes @ 0x9
  1003  000069                     	ds	1
  1004  00006A                     ??_power:
  1005  00006A                     ??_readStructureFromEeprom:
  1006  00006A                     commandResponse@RxLength:
  1007                           	opt stack 0
  1008  00006A                     EDD_Calibrate@EDD_calibration_command:
  1009                           	opt stack 0
  1010  00006A                     EDD_Energy_Store@EDD_energy_store_command:
  1011                           	opt stack 0
  1012  00006A                     EDD_Blast@EDD_blast_command:
  1013                           	opt stack 0
  1014  00006A                     checkStatusBits@status:
  1015                           	opt stack 0
  1016  00006A                     writeStructureToEeprom@i:
  1017                           	opt stack 0
  1018  00006A                     initialiseDetWindows@i:
  1019                           	opt stack 0
  1020                           
  1021                           ; 2 bytes @ 0xA
  1022  00006A                     	ds	1
  1023  00006B                     ??_WriteConfigST7540:
  1024  00006B                     ??_addDataToOutgoingQueue:
  1025  00006B                     readStructureFromEeprom@i:
  1026                           	opt stack 0
  1027  00006B                     CRC16@crc:
  1028                           	opt stack 0
  1029  00006B                     commandResponse@data:
  1030                           	opt stack 0
  1031  00006B                     power@i:
  1032                           	opt stack 0
  1033                           
  1034                           ; 2 bytes @ 0xB
  1035  00006B                     	ds	1
  1036  00006C                     ??_sleep:
  1037  00006C                     ___lldiv@counter:
  1038                           	opt stack 0
  1039  00006C                     testMemory@i:
  1040                           	opt stack 0
  1041                           
  1042                           ; 2 bytes @ 0xC
  1043  00006C                     	ds	1
  1044  00006D                     ??_initialiseDetMemory:
  1045  00006D                     ??_CheckCRCST7540:
  1046  00006D                     ??_buildMessageST7540:
  1047  00006D                     ??_commandResponse:
  1048  00006D                     ?_variance:
  1049                           	opt stack 0
  1050  00006D                     variance@values:
  1051                           	opt stack 0
  1052  00006D                     power@result:
  1053                           	opt stack 0
  1054                           
  1055                           ; 2 bytes @ 0xD
  1056  00006D                     	ds	1
  1057  00006E                     WriteConfigST7540@discardUC:
  1058                           	opt stack 0
  1059  00006E                     testMemory@i_1269:
  1060                           	opt stack 0
  1061                           
  1062                           ; 2 bytes @ 0xE
  1063  00006E                     	ds	1
  1064  00006F                     ?_bluetoothCRC:
  1065                           	opt stack 0
  1066  00006F                     variance@sampleSize:
  1067                           	opt stack 0
  1068  00006F                     WriteConfigST7540@bitsSentUC:
  1069                           	opt stack 0
  1070  00006F                     addDataToOutgoingQueue@length:
  1071                           	opt stack 0
  1072  00006F                     bluetoothCRC@data:
  1073                           	opt stack 0
  1074                           
  1075                           ; 2 bytes @ 0xF
  1076  00006F                     	ds	1
  1077  000070                     ??_variance:
  1078  000070                     addDataToOutgoingQueue@length_tracker:
  1079                           	opt stack 0
  1080  000070                     commandResponse@TxLength:
  1081                           	opt stack 0
  1082  000070                     checkForExistingUID@currentUID:
  1083                           	opt stack 0
  1084  000070                     testMemory@i_1270:
  1085                           	opt stack 0
  1086  000070                     CheckCRCST7540@expectedCRCUS:
  1087                           	opt stack 0
  1088  000070                     InitST7540@frameDataTXUS:
  1089                           	opt stack 0
  1090                           
  1091                           ; 3 bytes @ 0x10
  1092  000070                     	ds	1
  1093  000071                     bluetoothCRC@length:
  1094                           	opt stack 0
  1095  000071                     commandResponse@i:
  1096                           	opt stack 0
  1097                           
  1098                           ; 2 bytes @ 0x11
  1099  000071                     	ds	1
  1100  000072                     ??_bluetoothCRC:
  1101  000072                     checkForExistingUID@i:
  1102                           	opt stack 0
  1103  000072                     testMemory@i_1271:
  1104                           	opt stack 0
  1105  000072                     CheckCRCST7540@receivedCRCUS:
  1106                           	opt stack 0
  1107                           
  1108                           ; 2 bytes @ 0x12
  1109  000072                     	ds	1
  1110  000073                     handleIncomingQueuePacket@index:
  1111                           	opt stack 0
  1112  000073                     commandResponse@i_6055:
  1113                           	opt stack 0
  1114  000073                     InitST7540@configDataTXUS:
  1115                           	opt stack 0
  1116                           
  1117                           ; 3 bytes @ 0x13
  1118  000073                     	ds	1
  1119  000074                     CheckCRCST7540@packetLenUC:
  1120                           	opt stack 0
  1121  000074                     testMemory@i_1272:
  1122                           	opt stack 0
  1123                           
  1124                           ; 2 bytes @ 0x14
  1125  000074                     	ds	1
  1126  000075                     ??_readUID:
  1127  000075                     ??_programUID:
  1128  000075                     ??_checkLineForConnectedUIDs:
  1129  000075                     ?_PacketReadParamST7540:
  1130                           	opt stack 0
  1131  000075                     buildMessageST7540@statusPtr:
  1132                           	opt stack 0
  1133  000075                     selfCheckUID@window:
  1134                           	opt stack 0
  1135                           
  1136                           ; 2 bytes @ 0x15
  1137  000075                     	ds	1
  1138  000076                     testMemory@i_1273:
  1139                           	opt stack 0
  1140  000076                     bluetoothCRC@crc:
  1141                           	opt stack 0
  1142  000076                     InitST7540@frameDataRXUS:
  1143                           	opt stack 0
  1144  000076                     checkLineForConnectedUIDs@txPacket:
  1145                           	opt stack 0
  1146                           
  1147                           ; 5 bytes @ 0x16
  1148  000076                     	ds	1
  1149  000077                     ??_PacketReadParamST7540:
  1150  000077                     ??_selfCheckUID:
  1151  000077                     buildMessageST7540@packetCRCUS:
  1152                           	opt stack 0
  1153                           
  1154                           ; 2 bytes @ 0x17
  1155  000077                     	ds	1
  1156  000078                     variance@mean:
  1157                           	opt stack 0
  1158  000078                     bluetoothCRC@testBit:
  1159                           	opt stack 0
  1160                           
  1161                           ; 2 bytes @ 0x18
  1162  000078                     	ds	1
  1163  000079                     buildMessageST7540@dataOffset:
  1164                           	opt stack 0
  1165  000079                     PacketReadParamST7540@paramName:
  1166                           	opt stack 0
  1167  000079                     InitST7540@configDataRXUS:
  1168                           	opt stack 0
  1169                           
  1170                           ; 3 bytes @ 0x19
  1171  000079                     	ds	1
  1172  00007A                     buildMessageST7540@dataBufLocUC:
  1173                           	opt stack 0
  1174  00007A                     readUID@window:
  1175                           	opt stack 0
  1176  00007A                     variance@i:
  1177                           	opt stack 0
  1178  00007A                     PacketReadParamST7540@retValueUS:
  1179                           	opt stack 0
  1180  00007A                     bluetoothCRC@loopBytes:
  1181                           	opt stack 0
  1182                           
  1183                           ; 2 bytes @ 0x1A
  1184  00007A                     	ds	1
  1185  00007B                     buildMessageST7540@index:
  1186                           	opt stack 0
  1187  00007B                     checkLineForConnectedUIDs@attempts:
  1188                           	opt stack 0
  1189  00007B                     readUID@txPacket:
  1190                           	opt stack 0
  1191  00007B                     programUID@txPacket:
  1192                           	opt stack 0
  1193                           
  1194                           ; 9 bytes @ 0x1B
  1195  00007B                     	ds	1
  1196  00007C                     ??_checkForUnfiredEdds:
  1197  00007C                     ??_addPacketToIncomingQueue:
  1198  00007C                     initialiseModem@attempts:
  1199                           	opt stack 0
  1200  00007C                     bluetoothCRC@loopBits:
  1201                           	opt stack 0
  1202  00007C                     variance@sum:
  1203                           	opt stack 0
  1204                           
  1205                           ; 4 bytes @ 0x1C
  1206  00007C                     	ds	1
  1207  00007D                     selfCheckUID@txPacket:
  1208                           	opt stack 0
  1209                           
  1210                           ; 3 bytes @ 0x1D
  1211  00007D                     	ds	1
  1212  00007E                     setDeviceName@tempSerial:
  1213                           	opt stack 0
  1214  00007E                     bluetoothCRC@intCrc:
  1215                           	opt stack 0
  1216                           
  1217                           ; 2 bytes @ 0x1E
  1218  00007E                     	ds	2
  1219  000080                     ??_checkBluetoothCRC:
  1220  000080                     ??_sendPacket:
  1221  000080                     readUID@attempts:
  1222                           	opt stack 0
  1223  000080                     selfCheckUID@attempts:
  1224                           	opt stack 0
  1225  000080                     variance@i_1220:
  1226                           	opt stack 0
  1227  000080                     addPacketToIncomingQueue@i:
  1228                           	opt stack 0
  1229                           
  1230                           ; 2 bytes @ 0x20
  1231  000080                     	ds	1
  1232  000081                     readUID@i:
  1233                           	opt stack 0
  1234                           
  1235                           ; 2 bytes @ 0x21
  1236  000081                     	ds	1
  1237  000082                     ?_readBatteryADC:
  1238                           	opt stack 0
  1239  000082                     ?_readEDDADC:
  1240                           	opt stack 0
  1241  000082                     ?_readS1StateADC:
  1242                           	opt stack 0
  1243  000082                     ?_readCableADC:
  1244                           	opt stack 0
  1245  000082                     ?_readEarthADC:
  1246                           	opt stack 0
  1247  000082                     checkForUnfiredEdds@i:
  1248                           	opt stack 0
  1249                           
  1250                           ; 2 bytes @ 0x22
  1251  000082                     	ds	1
  1252  000083                     readUID@i_6063:
  1253                           	opt stack 0
  1254                           
  1255                           ; 2 bytes @ 0x23
  1256  000083                     	ds	1
  1257  000084                     ??_readBatteryADC:
  1258  000084                     ??_readEDDADC:
  1259  000084                     ??_readS1StateADC:
  1260  000084                     ??_readCableADC:
  1261  000084                     ??_readEarthADC:
  1262  000084                     programUID@delayCompare:
  1263                           	opt stack 0
  1264                           
  1265                           ; 2 bytes @ 0x24
  1266  000084                     	ds	1
  1267  000085                     sendPacket@txReg:
  1268                           	opt stack 0
  1269  000085                     checkBluetoothCRC@data:
  1270                           	opt stack 0
  1271                           
  1272                           ; 11 bytes @ 0x25
  1273  000085                     	ds	1
  1274  000086                     programUID@levelOfSuccess:
  1275                           	opt stack 0
  1276  000086                     readBatteryADC@ADCStore:
  1277                           	opt stack 0
  1278  000086                     readS1StateADC@ADCStore:
  1279                           	opt stack 0
  1280  000086                     readEDDADC@ADCStore:
  1281                           	opt stack 0
  1282  000086                     readCableADC@ADCStore:
  1283                           	opt stack 0
  1284  000086                     readEarthADC@ADCStore:
  1285                           	opt stack 0
  1286                           
  1287                           ; 10 bytes @ 0x26
  1288  000086                     	ds	1
  1289  000087                     programUID@attempts:
  1290                           	opt stack 0
  1291                           
  1292                           ; 1 bytes @ 0x27
  1293  000087                     	ds	1
  1294  000088                     programUID@windowCompare:
  1295                           	opt stack 0
  1296                           
  1297                           ; 2 bytes @ 0x28
  1298  000088                     	ds	2
  1299  00008A                     programUID@window:
  1300                           	opt stack 0
  1301                           
  1302                           ; 1 bytes @ 0x2A
  1303  00008A                     	ds	1
  1304  00008B                     programRetryChecks@retry:
  1305                           	opt stack 0
  1306                           
  1307                           ; 2 bytes @ 0x2B
  1308  00008B                     	ds	2
  1309  00008D                     programRetryChecks@window:
  1310                           	opt stack 0
  1311                           
  1312                           ; 1 bytes @ 0x2D
  1313  00008D                     	ds	1
  1314  00008E                     ??_programUIDs:
  1315  00008E                     ??_fireUIDs:
  1316                           
  1317                           ; 1 bytes @ 0x2E
  1318  00008E                     	ds	2
  1319  000090                     readBatteryADC@currentVariance:
  1320                           	opt stack 0
  1321  000090                     readS1StateADC@currentVariance:
  1322                           	opt stack 0
  1323  000090                     readEDDADC@currentVariance:
  1324                           	opt stack 0
  1325  000090                     readCableADC@currentVariance:
  1326                           	opt stack 0
  1327  000090                     readEarthADC@currentVariance:
  1328                           	opt stack 0
  1329  000090                     sendPacket@i:
  1330                           	opt stack 0
  1331  000090                     checkBluetoothCRC@i:
  1332                           	opt stack 0
  1333                           
  1334                           ; 2 bytes @ 0x30
  1335  000090                     	ds	2
  1336  000092                     checkBluetoothCRC@indexCrc:
  1337                           	opt stack 0
  1338  000092                     readBatteryADC@i:
  1339                           	opt stack 0
  1340  000092                     readS1StateADC@i:
  1341                           	opt stack 0
  1342  000092                     readEDDADC@i:
  1343                           	opt stack 0
  1344  000092                     readCableADC@i:
  1345                           	opt stack 0
  1346  000092                     readEarthADC@i:
  1347                           	opt stack 0
  1348                           
  1349                           ; 2 bytes @ 0x32
  1350  000092                     	ds	1
  1351  000093                     ??_processBTPacket:
  1352                           
  1353                           ; 1 bytes @ 0x33
  1354  000093                     	ds	1
  1355  000094                     fireUIDs@attempts:
  1356                           	opt stack 0
  1357  000094                     readSupplyStateHandler@batteryVoltage:
  1358                           	opt stack 0
  1359  000094                     programUIDs@i_6446:
  1360                           	opt stack 0
  1361                           
  1362                           ; 2 bytes @ 0x34
  1363  000094                     	ds	1
  1364  000095                     fireUIDs@i:
  1365                           	opt stack 0
  1366                           
  1367                           ; 2 bytes @ 0x35
  1368  000095                     	ds	1
  1369  000096                     programUIDs@i:
  1370                           	opt stack 0
  1371                           
  1372                           ; 2 bytes @ 0x36
  1373  000096                     	ds	1
  1374  000097                     fire@missingPulseCheck:
  1375                           	opt stack 0
  1376                           
  1377                           ; 1 bytes @ 0x37
  1378  000097                     	ds	1
  1379  000098                     programUIDs@attempts:
  1380                           	opt stack 0
  1381                           
  1382                           ; 1 bytes @ 0x38
  1383  000098                     	ds	1
  1384  000099                     
  1385                           ; 1 bytes @ 0x39
  1386  000099                     	ds	1
  1387  00009A                     processBTPacket@tempDetInfo:
  1388                           	opt stack 0
  1389                           
  1390                           ; 2 bytes @ 0x3A
  1391  00009A                     	ds	2
  1392  00009C                     processBTPacket@i:
  1393                           	opt stack 0
  1394                           
  1395                           ; 2 bytes @ 0x3C
  1396  00009C                     	ds	2
  1397  00009E                     processBTPacket@i_8508:
  1398                           	opt stack 0
  1399                           
  1400                           ; 2 bytes @ 0x3E
  1401  00009E                     	ds	2
  1402  0000A0                     ??_currentStateHandler:
  1403  0000A0                     
  1404                           ; 1 bytes @ 0x40
  1405  0000A0                     	ds	3
  1406  0000A3                     tblptru	equ	0xFF8
  1407                           tblptrh	equ	0xFF7
  1408                           tblptrl	equ	0xFF6
  1409                           tablat	equ	0xFF5
  1410                           postinc0	equ	0xFEE
  1411                           wreg	equ	0xFE8
  1412                           postdec1	equ	0xFE5
  1413                           fsr1h	equ	0xFE2
  1414                           fsr1l	equ	0xFE1
  1415                           
  1416                           ; 1 bytes @ 0x43
  1417                           
  1418                           	psect	cstackCOMRAM
  1419  000001                     __pcstackCOMRAM:
  1420                           	opt stack 0
  1421  000001                     ??_receiveBluetooth:
  1422  000001                     ?_calcrc:
  1423                           	opt stack 0
  1424  000001                     ?_readTagADC:
  1425                           	opt stack 0
  1426  000001                     ?i2___wmul:
  1427                           	opt stack 0
  1428  000001                     SPIISRHandlerST7540@dataReadUC:
  1429                           	opt stack 0
  1430  000001                     RXReadyISRHandlerST7540@ReadIOCC:
  1431                           	opt stack 0
  1432  000001                     i2__delay_us@us:
  1433                           	opt stack 0
  1434  000001                     checkCounter@specific:
  1435                           	opt stack 0
  1436  000001                     calcrc@ptr:
  1437                           	opt stack 0
  1438  000001                     i2initialiseState@specific:
  1439                           	opt stack 0
  1440  000001                     i2ReadConfigST7540@frameDataUS:
  1441                           	opt stack 0
  1442  000001                     i2addPacketToOutgoingQueue@data:
  1443                           	opt stack 0
  1444  000001                     i2___wmul@multiplier:
  1445                           	opt stack 0
  1446                           
  1447                           ; 2 bytes @ 0x0
  1448  000001                     	ds	1
  1449  000002                     ??_UIO_WRITE:
  1450  000002                     ??_UIO_WRITE_1:
  1451  000002                     UIO_SAK@SAK:
  1452                           	opt stack 0
  1453  000002                     UIO_SAK_1@SAK:
  1454                           	opt stack 0
  1455  000002                     i2__delay_ms@delay:
  1456                           	opt stack 0
  1457                           
  1458                           ; 2 bytes @ 0x1
  1459  000002                     	ds	1
  1460  000003                     i2initialiseState@number:
  1461                           	opt stack 0
  1462  000003                     i2addPacketToOutgoingQueue@command:
  1463                           	opt stack 0
  1464  000003                     calcrc@count:
  1465                           	opt stack 0
  1466  000003                     detectFallingEdge@currentTagADC:
  1467                           	opt stack 0
  1468  000003                     detectRisingEdge@currentTagADC:
  1469                           	opt stack 0
  1470  000003                     i2ReadConfigST7540@configDataUS:
  1471                           	opt stack 0
  1472  000003                     i2___wmul@multiplicand:
  1473                           	opt stack 0
  1474                           
  1475                           ; 2 bytes @ 0x2
  1476  000003                     	ds	1
  1477  000004                     UIO_WRITE@cmd:
  1478                           	opt stack 0
  1479  000004                     UIO_WRITE_1@cmd:
  1480                           	opt stack 0
  1481  000004                     i2addPacketToOutgoingQueue@length:
  1482                           	opt stack 0
  1483  000004                     i2__delay_ms@i:
  1484                           	opt stack 0
  1485  000004                     i2initialiseStates@i:
  1486                           	opt stack 0
  1487                           
  1488                           ; 2 bytes @ 0x3
  1489  000004                     	ds	1
  1490  000005                     ??_calcrc:
  1491  000005                     ??i2_ReadConfigST7540:
  1492  000005                     UIO_WRITE@uio_data:
  1493                           	opt stack 0
  1494  000005                     UIO_WRITE_1@uio_data:
  1495                           	opt stack 0
  1496  000005                     rxWord@halfBits:
  1497                           	opt stack 0
  1498  000005                     i2addPacketToOutgoingQueue@destination:
  1499                           	opt stack 0
  1500  000005                     i2___wmul@product:
  1501                           	opt stack 0
  1502                           
  1503                           ; 2 bytes @ 0x4
  1504  000005                     	ds	1
  1505  000006                     UIO_WRITE@nDigit:
  1506                           	opt stack 0
  1507  000006                     UIO_WRITE_1@nDigit:
  1508                           	opt stack 0
  1509  000006                     rxWord@word:
  1510                           	opt stack 0
  1511  000006                     i2WriteConfigST7540@frameDataUS:
  1512                           	opt stack 0
  1513                           
  1514                           ; 3 bytes @ 0x5
  1515  000006                     	ds	1
  1516  000007                     rxWord@eddReadState:
  1517                           	opt stack 0
  1518  000007                     i2checkForExistingUID@receivedUID:
  1519                           	opt stack 0
  1520                           
  1521                           ; 2 bytes @ 0x6
  1522  000007                     	ds	1
  1523  000008                     calcrc@i:
  1524                           	opt stack 0
  1525  000008                     rxWord@watch:
  1526                           	opt stack 0
  1527  000008                     i2ReadConfigST7540@discardUC:
  1528                           	opt stack 0
  1529                           
  1530                           ; 1 bytes @ 0x7
  1531  000008                     	ds	1
  1532  000009                     ??i2_checkForExistingUID:
  1533  000009                     ?_SCAN_TAG:
  1534                           	opt stack 0
  1535  000009                     ?_SCAN_TAG_1:
  1536                           	opt stack 0
  1537  000009                     i2ReadConfigST7540@bitsReceivedUC:
  1538                           	opt stack 0
  1539  000009                     calcrc@crc:
  1540                           	opt stack 0
  1541  000009                     i2WriteConfigST7540@configDataUS:
  1542                           	opt stack 0
  1543                           
  1544                           ; 3 bytes @ 0x8
  1545  000009                     	ds	2
  1546  00000B                     ??_SCAN_TAG:
  1547  00000B                     ??_SCAN_TAG_1:
  1548  00000B                     CHECK_CRC16@crc:
  1549                           	opt stack 0
  1550                           
  1551                           ; 2 bytes @ 0xA
  1552  00000B                     	ds	1
  1553  00000C                     ??i2_WriteConfigST7540:
  1554                           
  1555                           ; 1 bytes @ 0xB
  1556  00000C                     	ds	1
  1557  00000D                     READ_TAG@i:
  1558                           	opt stack 0
  1559  00000D                     READ_TAG_REVERSE@i:
  1560                           	opt stack 0
  1561                           
  1562                           ; 2 bytes @ 0xC
  1563  00000D                     	ds	2
  1564  00000F                     i2WriteConfigST7540@discardUC:
  1565                           	opt stack 0
  1566                           
  1567                           ; 1 bytes @ 0xE
  1568  00000F                     	ds	1
  1569  000010                     i2WriteConfigST7540@bitsSentUC:
  1570                           	opt stack 0
  1571                           
  1572                           ; 1 bytes @ 0xF
  1573  000010                     	ds	1
  1574  000011                     i2checkForExistingUID@currentUID:
  1575                           	opt stack 0
  1576  000011                     i2InitST7540@frameDataRXUS:
  1577                           	opt stack 0
  1578                           
  1579                           ; 3 bytes @ 0x10
  1580  000011                     	ds	2
  1581  000013                     i2checkForExistingUID@i:
  1582                           	opt stack 0
  1583                           
  1584                           ; 2 bytes @ 0x12
  1585  000013                     	ds	1
  1586  000014                     i2InitST7540@configDataRXUS:
  1587                           	opt stack 0
  1588                           
  1589                           ; 3 bytes @ 0x13
  1590  000014                     	ds	1
  1591  000015                     ??_addNewTag:
  1592                           
  1593                           ; 1 bytes @ 0x14
  1594  000015                     	ds	2
  1595  000017                     i2InitST7540@frameDataTXUS:
  1596                           	opt stack 0
  1597                           
  1598                           ; 3 bytes @ 0x16
  1599  000017                     	ds	3
  1600  00001A                     addNewTag@i:
  1601                           	opt stack 0
  1602  00001A                     i2InitST7540@configDataTXUS:
  1603                           	opt stack 0
  1604                           
  1605                           ; 3 bytes @ 0x19
  1606  00001A                     	ds	2
  1607  00001C                     readTagRoutine@attempts:
  1608                           	opt stack 0
  1609                           
  1610                           ; 1 bytes @ 0x1B
  1611  00001C                     	ds	1
  1612  00001D                     i2initialiseModem@attempts:
  1613                           	opt stack 0
  1614                           
  1615                           ; 1 bytes @ 0x1C
  1616  00001D                     	ds	1
  1617  00001E                     ??_isr:
  1618  00001E                     
  1619                           ; 1 bytes @ 0x1D
  1620  00001E                     	ds	15
  1621                           tblptru	equ	0xFF8
  1622                           tblptrh	equ	0xFF7
  1623                           tblptrl	equ	0xFF6
  1624                           tablat	equ	0xFF5
  1625                           postinc0	equ	0xFEE
  1626                           wreg	equ	0xFE8
  1627                           postdec1	equ	0xFE5
  1628                           fsr1h	equ	0xFE2
  1629                           fsr1l	equ	0xFE1
  1630                           
  1631 ;;
  1632 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1633 ;;
  1634 ;; *************** function _main *****************
  1635 ;; Defined at:
  1636 ;;		line 98 in file "main.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;		None
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1654 ;;Total ram usage:        0 bytes
  1655 ;; Hardware stack levels required when called:   17
  1656 ;; This function calls:
  1657 ;;		_device
  1658 ;;		_deviceStateHandler
  1659 ;;		_initialise
  1660 ;;		_testMemory
  1661 ;; This function is called by:
  1662 ;;		Startup code after reset
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           	psect	text0
  1667  006836                     __ptext0:
  1668                           	opt stack 0
  1669  006836                     _main:
  1670                           	opt stack 14
  1671                           
  1672                           ;incstack = 0
  1673  006836  0004               	clrwdt		;# 
  1674                           
  1675                           ;main.c: 100: ABB_1.deviceState = 1;
  1676  006838  0E01               	movlw	1
  1677  00683A  CFE8 F754          	movff	wreg,_ABB_1+916
  1678                           
  1679                           ;main.c: 101: outgoingQueue.queue_pointer = 0;
  1680  00683E  0E00               	movlw	0
  1681  006840  0101               	movlb	1	; () banked
  1682  006842  6F01               	movwf	(_outgoingQueue+1)& (0+255),b
  1683                           
  1684                           ;main.c: 102: outgoingQueue.length = 0;
  1685  006844  0E00               	movlw	0
  1686  006846  0101               	movlb	1	; () banked
  1687  006848  6F00               	movwf	_outgoingQueue& (0+255),b
  1688                           
  1689                           ;main.c: 103: COUNTERS.shaftTests = 0;
  1690  00684A  0E00               	movlw	0
  1691  00684C  0100               	movlb	0	; () banked
  1692  00684E  6FB1               	movwf	(_COUNTERS+14)& (0+255),b
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;main.c: 104: ABB_1.info.statusBits.voltage = 1;
  1696  006850  EE23  F0C1         	lfsr	2,_ABB_1+1
  1697  006854  8ADF               	bsf	indf2,5,c
  1698                           
  1699                           ; BSR set to: 0
  1700                           ;main.c: 105: ABB_1.info.statusBits.communication_status = 1;
  1701  006856  EE23  F0C2         	lfsr	2,_ABB_1+2
  1702  00685A  86DF               	bsf	indf2,3,c
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;main.c: 106: FLAGS.communication_status = 1;
  1706  00685C  8239               	bsf	_FLAGS+2,1,c
  1707                           
  1708                           ; BSR set to: 0
  1709                           ;main.c: 107: FLAGS.bluetoothTimer = 0;
  1710  00685E  9639               	bcf	_FLAGS+2,3,c
  1711                           
  1712                           ;main.c: 108: COUNTERS.min10 = 600000;
  1713  006860  0EC0               	movlw	192
  1714  006862  0100               	movlb	0	; () banked
  1715  006864  6FA5               	movwf	(_COUNTERS+2)& (0+255),b
  1716  006866  0E27               	movlw	39
  1717  006868  6FA6               	movwf	(_COUNTERS+3)& (0+255),b
  1718  00686A  0E09               	movlw	9
  1719  00686C  6FA7               	movwf	(_COUNTERS+4)& (0+255),b
  1720  00686E  0E00               	movlw	0
  1721  006870  6FA8               	movwf	(_COUNTERS+5)& (0+255),b
  1722                           
  1723                           ;main.c: 109: COUNTERS.missingPulses = 0;
  1724  006872  0E00               	movlw	0
  1725  006874  0100               	movlb	0	; () banked
  1726  006876  6FB2               	movwf	(_COUNTERS+15)& (0+255),b
  1727                           
  1728                           ; BSR set to: 0
  1729                           ;main.c: 110: ABB_1.destination = 0xFFFF;
  1730  006878  0EFF               	movlw	255
  1731  00687A  CFE8 F751          	movff	wreg,_ABB_1+913
  1732  00687E  0EFF               	movlw	255
  1733  006880  CFE8 F752          	movff	wreg,_ABB_1+914
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;main.c: 111: initialise();
  1737  006884  ECC0  F035         	call	_initialise	;wreg free
  1738                           
  1739                           ;main.c: 112: testMemory();
  1740  006888  ECC1  F000         	call	_testMemory	;wreg free
  1741  00688C                     l16002:
  1742                           
  1743                           ;main.c: 114: device();
  1744  00688C  EC9F  F014         	call	_device	;wreg free
  1745                           
  1746                           ;main.c: 115: deviceStateHandler();
  1747  006890  EC8C  F00E         	call	_deviceStateHandler	;wreg free
  1748  006894  D7FB               	goto	l16002
  1749  006896                     __end_of_main:
  1750                           	opt stack 0
  1751                           tblptru	equ	0xFF8
  1752                           tblptrh	equ	0xFF7
  1753                           tblptrl	equ	0xFF6
  1754                           tablat	equ	0xFF5
  1755                           postinc0	equ	0xFEE
  1756                           wreg	equ	0xFE8
  1757                           postdec1	equ	0xFE5
  1758                           fsr1h	equ	0xFE2
  1759                           fsr1l	equ	0xFE1
  1760                           indf2	equ	0xFDF
  1761                           
  1762 ;; *************** function _testMemory *****************
  1763 ;; Defined at:
  1764 ;;		line 242 in file "peripherals.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;		None
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  i               2   22[BANK0 ] int 
  1769 ;;  i               2   20[BANK0 ] int 
  1770 ;;  i               2   18[BANK0 ] int 
  1771 ;;  i               2   16[BANK0 ] int 
  1772 ;;  i               2   14[BANK0 ] int 
  1773 ;;  i               2   12[BANK0 ] int 
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1784 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1785 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1786 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1787 ;;Total ram usage:       18 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:    9
  1790 ;; This function calls:
  1791 ;;		___wmul
  1792 ;; This function is called by:
  1793 ;;		_main
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	text1
  1798  000182                     __ptext1:
  1799                           	opt stack 0
  1800  000182                     _testMemory:
  1801                           	opt stack 21
  1802                           
  1803                           ;peripherals.c: 350: ABB_1.dets_length = 100;
  1804                           
  1805                           ;incstack = 0
  1806  000182  0E64               	movlw	100
  1807  000184  CFE8 F3C0          	movff	wreg,_ABB_1
  1808                           
  1809                           ;peripherals.c: 351: for (int i = 1; i <= 10; i++){
  1810  000188  0E00               	movlw	0
  1811  00018A  0100               	movlb	0	; () banked
  1812  00018C  6F6D               	movwf	(testMemory@i+1)& (0+255),b
  1813  00018E  0E01               	movlw	1
  1814  000190  6F6C               	movwf	testMemory@i& (0+255),b
  1815                           
  1816                           ; BSR set to: 0
  1817  000192  0100               	movlb	0	; () banked
  1818  000194  BF6D               	btfsc	(testMemory@i+1)& (0+255),7,b
  1819  000196  D00A               	goto	l15694
  1820  000198  0100               	movlb	0	; () banked
  1821  00019A  516D               	movf	(testMemory@i+1)& (0+255),w,b
  1822  00019C  E106               	bnz	u11300
  1823  00019E  0E0B               	movlw	11
  1824  0001A0  0100               	movlb	0	; () banked
  1825  0001A2  5D6C               	subwf	testMemory@i& (0+255),w,b
  1826  0001A4  B0D8               	btfsc	status,0,c
  1827  0001A6  D0E2               	goto	l15700
  1828  0001A8  D001               	goto	l15694
  1829  0001AA                     u11300:
  1830                           
  1831                           ; BSR set to: 0
  1832  0001AA  D0E0               	goto	l15700
  1833  0001AC                     l15694:
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;peripherals.c: 352: ABB_1.det_arrays.UIDs[i].UID[0] = 27;
  1837  0001AC  C06C  F060         	movff	testMemory@i,___wmul@multiplier
  1838  0001B0  C06D  F061         	movff	testMemory@i+1,___wmul@multiplier+1
  1839  0001B4  0E00               	movlw	0
  1840  0001B6  0100               	movlb	0	; () banked
  1841  0001B8  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1842  0001BA  0E05               	movlw	5
  1843  0001BC  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1844  0001BE  ECB3  F038         	call	___wmul	;wreg free
  1845  0001C2  0EC4               	movlw	low (_ABB_1+4)
  1846  0001C4  0100               	movlb	0	; () banked
  1847  0001C6  2560               	addwf	?___wmul& (0+255),w,b
  1848  0001C8  6ED9               	movwf	fsr2l,c
  1849  0001CA  0E03               	movlw	high (_ABB_1+4)
  1850  0001CC  0100               	movlb	0	; () banked
  1851  0001CE  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1852  0001D0  6EDA               	movwf	fsr2h,c
  1853  0001D2  0E1B               	movlw	27
  1854  0001D4  6EDF               	movwf	indf2,c
  1855                           
  1856                           ;peripherals.c: 353: ABB_1.det_arrays.UIDs[i].UID[1] = 17;
  1857  0001D6  C06C  F060         	movff	testMemory@i,___wmul@multiplier
  1858  0001DA  C06D  F061         	movff	testMemory@i+1,___wmul@multiplier+1
  1859  0001DE  0E00               	movlw	0
  1860  0001E0  0100               	movlb	0	; () banked
  1861  0001E2  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1862  0001E4  0E05               	movlw	5
  1863  0001E6  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1864  0001E8  ECB3  F038         	call	___wmul	;wreg free
  1865  0001EC  0EC0               	movlw	low _ABB_1
  1866  0001EE  0100               	movlb	0	; () banked
  1867  0001F0  6F66               	movwf	??_testMemory& (0+255),b
  1868  0001F2  0E03               	movlw	high _ABB_1
  1869  0001F4  0100               	movlb	0	; () banked
  1870  0001F6  6F67               	movwf	(??_testMemory+1)& (0+255),b
  1871  0001F8  0E04               	movlw	4
  1872  0001FA  0100               	movlb	0	; () banked
  1873  0001FC  2766               	addwf	??_testMemory& (0+255),f,b
  1874  0001FE  0E00               	movlw	0
  1875  000200  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  1876  000202  0100               	movlb	0	; () banked
  1877  000204  5160               	movf	?___wmul& (0+255),w,b
  1878  000206  0100               	movlb	0	; () banked
  1879  000208  2766               	addwf	??_testMemory& (0+255),f,b
  1880  00020A  0100               	movlb	0	; () banked
  1881  00020C  5161               	movf	(?___wmul+1)& (0+255),w,b
  1882  00020E  0100               	movlb	0	; () banked
  1883  000210  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  1884  000212  0E01               	movlw	1
  1885  000214  0100               	movlb	0	; () banked
  1886  000216  2566               	addwf	??_testMemory& (0+255),w,b
  1887  000218  6ED9               	movwf	fsr2l,c
  1888  00021A  0E00               	movlw	0
  1889  00021C  0100               	movlb	0	; () banked
  1890  00021E  2167               	addwfc	(??_testMemory+1)& (0+255),w,b
  1891  000220  6EDA               	movwf	fsr2h,c
  1892  000222  0E11               	movlw	17
  1893  000224  6EDF               	movwf	indf2,c
  1894                           
  1895                           ;peripherals.c: 354: ABB_1.det_arrays.UIDs[i].UID[2] = 3;
  1896  000226  C06C  F060         	movff	testMemory@i,___wmul@multiplier
  1897  00022A  C06D  F061         	movff	testMemory@i+1,___wmul@multiplier+1
  1898  00022E  0E00               	movlw	0
  1899  000230  0100               	movlb	0	; () banked
  1900  000232  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1901  000234  0E05               	movlw	5
  1902  000236  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1903  000238  ECB3  F038         	call	___wmul	;wreg free
  1904  00023C  0EC0               	movlw	low _ABB_1
  1905  00023E  0100               	movlb	0	; () banked
  1906  000240  6F66               	movwf	??_testMemory& (0+255),b
  1907  000242  0E03               	movlw	high _ABB_1
  1908  000244  0100               	movlb	0	; () banked
  1909  000246  6F67               	movwf	(??_testMemory+1)& (0+255),b
  1910  000248  0E04               	movlw	4
  1911  00024A  0100               	movlb	0	; () banked
  1912  00024C  2766               	addwf	??_testMemory& (0+255),f,b
  1913  00024E  0E00               	movlw	0
  1914  000250  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  1915  000252  0100               	movlb	0	; () banked
  1916  000254  5160               	movf	?___wmul& (0+255),w,b
  1917  000256  0100               	movlb	0	; () banked
  1918  000258  2766               	addwf	??_testMemory& (0+255),f,b
  1919  00025A  0100               	movlb	0	; () banked
  1920  00025C  5161               	movf	(?___wmul+1)& (0+255),w,b
  1921  00025E  0100               	movlb	0	; () banked
  1922  000260  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  1923  000262  0E02               	movlw	2
  1924  000264  0100               	movlb	0	; () banked
  1925  000266  2566               	addwf	??_testMemory& (0+255),w,b
  1926  000268  6ED9               	movwf	fsr2l,c
  1927  00026A  0E00               	movlw	0
  1928  00026C  0100               	movlb	0	; () banked
  1929  00026E  2167               	addwfc	(??_testMemory+1)& (0+255),w,b
  1930  000270  6EDA               	movwf	fsr2h,c
  1931  000272  0E03               	movlw	3
  1932  000274  6EDF               	movwf	indf2,c
  1933                           
  1934                           ;peripherals.c: 355: ABB_1.det_arrays.UIDs[i].UID[3] = 130 - i;
  1935  000276  C06C  F060         	movff	testMemory@i,___wmul@multiplier
  1936  00027A  C06D  F061         	movff	testMemory@i+1,___wmul@multiplier+1
  1937  00027E  0E00               	movlw	0
  1938  000280  0100               	movlb	0	; () banked
  1939  000282  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1940  000284  0E05               	movlw	5
  1941  000286  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1942  000288  ECB3  F038         	call	___wmul	;wreg free
  1943  00028C  0EC0               	movlw	low _ABB_1
  1944  00028E  0100               	movlb	0	; () banked
  1945  000290  6F66               	movwf	??_testMemory& (0+255),b
  1946  000292  0E03               	movlw	high _ABB_1
  1947  000294  0100               	movlb	0	; () banked
  1948  000296  6F67               	movwf	(??_testMemory+1)& (0+255),b
  1949  000298  0E04               	movlw	4
  1950  00029A  0100               	movlb	0	; () banked
  1951  00029C  2766               	addwf	??_testMemory& (0+255),f,b
  1952  00029E  0E00               	movlw	0
  1953  0002A0  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  1954  0002A2  0100               	movlb	0	; () banked
  1955  0002A4  5160               	movf	?___wmul& (0+255),w,b
  1956  0002A6  0100               	movlb	0	; () banked
  1957  0002A8  2766               	addwf	??_testMemory& (0+255),f,b
  1958  0002AA  0100               	movlb	0	; () banked
  1959  0002AC  5161               	movf	(?___wmul+1)& (0+255),w,b
  1960  0002AE  0100               	movlb	0	; () banked
  1961  0002B0  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  1962  0002B2  0E03               	movlw	3
  1963  0002B4  0100               	movlb	0	; () banked
  1964  0002B6  2566               	addwf	??_testMemory& (0+255),w,b
  1965  0002B8  6ED9               	movwf	fsr2l,c
  1966  0002BA  0E00               	movlw	0
  1967  0002BC  0100               	movlb	0	; () banked
  1968  0002BE  2167               	addwfc	(??_testMemory+1)& (0+255),w,b
  1969  0002C0  6EDA               	movwf	fsr2h,c
  1970  0002C2  0100               	movlb	0	; () banked
  1971  0002C4  516C               	movf	testMemory@i& (0+255),w,b
  1972  0002C6  0800               	sublw	0
  1973  0002C8  0F82               	addlw	130
  1974  0002CA  6EDF               	movwf	indf2,c
  1975                           
  1976                           ;peripherals.c: 356: ABB_1.det_arrays.info[i].delay = i*100;
  1977  0002CC  C06C  F060         	movff	testMemory@i,___wmul@multiplier
  1978  0002D0  C06D  F061         	movff	testMemory@i+1,___wmul@multiplier+1
  1979  0002D4  0E00               	movlw	0
  1980  0002D6  0100               	movlb	0	; () banked
  1981  0002D8  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1982  0002DA  0E64               	movlw	100
  1983  0002DC  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1984  0002DE  ECB3  F038         	call	___wmul	;wreg free
  1985  0002E2  0EF9               	movlw	249
  1986  0002E4  0100               	movlb	0	; () banked
  1987  0002E6  6F66               	movwf	??_testMemory& (0+255),b
  1988  0002E8  0E01               	movlw	1
  1989  0002EA  0100               	movlb	0	; () banked
  1990  0002EC  6F67               	movwf	(??_testMemory+1)& (0+255),b
  1991  0002EE  C06C  F068         	movff	testMemory@i,??_testMemory+2
  1992  0002F2  C06D  F069         	movff	testMemory@i+1,??_testMemory+3
  1993  0002F6  0100               	movlb	0	; () banked
  1994  0002F8  90D8               	bcf	status,0,c
  1995  0002FA  3768               	rlcf	(??_testMemory+2)& (0+255),f,b
  1996  0002FC  3769               	rlcf	(??_testMemory+3)& (0+255),f,b
  1997  0002FE  0100               	movlb	0	; () banked
  1998  000300  90D8               	bcf	status,0,c
  1999  000302  3768               	rlcf	(??_testMemory+2)& (0+255),f,b
  2000  000304  3769               	rlcf	(??_testMemory+3)& (0+255),f,b
  2001  000306  0100               	movlb	0	; () banked
  2002  000308  5166               	movf	??_testMemory& (0+255),w,b
  2003  00030A  0100               	movlb	0	; () banked
  2004  00030C  2768               	addwf	(??_testMemory+2)& (0+255),f,b
  2005  00030E  0100               	movlb	0	; () banked
  2006  000310  5167               	movf	(??_testMemory+1)& (0+255),w,b
  2007  000312  0100               	movlb	0	; () banked
  2008  000314  2369               	addwfc	(??_testMemory+3)& (0+255),f,b
  2009  000316  0EC0               	movlw	low _ABB_1
  2010  000318  0100               	movlb	0	; () banked
  2011  00031A  6F6A               	movwf	(??_testMemory+4)& (0+255),b
  2012  00031C  0E03               	movlw	high _ABB_1
  2013  00031E  0100               	movlb	0	; () banked
  2014  000320  6F6B               	movwf	(??_testMemory+5)& (0+255),b
  2015  000322  0E04               	movlw	4
  2016  000324  0100               	movlb	0	; () banked
  2017  000326  276A               	addwf	(??_testMemory+4)& (0+255),f,b
  2018  000328  0E00               	movlw	0
  2019  00032A  236B               	addwfc	(??_testMemory+5)& (0+255),f,b
  2020  00032C  0100               	movlb	0	; () banked
  2021  00032E  5168               	movf	(??_testMemory+2)& (0+255),w,b
  2022  000330  0100               	movlb	0	; () banked
  2023  000332  276A               	addwf	(??_testMemory+4)& (0+255),f,b
  2024  000334  0100               	movlb	0	; () banked
  2025  000336  5169               	movf	(??_testMemory+3)& (0+255),w,b
  2026  000338  0100               	movlb	0	; () banked
  2027  00033A  236B               	addwfc	(??_testMemory+5)& (0+255),f,b
  2028  00033C  0E02               	movlw	2
  2029  00033E  0100               	movlb	0	; () banked
  2030  000340  256A               	addwf	(??_testMemory+4)& (0+255),w,b
  2031  000342  6ED9               	movwf	fsr2l,c
  2032  000344  0E00               	movlw	0
  2033  000346  0100               	movlb	0	; () banked
  2034  000348  216B               	addwfc	(??_testMemory+5)& (0+255),w,b
  2035  00034A  6EDA               	movwf	fsr2h,c
  2036  00034C  0100               	movlb	0	; () banked
  2037  00034E  C060  FFDE         	movff	?___wmul,postinc2
  2038  000352  0100               	movlb	0	; () banked
  2039  000354  C061  FFDD         	movff	?___wmul+1,postdec2
  2040                           
  2041                           ; BSR set to: 0
  2042  000358  0100               	movlb	0	; () banked
  2043  00035A  4B6C               	infsnz	testMemory@i& (0+255),f,b
  2044  00035C  2B6D               	incf	(testMemory@i+1)& (0+255),f,b
  2045                           
  2046                           ; BSR set to: 0
  2047  00035E  0100               	movlb	0	; () banked
  2048  000360  BF6D               	btfsc	(testMemory@i+1)& (0+255),7,b
  2049  000362  D724               	goto	l15694
  2050  000364  0100               	movlb	0	; () banked
  2051  000366  516D               	movf	(testMemory@i+1)& (0+255),w,b
  2052  000368  E101               	bnz	l15700
  2053  00036A  D719               	goto	L1
  2054  00036C                     l15700:
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;peripherals.c: 357: }
  2058                           ;peripherals.c: 358: for (int i = 11; i <= 20; i++){
  2059  00036C  0E00               	movlw	0
  2060  00036E  0100               	movlb	0	; () banked
  2061  000370  6F6F               	movwf	(testMemory@i_1269+1)& (0+255),b
  2062  000372  0E0B               	movlw	11
  2063  000374  6F6E               	movwf	testMemory@i_1269& (0+255),b
  2064                           
  2065                           ; BSR set to: 0
  2066  000376  0100               	movlb	0	; () banked
  2067  000378  BF6F               	btfsc	(testMemory@i_1269+1)& (0+255),7,b
  2068  00037A  D00A               	goto	l15706
  2069  00037C  0100               	movlb	0	; () banked
  2070  00037E  516F               	movf	(testMemory@i_1269+1)& (0+255),w,b
  2071  000380  E106               	bnz	u11320
  2072  000382  0E15               	movlw	21
  2073  000384  0100               	movlb	0	; () banked
  2074  000386  5D6E               	subwf	testMemory@i_1269& (0+255),w,b
  2075  000388  B0D8               	btfsc	status,0,c
  2076  00038A  D0E2               	goto	l15712
  2077  00038C  D001               	goto	l15706
  2078  00038E                     u11320:
  2079                           
  2080                           ; BSR set to: 0
  2081  00038E  D0E0               	goto	l15712
  2082  000390                     l15706:
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;peripherals.c: 359: ABB_1.det_arrays.UIDs[i].UID[0] = 27;
  2086  000390  C06E  F060         	movff	testMemory@i_1269,___wmul@multiplier
  2087  000394  C06F  F061         	movff	testMemory@i_1269+1,___wmul@multiplier+1
  2088  000398  0E00               	movlw	0
  2089  00039A  0100               	movlb	0	; () banked
  2090  00039C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2091  00039E  0E05               	movlw	5
  2092  0003A0  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2093  0003A2  ECB3  F038         	call	___wmul	;wreg free
  2094  0003A6  0EC4               	movlw	low (_ABB_1+4)
  2095  0003A8  0100               	movlb	0	; () banked
  2096  0003AA  2560               	addwf	?___wmul& (0+255),w,b
  2097  0003AC  6ED9               	movwf	fsr2l,c
  2098  0003AE  0E03               	movlw	high (_ABB_1+4)
  2099  0003B0  0100               	movlb	0	; () banked
  2100  0003B2  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2101  0003B4  6EDA               	movwf	fsr2h,c
  2102  0003B6  0E1B               	movlw	27
  2103  0003B8  6EDF               	movwf	indf2,c
  2104                           
  2105                           ;peripherals.c: 360: ABB_1.det_arrays.UIDs[i].UID[1] = 17;
  2106  0003BA  C06E  F060         	movff	testMemory@i_1269,___wmul@multiplier
  2107  0003BE  C06F  F061         	movff	testMemory@i_1269+1,___wmul@multiplier+1
  2108  0003C2  0E00               	movlw	0
  2109  0003C4  0100               	movlb	0	; () banked
  2110  0003C6  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2111  0003C8  0E05               	movlw	5
  2112  0003CA  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2113  0003CC  ECB3  F038         	call	___wmul	;wreg free
  2114  0003D0  0EC0               	movlw	low _ABB_1
  2115  0003D2  0100               	movlb	0	; () banked
  2116  0003D4  6F66               	movwf	??_testMemory& (0+255),b
  2117  0003D6  0E03               	movlw	high _ABB_1
  2118  0003D8  0100               	movlb	0	; () banked
  2119  0003DA  6F67               	movwf	(??_testMemory+1)& (0+255),b
  2120  0003DC  0E04               	movlw	4
  2121  0003DE  0100               	movlb	0	; () banked
  2122  0003E0  2766               	addwf	??_testMemory& (0+255),f,b
  2123  0003E2  0E00               	movlw	0
  2124  0003E4  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  2125  0003E6  0100               	movlb	0	; () banked
  2126  0003E8  5160               	movf	?___wmul& (0+255),w,b
  2127  0003EA  0100               	movlb	0	; () banked
  2128  0003EC  2766               	addwf	??_testMemory& (0+255),f,b
  2129  0003EE  0100               	movlb	0	; () banked
  2130  0003F0  5161               	movf	(?___wmul+1)& (0+255),w,b
  2131  0003F2  0100               	movlb	0	; () banked
  2132  0003F4  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  2133  0003F6  0E01               	movlw	1
  2134  0003F8  0100               	movlb	0	; () banked
  2135  0003FA  2566               	addwf	??_testMemory& (0+255),w,b
  2136  0003FC  6ED9               	movwf	fsr2l,c
  2137  0003FE  0E00               	movlw	0
  2138  000400  0100               	movlb	0	; () banked
  2139  000402  2167               	addwfc	(??_testMemory+1)& (0+255),w,b
  2140  000404  6EDA               	movwf	fsr2h,c
  2141  000406  0E11               	movlw	17
  2142  000408  6EDF               	movwf	indf2,c
  2143                           
  2144                           ;peripherals.c: 361: ABB_1.det_arrays.UIDs[i].UID[2] = 3;
  2145  00040A  C06E  F060         	movff	testMemory@i_1269,___wmul@multiplier
  2146  00040E  C06F  F061         	movff	testMemory@i_1269+1,___wmul@multiplier+1
  2147  000412  0E00               	movlw	0
  2148  000414  0100               	movlb	0	; () banked
  2149  000416  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2150  000418  0E05               	movlw	5
  2151  00041A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2152  00041C  ECB3  F038         	call	___wmul	;wreg free
  2153  000420  0EC0               	movlw	low _ABB_1
  2154  000422  0100               	movlb	0	; () banked
  2155  000424  6F66               	movwf	??_testMemory& (0+255),b
  2156  000426  0E03               	movlw	high _ABB_1
  2157  000428  0100               	movlb	0	; () banked
  2158  00042A  6F67               	movwf	(??_testMemory+1)& (0+255),b
  2159  00042C  0E04               	movlw	4
  2160  00042E  0100               	movlb	0	; () banked
  2161  000430  2766               	addwf	??_testMemory& (0+255),f,b
  2162  000432  0E00               	movlw	0
  2163  000434  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  2164  000436  0100               	movlb	0	; () banked
  2165  000438  5160               	movf	?___wmul& (0+255),w,b
  2166  00043A  0100               	movlb	0	; () banked
  2167  00043C  2766               	addwf	??_testMemory& (0+255),f,b
  2168  00043E  0100               	movlb	0	; () banked
  2169  000440  5161               	movf	(?___wmul+1)& (0+255),w,b
  2170  000442  0100               	movlb	0	; () banked
  2171  000444  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  2172  000446  0E02               	movlw	2
  2173  000448  0100               	movlb	0	; () banked
  2174  00044A  2566               	addwf	??_testMemory& (0+255),w,b
  2175  00044C  6ED9               	movwf	fsr2l,c
  2176  00044E  0E00               	movlw	0
  2177  000450  0100               	movlb	0	; () banked
  2178  000452  2167               	addwfc	(??_testMemory+1)& (0+255),w,b
  2179  000454  6EDA               	movwf	fsr2h,c
  2180  000456  0E03               	movlw	3
  2181  000458  6EDF               	movwf	indf2,c
  2182                           
  2183                           ;peripherals.c: 362: ABB_1.det_arrays.UIDs[i].UID[3] = 129 - i;
  2184  00045A  C06E  F060         	movff	testMemory@i_1269,___wmul@multiplier
  2185  00045E  C06F  F061         	movff	testMemory@i_1269+1,___wmul@multiplier+1
  2186  000462  0E00               	movlw	0
  2187  000464  0100               	movlb	0	; () banked
  2188  000466  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2189  000468  0E05               	movlw	5
  2190  00046A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2191  00046C  ECB3  F038         	call	___wmul	;wreg free
  2192  000470  0EC0               	movlw	low _ABB_1
  2193  000472  0100               	movlb	0	; () banked
  2194  000474  6F66               	movwf	??_testMemory& (0+255),b
  2195  000476  0E03               	movlw	high _ABB_1
  2196  000478  0100               	movlb	0	; () banked
  2197  00047A  6F67               	movwf	(??_testMemory+1)& (0+255),b
  2198  00047C  0E04               	movlw	4
  2199  00047E  0100               	movlb	0	; () banked
  2200  000480  2766               	addwf	??_testMemory& (0+255),f,b
  2201  000482  0E00               	movlw	0
  2202  000484  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  2203  000486  0100               	movlb	0	; () banked
  2204  000488  5160               	movf	?___wmul& (0+255),w,b
  2205  00048A  0100               	movlb	0	; () banked
  2206  00048C  2766               	addwf	??_testMemory& (0+255),f,b
  2207  00048E  0100               	movlb	0	; () banked
  2208  000490  5161               	movf	(?___wmul+1)& (0+255),w,b
  2209  000492  0100               	movlb	0	; () banked
  2210  000494  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  2211  000496  0E03               	movlw	3
  2212  000498  0100               	movlb	0	; () banked
  2213  00049A  2566               	addwf	??_testMemory& (0+255),w,b
  2214  00049C  6ED9               	movwf	fsr2l,c
  2215  00049E  0E00               	movlw	0
  2216  0004A0  0100               	movlb	0	; () banked
  2217  0004A2  2167               	addwfc	(??_testMemory+1)& (0+255),w,b
  2218  0004A4  6EDA               	movwf	fsr2h,c
  2219  0004A6  0100               	movlb	0	; () banked
  2220  0004A8  516E               	movf	testMemory@i_1269& (0+255),w,b
  2221  0004AA  0800               	sublw	0
  2222  0004AC  0F81               	addlw	129
  2223  0004AE  6EDF               	movwf	indf2,c
  2224                           
  2225                           ;peripherals.c: 363: ABB_1.det_arrays.info[i].delay = i*100;
  2226  0004B0  C06E  F060         	movff	testMemory@i_1269,___wmul@multiplier
  2227  0004B4  C06F  F061         	movff	testMemory@i_1269+1,___wmul@multiplier+1
  2228  0004B8  0E00               	movlw	0
  2229  0004BA  0100               	movlb	0	; () banked
  2230  0004BC  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2231  0004BE  0E64               	movlw	100
  2232  0004C0  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2233  0004C2  ECB3  F038         	call	___wmul	;wreg free
  2234  0004C6  0EF9               	movlw	249
  2235  0004C8  0100               	movlb	0	; () banked
  2236  0004CA  6F66               	movwf	??_testMemory& (0+255),b
  2237  0004CC  0E01               	movlw	1
  2238  0004CE  0100               	movlb	0	; () banked
  2239  0004D0  6F67               	movwf	(??_testMemory+1)& (0+255),b
  2240  0004D2  C06E  F068         	movff	testMemory@i_1269,??_testMemory+2
  2241  0004D6  C06F  F069         	movff	testMemory@i_1269+1,??_testMemory+3
  2242  0004DA  0100               	movlb	0	; () banked
  2243  0004DC  90D8               	bcf	status,0,c
  2244  0004DE  3768               	rlcf	(??_testMemory+2)& (0+255),f,b
  2245  0004E0  3769               	rlcf	(??_testMemory+3)& (0+255),f,b
  2246  0004E2  0100               	movlb	0	; () banked
  2247  0004E4  90D8               	bcf	status,0,c
  2248  0004E6  3768               	rlcf	(??_testMemory+2)& (0+255),f,b
  2249  0004E8  3769               	rlcf	(??_testMemory+3)& (0+255),f,b
  2250  0004EA  0100               	movlb	0	; () banked
  2251  0004EC  5166               	movf	??_testMemory& (0+255),w,b
  2252  0004EE  0100               	movlb	0	; () banked
  2253  0004F0  2768               	addwf	(??_testMemory+2)& (0+255),f,b
  2254  0004F2  0100               	movlb	0	; () banked
  2255  0004F4  5167               	movf	(??_testMemory+1)& (0+255),w,b
  2256  0004F6  0100               	movlb	0	; () banked
  2257  0004F8  2369               	addwfc	(??_testMemory+3)& (0+255),f,b
  2258  0004FA  0EC0               	movlw	low _ABB_1
  2259  0004FC  0100               	movlb	0	; () banked
  2260  0004FE  6F6A               	movwf	(??_testMemory+4)& (0+255),b
  2261  000500  0E03               	movlw	high _ABB_1
  2262  000502  0100               	movlb	0	; () banked
  2263  000504  6F6B               	movwf	(??_testMemory+5)& (0+255),b
  2264  000506  0E04               	movlw	4
  2265  000508  0100               	movlb	0	; () banked
  2266  00050A  276A               	addwf	(??_testMemory+4)& (0+255),f,b
  2267  00050C  0E00               	movlw	0
  2268  00050E  236B               	addwfc	(??_testMemory+5)& (0+255),f,b
  2269  000510  0100               	movlb	0	; () banked
  2270  000512  5168               	movf	(??_testMemory+2)& (0+255),w,b
  2271  000514  0100               	movlb	0	; () banked
  2272  000516  276A               	addwf	(??_testMemory+4)& (0+255),f,b
  2273  000518  0100               	movlb	0	; () banked
  2274  00051A  5169               	movf	(??_testMemory+3)& (0+255),w,b
  2275  00051C  0100               	movlb	0	; () banked
  2276  00051E  236B               	addwfc	(??_testMemory+5)& (0+255),f,b
  2277  000520  0E02               	movlw	2
  2278  000522  0100               	movlb	0	; () banked
  2279  000524  256A               	addwf	(??_testMemory+4)& (0+255),w,b
  2280  000526  6ED9               	movwf	fsr2l,c
  2281  000528  0E00               	movlw	0
  2282  00052A  0100               	movlb	0	; () banked
  2283  00052C  216B               	addwfc	(??_testMemory+5)& (0+255),w,b
  2284  00052E  6EDA               	movwf	fsr2h,c
  2285  000530  0100               	movlb	0	; () banked
  2286  000532  C060  FFDE         	movff	?___wmul,postinc2
  2287  000536  0100               	movlb	0	; () banked
  2288  000538  C061  FFDD         	movff	?___wmul+1,postdec2
  2289                           
  2290                           ; BSR set to: 0
  2291  00053C  0100               	movlb	0	; () banked
  2292  00053E  4B6E               	infsnz	testMemory@i_1269& (0+255),f,b
  2293  000540  2B6F               	incf	(testMemory@i_1269+1)& (0+255),f,b
  2294                           
  2295                           ; BSR set to: 0
  2296  000542  0100               	movlb	0	; () banked
  2297  000544  BF6F               	btfsc	(testMemory@i_1269+1)& (0+255),7,b
  2298  000546  D724               	goto	l15706
  2299  000548  0100               	movlb	0	; () banked
  2300  00054A  516F               	movf	(testMemory@i_1269+1)& (0+255),w,b
  2301  00054C  E101               	bnz	l15712
  2302  00054E  D719               	goto	L2
  2303  000550                     l15712:
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;peripherals.c: 364: }
  2307                           ;peripherals.c: 365: for (int i = 21; i <= 40; i++){
  2308  000550  0E00               	movlw	0
  2309  000552  0100               	movlb	0	; () banked
  2310  000554  6F71               	movwf	(testMemory@i_1270+1)& (0+255),b
  2311  000556  0E15               	movlw	21
  2312  000558  6F70               	movwf	testMemory@i_1270& (0+255),b
  2313                           
  2314                           ; BSR set to: 0
  2315  00055A  0100               	movlb	0	; () banked
  2316  00055C  BF71               	btfsc	(testMemory@i_1270+1)& (0+255),7,b
  2317  00055E  D00A               	goto	l15718
  2318  000560  0100               	movlb	0	; () banked
  2319  000562  5171               	movf	(testMemory@i_1270+1)& (0+255),w,b
  2320  000564  E106               	bnz	u11340
  2321  000566  0E29               	movlw	41
  2322  000568  0100               	movlb	0	; () banked
  2323  00056A  5D70               	subwf	testMemory@i_1270& (0+255),w,b
  2324  00056C  B0D8               	btfsc	status,0,c
  2325  00056E  D0E1               	goto	l15724
  2326  000570  D001               	goto	l15718
  2327  000572                     u11340:
  2328                           
  2329                           ; BSR set to: 0
  2330  000572  D0DF               	goto	l15724
  2331  000574                     l15718:
  2332                           
  2333                           ; BSR set to: 0
  2334                           ;peripherals.c: 366: ABB_1.det_arrays.UIDs[i].UID[0] = 27;
  2335  000574  C070  F060         	movff	testMemory@i_1270,___wmul@multiplier
  2336  000578  C071  F061         	movff	testMemory@i_1270+1,___wmul@multiplier+1
  2337  00057C  0E00               	movlw	0
  2338  00057E  0100               	movlb	0	; () banked
  2339  000580  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2340  000582  0E05               	movlw	5
  2341  000584  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2342  000586  ECB3  F038         	call	___wmul	;wreg free
  2343  00058A  0EC4               	movlw	low (_ABB_1+4)
  2344  00058C  0100               	movlb	0	; () banked
  2345  00058E  2560               	addwf	?___wmul& (0+255),w,b
  2346  000590  6ED9               	movwf	fsr2l,c
  2347  000592  0E03               	movlw	high (_ABB_1+4)
  2348  000594  0100               	movlb	0	; () banked
  2349  000596  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2350  000598  6EDA               	movwf	fsr2h,c
  2351  00059A  0E1B               	movlw	27
  2352  00059C  6EDF               	movwf	indf2,c
  2353                           
  2354                           ;peripherals.c: 367: ABB_1.det_arrays.UIDs[i].UID[1] = 16;
  2355  00059E  C070  F060         	movff	testMemory@i_1270,___wmul@multiplier
  2356  0005A2  C071  F061         	movff	testMemory@i_1270+1,___wmul@multiplier+1
  2357  0005A6  0E00               	movlw	0
  2358  0005A8  0100               	movlb	0	; () banked
  2359  0005AA  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2360  0005AC  0E05               	movlw	5
  2361  0005AE  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2362  0005B0  ECB3  F038         	call	___wmul	;wreg free
  2363  0005B4  0EC0               	movlw	low _ABB_1
  2364  0005B6  0100               	movlb	0	; () banked
  2365  0005B8  6F66               	movwf	??_testMemory& (0+255),b
  2366  0005BA  0E03               	movlw	high _ABB_1
  2367  0005BC  0100               	movlb	0	; () banked
  2368  0005BE  6F67               	movwf	(??_testMemory+1)& (0+255),b
  2369  0005C0  0E04               	movlw	4
  2370  0005C2  0100               	movlb	0	; () banked
  2371  0005C4  2766               	addwf	??_testMemory& (0+255),f,b
  2372  0005C6  0E00               	movlw	0
  2373  0005C8  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  2374  0005CA  0100               	movlb	0	; () banked
  2375  0005CC  5160               	movf	?___wmul& (0+255),w,b
  2376  0005CE  0100               	movlb	0	; () banked
  2377  0005D0  2766               	addwf	??_testMemory& (0+255),f,b
  2378  0005D2  0100               	movlb	0	; () banked
  2379  0005D4  5161               	movf	(?___wmul+1)& (0+255),w,b
  2380  0005D6  0100               	movlb	0	; () banked
  2381  0005D8  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  2382  0005DA  0E01               	movlw	1
  2383  0005DC  0100               	movlb	0	; () banked
  2384  0005DE  2566               	addwf	??_testMemory& (0+255),w,b
  2385  0005E0  6ED9               	movwf	fsr2l,c
  2386  0005E2  0E00               	movlw	0
  2387  0005E4  0100               	movlb	0	; () banked
  2388  0005E6  2167               	addwfc	(??_testMemory+1)& (0+255),w,b
  2389  0005E8  6EDA               	movwf	fsr2h,c
  2390  0005EA  0E10               	movlw	16
  2391  0005EC  6EDF               	movwf	indf2,c
  2392                           
  2393                           ;peripherals.c: 368: ABB_1.det_arrays.UIDs[i].UID[2] = 236;
  2394  0005EE  C070  F060         	movff	testMemory@i_1270,___wmul@multiplier
  2395  0005F2  C071  F061         	movff	testMemory@i_1270+1,___wmul@multiplier+1
  2396  0005F6  0E00               	movlw	0
  2397  0005F8  0100               	movlb	0	; () banked
  2398  0005FA  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2399  0005FC  0E05               	movlw	5
  2400  0005FE  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2401  000600  ECB3  F038         	call	___wmul	;wreg free
  2402  000604  0EC0               	movlw	low _ABB_1
  2403  000606  0100               	movlb	0	; () banked
  2404  000608  6F66               	movwf	??_testMemory& (0+255),b
  2405  00060A  0E03               	movlw	high _ABB_1
  2406  00060C  0100               	movlb	0	; () banked
  2407  00060E  6F67               	movwf	(??_testMemory+1)& (0+255),b
  2408  000610  0E04               	movlw	4
  2409  000612  0100               	movlb	0	; () banked
  2410  000614  2766               	addwf	??_testMemory& (0+255),f,b
  2411  000616  0E00               	movlw	0
  2412  000618  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  2413  00061A  0100               	movlb	0	; () banked
  2414  00061C  5160               	movf	?___wmul& (0+255),w,b
  2415  00061E  0100               	movlb	0	; () banked
  2416  000620  2766               	addwf	??_testMemory& (0+255),f,b
  2417  000622  0100               	movlb	0	; () banked
  2418  000624  5161               	movf	(?___wmul+1)& (0+255),w,b
  2419  000626  0100               	movlb	0	; () banked
  2420  000628  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  2421  00062A  0E02               	movlw	2
  2422  00062C  0100               	movlb	0	; () banked
  2423  00062E  2566               	addwf	??_testMemory& (0+255),w,b
  2424  000630  6ED9               	movwf	fsr2l,c
  2425  000632  0E00               	movlw	0
  2426  000634  0100               	movlb	0	; () banked
  2427  000636  2167               	addwfc	(??_testMemory+1)& (0+255),w,b
  2428  000638  6EDA               	movwf	fsr2h,c
  2429  00063A  0EEC               	movlw	236
  2430  00063C  6EDF               	movwf	indf2,c
  2431                           
  2432                           ;peripherals.c: 369: ABB_1.det_arrays.UIDs[i].UID[3] = 8 + i;
  2433  00063E  C070  F060         	movff	testMemory@i_1270,___wmul@multiplier
  2434  000642  C071  F061         	movff	testMemory@i_1270+1,___wmul@multiplier+1
  2435  000646  0E00               	movlw	0
  2436  000648  0100               	movlb	0	; () banked
  2437  00064A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2438  00064C  0E05               	movlw	5
  2439  00064E  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2440  000650  ECB3  F038         	call	___wmul	;wreg free
  2441  000654  0EC0               	movlw	low _ABB_1
  2442  000656  0100               	movlb	0	; () banked
  2443  000658  6F66               	movwf	??_testMemory& (0+255),b
  2444  00065A  0E03               	movlw	high _ABB_1
  2445  00065C  0100               	movlb	0	; () banked
  2446  00065E  6F67               	movwf	(??_testMemory+1)& (0+255),b
  2447  000660  0E04               	movlw	4
  2448  000662  0100               	movlb	0	; () banked
  2449  000664  2766               	addwf	??_testMemory& (0+255),f,b
  2450  000666  0E00               	movlw	0
  2451  000668  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  2452  00066A  0100               	movlb	0	; () banked
  2453  00066C  5160               	movf	?___wmul& (0+255),w,b
  2454  00066E  0100               	movlb	0	; () banked
  2455  000670  2766               	addwf	??_testMemory& (0+255),f,b
  2456  000672  0100               	movlb	0	; () banked
  2457  000674  5161               	movf	(?___wmul+1)& (0+255),w,b
  2458  000676  0100               	movlb	0	; () banked
  2459  000678  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  2460  00067A  0E03               	movlw	3
  2461  00067C  0100               	movlb	0	; () banked
  2462  00067E  2566               	addwf	??_testMemory& (0+255),w,b
  2463  000680  6ED9               	movwf	fsr2l,c
  2464  000682  0E00               	movlw	0
  2465  000684  0100               	movlb	0	; () banked
  2466  000686  2167               	addwfc	(??_testMemory+1)& (0+255),w,b
  2467  000688  6EDA               	movwf	fsr2h,c
  2468  00068A  0100               	movlb	0	; () banked
  2469  00068C  5170               	movf	testMemory@i_1270& (0+255),w,b
  2470  00068E  0F08               	addlw	8
  2471  000690  6EDF               	movwf	indf2,c
  2472                           
  2473                           ;peripherals.c: 370: ABB_1.det_arrays.info[i].delay = i*100;
  2474  000692  C070  F060         	movff	testMemory@i_1270,___wmul@multiplier
  2475  000696  C071  F061         	movff	testMemory@i_1270+1,___wmul@multiplier+1
  2476  00069A  0E00               	movlw	0
  2477  00069C  0100               	movlb	0	; () banked
  2478  00069E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2479  0006A0  0E64               	movlw	100
  2480  0006A2  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2481  0006A4  ECB3  F038         	call	___wmul	;wreg free
  2482  0006A8  0EF9               	movlw	249
  2483  0006AA  0100               	movlb	0	; () banked
  2484  0006AC  6F66               	movwf	??_testMemory& (0+255),b
  2485  0006AE  0E01               	movlw	1
  2486  0006B0  0100               	movlb	0	; () banked
  2487  0006B2  6F67               	movwf	(??_testMemory+1)& (0+255),b
  2488  0006B4  C070  F068         	movff	testMemory@i_1270,??_testMemory+2
  2489  0006B8  C071  F069         	movff	testMemory@i_1270+1,??_testMemory+3
  2490  0006BC  0100               	movlb	0	; () banked
  2491  0006BE  90D8               	bcf	status,0,c
  2492  0006C0  3768               	rlcf	(??_testMemory+2)& (0+255),f,b
  2493  0006C2  3769               	rlcf	(??_testMemory+3)& (0+255),f,b
  2494  0006C4  0100               	movlb	0	; () banked
  2495  0006C6  90D8               	bcf	status,0,c
  2496  0006C8  3768               	rlcf	(??_testMemory+2)& (0+255),f,b
  2497  0006CA  3769               	rlcf	(??_testMemory+3)& (0+255),f,b
  2498  0006CC  0100               	movlb	0	; () banked
  2499  0006CE  5166               	movf	??_testMemory& (0+255),w,b
  2500  0006D0  0100               	movlb	0	; () banked
  2501  0006D2  2768               	addwf	(??_testMemory+2)& (0+255),f,b
  2502  0006D4  0100               	movlb	0	; () banked
  2503  0006D6  5167               	movf	(??_testMemory+1)& (0+255),w,b
  2504  0006D8  0100               	movlb	0	; () banked
  2505  0006DA  2369               	addwfc	(??_testMemory+3)& (0+255),f,b
  2506  0006DC  0EC0               	movlw	low _ABB_1
  2507  0006DE  0100               	movlb	0	; () banked
  2508  0006E0  6F6A               	movwf	(??_testMemory+4)& (0+255),b
  2509  0006E2  0E03               	movlw	high _ABB_1
  2510  0006E4  0100               	movlb	0	; () banked
  2511  0006E6  6F6B               	movwf	(??_testMemory+5)& (0+255),b
  2512  0006E8  0E04               	movlw	4
  2513  0006EA  0100               	movlb	0	; () banked
  2514  0006EC  276A               	addwf	(??_testMemory+4)& (0+255),f,b
  2515  0006EE  0E00               	movlw	0
  2516  0006F0  236B               	addwfc	(??_testMemory+5)& (0+255),f,b
  2517  0006F2  0100               	movlb	0	; () banked
  2518  0006F4  5168               	movf	(??_testMemory+2)& (0+255),w,b
  2519  0006F6  0100               	movlb	0	; () banked
  2520  0006F8  276A               	addwf	(??_testMemory+4)& (0+255),f,b
  2521  0006FA  0100               	movlb	0	; () banked
  2522  0006FC  5169               	movf	(??_testMemory+3)& (0+255),w,b
  2523  0006FE  0100               	movlb	0	; () banked
  2524  000700  236B               	addwfc	(??_testMemory+5)& (0+255),f,b
  2525  000702  0E02               	movlw	2
  2526  000704  0100               	movlb	0	; () banked
  2527  000706  256A               	addwf	(??_testMemory+4)& (0+255),w,b
  2528  000708  6ED9               	movwf	fsr2l,c
  2529  00070A  0E00               	movlw	0
  2530  00070C  0100               	movlb	0	; () banked
  2531  00070E  216B               	addwfc	(??_testMemory+5)& (0+255),w,b
  2532  000710  6EDA               	movwf	fsr2h,c
  2533  000712  0100               	movlb	0	; () banked
  2534  000714  C060  FFDE         	movff	?___wmul,postinc2
  2535  000718  0100               	movlb	0	; () banked
  2536  00071A  C061  FFDD         	movff	?___wmul+1,postdec2
  2537                           
  2538                           ; BSR set to: 0
  2539  00071E  0100               	movlb	0	; () banked
  2540  000720  4B70               	infsnz	testMemory@i_1270& (0+255),f,b
  2541  000722  2B71               	incf	(testMemory@i_1270+1)& (0+255),f,b
  2542                           
  2543                           ; BSR set to: 0
  2544  000724  0100               	movlb	0	; () banked
  2545  000726  BF71               	btfsc	(testMemory@i_1270+1)& (0+255),7,b
  2546  000728  D725               	goto	l15718
  2547  00072A  0100               	movlb	0	; () banked
  2548  00072C  5171               	movf	(testMemory@i_1270+1)& (0+255),w,b
  2549  00072E  E101               	bnz	l15724
  2550  000730  D71A               	goto	L3
  2551  000732                     l15724:
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;peripherals.c: 371: }
  2555                           ;peripherals.c: 372: for (int i = 41; i <= 60; i++){
  2556  000732  0E00               	movlw	0
  2557  000734  0100               	movlb	0	; () banked
  2558  000736  6F73               	movwf	(testMemory@i_1271+1)& (0+255),b
  2559  000738  0E29               	movlw	41
  2560  00073A  6F72               	movwf	testMemory@i_1271& (0+255),b
  2561                           
  2562                           ; BSR set to: 0
  2563  00073C  0100               	movlb	0	; () banked
  2564  00073E  BF73               	btfsc	(testMemory@i_1271+1)& (0+255),7,b
  2565  000740  D00A               	goto	l15730
  2566  000742  0100               	movlb	0	; () banked
  2567  000744  5173               	movf	(testMemory@i_1271+1)& (0+255),w,b
  2568  000746  E106               	bnz	u11360
  2569  000748  0E3D               	movlw	61
  2570  00074A  0100               	movlb	0	; () banked
  2571  00074C  5D72               	subwf	testMemory@i_1271& (0+255),w,b
  2572  00074E  B0D8               	btfsc	status,0,c
  2573  000750  D0E1               	goto	l15736
  2574  000752  D001               	goto	l15730
  2575  000754                     u11360:
  2576                           
  2577                           ; BSR set to: 0
  2578  000754  D0DF               	goto	l15736
  2579  000756                     l15730:
  2580                           
  2581                           ; BSR set to: 0
  2582                           ;peripherals.c: 373: ABB_1.det_arrays.UIDs[i].UID[0] = 27;
  2583  000756  C072  F060         	movff	testMemory@i_1271,___wmul@multiplier
  2584  00075A  C073  F061         	movff	testMemory@i_1271+1,___wmul@multiplier+1
  2585  00075E  0E00               	movlw	0
  2586  000760  0100               	movlb	0	; () banked
  2587  000762  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2588  000764  0E05               	movlw	5
  2589  000766  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2590  000768  ECB3  F038         	call	___wmul	;wreg free
  2591  00076C  0EC4               	movlw	low (_ABB_1+4)
  2592  00076E  0100               	movlb	0	; () banked
  2593  000770  2560               	addwf	?___wmul& (0+255),w,b
  2594  000772  6ED9               	movwf	fsr2l,c
  2595  000774  0E03               	movlw	high (_ABB_1+4)
  2596  000776  0100               	movlb	0	; () banked
  2597  000778  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2598  00077A  6EDA               	movwf	fsr2h,c
  2599  00077C  0E1B               	movlw	27
  2600  00077E  6EDF               	movwf	indf2,c
  2601                           
  2602                           ;peripherals.c: 374: ABB_1.det_arrays.UIDs[i].UID[1] = 16;
  2603  000780  C072  F060         	movff	testMemory@i_1271,___wmul@multiplier
  2604  000784  C073  F061         	movff	testMemory@i_1271+1,___wmul@multiplier+1
  2605  000788  0E00               	movlw	0
  2606  00078A  0100               	movlb	0	; () banked
  2607  00078C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2608  00078E  0E05               	movlw	5
  2609  000790  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2610  000792  ECB3  F038         	call	___wmul	;wreg free
  2611  000796  0EC0               	movlw	low _ABB_1
  2612  000798  0100               	movlb	0	; () banked
  2613  00079A  6F66               	movwf	??_testMemory& (0+255),b
  2614  00079C  0E03               	movlw	high _ABB_1
  2615  00079E  0100               	movlb	0	; () banked
  2616  0007A0  6F67               	movwf	(??_testMemory+1)& (0+255),b
  2617  0007A2  0E04               	movlw	4
  2618  0007A4  0100               	movlb	0	; () banked
  2619  0007A6  2766               	addwf	??_testMemory& (0+255),f,b
  2620  0007A8  0E00               	movlw	0
  2621  0007AA  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  2622  0007AC  0100               	movlb	0	; () banked
  2623  0007AE  5160               	movf	?___wmul& (0+255),w,b
  2624  0007B0  0100               	movlb	0	; () banked
  2625  0007B2  2766               	addwf	??_testMemory& (0+255),f,b
  2626  0007B4  0100               	movlb	0	; () banked
  2627  0007B6  5161               	movf	(?___wmul+1)& (0+255),w,b
  2628  0007B8  0100               	movlb	0	; () banked
  2629  0007BA  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  2630  0007BC  0E01               	movlw	1
  2631  0007BE  0100               	movlb	0	; () banked
  2632  0007C0  2566               	addwf	??_testMemory& (0+255),w,b
  2633  0007C2  6ED9               	movwf	fsr2l,c
  2634  0007C4  0E00               	movlw	0
  2635  0007C6  0100               	movlb	0	; () banked
  2636  0007C8  2167               	addwfc	(??_testMemory+1)& (0+255),w,b
  2637  0007CA  6EDA               	movwf	fsr2h,c
  2638  0007CC  0E10               	movlw	16
  2639  0007CE  6EDF               	movwf	indf2,c
  2640                           
  2641                           ;peripherals.c: 375: ABB_1.det_arrays.UIDs[i].UID[2] = 235;
  2642  0007D0  C072  F060         	movff	testMemory@i_1271,___wmul@multiplier
  2643  0007D4  C073  F061         	movff	testMemory@i_1271+1,___wmul@multiplier+1
  2644  0007D8  0E00               	movlw	0
  2645  0007DA  0100               	movlb	0	; () banked
  2646  0007DC  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2647  0007DE  0E05               	movlw	5
  2648  0007E0  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2649  0007E2  ECB3  F038         	call	___wmul	;wreg free
  2650  0007E6  0EC0               	movlw	low _ABB_1
  2651  0007E8  0100               	movlb	0	; () banked
  2652  0007EA  6F66               	movwf	??_testMemory& (0+255),b
  2653  0007EC  0E03               	movlw	high _ABB_1
  2654  0007EE  0100               	movlb	0	; () banked
  2655  0007F0  6F67               	movwf	(??_testMemory+1)& (0+255),b
  2656  0007F2  0E04               	movlw	4
  2657  0007F4  0100               	movlb	0	; () banked
  2658  0007F6  2766               	addwf	??_testMemory& (0+255),f,b
  2659  0007F8  0E00               	movlw	0
  2660  0007FA  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  2661  0007FC  0100               	movlb	0	; () banked
  2662  0007FE  5160               	movf	?___wmul& (0+255),w,b
  2663  000800  0100               	movlb	0	; () banked
  2664  000802  2766               	addwf	??_testMemory& (0+255),f,b
  2665  000804  0100               	movlb	0	; () banked
  2666  000806  5161               	movf	(?___wmul+1)& (0+255),w,b
  2667  000808  0100               	movlb	0	; () banked
  2668  00080A  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  2669  00080C  0E02               	movlw	2
  2670  00080E  0100               	movlb	0	; () banked
  2671  000810  2566               	addwf	??_testMemory& (0+255),w,b
  2672  000812  6ED9               	movwf	fsr2l,c
  2673  000814  0E00               	movlw	0
  2674  000816  0100               	movlb	0	; () banked
  2675  000818  2167               	addwfc	(??_testMemory+1)& (0+255),w,b
  2676  00081A  6EDA               	movwf	fsr2h,c
  2677  00081C  0EEB               	movlw	235
  2678  00081E  6EDF               	movwf	indf2,c
  2679                           
  2680                           ;peripherals.c: 376: ABB_1.det_arrays.UIDs[i].UID[3] = 74 + i;
  2681  000820  C072  F060         	movff	testMemory@i_1271,___wmul@multiplier
  2682  000824  C073  F061         	movff	testMemory@i_1271+1,___wmul@multiplier+1
  2683  000828  0E00               	movlw	0
  2684  00082A  0100               	movlb	0	; () banked
  2685  00082C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2686  00082E  0E05               	movlw	5
  2687  000830  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2688  000832  ECB3  F038         	call	___wmul	;wreg free
  2689  000836  0EC0               	movlw	low _ABB_1
  2690  000838  0100               	movlb	0	; () banked
  2691  00083A  6F66               	movwf	??_testMemory& (0+255),b
  2692  00083C  0E03               	movlw	high _ABB_1
  2693  00083E  0100               	movlb	0	; () banked
  2694  000840  6F67               	movwf	(??_testMemory+1)& (0+255),b
  2695  000842  0E04               	movlw	4
  2696  000844  0100               	movlb	0	; () banked
  2697  000846  2766               	addwf	??_testMemory& (0+255),f,b
  2698  000848  0E00               	movlw	0
  2699  00084A  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  2700  00084C  0100               	movlb	0	; () banked
  2701  00084E  5160               	movf	?___wmul& (0+255),w,b
  2702  000850  0100               	movlb	0	; () banked
  2703  000852  2766               	addwf	??_testMemory& (0+255),f,b
  2704  000854  0100               	movlb	0	; () banked
  2705  000856  5161               	movf	(?___wmul+1)& (0+255),w,b
  2706  000858  0100               	movlb	0	; () banked
  2707  00085A  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  2708  00085C  0E03               	movlw	3
  2709  00085E  0100               	movlb	0	; () banked
  2710  000860  2566               	addwf	??_testMemory& (0+255),w,b
  2711  000862  6ED9               	movwf	fsr2l,c
  2712  000864  0E00               	movlw	0
  2713  000866  0100               	movlb	0	; () banked
  2714  000868  2167               	addwfc	(??_testMemory+1)& (0+255),w,b
  2715  00086A  6EDA               	movwf	fsr2h,c
  2716  00086C  0100               	movlb	0	; () banked
  2717  00086E  5172               	movf	testMemory@i_1271& (0+255),w,b
  2718  000870  0F4A               	addlw	74
  2719  000872  6EDF               	movwf	indf2,c
  2720                           
  2721                           ;peripherals.c: 377: ABB_1.det_arrays.info[i].delay = i*100;
  2722  000874  C072  F060         	movff	testMemory@i_1271,___wmul@multiplier
  2723  000878  C073  F061         	movff	testMemory@i_1271+1,___wmul@multiplier+1
  2724  00087C  0E00               	movlw	0
  2725  00087E  0100               	movlb	0	; () banked
  2726  000880  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2727  000882  0E64               	movlw	100
  2728  000884  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2729  000886  ECB3  F038         	call	___wmul	;wreg free
  2730  00088A  0EF9               	movlw	249
  2731  00088C  0100               	movlb	0	; () banked
  2732  00088E  6F66               	movwf	??_testMemory& (0+255),b
  2733  000890  0E01               	movlw	1
  2734  000892  0100               	movlb	0	; () banked
  2735  000894  6F67               	movwf	(??_testMemory+1)& (0+255),b
  2736  000896  C072  F068         	movff	testMemory@i_1271,??_testMemory+2
  2737  00089A  C073  F069         	movff	testMemory@i_1271+1,??_testMemory+3
  2738  00089E  0100               	movlb	0	; () banked
  2739  0008A0  90D8               	bcf	status,0,c
  2740  0008A2  3768               	rlcf	(??_testMemory+2)& (0+255),f,b
  2741  0008A4  3769               	rlcf	(??_testMemory+3)& (0+255),f,b
  2742  0008A6  0100               	movlb	0	; () banked
  2743  0008A8  90D8               	bcf	status,0,c
  2744  0008AA  3768               	rlcf	(??_testMemory+2)& (0+255),f,b
  2745  0008AC  3769               	rlcf	(??_testMemory+3)& (0+255),f,b
  2746  0008AE  0100               	movlb	0	; () banked
  2747  0008B0  5166               	movf	??_testMemory& (0+255),w,b
  2748  0008B2  0100               	movlb	0	; () banked
  2749  0008B4  2768               	addwf	(??_testMemory+2)& (0+255),f,b
  2750  0008B6  0100               	movlb	0	; () banked
  2751  0008B8  5167               	movf	(??_testMemory+1)& (0+255),w,b
  2752  0008BA  0100               	movlb	0	; () banked
  2753  0008BC  2369               	addwfc	(??_testMemory+3)& (0+255),f,b
  2754  0008BE  0EC0               	movlw	low _ABB_1
  2755  0008C0  0100               	movlb	0	; () banked
  2756  0008C2  6F6A               	movwf	(??_testMemory+4)& (0+255),b
  2757  0008C4  0E03               	movlw	high _ABB_1
  2758  0008C6  0100               	movlb	0	; () banked
  2759  0008C8  6F6B               	movwf	(??_testMemory+5)& (0+255),b
  2760  0008CA  0E04               	movlw	4
  2761  0008CC  0100               	movlb	0	; () banked
  2762  0008CE  276A               	addwf	(??_testMemory+4)& (0+255),f,b
  2763  0008D0  0E00               	movlw	0
  2764  0008D2  236B               	addwfc	(??_testMemory+5)& (0+255),f,b
  2765  0008D4  0100               	movlb	0	; () banked
  2766  0008D6  5168               	movf	(??_testMemory+2)& (0+255),w,b
  2767  0008D8  0100               	movlb	0	; () banked
  2768  0008DA  276A               	addwf	(??_testMemory+4)& (0+255),f,b
  2769  0008DC  0100               	movlb	0	; () banked
  2770  0008DE  5169               	movf	(??_testMemory+3)& (0+255),w,b
  2771  0008E0  0100               	movlb	0	; () banked
  2772  0008E2  236B               	addwfc	(??_testMemory+5)& (0+255),f,b
  2773  0008E4  0E02               	movlw	2
  2774  0008E6  0100               	movlb	0	; () banked
  2775  0008E8  256A               	addwf	(??_testMemory+4)& (0+255),w,b
  2776  0008EA  6ED9               	movwf	fsr2l,c
  2777  0008EC  0E00               	movlw	0
  2778  0008EE  0100               	movlb	0	; () banked
  2779  0008F0  216B               	addwfc	(??_testMemory+5)& (0+255),w,b
  2780  0008F2  6EDA               	movwf	fsr2h,c
  2781  0008F4  0100               	movlb	0	; () banked
  2782  0008F6  C060  FFDE         	movff	?___wmul,postinc2
  2783  0008FA  0100               	movlb	0	; () banked
  2784  0008FC  C061  FFDD         	movff	?___wmul+1,postdec2
  2785                           
  2786                           ; BSR set to: 0
  2787  000900  0100               	movlb	0	; () banked
  2788  000902  4B72               	infsnz	testMemory@i_1271& (0+255),f,b
  2789  000904  2B73               	incf	(testMemory@i_1271+1)& (0+255),f,b
  2790                           
  2791                           ; BSR set to: 0
  2792  000906  0100               	movlb	0	; () banked
  2793  000908  BF73               	btfsc	(testMemory@i_1271+1)& (0+255),7,b
  2794  00090A  D725               	goto	l15730
  2795  00090C  0100               	movlb	0	; () banked
  2796  00090E  5173               	movf	(testMemory@i_1271+1)& (0+255),w,b
  2797  000910  E101               	bnz	l15736
  2798  000912  D71A               	goto	L4
  2799  000914                     l15736:
  2800                           
  2801                           ; BSR set to: 0
  2802                           ;peripherals.c: 378: }
  2803                           ;peripherals.c: 379: for (int i = 61; i <= 80; i++){
  2804  000914  0E00               	movlw	0
  2805  000916  0100               	movlb	0	; () banked
  2806  000918  6F75               	movwf	(testMemory@i_1272+1)& (0+255),b
  2807  00091A  0E3D               	movlw	61
  2808  00091C  6F74               	movwf	testMemory@i_1272& (0+255),b
  2809                           
  2810                           ; BSR set to: 0
  2811  00091E  0100               	movlb	0	; () banked
  2812  000920  BF75               	btfsc	(testMemory@i_1272+1)& (0+255),7,b
  2813  000922  D00A               	goto	l15742
  2814  000924  0100               	movlb	0	; () banked
  2815  000926  5175               	movf	(testMemory@i_1272+1)& (0+255),w,b
  2816  000928  E106               	bnz	u11380
  2817  00092A  0E51               	movlw	81
  2818  00092C  0100               	movlb	0	; () banked
  2819  00092E  5D74               	subwf	testMemory@i_1272& (0+255),w,b
  2820  000930  B0D8               	btfsc	status,0,c
  2821  000932  D0E1               	goto	l15748
  2822  000934  D001               	goto	l15742
  2823  000936                     u11380:
  2824                           
  2825                           ; BSR set to: 0
  2826  000936  D0DF               	goto	l15748
  2827  000938                     l15742:
  2828                           
  2829                           ; BSR set to: 0
  2830                           ;peripherals.c: 380: ABB_1.det_arrays.UIDs[i].UID[0] = 28;
  2831  000938  C074  F060         	movff	testMemory@i_1272,___wmul@multiplier
  2832  00093C  C075  F061         	movff	testMemory@i_1272+1,___wmul@multiplier+1
  2833  000940  0E00               	movlw	0
  2834  000942  0100               	movlb	0	; () banked
  2835  000944  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2836  000946  0E05               	movlw	5
  2837  000948  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2838  00094A  ECB3  F038         	call	___wmul	;wreg free
  2839  00094E  0EC4               	movlw	low (_ABB_1+4)
  2840  000950  0100               	movlb	0	; () banked
  2841  000952  2560               	addwf	?___wmul& (0+255),w,b
  2842  000954  6ED9               	movwf	fsr2l,c
  2843  000956  0E03               	movlw	high (_ABB_1+4)
  2844  000958  0100               	movlb	0	; () banked
  2845  00095A  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2846  00095C  6EDA               	movwf	fsr2h,c
  2847  00095E  0E1C               	movlw	28
  2848  000960  6EDF               	movwf	indf2,c
  2849                           
  2850                           ;peripherals.c: 381: ABB_1.det_arrays.UIDs[i].UID[1] = 17;
  2851  000962  C074  F060         	movff	testMemory@i_1272,___wmul@multiplier
  2852  000966  C075  F061         	movff	testMemory@i_1272+1,___wmul@multiplier+1
  2853  00096A  0E00               	movlw	0
  2854  00096C  0100               	movlb	0	; () banked
  2855  00096E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2856  000970  0E05               	movlw	5
  2857  000972  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2858  000974  ECB3  F038         	call	___wmul	;wreg free
  2859  000978  0EC0               	movlw	low _ABB_1
  2860  00097A  0100               	movlb	0	; () banked
  2861  00097C  6F66               	movwf	??_testMemory& (0+255),b
  2862  00097E  0E03               	movlw	high _ABB_1
  2863  000980  0100               	movlb	0	; () banked
  2864  000982  6F67               	movwf	(??_testMemory+1)& (0+255),b
  2865  000984  0E04               	movlw	4
  2866  000986  0100               	movlb	0	; () banked
  2867  000988  2766               	addwf	??_testMemory& (0+255),f,b
  2868  00098A  0E00               	movlw	0
  2869  00098C  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  2870  00098E  0100               	movlb	0	; () banked
  2871  000990  5160               	movf	?___wmul& (0+255),w,b
  2872  000992  0100               	movlb	0	; () banked
  2873  000994  2766               	addwf	??_testMemory& (0+255),f,b
  2874  000996  0100               	movlb	0	; () banked
  2875  000998  5161               	movf	(?___wmul+1)& (0+255),w,b
  2876  00099A  0100               	movlb	0	; () banked
  2877  00099C  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  2878  00099E  0E01               	movlw	1
  2879  0009A0  0100               	movlb	0	; () banked
  2880  0009A2  2566               	addwf	??_testMemory& (0+255),w,b
  2881  0009A4  6ED9               	movwf	fsr2l,c
  2882  0009A6  0E00               	movlw	0
  2883  0009A8  0100               	movlb	0	; () banked
  2884  0009AA  2167               	addwfc	(??_testMemory+1)& (0+255),w,b
  2885  0009AC  6EDA               	movwf	fsr2h,c
  2886  0009AE  0E11               	movlw	17
  2887  0009B0  6EDF               	movwf	indf2,c
  2888                           
  2889                           ;peripherals.c: 382: ABB_1.det_arrays.UIDs[i].UID[2] = 95;
  2890  0009B2  C074  F060         	movff	testMemory@i_1272,___wmul@multiplier
  2891  0009B6  C075  F061         	movff	testMemory@i_1272+1,___wmul@multiplier+1
  2892  0009BA  0E00               	movlw	0
  2893  0009BC  0100               	movlb	0	; () banked
  2894  0009BE  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2895  0009C0  0E05               	movlw	5
  2896  0009C2  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2897  0009C4  ECB3  F038         	call	___wmul	;wreg free
  2898  0009C8  0EC0               	movlw	low _ABB_1
  2899  0009CA  0100               	movlb	0	; () banked
  2900  0009CC  6F66               	movwf	??_testMemory& (0+255),b
  2901  0009CE  0E03               	movlw	high _ABB_1
  2902  0009D0  0100               	movlb	0	; () banked
  2903  0009D2  6F67               	movwf	(??_testMemory+1)& (0+255),b
  2904  0009D4  0E04               	movlw	4
  2905  0009D6  0100               	movlb	0	; () banked
  2906  0009D8  2766               	addwf	??_testMemory& (0+255),f,b
  2907  0009DA  0E00               	movlw	0
  2908  0009DC  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  2909  0009DE  0100               	movlb	0	; () banked
  2910  0009E0  5160               	movf	?___wmul& (0+255),w,b
  2911  0009E2  0100               	movlb	0	; () banked
  2912  0009E4  2766               	addwf	??_testMemory& (0+255),f,b
  2913  0009E6  0100               	movlb	0	; () banked
  2914  0009E8  5161               	movf	(?___wmul+1)& (0+255),w,b
  2915  0009EA  0100               	movlb	0	; () banked
  2916  0009EC  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  2917  0009EE  0E02               	movlw	2
  2918  0009F0  0100               	movlb	0	; () banked
  2919  0009F2  2566               	addwf	??_testMemory& (0+255),w,b
  2920  0009F4  6ED9               	movwf	fsr2l,c
  2921  0009F6  0E00               	movlw	0
  2922  0009F8  0100               	movlb	0	; () banked
  2923  0009FA  2167               	addwfc	(??_testMemory+1)& (0+255),w,b
  2924  0009FC  6EDA               	movwf	fsr2h,c
  2925  0009FE  0E5F               	movlw	95
  2926  000A00  6EDF               	movwf	indf2,c
  2927                           
  2928                           ;peripherals.c: 383: ABB_1.det_arrays.UIDs[i].UID[3] = 175 + i;
  2929  000A02  C074  F060         	movff	testMemory@i_1272,___wmul@multiplier
  2930  000A06  C075  F061         	movff	testMemory@i_1272+1,___wmul@multiplier+1
  2931  000A0A  0E00               	movlw	0
  2932  000A0C  0100               	movlb	0	; () banked
  2933  000A0E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2934  000A10  0E05               	movlw	5
  2935  000A12  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2936  000A14  ECB3  F038         	call	___wmul	;wreg free
  2937  000A18  0EC0               	movlw	low _ABB_1
  2938  000A1A  0100               	movlb	0	; () banked
  2939  000A1C  6F66               	movwf	??_testMemory& (0+255),b
  2940  000A1E  0E03               	movlw	high _ABB_1
  2941  000A20  0100               	movlb	0	; () banked
  2942  000A22  6F67               	movwf	(??_testMemory+1)& (0+255),b
  2943  000A24  0E04               	movlw	4
  2944  000A26  0100               	movlb	0	; () banked
  2945  000A28  2766               	addwf	??_testMemory& (0+255),f,b
  2946  000A2A  0E00               	movlw	0
  2947  000A2C  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  2948  000A2E  0100               	movlb	0	; () banked
  2949  000A30  5160               	movf	?___wmul& (0+255),w,b
  2950  000A32  0100               	movlb	0	; () banked
  2951  000A34  2766               	addwf	??_testMemory& (0+255),f,b
  2952  000A36  0100               	movlb	0	; () banked
  2953  000A38  5161               	movf	(?___wmul+1)& (0+255),w,b
  2954  000A3A  0100               	movlb	0	; () banked
  2955  000A3C  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  2956  000A3E  0E03               	movlw	3
  2957  000A40  0100               	movlb	0	; () banked
  2958  000A42  2566               	addwf	??_testMemory& (0+255),w,b
  2959  000A44  6ED9               	movwf	fsr2l,c
  2960  000A46  0E00               	movlw	0
  2961  000A48  0100               	movlb	0	; () banked
  2962  000A4A  2167               	addwfc	(??_testMemory+1)& (0+255),w,b
  2963  000A4C  6EDA               	movwf	fsr2h,c
  2964  000A4E  0100               	movlb	0	; () banked
  2965  000A50  5174               	movf	testMemory@i_1272& (0+255),w,b
  2966  000A52  0FAF               	addlw	175
  2967  000A54  6EDF               	movwf	indf2,c
  2968                           
  2969                           ;peripherals.c: 384: ABB_1.det_arrays.info[i].delay = i*100;
  2970  000A56  C074  F060         	movff	testMemory@i_1272,___wmul@multiplier
  2971  000A5A  C075  F061         	movff	testMemory@i_1272+1,___wmul@multiplier+1
  2972  000A5E  0E00               	movlw	0
  2973  000A60  0100               	movlb	0	; () banked
  2974  000A62  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2975  000A64  0E64               	movlw	100
  2976  000A66  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2977  000A68  ECB3  F038         	call	___wmul	;wreg free
  2978  000A6C  0EF9               	movlw	249
  2979  000A6E  0100               	movlb	0	; () banked
  2980  000A70  6F66               	movwf	??_testMemory& (0+255),b
  2981  000A72  0E01               	movlw	1
  2982  000A74  0100               	movlb	0	; () banked
  2983  000A76  6F67               	movwf	(??_testMemory+1)& (0+255),b
  2984  000A78  C074  F068         	movff	testMemory@i_1272,??_testMemory+2
  2985  000A7C  C075  F069         	movff	testMemory@i_1272+1,??_testMemory+3
  2986  000A80  0100               	movlb	0	; () banked
  2987  000A82  90D8               	bcf	status,0,c
  2988  000A84  3768               	rlcf	(??_testMemory+2)& (0+255),f,b
  2989  000A86  3769               	rlcf	(??_testMemory+3)& (0+255),f,b
  2990  000A88  0100               	movlb	0	; () banked
  2991  000A8A  90D8               	bcf	status,0,c
  2992  000A8C  3768               	rlcf	(??_testMemory+2)& (0+255),f,b
  2993  000A8E  3769               	rlcf	(??_testMemory+3)& (0+255),f,b
  2994  000A90  0100               	movlb	0	; () banked
  2995  000A92  5166               	movf	??_testMemory& (0+255),w,b
  2996  000A94  0100               	movlb	0	; () banked
  2997  000A96  2768               	addwf	(??_testMemory+2)& (0+255),f,b
  2998  000A98  0100               	movlb	0	; () banked
  2999  000A9A  5167               	movf	(??_testMemory+1)& (0+255),w,b
  3000  000A9C  0100               	movlb	0	; () banked
  3001  000A9E  2369               	addwfc	(??_testMemory+3)& (0+255),f,b
  3002  000AA0  0EC0               	movlw	low _ABB_1
  3003  000AA2  0100               	movlb	0	; () banked
  3004  000AA4  6F6A               	movwf	(??_testMemory+4)& (0+255),b
  3005  000AA6  0E03               	movlw	high _ABB_1
  3006  000AA8  0100               	movlb	0	; () banked
  3007  000AAA  6F6B               	movwf	(??_testMemory+5)& (0+255),b
  3008  000AAC  0E04               	movlw	4
  3009  000AAE  0100               	movlb	0	; () banked
  3010  000AB0  276A               	addwf	(??_testMemory+4)& (0+255),f,b
  3011  000AB2  0E00               	movlw	0
  3012  000AB4  236B               	addwfc	(??_testMemory+5)& (0+255),f,b
  3013  000AB6  0100               	movlb	0	; () banked
  3014  000AB8  5168               	movf	(??_testMemory+2)& (0+255),w,b
  3015  000ABA  0100               	movlb	0	; () banked
  3016  000ABC  276A               	addwf	(??_testMemory+4)& (0+255),f,b
  3017  000ABE  0100               	movlb	0	; () banked
  3018  000AC0  5169               	movf	(??_testMemory+3)& (0+255),w,b
  3019  000AC2  0100               	movlb	0	; () banked
  3020  000AC4  236B               	addwfc	(??_testMemory+5)& (0+255),f,b
  3021  000AC6  0E02               	movlw	2
  3022  000AC8  0100               	movlb	0	; () banked
  3023  000ACA  256A               	addwf	(??_testMemory+4)& (0+255),w,b
  3024  000ACC  6ED9               	movwf	fsr2l,c
  3025  000ACE  0E00               	movlw	0
  3026  000AD0  0100               	movlb	0	; () banked
  3027  000AD2  216B               	addwfc	(??_testMemory+5)& (0+255),w,b
  3028  000AD4  6EDA               	movwf	fsr2h,c
  3029  000AD6  0100               	movlb	0	; () banked
  3030  000AD8  C060  FFDE         	movff	?___wmul,postinc2
  3031  000ADC  0100               	movlb	0	; () banked
  3032  000ADE  C061  FFDD         	movff	?___wmul+1,postdec2
  3033                           
  3034                           ; BSR set to: 0
  3035  000AE2  0100               	movlb	0	; () banked
  3036  000AE4  4B74               	infsnz	testMemory@i_1272& (0+255),f,b
  3037  000AE6  2B75               	incf	(testMemory@i_1272+1)& (0+255),f,b
  3038                           
  3039                           ; BSR set to: 0
  3040  000AE8  0100               	movlb	0	; () banked
  3041  000AEA  BF75               	btfsc	(testMemory@i_1272+1)& (0+255),7,b
  3042  000AEC  D725               	goto	l15742
  3043  000AEE  0100               	movlb	0	; () banked
  3044  000AF0  5175               	movf	(testMemory@i_1272+1)& (0+255),w,b
  3045  000AF2  E101               	bnz	l15748
  3046  000AF4  D71A               	goto	L5
  3047  000AF6                     l15748:
  3048                           
  3049                           ; BSR set to: 0
  3050                           ;peripherals.c: 385: }
  3051                           ;peripherals.c: 386: for (int i = 81; i <= 100; i++){
  3052  000AF6  0E00               	movlw	0
  3053  000AF8  0100               	movlb	0	; () banked
  3054  000AFA  6F77               	movwf	(testMemory@i_1273+1)& (0+255),b
  3055  000AFC  0E51               	movlw	81
  3056  000AFE  6F76               	movwf	testMemory@i_1273& (0+255),b
  3057                           
  3058                           ; BSR set to: 0
  3059  000B00  0100               	movlb	0	; () banked
  3060  000B02  BF77               	btfsc	(testMemory@i_1273+1)& (0+255),7,b
  3061  000B04  D00A               	goto	l15754
  3062  000B06  0100               	movlb	0	; () banked
  3063  000B08  5177               	movf	(testMemory@i_1273+1)& (0+255),w,b
  3064  000B0A  E106               	bnz	u11400
  3065  000B0C  0E65               	movlw	101
  3066  000B0E  0100               	movlb	0	; () banked
  3067  000B10  5D76               	subwf	testMemory@i_1273& (0+255),w,b
  3068  000B12  B0D8               	btfsc	status,0,c
  3069  000B14  0012               	return	
  3070  000B16  D001               	goto	l15754
  3071  000B18                     u11400:
  3072                           
  3073                           ; BSR set to: 0
  3074  000B18  0012               	return	
  3075  000B1A                     l15754:
  3076                           
  3077                           ; BSR set to: 0
  3078                           ;peripherals.c: 387: ABB_1.det_arrays.UIDs[i].UID[0] = 27;
  3079  000B1A  C076  F060         	movff	testMemory@i_1273,___wmul@multiplier
  3080  000B1E  C077  F061         	movff	testMemory@i_1273+1,___wmul@multiplier+1
  3081  000B22  0E00               	movlw	0
  3082  000B24  0100               	movlb	0	; () banked
  3083  000B26  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3084  000B28  0E05               	movlw	5
  3085  000B2A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3086  000B2C  ECB3  F038         	call	___wmul	;wreg free
  3087  000B30  0EC4               	movlw	low (_ABB_1+4)
  3088  000B32  0100               	movlb	0	; () banked
  3089  000B34  2560               	addwf	?___wmul& (0+255),w,b
  3090  000B36  6ED9               	movwf	fsr2l,c
  3091  000B38  0E03               	movlw	high (_ABB_1+4)
  3092  000B3A  0100               	movlb	0	; () banked
  3093  000B3C  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  3094  000B3E  6EDA               	movwf	fsr2h,c
  3095  000B40  0E1B               	movlw	27
  3096  000B42  6EDF               	movwf	indf2,c
  3097                           
  3098                           ;peripherals.c: 388: ABB_1.det_arrays.UIDs[i].UID[1] = 17;
  3099  000B44  C076  F060         	movff	testMemory@i_1273,___wmul@multiplier
  3100  000B48  C077  F061         	movff	testMemory@i_1273+1,___wmul@multiplier+1
  3101  000B4C  0E00               	movlw	0
  3102  000B4E  0100               	movlb	0	; () banked
  3103  000B50  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3104  000B52  0E05               	movlw	5
  3105  000B54  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3106  000B56  ECB3  F038         	call	___wmul	;wreg free
  3107  000B5A  0EC0               	movlw	low _ABB_1
  3108  000B5C  0100               	movlb	0	; () banked
  3109  000B5E  6F66               	movwf	??_testMemory& (0+255),b
  3110  000B60  0E03               	movlw	high _ABB_1
  3111  000B62  0100               	movlb	0	; () banked
  3112  000B64  6F67               	movwf	(??_testMemory+1)& (0+255),b
  3113  000B66  0E04               	movlw	4
  3114  000B68  0100               	movlb	0	; () banked
  3115  000B6A  2766               	addwf	??_testMemory& (0+255),f,b
  3116  000B6C  0E00               	movlw	0
  3117  000B6E  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  3118  000B70  0100               	movlb	0	; () banked
  3119  000B72  5160               	movf	?___wmul& (0+255),w,b
  3120  000B74  0100               	movlb	0	; () banked
  3121  000B76  2766               	addwf	??_testMemory& (0+255),f,b
  3122  000B78  0100               	movlb	0	; () banked
  3123  000B7A  5161               	movf	(?___wmul+1)& (0+255),w,b
  3124  000B7C  0100               	movlb	0	; () banked
  3125  000B7E  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  3126  000B80  0E01               	movlw	1
  3127  000B82  0100               	movlb	0	; () banked
  3128  000B84  2566               	addwf	??_testMemory& (0+255),w,b
  3129  000B86  6ED9               	movwf	fsr2l,c
  3130  000B88  0E00               	movlw	0
  3131  000B8A  0100               	movlb	0	; () banked
  3132  000B8C  2167               	addwfc	(??_testMemory+1)& (0+255),w,b
  3133  000B8E  6EDA               	movwf	fsr2h,c
  3134  000B90  0E11               	movlw	17
  3135  000B92  6EDF               	movwf	indf2,c
  3136                           
  3137                           ;peripherals.c: 389: ABB_1.det_arrays.UIDs[i].UID[2] = 8;
  3138  000B94  C076  F060         	movff	testMemory@i_1273,___wmul@multiplier
  3139  000B98  C077  F061         	movff	testMemory@i_1273+1,___wmul@multiplier+1
  3140  000B9C  0E00               	movlw	0
  3141  000B9E  0100               	movlb	0	; () banked
  3142  000BA0  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3143  000BA2  0E05               	movlw	5
  3144  000BA4  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3145  000BA6  ECB3  F038         	call	___wmul	;wreg free
  3146  000BAA  0EC0               	movlw	low _ABB_1
  3147  000BAC  0100               	movlb	0	; () banked
  3148  000BAE  6F66               	movwf	??_testMemory& (0+255),b
  3149  000BB0  0E03               	movlw	high _ABB_1
  3150  000BB2  0100               	movlb	0	; () banked
  3151  000BB4  6F67               	movwf	(??_testMemory+1)& (0+255),b
  3152  000BB6  0E04               	movlw	4
  3153  000BB8  0100               	movlb	0	; () banked
  3154  000BBA  2766               	addwf	??_testMemory& (0+255),f,b
  3155  000BBC  0E00               	movlw	0
  3156  000BBE  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  3157  000BC0  0100               	movlb	0	; () banked
  3158  000BC2  5160               	movf	?___wmul& (0+255),w,b
  3159  000BC4  0100               	movlb	0	; () banked
  3160  000BC6  2766               	addwf	??_testMemory& (0+255),f,b
  3161  000BC8  0100               	movlb	0	; () banked
  3162  000BCA  5161               	movf	(?___wmul+1)& (0+255),w,b
  3163  000BCC  0100               	movlb	0	; () banked
  3164  000BCE  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  3165  000BD0  0E02               	movlw	2
  3166  000BD2  0100               	movlb	0	; () banked
  3167  000BD4  2566               	addwf	??_testMemory& (0+255),w,b
  3168  000BD6  6ED9               	movwf	fsr2l,c
  3169  000BD8  0E00               	movlw	0
  3170  000BDA  0100               	movlb	0	; () banked
  3171  000BDC  2167               	addwfc	(??_testMemory+1)& (0+255),w,b
  3172  000BDE  6EDA               	movwf	fsr2h,c
  3173  000BE0  0E08               	movlw	8
  3174  000BE2  6EDF               	movwf	indf2,c
  3175                           
  3176                           ;peripherals.c: 390: ABB_1.det_arrays.UIDs[i].UID[3] = 71 + i;
  3177  000BE4  C076  F060         	movff	testMemory@i_1273,___wmul@multiplier
  3178  000BE8  C077  F061         	movff	testMemory@i_1273+1,___wmul@multiplier+1
  3179  000BEC  0E00               	movlw	0
  3180  000BEE  0100               	movlb	0	; () banked
  3181  000BF0  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3182  000BF2  0E05               	movlw	5
  3183  000BF4  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3184  000BF6  ECB3  F038         	call	___wmul	;wreg free
  3185  000BFA  0EC0               	movlw	low _ABB_1
  3186  000BFC  0100               	movlb	0	; () banked
  3187  000BFE  6F66               	movwf	??_testMemory& (0+255),b
  3188  000C00  0E03               	movlw	high _ABB_1
  3189  000C02  0100               	movlb	0	; () banked
  3190  000C04  6F67               	movwf	(??_testMemory+1)& (0+255),b
  3191  000C06  0E04               	movlw	4
  3192  000C08  0100               	movlb	0	; () banked
  3193  000C0A  2766               	addwf	??_testMemory& (0+255),f,b
  3194  000C0C  0E00               	movlw	0
  3195  000C0E  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  3196  000C10  0100               	movlb	0	; () banked
  3197  000C12  5160               	movf	?___wmul& (0+255),w,b
  3198  000C14  0100               	movlb	0	; () banked
  3199  000C16  2766               	addwf	??_testMemory& (0+255),f,b
  3200  000C18  0100               	movlb	0	; () banked
  3201  000C1A  5161               	movf	(?___wmul+1)& (0+255),w,b
  3202  000C1C  0100               	movlb	0	; () banked
  3203  000C1E  2367               	addwfc	(??_testMemory+1)& (0+255),f,b
  3204  000C20  0E03               	movlw	3
  3205  000C22  0100               	movlb	0	; () banked
  3206  000C24  2566               	addwf	??_testMemory& (0+255),w,b
  3207  000C26  6ED9               	movwf	fsr2l,c
  3208  000C28  0E00               	movlw	0
  3209  000C2A  0100               	movlb	0	; () banked
  3210  000C2C  2167               	addwfc	(??_testMemory+1)& (0+255),w,b
  3211  000C2E  6EDA               	movwf	fsr2h,c
  3212  000C30  0100               	movlb	0	; () banked
  3213  000C32  5176               	movf	testMemory@i_1273& (0+255),w,b
  3214  000C34  0F47               	addlw	71
  3215  000C36  6EDF               	movwf	indf2,c
  3216                           
  3217                           ;peripherals.c: 391: ABB_1.det_arrays.info[i].delay = i*100;
  3218  000C38  C076  F060         	movff	testMemory@i_1273,___wmul@multiplier
  3219  000C3C  C077  F061         	movff	testMemory@i_1273+1,___wmul@multiplier+1
  3220  000C40  0E00               	movlw	0
  3221  000C42  0100               	movlb	0	; () banked
  3222  000C44  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3223  000C46  0E64               	movlw	100
  3224  000C48  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3225  000C4A  ECB3  F038         	call	___wmul	;wreg free
  3226  000C4E  0EF9               	movlw	249
  3227  000C50  0100               	movlb	0	; () banked
  3228  000C52  6F66               	movwf	??_testMemory& (0+255),b
  3229  000C54  0E01               	movlw	1
  3230  000C56  0100               	movlb	0	; () banked
  3231  000C58  6F67               	movwf	(??_testMemory+1)& (0+255),b
  3232  000C5A  C076  F068         	movff	testMemory@i_1273,??_testMemory+2
  3233  000C5E  C077  F069         	movff	testMemory@i_1273+1,??_testMemory+3
  3234  000C62  0100               	movlb	0	; () banked
  3235  000C64  90D8               	bcf	status,0,c
  3236  000C66  3768               	rlcf	(??_testMemory+2)& (0+255),f,b
  3237  000C68  3769               	rlcf	(??_testMemory+3)& (0+255),f,b
  3238  000C6A  0100               	movlb	0	; () banked
  3239  000C6C  90D8               	bcf	status,0,c
  3240  000C6E  3768               	rlcf	(??_testMemory+2)& (0+255),f,b
  3241  000C70  3769               	rlcf	(??_testMemory+3)& (0+255),f,b
  3242  000C72  0100               	movlb	0	; () banked
  3243  000C74  5166               	movf	??_testMemory& (0+255),w,b
  3244  000C76  0100               	movlb	0	; () banked
  3245  000C78  2768               	addwf	(??_testMemory+2)& (0+255),f,b
  3246  000C7A  0100               	movlb	0	; () banked
  3247  000C7C  5167               	movf	(??_testMemory+1)& (0+255),w,b
  3248  000C7E  0100               	movlb	0	; () banked
  3249  000C80  2369               	addwfc	(??_testMemory+3)& (0+255),f,b
  3250  000C82  0EC0               	movlw	low _ABB_1
  3251  000C84  0100               	movlb	0	; () banked
  3252  000C86  6F6A               	movwf	(??_testMemory+4)& (0+255),b
  3253  000C88  0E03               	movlw	high _ABB_1
  3254  000C8A  0100               	movlb	0	; () banked
  3255  000C8C  6F6B               	movwf	(??_testMemory+5)& (0+255),b
  3256  000C8E  0E04               	movlw	4
  3257  000C90  0100               	movlb	0	; () banked
  3258  000C92  276A               	addwf	(??_testMemory+4)& (0+255),f,b
  3259  000C94  0E00               	movlw	0
  3260  000C96  236B               	addwfc	(??_testMemory+5)& (0+255),f,b
  3261  000C98  0100               	movlb	0	; () banked
  3262  000C9A  5168               	movf	(??_testMemory+2)& (0+255),w,b
  3263  000C9C  0100               	movlb	0	; () banked
  3264  000C9E  276A               	addwf	(??_testMemory+4)& (0+255),f,b
  3265  000CA0  0100               	movlb	0	; () banked
  3266  000CA2  5169               	movf	(??_testMemory+3)& (0+255),w,b
  3267  000CA4  0100               	movlb	0	; () banked
  3268  000CA6  236B               	addwfc	(??_testMemory+5)& (0+255),f,b
  3269  000CA8  0E02               	movlw	2
  3270  000CAA  0100               	movlb	0	; () banked
  3271  000CAC  256A               	addwf	(??_testMemory+4)& (0+255),w,b
  3272  000CAE  6ED9               	movwf	fsr2l,c
  3273  000CB0  0E00               	movlw	0
  3274  000CB2  0100               	movlb	0	; () banked
  3275  000CB4  216B               	addwfc	(??_testMemory+5)& (0+255),w,b
  3276  000CB6  6EDA               	movwf	fsr2h,c
  3277  000CB8  0100               	movlb	0	; () banked
  3278  000CBA  C060  FFDE         	movff	?___wmul,postinc2
  3279  000CBE  0100               	movlb	0	; () banked
  3280  000CC0  C061  FFDD         	movff	?___wmul+1,postdec2
  3281                           
  3282                           ; BSR set to: 0
  3283  000CC4  0100               	movlb	0	; () banked
  3284  000CC6  4B76               	infsnz	testMemory@i_1273& (0+255),f,b
  3285  000CC8  2B77               	incf	(testMemory@i_1273+1)& (0+255),f,b
  3286                           
  3287                           ; BSR set to: 0
  3288  000CCA  0100               	movlb	0	; () banked
  3289  000CCC  BF77               	btfsc	(testMemory@i_1273+1)& (0+255),7,b
  3290  000CCE  D725               	goto	l15754
  3291  000CD0  0100               	movlb	0	; () banked
  3292  000CD2  5177               	movf	(testMemory@i_1273+1)& (0+255),w,b
  3293  000CD4  E101               	bnz	l410
  3294  000CD6  D71A               	goto	L6
  3295  000CD8                     l410:
  3296                           
  3297                           ; BSR set to: 0
  3298  000CD8  0012               	return		;funcret
  3299  000CDA                     __end_of_testMemory:
  3300                           	opt stack 0
  3301                           tblptru	equ	0xFF8
  3302                           tblptrh	equ	0xFF7
  3303                           tblptrl	equ	0xFF6
  3304                           tablat	equ	0xFF5
  3305                           postinc0	equ	0xFEE
  3306                           wreg	equ	0xFE8
  3307                           postdec1	equ	0xFE5
  3308                           fsr1h	equ	0xFE2
  3309                           fsr1l	equ	0xFE1
  3310                           indf2	equ	0xFDF
  3311                           postinc2	equ	0xFDE
  3312                           postdec2	equ	0xFDD
  3313                           fsr2h	equ	0xFDA
  3314                           fsr2l	equ	0xFD9
  3315                           status	equ	0xFD8
  3316                           
  3317 ;; *************** function _initialise *****************
  3318 ;; Defined at:
  3319 ;;		line 43 in file "initialise.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;		None
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;		None
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  1    wreg      void 
  3326 ;; Registers used:
  3327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3337 ;;Total ram usage:        0 bytes
  3338 ;; Hardware stack levels used:    1
  3339 ;; Hardware stack levels required when called:   13
  3340 ;; This function calls:
  3341 ;;		_initialise12V
  3342 ;;		_initialise24V
  3343 ;;		_initialiseBluetooth
  3344 ;;		_initialiseDetMemory
  3345 ;;		_initialiseEDDPins
  3346 ;;		_initialiseLed
  3347 ;;		_initialiseModem
  3348 ;;		_initialisePic
  3349 ;;		_initialiseReadKeyCable
  3350 ;;		_initialiseReadSupply
  3351 ;;		_initialiseShaftTest
  3352 ;;		_initialiseTag
  3353 ;;		_initialiseTimer0
  3354 ;;		_initialiseTimer1
  3355 ;;		_initialiseTimer2
  3356 ;;		_initialiseTimer4
  3357 ;;		_initialiseTimer6
  3358 ;;		_initialiseTimer8
  3359 ;;		_initialiseWatchDogTimer
  3360 ;;		_intialiseAcOr36V
  3361 ;; This function is called by:
  3362 ;;		_main
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           	psect	text2
  3367  006B80                     __ptext2:
  3368                           	opt stack 0
  3369  006B80                     _initialise:
  3370                           	opt stack 17
  3371                           
  3372                           ;initialise.c: 44: initialisePic();
  3373                           
  3374                           ; BSR set to: 0
  3375                           ;incstack = 0
  3376  006B80  EC98  F03A         	call	_initialisePic	;wreg free
  3377                           
  3378                           ;initialise.c: 45: initialise12V();
  3379  006B84  ECC0  F03D         	call	_initialise12V	;wreg free
  3380                           
  3381                           ;initialise.c: 46: initialiseModem();
  3382  006B88  EC0A  F035         	call	_initialiseModem	;wreg free
  3383                           
  3384                           ;initialise.c: 47: initialise24V();
  3385  006B8C  ECBB  F03D         	call	_initialise24V	;wreg free
  3386                           
  3387                           ;initialise.c: 48: initialiseTimer2();
  3388  006B90  EC27  F038         	call	_initialiseTimer2	;wreg free
  3389                           
  3390                           ;initialise.c: 49: initialiseTimer4();
  3391  006B94  EC6B  F039         	call	_initialiseTimer4	;wreg free
  3392                           
  3393                           ;initialise.c: 50: initialiseTimer6();
  3394  006B98  EC0B  F038         	call	_initialiseTimer6	;wreg free
  3395                           
  3396                           ;initialise.c: 51: initialiseTimer8();
  3397  006B9C  ECED  F037         	call	_initialiseTimer8	;wreg free
  3398                           
  3399                           ;initialise.c: 52: initialiseTimer0();
  3400  006BA0  EC84  F039         	call	_initialiseTimer0	;wreg free
  3401                           
  3402                           ;initialise.c: 53: initialiseTimer1();
  3403  006BA4  ECA7  F03B         	call	_initialiseTimer1	;wreg free
  3404                           
  3405                           ;initialise.c: 54: initialiseEDDPins();
  3406  006BA8  EC6E  F03D         	call	_initialiseEDDPins	;wreg free
  3407                           
  3408                           ;initialise.c: 55: initialiseLed();
  3409  006BAC  ECFE  F03A         	call	_initialiseLed	;wreg free
  3410                           
  3411                           ;initialise.c: 56: initialiseReadSupply();
  3412  006BB0  EC59  F03B         	call	_initialiseReadSupply	;wreg free
  3413                           
  3414                           ;initialise.c: 57: initialiseTag();
  3415  006BB4  EC49  F03B         	call	_initialiseTag	;wreg free
  3416                           
  3417                           ;initialise.c: 58: initialiseReadKeyCable();
  3418  006BB8  EC83  F03A         	call	_initialiseReadKeyCable	;wreg free
  3419                           
  3420                           ;initialise.c: 59: initialiseShaftTest();
  3421  006BBC  EC43  F038         	call	_initialiseShaftTest	;wreg free
  3422                           
  3423                           ;initialise.c: 60: initialiseBluetooth();
  3424  006BC0  ECE6  F03D         	call	_initialiseBluetooth	;wreg free
  3425                           
  3426                           ;initialise.c: 61: intialiseAcOr36V();
  3427  006BC4  EC8B  F03D         	call	_intialiseAcOr36V	;wreg free
  3428                           
  3429                           ;initialise.c: 62: initialiseWatchDogTimer();
  3430  006BC8  EC09  F03D         	call	_initialiseWatchDogTimer	;wreg free
  3431                           
  3432                           ;initialise.c: 63: initialiseDetMemory();
  3433  006BCC  ECFC  F028         	call	_initialiseDetMemory	;wreg free
  3434                           
  3435                           ;initialise.c: 64: INTCONbits.GIE = 1;
  3436  006BD0  8EF2               	bsf	intcon,7,c	;volatile
  3437                           
  3438                           ;initialise.c: 65: INTCONbits.PEIE = 1;
  3439  006BD2  8CF2               	bsf	intcon,6,c	;volatile
  3440  006BD4  0012               	return		;funcret
  3441  006BD6                     __end_of_initialise:
  3442                           	opt stack 0
  3443                           tblptru	equ	0xFF8
  3444                           tblptrh	equ	0xFF7
  3445                           tblptrl	equ	0xFF6
  3446                           tablat	equ	0xFF5
  3447                           intcon	equ	0xFF2
  3448                           postinc0	equ	0xFEE
  3449                           wreg	equ	0xFE8
  3450                           postdec1	equ	0xFE5
  3451                           fsr1h	equ	0xFE2
  3452                           fsr1l	equ	0xFE1
  3453                           indf2	equ	0xFDF
  3454                           postinc2	equ	0xFDE
  3455                           postdec2	equ	0xFDD
  3456                           fsr2h	equ	0xFDA
  3457                           fsr2l	equ	0xFD9
  3458                           status	equ	0xFD8
  3459                           
  3460 ;; *************** function _intialiseAcOr36V *****************
  3461 ;; Defined at:
  3462 ;;		line 19 in file "acOr36V.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;		None
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;		None
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  1    wreg      void 
  3469 ;; Registers used:
  3470 ;;		cstack
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3480 ;;Total ram usage:        0 bytes
  3481 ;; Hardware stack levels used:    1
  3482 ;; Hardware stack levels required when called:    9
  3483 ;; This function calls:
  3484 ;;		_initialiseACinterrupt
  3485 ;; This function is called by:
  3486 ;;		_initialise
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text3
  3491  007B16                     __ptext3:
  3492                           	opt stack 0
  3493  007B16                     _intialiseAcOr36V:
  3494                           	opt stack 20
  3495                           
  3496                           ;acOr36V.c: 20: TRISBbits.TRISB2 = 1;
  3497                           
  3498                           ;incstack = 0
  3499  007B16  8482               	bsf	3970,2,c	;volatile
  3500                           
  3501                           ;acOr36V.c: 21: ANSELBbits.ANSELB2 = 0;
  3502  007B18  010E               	movlb	14	; () banked
  3503  007B1A  959A               	bcf	154,2,b	;volatile
  3504                           
  3505                           ; BSR set to: 14
  3506                           ;acOr36V.c: 22: initialiseACinterrupt();
  3507  007B1C  EC91  F03D         	call	_initialiseACinterrupt	;wreg free
  3508  007B20  0012               	return		;funcret
  3509  007B22                     __end_of_intialiseAcOr36V:
  3510                           	opt stack 0
  3511                           tblptru	equ	0xFF8
  3512                           tblptrh	equ	0xFF7
  3513                           tblptrl	equ	0xFF6
  3514                           tablat	equ	0xFF5
  3515                           intcon	equ	0xFF2
  3516                           postinc0	equ	0xFEE
  3517                           wreg	equ	0xFE8
  3518                           postdec1	equ	0xFE5
  3519                           fsr1h	equ	0xFE2
  3520                           fsr1l	equ	0xFE1
  3521                           indf2	equ	0xFDF
  3522                           postinc2	equ	0xFDE
  3523                           postdec2	equ	0xFDD
  3524                           fsr2h	equ	0xFDA
  3525                           fsr2l	equ	0xFD9
  3526                           status	equ	0xFD8
  3527                           
  3528 ;; *************** function _initialiseACinterrupt *****************
  3529 ;; Defined at:
  3530 ;;		line 87 in file "acOr36V.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;		None
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;		None
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  1    wreg      void 
  3537 ;; Registers used:
  3538 ;;		None
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3548 ;;Total ram usage:        0 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; Hardware stack levels required when called:    8
  3551 ;; This function calls:
  3552 ;;		Nothing
  3553 ;; This function is called by:
  3554 ;;		_intialiseAcOr36V
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           	psect	text4
  3559  007B22                     __ptext4:
  3560                           	opt stack 0
  3561  007B22                     _initialiseACinterrupt:
  3562                           	opt stack 20
  3563                           
  3564                           ;acOr36V.c: 88: PIR0bits.INT2IF = 0;
  3565                           
  3566                           ;incstack = 0
  3567  007B22  010E               	movlb	14	; () banked
  3568  007B24  9533               	bcf	51,2,b	;volatile
  3569                           
  3570                           ;acOr36V.c: 89: INTCONbits.INT2EDG = 0;
  3571  007B26  94F2               	bcf	intcon,2,c	;volatile
  3572                           
  3573                           ;acOr36V.c: 90: PIE0bits.INT2IE = 1;
  3574  007B28  010E               	movlb	14	; () banked
  3575  007B2A  8529               	bsf	41,2,b	;volatile
  3576                           
  3577                           ; BSR set to: 14
  3578  007B2C  0012               	return		;funcret
  3579  007B2E                     __end_of_initialiseACinterrupt:
  3580                           	opt stack 0
  3581                           tblptru	equ	0xFF8
  3582                           tblptrh	equ	0xFF7
  3583                           tblptrl	equ	0xFF6
  3584                           tablat	equ	0xFF5
  3585                           intcon	equ	0xFF2
  3586                           postinc0	equ	0xFEE
  3587                           wreg	equ	0xFE8
  3588                           postdec1	equ	0xFE5
  3589                           fsr1h	equ	0xFE2
  3590                           fsr1l	equ	0xFE1
  3591                           indf2	equ	0xFDF
  3592                           postinc2	equ	0xFDE
  3593                           postdec2	equ	0xFDD
  3594                           fsr2h	equ	0xFDA
  3595                           fsr2l	equ	0xFD9
  3596                           status	equ	0xFD8
  3597                           
  3598 ;; *************** function _initialiseWatchDogTimer *****************
  3599 ;; Defined at:
  3600 ;;		line 199 in file "initialise.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;		None
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;		None
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1    wreg      void 
  3607 ;; Registers used:
  3608 ;;		None
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3618 ;;Total ram usage:        0 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; Hardware stack levels required when called:    8
  3621 ;; This function calls:
  3622 ;;		Nothing
  3623 ;; This function is called by:
  3624 ;;		_initialise
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628                           	psect	text5
  3629  007A12                     __ptext5:
  3630                           	opt stack 0
  3631  007A12                     _initialiseWatchDogTimer:
  3632                           	opt stack 21
  3633                           
  3634                           ;initialise.c: 200: WDTCON0bits.WDTPS = 0b01110;
  3635                           
  3636                           ; BSR set to: 14
  3637                           ;incstack = 0
  3638  007A12  010E               	movlb	14	; () banked
  3639  007A14  933D               	bcf	61,1,b	;volatile
  3640  007A16  853D               	bsf	61,2,b	;volatile
  3641  007A18  873D               	bsf	61,3,b	;volatile
  3642  007A1A  893D               	bsf	61,4,b	;volatile
  3643  007A1C  9B3D               	bcf	61,5,b	;volatile
  3644  007A1E  0004               	clrwdt		;# 
  3645                           
  3646                           ;initialise.c: 202: WDTCON0bits.SEN = 1;
  3647  007A20  010E               	movlb	14	; () banked
  3648  007A22  813D               	bsf	61,0,b	;volatile
  3649                           
  3650                           ; BSR set to: 14
  3651  007A24  0012               	return		;funcret
  3652  007A26                     __end_of_initialiseWatchDogTimer:
  3653                           	opt stack 0
  3654                           tblptru	equ	0xFF8
  3655                           tblptrh	equ	0xFF7
  3656                           tblptrl	equ	0xFF6
  3657                           tablat	equ	0xFF5
  3658                           intcon	equ	0xFF2
  3659                           postinc0	equ	0xFEE
  3660                           wreg	equ	0xFE8
  3661                           postdec1	equ	0xFE5
  3662                           fsr1h	equ	0xFE2
  3663                           fsr1l	equ	0xFE1
  3664                           indf2	equ	0xFDF
  3665                           postinc2	equ	0xFDE
  3666                           postdec2	equ	0xFDD
  3667                           fsr2h	equ	0xFDA
  3668                           fsr2l	equ	0xFD9
  3669                           status	equ	0xFD8
  3670                           
  3671 ;; *************** function _initialiseTimer8 *****************
  3672 ;; Defined at:
  3673 ;;		line 122 in file "initialise.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;		None
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;		None
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      void 
  3680 ;; Registers used:
  3681 ;;		wreg, status,2
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3691 ;;Total ram usage:        0 bytes
  3692 ;; Hardware stack levels used:    1
  3693 ;; Hardware stack levels required when called:    8
  3694 ;; This function calls:
  3695 ;;		Nothing
  3696 ;; This function is called by:
  3697 ;;		_initialise
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701                           	psect	text6
  3702  006FDA                     __ptext6:
  3703                           	opt stack 0
  3704  006FDA                     _initialiseTimer8:
  3705                           	opt stack 21
  3706                           
  3707                           ;initialise.c: 124: T8CLKCONbits.CS = 0b0001;
  3708                           
  3709                           ; BSR set to: 14
  3710                           ;incstack = 0
  3711  006FDA  010F               	movlb	15	; () banked
  3712  006FDC  512C               	movf	44,w,b	;volatile
  3713  006FDE  0BF0               	andlw	-16
  3714  006FE0  0901               	iorlw	1
  3715  006FE2  6F2C               	movwf	44,b	;volatile
  3716                           
  3717                           ; BSR set to: 15
  3718                           ;initialise.c: 125: PMD2bits.TMR8MD = 0;
  3719  006FE4  010E               	movlb	14	; () banked
  3720  006FE6  914E               	bcf	78,0,b	;volatile
  3721                           
  3722                           ; BSR set to: 14
  3723                           ;initialise.c: 126: T8CONbits.T8OUTPS = 0b0000;
  3724  006FE8  010F               	movlb	15	; () banked
  3725  006FEA  912A               	bcf	42,0,b	;volatile
  3726  006FEC  932A               	bcf	42,1,b	;volatile
  3727  006FEE  952A               	bcf	42,2,b	;volatile
  3728  006FF0  972A               	bcf	42,3,b	;volatile
  3729                           
  3730                           ; BSR set to: 15
  3731                           ;initialise.c: 127: T8CONbits.TMR8ON = 0;
  3732  006FF2  010F               	movlb	15	; () banked
  3733  006FF4  9F2A               	bcf	42,7,b	;volatile
  3734                           
  3735                           ;initialise.c: 128: T8CONbits.T8CKPS = 0b11;
  3736  006FF6  010F               	movlb	15	; () banked
  3737  006FF8  512A               	movf	42,w,b	;volatile
  3738  006FFA  0B8F               	andlw	-113
  3739  006FFC  0930               	iorlw	48
  3740  006FFE  6F2A               	movwf	42,b	;volatile
  3741                           
  3742                           ;initialise.c: 129: TMR8 = 0;
  3743  007000  0E00               	movlw	0
  3744  007002  010F               	movlb	15	; () banked
  3745  007004  6F28               	movwf	40,b	;volatile
  3746                           
  3747                           ; BSR set to: 15
  3748                           ;initialise.c: 130: PIR5bits.TMR8IF = 0;
  3749  007006  010E               	movlb	14	; () banked
  3750  007008  9F38               	bcf	56,7,b	;volatile
  3751                           
  3752                           ; BSR set to: 14
  3753                           ;initialise.c: 131: IPR5bits.TMR8IP = 1;
  3754  00700A  010E               	movlb	14	; () banked
  3755  00700C  8F24               	bsf	36,7,b	;volatile
  3756                           
  3757                           ;initialise.c: 132: PR8 = 199;
  3758  00700E  0EC7               	movlw	199
  3759  007010  010F               	movlb	15	; () banked
  3760  007012  6F29               	movwf	41,b	;volatile
  3761                           
  3762                           ; BSR set to: 15
  3763  007014  0012               	return		;funcret
  3764  007016                     __end_of_initialiseTimer8:
  3765                           	opt stack 0
  3766                           tblptru	equ	0xFF8
  3767                           tblptrh	equ	0xFF7
  3768                           tblptrl	equ	0xFF6
  3769                           tablat	equ	0xFF5
  3770                           intcon	equ	0xFF2
  3771                           postinc0	equ	0xFEE
  3772                           wreg	equ	0xFE8
  3773                           postdec1	equ	0xFE5
  3774                           fsr1h	equ	0xFE2
  3775                           fsr1l	equ	0xFE1
  3776                           indf2	equ	0xFDF
  3777                           postinc2	equ	0xFDE
  3778                           postdec2	equ	0xFDD
  3779                           fsr2h	equ	0xFDA
  3780                           fsr2l	equ	0xFD9
  3781                           status	equ	0xFD8
  3782                           
  3783 ;; *************** function _initialiseTimer6 *****************
  3784 ;; Defined at:
  3785 ;;		line 106 in file "initialise.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;		None
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;		None
  3790 ;; Return value:  Size  Location     Type
  3791 ;;                  1    wreg      void 
  3792 ;; Registers used:
  3793 ;;		wreg, status,2
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3803 ;;Total ram usage:        0 bytes
  3804 ;; Hardware stack levels used:    1
  3805 ;; Hardware stack levels required when called:    8
  3806 ;; This function calls:
  3807 ;;		Nothing
  3808 ;; This function is called by:
  3809 ;;		_initialise
  3810 ;; This function uses a non-reentrant model
  3811 ;;
  3812                           
  3813                           	psect	text7
  3814  007016                     __ptext7:
  3815                           	opt stack 0
  3816  007016                     _initialiseTimer6:
  3817                           	opt stack 21
  3818                           
  3819                           ;initialise.c: 108: T6CLKCONbits.CS = 0b0001;
  3820                           
  3821                           ; BSR set to: 15
  3822                           ;incstack = 0
  3823  007016  50B3               	movf	4019,w,c	;volatile
  3824  007018  0BF0               	andlw	-16
  3825  00701A  0901               	iorlw	1
  3826  00701C  6EB3               	movwf	4019,c	;volatile
  3827                           
  3828                           ;initialise.c: 109: PMD1bits.TMR6MD = 0;
  3829  00701E  010E               	movlb	14	; () banked
  3830  007020  9D4D               	bcf	77,6,b	;volatile
  3831                           
  3832                           ;initialise.c: 110: T6CONbits.T6OUTPS = 0b1001;
  3833  007022  50B1               	movf	4017,w,c	;volatile
  3834  007024  0BF0               	andlw	-16
  3835  007026  0909               	iorlw	9
  3836  007028  6EB1               	movwf	4017,c	;volatile
  3837                           
  3838                           ; BSR set to: 14
  3839                           ;initialise.c: 111: T6CONbits.TMR6ON = 0;
  3840  00702A  9EB1               	bcf	4017,7,c	;volatile
  3841                           
  3842                           ;initialise.c: 112: T6CONbits.T6CKPS = 0b11;
  3843  00702C  50B1               	movf	4017,w,c	;volatile
  3844  00702E  0B8F               	andlw	-113
  3845  007030  0930               	iorlw	48
  3846  007032  6EB1               	movwf	4017,c	;volatile
  3847                           
  3848                           ;initialise.c: 113: TMR6 = 0;
  3849  007034  0E00               	movlw	0
  3850  007036  6EAF               	movwf	4015,c	;volatile
  3851                           
  3852                           ; BSR set to: 14
  3853                           ;initialise.c: 114: INTCONbits.GIEH = 1;
  3854  007038  8EF2               	bsf	intcon,7,c	;volatile
  3855                           
  3856                           ; BSR set to: 14
  3857                           ;initialise.c: 115: PIR5bits.TMR6IF = 0;
  3858  00703A  010E               	movlb	14	; () banked
  3859  00703C  9B38               	bcf	56,5,b	;volatile
  3860                           
  3861                           ; BSR set to: 14
  3862                           ;initialise.c: 116: PIE5bits.TMR6IE = 1;
  3863  00703E  010E               	movlb	14	; () banked
  3864  007040  8B2E               	bsf	46,5,b	;volatile
  3865                           
  3866                           ; BSR set to: 14
  3867                           ;initialise.c: 117: IPR5bits.TMR6IP = 1;
  3868  007042  010E               	movlb	14	; () banked
  3869  007044  8B24               	bsf	36,5,b	;volatile
  3870                           
  3871                           ;initialise.c: 118: PR6 = 199;
  3872  007046  0EC7               	movlw	199
  3873  007048  6EB0               	movwf	4016,c	;volatile
  3874                           
  3875                           ; BSR set to: 14
  3876                           ;initialise.c: 119: T6CONbits.TMR6ON = 1;
  3877  00704A  8EB1               	bsf	4017,7,c	;volatile
  3878                           
  3879                           ; BSR set to: 14
  3880  00704C  0012               	return		;funcret
  3881  00704E                     __end_of_initialiseTimer6:
  3882                           	opt stack 0
  3883                           tblptru	equ	0xFF8
  3884                           tblptrh	equ	0xFF7
  3885                           tblptrl	equ	0xFF6
  3886                           tablat	equ	0xFF5
  3887                           intcon	equ	0xFF2
  3888                           postinc0	equ	0xFEE
  3889                           wreg	equ	0xFE8
  3890                           postdec1	equ	0xFE5
  3891                           fsr1h	equ	0xFE2
  3892                           fsr1l	equ	0xFE1
  3893                           indf2	equ	0xFDF
  3894                           postinc2	equ	0xFDE
  3895                           postdec2	equ	0xFDD
  3896                           fsr2h	equ	0xFDA
  3897                           fsr2l	equ	0xFD9
  3898                           status	equ	0xFD8
  3899                           
  3900 ;; *************** function _initialiseTimer4 *****************
  3901 ;; Defined at:
  3902 ;;		line 92 in file "initialise.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;		None
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      void 
  3909 ;; Registers used:
  3910 ;;		wreg, status,2
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3920 ;;Total ram usage:        0 bytes
  3921 ;; Hardware stack levels used:    1
  3922 ;; Hardware stack levels required when called:    8
  3923 ;; This function calls:
  3924 ;;		Nothing
  3925 ;; This function is called by:
  3926 ;;		_initialise
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           	psect	text8
  3931  0072D6                     __ptext8:
  3932                           	opt stack 0
  3933  0072D6                     _initialiseTimer4:
  3934                           	opt stack 21
  3935                           
  3936                           ;initialise.c: 94: T4CLKCONbits.CS = 0b0001;
  3937                           
  3938                           ; BSR set to: 14
  3939                           ;incstack = 0
  3940  0072D6  50B9               	movf	4025,w,c	;volatile
  3941  0072D8  0BF0               	andlw	-16
  3942  0072DA  0901               	iorlw	1
  3943  0072DC  6EB9               	movwf	4025,c	;volatile
  3944                           
  3945                           ;initialise.c: 95: PMD1bits.TMR4MD = 0;
  3946  0072DE  010E               	movlb	14	; () banked
  3947  0072E0  994D               	bcf	77,4,b	;volatile
  3948                           
  3949                           ;initialise.c: 96: T4CONbits.T4OUTPS = 0b0100;
  3950  0072E2  50B7               	movf	4023,w,c	;volatile
  3951  0072E4  0BF0               	andlw	-16
  3952  0072E6  0904               	iorlw	4
  3953  0072E8  6EB7               	movwf	4023,c	;volatile
  3954                           
  3955                           ; BSR set to: 14
  3956                           ;initialise.c: 97: T4CONbits.TMR4ON = 0;
  3957  0072EA  9EB7               	bcf	4023,7,c	;volatile
  3958                           
  3959                           ;initialise.c: 98: T4CONbits.T4CKPS = 0b11;
  3960  0072EC  50B7               	movf	4023,w,c	;volatile
  3961  0072EE  0B8F               	andlw	-113
  3962  0072F0  0930               	iorlw	48
  3963  0072F2  6EB7               	movwf	4023,c	;volatile
  3964                           
  3965                           ;initialise.c: 99: TMR4 = 0;
  3966  0072F4  0E00               	movlw	0
  3967  0072F6  6EB5               	movwf	4021,c	;volatile
  3968                           
  3969                           ; BSR set to: 14
  3970                           ;initialise.c: 100: INTCONbits.GIEH = 1;
  3971  0072F8  8EF2               	bsf	intcon,7,c	;volatile
  3972                           
  3973                           ; BSR set to: 14
  3974                           ;initialise.c: 101: PIR5bits.TMR4IF = 0;
  3975  0072FA  010E               	movlb	14	; () banked
  3976  0072FC  9738               	bcf	56,3,b	;volatile
  3977                           
  3978                           ; BSR set to: 14
  3979                           ;initialise.c: 102: IPR5bits.TMR4IP = 1;
  3980  0072FE  010E               	movlb	14	; () banked
  3981  007300  8724               	bsf	36,3,b	;volatile
  3982                           
  3983                           ;initialise.c: 103: PR4 = 240;
  3984  007302  0EF0               	movlw	240
  3985  007304  6EB6               	movwf	4022,c	;volatile
  3986                           
  3987                           ; BSR set to: 14
  3988  007306  0012               	return		;funcret
  3989  007308                     __end_of_initialiseTimer4:
  3990                           	opt stack 0
  3991                           tblptru	equ	0xFF8
  3992                           tblptrh	equ	0xFF7
  3993                           tblptrl	equ	0xFF6
  3994                           tablat	equ	0xFF5
  3995                           intcon	equ	0xFF2
  3996                           postinc0	equ	0xFEE
  3997                           wreg	equ	0xFE8
  3998                           postdec1	equ	0xFE5
  3999                           fsr1h	equ	0xFE2
  4000                           fsr1l	equ	0xFE1
  4001                           indf2	equ	0xFDF
  4002                           postinc2	equ	0xFDE
  4003                           postdec2	equ	0xFDD
  4004                           fsr2h	equ	0xFDA
  4005                           fsr2l	equ	0xFD9
  4006                           status	equ	0xFD8
  4007                           
  4008 ;; *************** function _initialiseTimer2 *****************
  4009 ;; Defined at:
  4010 ;;		line 76 in file "initialise.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;		None
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;		None
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      void 
  4017 ;; Registers used:
  4018 ;;		wreg, status,2
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4028 ;;Total ram usage:        0 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; Hardware stack levels required when called:    8
  4031 ;; This function calls:
  4032 ;;		Nothing
  4033 ;; This function is called by:
  4034 ;;		_initialise
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text9
  4039  00704E                     __ptext9:
  4040                           	opt stack 0
  4041  00704E                     _initialiseTimer2:
  4042                           	opt stack 21
  4043                           
  4044                           ;initialise.c: 78: T2CLKCONbits.CS = 0b0001;
  4045                           
  4046                           ; BSR set to: 14
  4047                           ;incstack = 0
  4048  00704E  50BF               	movf	4031,w,c	;volatile
  4049  007050  0BF0               	andlw	-16
  4050  007052  0901               	iorlw	1
  4051  007054  6EBF               	movwf	4031,c	;volatile
  4052                           
  4053                           ;initialise.c: 79: PMD1bits.TMR2MD = 0;
  4054  007056  010E               	movlb	14	; () banked
  4055  007058  954D               	bcf	77,2,b	;volatile
  4056                           
  4057                           ; BSR set to: 14
  4058                           ;initialise.c: 80: T2CONbits.T2OUTPS = 0b0000;
  4059  00705A  90BD               	bcf	4029,0,c	;volatile
  4060  00705C  92BD               	bcf	4029,1,c	;volatile
  4061  00705E  94BD               	bcf	4029,2,c	;volatile
  4062  007060  96BD               	bcf	4029,3,c	;volatile
  4063                           
  4064                           ; BSR set to: 14
  4065                           ;initialise.c: 81: T2CONbits.TMR2ON = 0;
  4066  007062  9EBD               	bcf	4029,7,c	;volatile
  4067                           
  4068                           ;initialise.c: 82: T2CONbits.T2CKPS = 0b11;
  4069  007064  50BD               	movf	4029,w,c	;volatile
  4070  007066  0B8F               	andlw	-113
  4071  007068  0930               	iorlw	48
  4072  00706A  6EBD               	movwf	4029,c	;volatile
  4073                           
  4074                           ;initialise.c: 83: TMR2 = 0;
  4075  00706C  0E00               	movlw	0
  4076  00706E  6EBB               	movwf	4027,c	;volatile
  4077                           
  4078                           ; BSR set to: 14
  4079                           ;initialise.c: 84: INTCONbits.GIEH = 1;
  4080  007070  8EF2               	bsf	intcon,7,c	;volatile
  4081                           
  4082                           ; BSR set to: 14
  4083                           ;initialise.c: 85: INTCONbits.PEIE = 1;
  4084  007072  8CF2               	bsf	intcon,6,c	;volatile
  4085                           
  4086                           ; BSR set to: 14
  4087                           ;initialise.c: 86: PIR5bits.TMR2IF = 0;
  4088  007074  010E               	movlb	14	; () banked
  4089  007076  9338               	bcf	56,1,b	;volatile
  4090                           
  4091                           ; BSR set to: 14
  4092                           ;initialise.c: 87: PIE5bits.TMR2IE = 1;
  4093  007078  010E               	movlb	14	; () banked
  4094  00707A  832E               	bsf	46,1,b	;volatile
  4095                           
  4096                           ; BSR set to: 14
  4097                           ;initialise.c: 88: IPR5bits.TMR2IP = 1;
  4098  00707C  010E               	movlb	14	; () banked
  4099  00707E  8324               	bsf	36,1,b	;volatile
  4100                           
  4101                           ;initialise.c: 89: PR2 = 199;
  4102  007080  0EC7               	movlw	199
  4103  007082  6EBC               	movwf	4028,c	;volatile
  4104                           
  4105                           ; BSR set to: 14
  4106  007084  0012               	return		;funcret
  4107  007086                     __end_of_initialiseTimer2:
  4108                           	opt stack 0
  4109                           tblptru	equ	0xFF8
  4110                           tblptrh	equ	0xFF7
  4111                           tblptrl	equ	0xFF6
  4112                           tablat	equ	0xFF5
  4113                           intcon	equ	0xFF2
  4114                           postinc0	equ	0xFEE
  4115                           wreg	equ	0xFE8
  4116                           postdec1	equ	0xFE5
  4117                           fsr1h	equ	0xFE2
  4118                           fsr1l	equ	0xFE1
  4119                           indf2	equ	0xFDF
  4120                           postinc2	equ	0xFDE
  4121                           postdec2	equ	0xFDD
  4122                           fsr2h	equ	0xFDA
  4123                           fsr2l	equ	0xFD9
  4124                           status	equ	0xFD8
  4125                           
  4126 ;; *************** function _initialiseTimer1 *****************
  4127 ;; Defined at:
  4128 ;;		line 149 in file "initialise.c"
  4129 ;; Parameters:    Size  Location     Type
  4130 ;;		None
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;		None
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  1    wreg      void 
  4135 ;; Registers used:
  4136 ;;		wreg, status,2
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4146 ;;Total ram usage:        0 bytes
  4147 ;; Hardware stack levels used:    1
  4148 ;; Hardware stack levels required when called:    8
  4149 ;; This function calls:
  4150 ;;		Nothing
  4151 ;; This function is called by:
  4152 ;;		_initialise
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           	psect	text10
  4157  00774E                     __ptext10:
  4158                           	opt stack 0
  4159  00774E                     _initialiseTimer1:
  4160                           	opt stack 21
  4161                           
  4162                           ;initialise.c: 150: T1CONbits.RD16 = 1;
  4163                           
  4164                           ; BSR set to: 14
  4165                           ;incstack = 0
  4166  00774E  82CF               	bsf	4047,1,c	;volatile
  4167                           
  4168                           ;initialise.c: 151: PIR5bits.TMR1IF = 0;
  4169  007750  010E               	movlb	14	; () banked
  4170  007752  9138               	bcf	56,0,b	;volatile
  4171                           
  4172                           ; BSR set to: 14
  4173                           ;initialise.c: 152: TMR1CLKbits.CS = 0b0001;
  4174  007754  50D2               	movf	4050,w,c	;volatile
  4175  007756  0BF0               	andlw	-16
  4176  007758  0901               	iorlw	1
  4177  00775A  6ED2               	movwf	4050,c	;volatile
  4178                           
  4179                           ;initialise.c: 153: TMR1 = 0xA23F;
  4180  00775C  0EA2               	movlw	162
  4181  00775E  6ECE               	movwf	4046,c	;volatile
  4182  007760  0E3F               	movlw	63
  4183  007762  6ECD               	movwf	4045,c	;volatile
  4184                           
  4185                           ;initialise.c: 154: T1CONbits.CKPS = 0b11;
  4186  007764  0E30               	movlw	48
  4187  007766  12CF               	iorwf	4047,f,c	;volatile
  4188                           
  4189                           ; BSR set to: 14
  4190  007768  0012               	return		;funcret
  4191  00776A                     __end_of_initialiseTimer1:
  4192                           	opt stack 0
  4193                           tblptru	equ	0xFF8
  4194                           tblptrh	equ	0xFF7
  4195                           tblptrl	equ	0xFF6
  4196                           tablat	equ	0xFF5
  4197                           intcon	equ	0xFF2
  4198                           postinc0	equ	0xFEE
  4199                           wreg	equ	0xFE8
  4200                           postdec1	equ	0xFE5
  4201                           fsr1h	equ	0xFE2
  4202                           fsr1l	equ	0xFE1
  4203                           indf2	equ	0xFDF
  4204                           postinc2	equ	0xFDE
  4205                           postdec2	equ	0xFDD
  4206                           fsr2h	equ	0xFDA
  4207                           fsr2l	equ	0xFD9
  4208                           status	equ	0xFD8
  4209                           
  4210 ;; *************** function _initialiseTimer0 *****************
  4211 ;; Defined at:
  4212 ;;		line 135 in file "initialise.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;		None
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;		None
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  1    wreg      void 
  4219 ;; Registers used:
  4220 ;;		wreg, status,2
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4230 ;;Total ram usage:        0 bytes
  4231 ;; Hardware stack levels used:    1
  4232 ;; Hardware stack levels required when called:    8
  4233 ;; This function calls:
  4234 ;;		Nothing
  4235 ;; This function is called by:
  4236 ;;		_initialise
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           	psect	text11
  4241  007308                     __ptext11:
  4242                           	opt stack 0
  4243  007308                     _initialiseTimer0:
  4244                           	opt stack 21
  4245                           
  4246                           ;initialise.c: 137: T0CON1bits.T0CKPS = 0b1111;
  4247                           
  4248                           ; BSR set to: 14
  4249                           ;incstack = 0
  4250  007308  80D6               	bsf	4054,0,c	;volatile
  4251  00730A  82D6               	bsf	4054,1,c	;volatile
  4252  00730C  84D6               	bsf	4054,2,c	;volatile
  4253  00730E  86D6               	bsf	4054,3,c	;volatile
  4254                           
  4255                           ;initialise.c: 138: T0CON1bits.T0ASYNC = 0;
  4256  007310  98D6               	bcf	4054,4,c	;volatile
  4257                           
  4258                           ;initialise.c: 139: T0CON1bits.T0CS = 0b010;
  4259  007312  50D6               	movf	4054,w,c	;volatile
  4260  007314  0B1F               	andlw	-225
  4261  007316  0940               	iorlw	64
  4262  007318  6ED6               	movwf	4054,c	;volatile
  4263                           
  4264                           ;initialise.c: 140: T0CON0bits.T0EN = 1;
  4265  00731A  8ED5               	bsf	4053,7,c	;volatile
  4266                           
  4267                           ;initialise.c: 141: T0CON0bits.T016BIT = 0;
  4268  00731C  98D5               	bcf	4053,4,c	;volatile
  4269                           
  4270                           ;initialise.c: 142: T0CON0bits.T0OUTPS = 0b1111;
  4271  00731E  80D5               	bsf	4053,0,c	;volatile
  4272  007320  82D5               	bsf	4053,1,c	;volatile
  4273  007322  84D5               	bsf	4053,2,c	;volatile
  4274  007324  86D5               	bsf	4053,3,c	;volatile
  4275                           
  4276                           ;initialise.c: 143: PIR0bits.TMR0IF = 0;
  4277  007326  010E               	movlb	14	; () banked
  4278  007328  9B33               	bcf	51,5,b	;volatile
  4279                           
  4280                           ; BSR set to: 14
  4281                           ;initialise.c: 144: PIE0bits.TMR0IE = 1;
  4282  00732A  010E               	movlb	14	; () banked
  4283  00732C  8B29               	bsf	41,5,b	;volatile
  4284                           
  4285                           ;initialise.c: 145: TMR0H = 122;
  4286  00732E  0E7A               	movlw	122
  4287  007330  6ED4               	movwf	4052,c	;volatile
  4288                           
  4289                           ;initialise.c: 146: TMR0L = 0;
  4290  007332  0E00               	movlw	0
  4291  007334  6ED3               	movwf	4051,c	;volatile
  4292                           
  4293                           ; BSR set to: 14
  4294  007336  0012               	return		;funcret
  4295  007338                     __end_of_initialiseTimer0:
  4296                           	opt stack 0
  4297                           tblptru	equ	0xFF8
  4298                           tblptrh	equ	0xFF7
  4299                           tblptrl	equ	0xFF6
  4300                           tablat	equ	0xFF5
  4301                           intcon	equ	0xFF2
  4302                           postinc0	equ	0xFEE
  4303                           wreg	equ	0xFE8
  4304                           postdec1	equ	0xFE5
  4305                           fsr1h	equ	0xFE2
  4306                           fsr1l	equ	0xFE1
  4307                           indf2	equ	0xFDF
  4308                           postinc2	equ	0xFDE
  4309                           postdec2	equ	0xFDD
  4310                           fsr2h	equ	0xFDA
  4311                           fsr2l	equ	0xFD9
  4312                           status	equ	0xFD8
  4313                           
  4314 ;; *************** function _initialiseTag *****************
  4315 ;; Defined at:
  4316 ;;		line 52 in file "tagRead.c"
  4317 ;; Parameters:    Size  Location     Type
  4318 ;;		None
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;		None
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  1    wreg      void 
  4323 ;; Registers used:
  4324 ;;		wreg, status,2, cstack
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4334 ;;Total ram usage:        0 bytes
  4335 ;; Hardware stack levels used:    1
  4336 ;; Hardware stack levels required when called:    9
  4337 ;; This function calls:
  4338 ;;		_ppsLock
  4339 ;;		_ppsUnlock
  4340 ;;		_tagForInterrupt
  4341 ;; This function is called by:
  4342 ;;		_initialise
  4343 ;; This function uses a non-reentrant model
  4344 ;;
  4345                           
  4346                           	psect	text12
  4347  007692                     __ptext12:
  4348                           	opt stack 0
  4349  007692                     _initialiseTag:
  4350                           	opt stack 20
  4351                           
  4352                           ;tagRead.c: 53: tagForInterrupt();
  4353                           
  4354                           ; BSR set to: 14
  4355                           ;incstack = 0
  4356  007692  ECC3  F03B         	call	_tagForInterrupt	;wreg free
  4357                           
  4358                           ;tagRead.c: 55: ppsUnlock();
  4359  007696  ECDF  F03B         	call	_ppsUnlock	;wreg free
  4360                           
  4361                           ;tagRead.c: 56: INT3PPS = 0b00100010;
  4362  00769A  0E22               	movlw	34
  4363  00769C  010D               	movlb	13	; () banked
  4364  00769E  6FF3               	movwf	243,b	;volatile
  4365                           
  4366                           ; BSR set to: 13
  4367                           ;tagRead.c: 57: ppsLock();
  4368  0076A0  ECED  F03B         	call	_ppsLock	;wreg free
  4369                           
  4370                           ;tagRead.c: 59: INTCONbits.GIE = 0;
  4371  0076A4  9EF2               	bcf	intcon,7,c	;volatile
  4372                           
  4373                           ;tagRead.c: 60: INTCONbits.INT3EDG = 0;
  4374  0076A6  96F2               	bcf	intcon,3,c	;volatile
  4375                           
  4376                           ;tagRead.c: 61: PIR0bits.INT3IF = 0;
  4377  0076A8  010E               	movlb	14	; () banked
  4378  0076AA  9733               	bcf	51,3,b	;volatile
  4379                           
  4380                           ; BSR set to: 14
  4381                           ;tagRead.c: 62: PIE0bits.INT3IE = 1;
  4382  0076AC  010E               	movlb	14	; () banked
  4383  0076AE  8729               	bsf	41,3,b	;volatile
  4384                           
  4385                           ; BSR set to: 14
  4386  0076B0  0012               	return		;funcret
  4387  0076B2                     __end_of_initialiseTag:
  4388                           	opt stack 0
  4389                           tblptru	equ	0xFF8
  4390                           tblptrh	equ	0xFF7
  4391                           tblptrl	equ	0xFF6
  4392                           tablat	equ	0xFF5
  4393                           intcon	equ	0xFF2
  4394                           postinc0	equ	0xFEE
  4395                           wreg	equ	0xFE8
  4396                           postdec1	equ	0xFE5
  4397                           fsr1h	equ	0xFE2
  4398                           fsr1l	equ	0xFE1
  4399                           indf2	equ	0xFDF
  4400                           postinc2	equ	0xFDE
  4401                           postdec2	equ	0xFDD
  4402                           fsr2h	equ	0xFDA
  4403                           fsr2l	equ	0xFD9
  4404                           status	equ	0xFD8
  4405                           
  4406 ;; *************** function _initialiseShaftTest *****************
  4407 ;; Defined at:
  4408 ;;		line 22 in file "shaftTest.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;		None
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;		None
  4413 ;; Return value:  Size  Location     Type
  4414 ;;                  1    wreg      void 
  4415 ;; Registers used:
  4416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4417 ;; Tracked objects:
  4418 ;;		On entry : 0/0
  4419 ;;		On exit  : 0/0
  4420 ;;		Unchanged: 0/0
  4421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4426 ;;Total ram usage:        0 bytes
  4427 ;; Hardware stack levels used:    1
  4428 ;; Hardware stack levels required when called:    9
  4429 ;; This function calls:
  4430 ;;		_initialiseState
  4431 ;; This function is called by:
  4432 ;;		_initialise
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           
  4436                           	psect	text13
  4437  007086                     __ptext13:
  4438                           	opt stack 0
  4439  007086                     _initialiseShaftTest:
  4440                           	opt stack 20
  4441                           
  4442                           ;shaftTest.c: 23: ANSELAbits.ANSELA1 = 0;
  4443                           
  4444                           ; BSR set to: 14
  4445                           ;incstack = 0
  4446  007086  010E               	movlb	14	; () banked
  4447  007088  9392               	bcf	146,1,b	;volatile
  4448                           
  4449                           ;shaftTest.c: 24: TRISAbits.TRISA1 = 0;
  4450  00708A  9281               	bcf	3969,1,c	;volatile
  4451                           
  4452                           ;shaftTest.c: 25: LATAbits.LATA1 = 0;
  4453  00708C  9279               	bcf	3961,1,c	;volatile
  4454                           
  4455                           ;shaftTest.c: 27: ANSELGbits.ANSELG2 = 0;
  4456  00708E  010E               	movlb	14	; () banked
  4457  007090  95BC               	bcf	188,2,b	;volatile
  4458                           
  4459                           ;shaftTest.c: 28: TRISGbits.TRISG2 = 0;
  4460  007092  9487               	bcf	3975,2,c	;volatile
  4461                           
  4462                           ;shaftTest.c: 29: LATGbits.LATG2 = 0;
  4463  007094  947F               	bcf	3967,2,c	;volatile
  4464                           
  4465                           ;shaftTest.c: 31: TRISHbits.TRISH3 = 0;
  4466  007096  9688               	bcf	3976,3,c	;volatile
  4467                           
  4468                           ;shaftTest.c: 32: LATHbits.LATH3 = 0;
  4469  007098  9680               	bcf	3968,3,c	;volatile
  4470                           
  4471                           ;shaftTest.c: 34: ANSELGbits.ANSELG3 = 1;
  4472  00709A  010E               	movlb	14	; () banked
  4473  00709C  87BC               	bsf	188,3,b	;volatile
  4474                           
  4475                           ;shaftTest.c: 35: TRISGbits.TRISG3 = 1;
  4476  00709E  8687               	bsf	3975,3,c	;volatile
  4477                           
  4478                           ;shaftTest.c: 37: ANSELGbits.ANSELG7 = 1;
  4479  0070A0  010E               	movlb	14	; () banked
  4480  0070A2  8FBC               	bsf	188,7,b	;volatile
  4481                           
  4482                           ;shaftTest.c: 38: TRISGbits.TRISG7 = 1;
  4483  0070A4  8E87               	bsf	3975,7,c	;volatile
  4484                           
  4485                           ; BSR set to: 14
  4486                           ;shaftTest.c: 40: initialiseState(&state.shaftTest, 11);
  4487  0070A6  0ED6               	movlw	low (_state+47)
  4488  0070A8  0100               	movlb	0	; () banked
  4489  0070AA  6F60               	movwf	initialiseState@specific& (0+255),b
  4490  0070AC  0E01               	movlw	high (_state+47)
  4491  0070AE  0100               	movlb	0	; () banked
  4492  0070B0  6F61               	movwf	(initialiseState@specific+1)& (0+255),b
  4493  0070B2  0E0B               	movlw	11
  4494  0070B4  0100               	movlb	0	; () banked
  4495  0070B6  6F62               	movwf	initialiseState@number& (0+255),b
  4496  0070B8  ECDB  F034         	call	_initialiseState	;wreg free
  4497  0070BC  0012               	return		;funcret
  4498  0070BE                     __end_of_initialiseShaftTest:
  4499                           	opt stack 0
  4500                           tblptru	equ	0xFF8
  4501                           tblptrh	equ	0xFF7
  4502                           tblptrl	equ	0xFF6
  4503                           tablat	equ	0xFF5
  4504                           intcon	equ	0xFF2
  4505                           postinc0	equ	0xFEE
  4506                           wreg	equ	0xFE8
  4507                           postdec1	equ	0xFE5
  4508                           fsr1h	equ	0xFE2
  4509                           fsr1l	equ	0xFE1
  4510                           indf2	equ	0xFDF
  4511                           postinc2	equ	0xFDE
  4512                           postdec2	equ	0xFDD
  4513                           fsr2h	equ	0xFDA
  4514                           fsr2l	equ	0xFD9
  4515                           status	equ	0xFD8
  4516                           
  4517 ;; *************** function _initialiseReadSupply *****************
  4518 ;; Defined at:
  4519 ;;		line 20 in file "readSupply.c"
  4520 ;; Parameters:    Size  Location     Type
  4521 ;;		None
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;		None
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  1    wreg      void 
  4526 ;; Registers used:
  4527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4537 ;;Total ram usage:        0 bytes
  4538 ;; Hardware stack levels used:    1
  4539 ;; Hardware stack levels required when called:    9
  4540 ;; This function calls:
  4541 ;;		_initialiseState
  4542 ;; This function is called by:
  4543 ;;		_initialise
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547                           	psect	text14
  4548  0076B2                     __ptext14:
  4549                           	opt stack 0
  4550  0076B2                     _initialiseReadSupply:
  4551                           	opt stack 20
  4552                           
  4553                           ;readSupply.c: 21: ANSELFbits.ANSELF2 = 1;
  4554                           
  4555                           ;incstack = 0
  4556  0076B2  010E               	movlb	14	; () banked
  4557  0076B4  85B4               	bsf	180,2,b	;volatile
  4558                           
  4559                           ;readSupply.c: 22: TRISFbits.TRISF2 = 1;
  4560  0076B6  8486               	bsf	3974,2,c	;volatile
  4561                           
  4562                           ;readSupply.c: 24: TRISHbits.TRISH2 = 1;
  4563  0076B8  8488               	bsf	3976,2,c	;volatile
  4564                           
  4565                           ; BSR set to: 14
  4566                           ;readSupply.c: 26: initialiseState(&state.readSupply, 9);
  4567  0076BA  0EC1               	movlw	low (_state+26)
  4568  0076BC  0100               	movlb	0	; () banked
  4569  0076BE  6F60               	movwf	initialiseState@specific& (0+255),b
  4570  0076C0  0E01               	movlw	high (_state+26)
  4571  0076C2  0100               	movlb	0	; () banked
  4572  0076C4  6F61               	movwf	(initialiseState@specific+1)& (0+255),b
  4573  0076C6  0E09               	movlw	9
  4574  0076C8  0100               	movlb	0	; () banked
  4575  0076CA  6F62               	movwf	initialiseState@number& (0+255),b
  4576  0076CC  ECDB  F034         	call	_initialiseState	;wreg free
  4577  0076D0  0012               	return		;funcret
  4578  0076D2                     __end_of_initialiseReadSupply:
  4579                           	opt stack 0
  4580                           tblptru	equ	0xFF8
  4581                           tblptrh	equ	0xFF7
  4582                           tblptrl	equ	0xFF6
  4583                           tablat	equ	0xFF5
  4584                           intcon	equ	0xFF2
  4585                           postinc0	equ	0xFEE
  4586                           wreg	equ	0xFE8
  4587                           postdec1	equ	0xFE5
  4588                           fsr1h	equ	0xFE2
  4589                           fsr1l	equ	0xFE1
  4590                           indf2	equ	0xFDF
  4591                           postinc2	equ	0xFDE
  4592                           postdec2	equ	0xFDD
  4593                           fsr2h	equ	0xFDA
  4594                           fsr2l	equ	0xFD9
  4595                           status	equ	0xFD8
  4596                           
  4597 ;; *************** function _initialiseReadKeyCable *****************
  4598 ;; Defined at:
  4599 ;;		line 21 in file "readKeyCable.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;		None
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;		None
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  1    wreg      void 
  4606 ;; Registers used:
  4607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4617 ;;Total ram usage:        0 bytes
  4618 ;; Hardware stack levels used:    1
  4619 ;; Hardware stack levels required when called:    9
  4620 ;; This function calls:
  4621 ;;		_initialiseState
  4622 ;; This function is called by:
  4623 ;;		_initialise
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           	psect	text15
  4628  007506                     __ptext15:
  4629                           	opt stack 0
  4630  007506                     _initialiseReadKeyCable:
  4631                           	opt stack 20
  4632                           
  4633                           ;readKeyCable.c: 22: ANSELAbits.ANSELA3 = 1;
  4634                           
  4635                           ;incstack = 0
  4636  007506  010E               	movlb	14	; () banked
  4637  007508  8792               	bsf	146,3,b	;volatile
  4638                           
  4639                           ;readKeyCable.c: 23: TRISAbits.TRISA3 = 1;
  4640  00750A  8681               	bsf	3969,3,c	;volatile
  4641                           
  4642                           ;readKeyCable.c: 25: ANSELEbits.ANSELE7 = 1;
  4643  00750C  010E               	movlb	14	; () banked
  4644  00750E  8FAF               	bsf	175,7,b	;volatile
  4645                           
  4646                           ;readKeyCable.c: 26: TRISEbits.TRISE7 = 1;
  4647  007510  8E85               	bsf	3973,7,c	;volatile
  4648                           
  4649                           ;readKeyCable.c: 28: ANSELEbits.ANSELE5 = 0;
  4650  007512  010E               	movlb	14	; () banked
  4651  007514  9BAF               	bcf	175,5,b	;volatile
  4652                           
  4653                           ;readKeyCable.c: 29: TRISEbits.TRISE5 = 0;
  4654  007516  9A85               	bcf	3973,5,c	;volatile
  4655                           
  4656                           ; BSR set to: 14
  4657                           ;readKeyCable.c: 31: initialiseState(&state.readKeyCable, 1);
  4658  007518  0EBA               	movlw	low (_state+19)
  4659  00751A  0100               	movlb	0	; () banked
  4660  00751C  6F60               	movwf	initialiseState@specific& (0+255),b
  4661  00751E  0E01               	movlw	high (_state+19)
  4662  007520  0100               	movlb	0	; () banked
  4663  007522  6F61               	movwf	(initialiseState@specific+1)& (0+255),b
  4664  007524  0E01               	movlw	1
  4665  007526  0100               	movlb	0	; () banked
  4666  007528  6F62               	movwf	initialiseState@number& (0+255),b
  4667  00752A  ECDB  F034         	call	_initialiseState	;wreg free
  4668  00752E  0012               	return		;funcret
  4669  007530                     __end_of_initialiseReadKeyCable:
  4670                           	opt stack 0
  4671                           tblptru	equ	0xFF8
  4672                           tblptrh	equ	0xFF7
  4673                           tblptrl	equ	0xFF6
  4674                           tablat	equ	0xFF5
  4675                           intcon	equ	0xFF2
  4676                           postinc0	equ	0xFEE
  4677                           wreg	equ	0xFE8
  4678                           postdec1	equ	0xFE5
  4679                           fsr1h	equ	0xFE2
  4680                           fsr1l	equ	0xFE1
  4681                           indf2	equ	0xFDF
  4682                           postinc2	equ	0xFDE
  4683                           postdec2	equ	0xFDD
  4684                           fsr2h	equ	0xFDA
  4685                           fsr2l	equ	0xFD9
  4686                           status	equ	0xFD8
  4687                           
  4688 ;; *************** function _initialisePic *****************
  4689 ;; Defined at:
  4690 ;;		line 68 in file "initialise.c"
  4691 ;; Parameters:    Size  Location     Type
  4692 ;;		None
  4693 ;; Auto vars:     Size  Location     Type
  4694 ;;		None
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  1    wreg      void 
  4697 ;; Registers used:
  4698 ;;		wreg, status,2
  4699 ;; Tracked objects:
  4700 ;;		On entry : 0/0
  4701 ;;		On exit  : 0/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4708 ;;Total ram usage:        0 bytes
  4709 ;; Hardware stack levels used:    1
  4710 ;; Hardware stack levels required when called:    8
  4711 ;; This function calls:
  4712 ;;		Nothing
  4713 ;; This function is called by:
  4714 ;;		_initialise
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718                           	psect	text16
  4719  007530                     __ptext16:
  4720                           	opt stack 0
  4721  007530                     _initialisePic:
  4722                           	opt stack 21
  4723                           
  4724                           ;initialise.c: 70: OSCCON1bits.NDIV = 0b0000;
  4725                           
  4726                           ;incstack = 0
  4727  007530  010E               	movlb	14	; () banked
  4728  007532  9143               	bcf	67,0,b	;volatile
  4729  007534  9343               	bcf	67,1,b	;volatile
  4730  007536  9543               	bcf	67,2,b	;volatile
  4731  007538  9743               	bcf	67,3,b	;volatile
  4732                           
  4733                           ; BSR set to: 14
  4734                           ;initialise.c: 71: OSCCON1bits.NOSC = 0b010;
  4735  00753A  010E               	movlb	14	; () banked
  4736  00753C  5143               	movf	67,w,b	;volatile
  4737  00753E  0B8F               	andlw	-113
  4738  007540  0920               	iorlw	32
  4739  007542  6F43               	movwf	67,b	;volatile
  4740                           
  4741                           ; BSR set to: 14
  4742                           ;initialise.c: 72: OSCCON2bits.CDIV = 0b0000;
  4743  007544  010E               	movlb	14	; () banked
  4744  007546  9144               	bcf	68,0,b	;volatile
  4745  007548  9344               	bcf	68,1,b	;volatile
  4746  00754A  9544               	bcf	68,2,b	;volatile
  4747  00754C  9744               	bcf	68,3,b	;volatile
  4748                           
  4749                           ;initialise.c: 73: OSCCON2bits.COSC = 0b010;
  4750  00754E  010E               	movlb	14	; () banked
  4751  007550  5144               	movf	68,w,b	;volatile
  4752  007552  0B8F               	andlw	-113
  4753  007554  0920               	iorlw	32
  4754  007556  6F44               	movwf	68,b	;volatile
  4755                           
  4756                           ; BSR set to: 14
  4757  007558  0012               	return		;funcret
  4758  00755A                     __end_of_initialisePic:
  4759                           	opt stack 0
  4760                           tblptru	equ	0xFF8
  4761                           tblptrh	equ	0xFF7
  4762                           tblptrl	equ	0xFF6
  4763                           tablat	equ	0xFF5
  4764                           intcon	equ	0xFF2
  4765                           postinc0	equ	0xFEE
  4766                           wreg	equ	0xFE8
  4767                           postdec1	equ	0xFE5
  4768                           fsr1h	equ	0xFE2
  4769                           fsr1l	equ	0xFE1
  4770                           indf2	equ	0xFDF
  4771                           postinc2	equ	0xFDE
  4772                           postdec2	equ	0xFDD
  4773                           fsr2h	equ	0xFDA
  4774                           fsr2l	equ	0xFD9
  4775                           status	equ	0xFD8
  4776                           
  4777 ;; *************** function _initialiseLed *****************
  4778 ;; Defined at:
  4779 ;;		line 20 in file "led.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;		None
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;		None
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  1    wreg      void 
  4786 ;; Registers used:
  4787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4797 ;;Total ram usage:        0 bytes
  4798 ;; Hardware stack levels used:    1
  4799 ;; Hardware stack levels required when called:    9
  4800 ;; This function calls:
  4801 ;;		_initialiseState
  4802 ;;		_setOffLed
  4803 ;; This function is called by:
  4804 ;;		_initialise
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           	psect	text17
  4809  0075FC                     __ptext17:
  4810                           	opt stack 0
  4811  0075FC                     _initialiseLed:
  4812                           	opt stack 20
  4813                           
  4814                           ;led.c: 21: ANSELAbits.ANSELA0 = 0;
  4815                           
  4816                           ; BSR set to: 14
  4817                           ;incstack = 0
  4818  0075FC  010E               	movlb	14	; () banked
  4819  0075FE  9192               	bcf	146,0,b	;volatile
  4820                           
  4821                           ;led.c: 23: TRISHbits.TRISH0 = 0;
  4822  007600  9088               	bcf	3976,0,c	;volatile
  4823                           
  4824                           ;led.c: 24: TRISAbits.TRISA0 = 0;
  4825  007602  9081               	bcf	3969,0,c	;volatile
  4826                           
  4827                           ;led.c: 25: TRISHbits.TRISH1 = 0;
  4828  007604  9288               	bcf	3976,1,c	;volatile
  4829                           
  4830                           ; BSR set to: 14
  4831                           ;led.c: 27: setOffLed();
  4832  007606  ECCE  F03D         	call	_setOffLed	;wreg free
  4833                           
  4834                           ;led.c: 29: initialiseState(&state.led, 4);
  4835  00760A  0EB3               	movlw	low (_state+12)
  4836  00760C  0100               	movlb	0	; () banked
  4837  00760E  6F60               	movwf	initialiseState@specific& (0+255),b
  4838  007610  0E01               	movlw	high (_state+12)
  4839  007612  0100               	movlb	0	; () banked
  4840  007614  6F61               	movwf	(initialiseState@specific+1)& (0+255),b
  4841  007616  0E04               	movlw	4
  4842  007618  0100               	movlb	0	; () banked
  4843  00761A  6F62               	movwf	initialiseState@number& (0+255),b
  4844  00761C  ECDB  F034         	call	_initialiseState	;wreg free
  4845  007620  0012               	return		;funcret
  4846  007622                     __end_of_initialiseLed:
  4847                           	opt stack 0
  4848                           tblptru	equ	0xFF8
  4849                           tblptrh	equ	0xFF7
  4850                           tblptrl	equ	0xFF6
  4851                           tablat	equ	0xFF5
  4852                           intcon	equ	0xFF2
  4853                           postinc0	equ	0xFEE
  4854                           wreg	equ	0xFE8
  4855                           postdec1	equ	0xFE5
  4856                           fsr1h	equ	0xFE2
  4857                           fsr1l	equ	0xFE1
  4858                           indf2	equ	0xFDF
  4859                           postinc2	equ	0xFDE
  4860                           postdec2	equ	0xFDD
  4861                           fsr2h	equ	0xFDA
  4862                           fsr2l	equ	0xFD9
  4863                           status	equ	0xFD8
  4864                           
  4865 ;; *************** function _initialiseEDDPins *****************
  4866 ;; Defined at:
  4867 ;;		line 68 in file "eddComms.c"
  4868 ;; Parameters:    Size  Location     Type
  4869 ;;		None
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;		None
  4872 ;; Return value:  Size  Location     Type
  4873 ;;                  1    wreg      void 
  4874 ;; Registers used:
  4875 ;;		None
  4876 ;; Tracked objects:
  4877 ;;		On entry : 0/0
  4878 ;;		On exit  : 0/0
  4879 ;;		Unchanged: 0/0
  4880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4885 ;;Total ram usage:        0 bytes
  4886 ;; Hardware stack levels used:    1
  4887 ;; Hardware stack levels required when called:    8
  4888 ;; This function calls:
  4889 ;;		Nothing
  4890 ;; This function is called by:
  4891 ;;		_initialise
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895                           	psect	text18
  4896  007ADC                     __ptext18:
  4897                           	opt stack 0
  4898  007ADC                     _initialiseEDDPins:
  4899                           	opt stack 21
  4900                           
  4901                           ;eddComms.c: 69: TRISEbits.TRISE6 = 0;
  4902                           
  4903                           ;incstack = 0
  4904  007ADC  9C85               	bcf	3973,6,c	;volatile
  4905                           
  4906                           ;eddComms.c: 70: ANSELEbits.ANSELE6 = 0;
  4907  007ADE  010E               	movlb	14	; () banked
  4908  007AE0  9DAF               	bcf	175,6,b	;volatile
  4909                           
  4910                           ;eddComms.c: 71: LATEbits.LATE6 = 0;
  4911  007AE2  9C7D               	bcf	3965,6,c	;volatile
  4912                           
  4913                           ;eddComms.c: 73: TRISEbits.TRISE7 = 1;
  4914  007AE4  8E85               	bsf	3973,7,c	;volatile
  4915                           
  4916                           ;eddComms.c: 74: ANSELEbits.ANSELE7 = 1;
  4917  007AE6  010E               	movlb	14	; () banked
  4918  007AE8  8FAF               	bsf	175,7,b	;volatile
  4919                           
  4920                           ; BSR set to: 14
  4921  007AEA  0012               	return		;funcret
  4922  007AEC                     __end_of_initialiseEDDPins:
  4923                           	opt stack 0
  4924                           tblptru	equ	0xFF8
  4925                           tblptrh	equ	0xFF7
  4926                           tblptrl	equ	0xFF6
  4927                           tablat	equ	0xFF5
  4928                           intcon	equ	0xFF2
  4929                           postinc0	equ	0xFEE
  4930                           wreg	equ	0xFE8
  4931                           postdec1	equ	0xFE5
  4932                           fsr1h	equ	0xFE2
  4933                           fsr1l	equ	0xFE1
  4934                           indf2	equ	0xFDF
  4935                           postinc2	equ	0xFDE
  4936                           postdec2	equ	0xFDD
  4937                           fsr2h	equ	0xFDA
  4938                           fsr2l	equ	0xFD9
  4939                           status	equ	0xFD8
  4940                           
  4941 ;; *************** function _initialiseDetMemory *****************
  4942 ;; Defined at:
  4943 ;;		line 205 in file "initialise.c"
  4944 ;; Parameters:    Size  Location     Type
  4945 ;;		None
  4946 ;; Auto vars:     Size  Location     Type
  4947 ;;		None
  4948 ;; Return value:  Size  Location     Type
  4949 ;;                  1    wreg      void 
  4950 ;; Registers used:
  4951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4952 ;; Tracked objects:
  4953 ;;		On entry : 0/0
  4954 ;;		On exit  : 0/0
  4955 ;;		Unchanged: 0/0
  4956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4959 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4960 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4961 ;;Total ram usage:        2 bytes
  4962 ;; Hardware stack levels used:    1
  4963 ;; Hardware stack levels required when called:   10
  4964 ;; This function calls:
  4965 ;;		___wmul
  4966 ;;		_clearEDDStatusbits
  4967 ;;		_initialiseDetWindows
  4968 ;;		_readStructureFromEeprom
  4969 ;; This function is called by:
  4970 ;;		_initialise
  4971 ;; This function uses a non-reentrant model
  4972 ;;
  4973                           
  4974                           	psect	text19
  4975  0051F8                     __ptext19:
  4976                           	opt stack 0
  4977  0051F8                     _initialiseDetMemory:
  4978                           	opt stack 19
  4979                           
  4980                           ;initialise.c: 206: readStructureFromEeprom(&ABB_1.dets_length,1);
  4981                           
  4982                           ; BSR set to: 14
  4983                           ;incstack = 0
  4984  0051F8  0EC0               	movlw	low _ABB_1
  4985  0051FA  0100               	movlb	0	; () banked
  4986  0051FC  6F66               	movwf	readStructureFromEeprom@data& (0+255),b
  4987  0051FE  0E03               	movlw	high _ABB_1
  4988  005200  0100               	movlb	0	; () banked
  4989  005202  6F67               	movwf	(readStructureFromEeprom@data+1)& (0+255),b
  4990  005204  0E00               	movlw	0
  4991  005206  0100               	movlb	0	; () banked
  4992  005208  6F69               	movwf	(readStructureFromEeprom@size+1)& (0+255),b
  4993  00520A  0E01               	movlw	1
  4994  00520C  6F68               	movwf	readStructureFromEeprom@size& (0+255),b
  4995  00520E  EC68  F036         	call	_readStructureFromEeprom	;wreg free
  4996                           
  4997                           ;initialise.c: 207: if(ABB_1.dets_length == 0xFF)
  4998  005212  C3C0  FFE8         	movff	_ABB_1,wreg
  4999  005216  0AFF               	xorlw	255
  5000  005218  A4D8               	btfss	status,2,c
  5001  00521A  D003               	goto	l15632
  5002                           
  5003                           ;initialise.c: 208: ABB_1.dets_length = 0;
  5004  00521C  0E00               	movlw	0
  5005  00521E  CFE8 F3C0          	movff	wreg,_ABB_1
  5006  005222                     l15632:
  5007                           
  5008                           ;initialise.c: 209: readStructureFromEeprom(&ABB_1.destination,2);
  5009  005222  0E51               	movlw	low (_ABB_1+913)
  5010  005224  0100               	movlb	0	; () banked
  5011  005226  6F66               	movwf	readStructureFromEeprom@data& (0+255),b
  5012  005228  0E07               	movlw	high (_ABB_1+913)
  5013  00522A  0100               	movlb	0	; () banked
  5014  00522C  6F67               	movwf	(readStructureFromEeprom@data+1)& (0+255),b
  5015  00522E  0E00               	movlw	0
  5016  005230  0100               	movlb	0	; () banked
  5017  005232  6F69               	movwf	(readStructureFromEeprom@size+1)& (0+255),b
  5018  005234  0E02               	movlw	2
  5019  005236  6F68               	movwf	readStructureFromEeprom@size& (0+255),b
  5020  005238  EC68  F036         	call	_readStructureFromEeprom	;wreg free
  5021                           
  5022                           ;initialise.c: 210: readStructureFromEeprom(ABB_1.det_arrays.UIDs, sizeof(detonator_UID)
      +                          *(ABB_1.dets_length + 1));
  5023  00523C  0EC4               	movlw	low (_ABB_1+4)
  5024  00523E  0100               	movlb	0	; () banked
  5025  005240  6F66               	movwf	readStructureFromEeprom@data& (0+255),b
  5026  005242  0E03               	movlw	high (_ABB_1+4)
  5027  005244  0100               	movlb	0	; () banked
  5028  005246  6F67               	movwf	(readStructureFromEeprom@data+1)& (0+255),b
  5029  005248  C3C0  F06D         	movff	_ABB_1,??_initialiseDetMemory
  5030  00524C  0E01               	movlw	1
  5031  00524E  0100               	movlb	0	; () banked
  5032  005250  256D               	addwf	??_initialiseDetMemory& (0+255),w,b
  5033  005252  0100               	movlb	0	; () banked
  5034  005254  6F60               	movwf	___wmul@multiplier& (0+255),b
  5035  005256  0100               	movlb	0	; () banked
  5036  005258  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
  5037  00525A  0E00               	movlw	0
  5038  00525C  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
  5039  00525E  0E00               	movlw	0
  5040  005260  0100               	movlb	0	; () banked
  5041  005262  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5042  005264  0E05               	movlw	5
  5043  005266  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5044  005268  ECB3  F038         	call	___wmul	;wreg free
  5045  00526C  C060  F068         	movff	?___wmul,readStructureFromEeprom@size
  5046  005270  C061  F069         	movff	?___wmul+1,readStructureFromEeprom@size+1
  5047  005274  EC68  F036         	call	_readStructureFromEeprom	;wreg free
  5048                           
  5049                           ;initialise.c: 211: readStructureFromEeprom(ABB_1.det_arrays.info, sizeof(detonator_data
      +                          )*(ABB_1.dets_length + 1));
  5050  005278  0EBD               	movlw	low (_ABB_1+509)
  5051  00527A  0100               	movlb	0	; () banked
  5052  00527C  6F66               	movwf	readStructureFromEeprom@data& (0+255),b
  5053  00527E  0E05               	movlw	high (_ABB_1+509)
  5054  005280  0100               	movlb	0	; () banked
  5055  005282  6F67               	movwf	(readStructureFromEeprom@data+1)& (0+255),b
  5056  005284  EE23  F0C0         	lfsr	2,_ABB_1
  5057  005288  50DF               	movf	indf2,w,c
  5058  00528A  0100               	movlb	0	; () banked
  5059  00528C  6F6D               	movwf	??_initialiseDetMemory& (0+255),b
  5060  00528E  6B6E               	clrf	(??_initialiseDetMemory+1)& (0+255),b
  5061  005290  0100               	movlb	0	; () banked
  5062  005292  90D8               	bcf	status,0,c
  5063  005294  376D               	rlcf	??_initialiseDetMemory& (0+255),f,b
  5064  005296  376E               	rlcf	(??_initialiseDetMemory+1)& (0+255),f,b
  5065  005298  0100               	movlb	0	; () banked
  5066  00529A  90D8               	bcf	status,0,c
  5067  00529C  376D               	rlcf	??_initialiseDetMemory& (0+255),f,b
  5068  00529E  376E               	rlcf	(??_initialiseDetMemory+1)& (0+255),f,b
  5069  0052A0  0E04               	movlw	4
  5070  0052A2  0100               	movlb	0	; () banked
  5071  0052A4  256D               	addwf	??_initialiseDetMemory& (0+255),w,b
  5072  0052A6  0100               	movlb	0	; () banked
  5073  0052A8  6F68               	movwf	readStructureFromEeprom@size& (0+255),b
  5074  0052AA  0E00               	movlw	0
  5075  0052AC  0100               	movlb	0	; () banked
  5076  0052AE  216E               	addwfc	(??_initialiseDetMemory+1)& (0+255),w,b
  5077  0052B0  0100               	movlb	0	; () banked
  5078  0052B2  6F69               	movwf	(readStructureFromEeprom@size+1)& (0+255),b
  5079  0052B4  EC68  F036         	call	_readStructureFromEeprom	;wreg free
  5080                           
  5081                           ;initialise.c: 212: clearEDDStatusbits();
  5082  0052B8  EC2B  F00D         	call	_clearEDDStatusbits	;wreg free
  5083                           
  5084                           ;initialise.c: 213: initialiseDetWindows();
  5085  0052BC  EC27  F02A         	call	_initialiseDetWindows	;wreg free
  5086  0052C0  0012               	return		;funcret
  5087  0052C2                     __end_of_initialiseDetMemory:
  5088                           	opt stack 0
  5089                           tblptru	equ	0xFF8
  5090                           tblptrh	equ	0xFF7
  5091                           tblptrl	equ	0xFF6
  5092                           tablat	equ	0xFF5
  5093                           intcon	equ	0xFF2
  5094                           postinc0	equ	0xFEE
  5095                           wreg	equ	0xFE8
  5096                           postdec1	equ	0xFE5
  5097                           fsr1h	equ	0xFE2
  5098                           fsr1l	equ	0xFE1
  5099                           indf2	equ	0xFDF
  5100                           postinc2	equ	0xFDE
  5101                           postdec2	equ	0xFDD
  5102                           fsr2h	equ	0xFDA
  5103                           fsr2l	equ	0xFD9
  5104                           status	equ	0xFD8
  5105                           
  5106 ;; *************** function _readStructureFromEeprom *****************
  5107 ;; Defined at:
  5108 ;;		line 236 in file "peripherals.c"
  5109 ;; Parameters:    Size  Location     Type
  5110 ;;  data            2    6[BANK0 ] PTR unsigned char 
  5111 ;;		 -> ABB_1.det_arrays(909), ABB_1(917), 
  5112 ;;  size            2    8[BANK0 ] int 
  5113 ;; Auto vars:     Size  Location     Type
  5114 ;;  i               2   11[BANK0 ] int 
  5115 ;; Return value:  Size  Location     Type
  5116 ;;                  1    wreg      void 
  5117 ;; Registers used:
  5118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5124 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5125 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5126 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5127 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5128 ;;Total ram usage:        7 bytes
  5129 ;; Hardware stack levels used:    1
  5130 ;; Hardware stack levels required when called:    9
  5131 ;; This function calls:
  5132 ;;		_readByteFromEeprom
  5133 ;; This function is called by:
  5134 ;;		_initialiseDetMemory
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           	psect	text20
  5139  006CD0                     __ptext20:
  5140                           	opt stack 0
  5141  006CD0                     _readStructureFromEeprom:
  5142                           	opt stack 19
  5143                           
  5144                           ;peripherals.c: 237: for(int i = 0; i < size; i++){
  5145                           
  5146                           ;incstack = 0
  5147  006CD0  0E00               	movlw	0
  5148  006CD2  0100               	movlb	0	; () banked
  5149  006CD4  6F6C               	movwf	(readStructureFromEeprom@i+1)& (0+255),b
  5150  006CD6  0E00               	movlw	0
  5151  006CD8  6F6B               	movwf	readStructureFromEeprom@i& (0+255),b
  5152  006CDA  D011               	goto	l14342
  5153  006CDC                     l14338:
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;peripherals.c: 238: readByteFromEeprom(data + i);
  5157  006CDC  0100               	movlb	0	; () banked
  5158  006CDE  516B               	movf	readStructureFromEeprom@i& (0+255),w,b
  5159  006CE0  0100               	movlb	0	; () banked
  5160  006CE2  2566               	addwf	readStructureFromEeprom@data& (0+255),w,b
  5161  006CE4  0100               	movlb	0	; () banked
  5162  006CE6  6F60               	movwf	readByteFromEeprom@byte& (0+255),b
  5163  006CE8  0100               	movlb	0	; () banked
  5164  006CEA  516C               	movf	(readStructureFromEeprom@i+1)& (0+255),w,b
  5165  006CEC  0100               	movlb	0	; () banked
  5166  006CEE  2167               	addwfc	(readStructureFromEeprom@data+1)& (0+255),w,b
  5167  006CF0  0100               	movlb	0	; () banked
  5168  006CF2  6F61               	movwf	(readByteFromEeprom@byte+1)& (0+255),b
  5169  006CF4  EC90  F036         	call	_readByteFromEeprom	;wreg free
  5170  006CF8  0100               	movlb	0	; () banked
  5171  006CFA  4B6B               	infsnz	readStructureFromEeprom@i& (0+255),f,b
  5172  006CFC  2B6C               	incf	(readStructureFromEeprom@i+1)& (0+255),f,b
  5173  006CFE                     l14342:
  5174                           
  5175                           ; BSR set to: 0
  5176  006CFE  0100               	movlb	0	; () banked
  5177  006D00  5168               	movf	readStructureFromEeprom@size& (0+255),w,b
  5178  006D02  0100               	movlb	0	; () banked
  5179  006D04  5D6B               	subwf	readStructureFromEeprom@i& (0+255),w,b
  5180  006D06  0100               	movlb	0	; () banked
  5181  006D08  516C               	movf	(readStructureFromEeprom@i+1)& (0+255),w,b
  5182  006D0A  0A80               	xorlw	128
  5183  006D0C  0100               	movlb	0	; () banked
  5184  006D0E  6F6A               	movwf	??_readStructureFromEeprom& (0+255),b
  5185  006D10  0100               	movlb	0	; () banked
  5186  006D12  5169               	movf	(readStructureFromEeprom@size+1)& (0+255),w,b
  5187  006D14  0A80               	xorlw	128
  5188  006D16  0100               	movlb	0	; () banked
  5189  006D18  596A               	subwfb	??_readStructureFromEeprom& (0+255),w,b
  5190  006D1A  B0D8               	btfsc	status,0,c
  5191  006D1C  0012               	return	
  5192  006D1E  D7DE               	goto	l14338
  5193  006D20                     __end_of_readStructureFromEeprom:
  5194                           	opt stack 0
  5195                           tblptru	equ	0xFF8
  5196                           tblptrh	equ	0xFF7
  5197                           tblptrl	equ	0xFF6
  5198                           tablat	equ	0xFF5
  5199                           intcon	equ	0xFF2
  5200                           postinc0	equ	0xFEE
  5201                           wreg	equ	0xFE8
  5202                           postdec1	equ	0xFE5
  5203                           fsr1h	equ	0xFE2
  5204                           fsr1l	equ	0xFE1
  5205                           indf2	equ	0xFDF
  5206                           postinc2	equ	0xFDE
  5207                           postdec2	equ	0xFDD
  5208                           fsr2h	equ	0xFDA
  5209                           fsr2l	equ	0xFD9
  5210                           status	equ	0xFD8
  5211                           
  5212 ;; *************** function _readByteFromEeprom *****************
  5213 ;; Defined at:
  5214 ;;		line 219 in file "peripherals.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;  byte            2    0[BANK0 ] PTR unsigned char 
  5217 ;;		 -> ABB_1.det_arrays(909), ABB_1(917), 
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;  address         2    4[BANK0 ] unsigned int 
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  1    wreg      void 
  5222 ;; Registers used:
  5223 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5229 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5230 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5231 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5232 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5233 ;;Total ram usage:        6 bytes
  5234 ;; Hardware stack levels used:    1
  5235 ;; Hardware stack levels required when called:    8
  5236 ;; This function calls:
  5237 ;;		Nothing
  5238 ;; This function is called by:
  5239 ;;		_readStructureFromEeprom
  5240 ;; This function uses a non-reentrant model
  5241 ;;
  5242                           
  5243                           	psect	text21
  5244  006D20                     __ptext21:
  5245                           	opt stack 0
  5246  006D20                     _readByteFromEeprom:
  5247                           	opt stack 19
  5248                           
  5249                           ;peripherals.c: 220: unsigned int address = byte - &ABB_1;
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;incstack = 0
  5253  006D20  0EC0               	movlw	low _ABB_1
  5254  006D22  0100               	movlb	0	; () banked
  5255  006D24  6F62               	movwf	??_readByteFromEeprom& (0+255),b
  5256  006D26  0E03               	movlw	high _ABB_1
  5257  006D28  0100               	movlb	0	; () banked
  5258  006D2A  6F63               	movwf	(??_readByteFromEeprom+1)& (0+255),b
  5259  006D2C  0100               	movlb	0	; () banked
  5260  006D2E  1F62               	comf	??_readByteFromEeprom& (0+255),f,b
  5261  006D30  1F63               	comf	(??_readByteFromEeprom+1)& (0+255),f,b
  5262  006D32  4B62               	infsnz	??_readByteFromEeprom& (0+255),f,b
  5263  006D34  2B63               	incf	(??_readByteFromEeprom+1)& (0+255),f,b
  5264  006D36  0100               	movlb	0	; () banked
  5265  006D38  5160               	movf	readByteFromEeprom@byte& (0+255),w,b
  5266  006D3A  0100               	movlb	0	; () banked
  5267  006D3C  2562               	addwf	??_readByteFromEeprom& (0+255),w,b
  5268  006D3E  0100               	movlb	0	; () banked
  5269  006D40  6F64               	movwf	readByteFromEeprom@address& (0+255),b
  5270  006D42  0100               	movlb	0	; () banked
  5271  006D44  5161               	movf	(readByteFromEeprom@byte+1)& (0+255),w,b
  5272  006D46  0100               	movlb	0	; () banked
  5273  006D48  2163               	addwfc	(??_readByteFromEeprom+1)& (0+255),w,b
  5274  006D4A  0100               	movlb	0	; () banked
  5275  006D4C  6F65               	movwf	(readByteFromEeprom@address+1)& (0+255),b
  5276                           
  5277                           ; BSR set to: 0
  5278                           ;peripherals.c: 221: NVMCON1bits.NVMREG0 = 0;
  5279  006D4E  9C77               	bcf	3959,6,c	;volatile
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;peripherals.c: 222: NVMCON1bits.NVMREG1 = 0;
  5283  006D50  9E77               	bcf	3959,7,c	;volatile
  5284                           
  5285                           ; BSR set to: 0
  5286                           ;peripherals.c: 223: NVMADRL = address & 0xFF;
  5287  006D52  C064  FF74         	movff	readByteFromEeprom@address,3956	;volatile
  5288                           
  5289                           ; BSR set to: 0
  5290                           ;peripherals.c: 224: NVMADRH = (address >> 8) & 0xFF;
  5291  006D56  0100               	movlb	0	; () banked
  5292  006D58  5165               	movf	(readByteFromEeprom@address+1)& (0+255),w,b
  5293  006D5A  6E75               	movwf	3957,c	;volatile
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;peripherals.c: 225: NVMCON1bits.RD = 1;
  5297  006D5C  8077               	bsf	3959,0,c	;volatile
  5298  006D5E                     l380:
  5299  006D5E  B077               	btfsc	3959,0,c	;volatile
  5300  006D60  D7FE               	goto	l380
  5301                           
  5302                           ;peripherals.c: 227: *byte = NVMDAT;
  5303  006D62  C060  FFD9         	movff	readByteFromEeprom@byte,fsr2l
  5304  006D66  C061  FFDA         	movff	readByteFromEeprom@byte+1,fsr2h
  5305  006D6A  CF76 FFDF          	movff	3958,indf2	;volatile
  5306  006D6E  0012               	return		;funcret
  5307  006D70                     __end_of_readByteFromEeprom:
  5308                           	opt stack 0
  5309                           tblptru	equ	0xFF8
  5310                           tblptrh	equ	0xFF7
  5311                           tblptrl	equ	0xFF6
  5312                           tablat	equ	0xFF5
  5313                           intcon	equ	0xFF2
  5314                           postinc0	equ	0xFEE
  5315                           wreg	equ	0xFE8
  5316                           postdec1	equ	0xFE5
  5317                           fsr1h	equ	0xFE2
  5318                           fsr1l	equ	0xFE1
  5319                           indf2	equ	0xFDF
  5320                           postinc2	equ	0xFDE
  5321                           postdec2	equ	0xFDD
  5322                           fsr2h	equ	0xFDA
  5323                           fsr2l	equ	0xFD9
  5324                           status	equ	0xFD8
  5325                           
  5326 ;; *************** function _initialiseDetWindows *****************
  5327 ;; Defined at:
  5328 ;;		line 166 in file "initialise.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;		None
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;  i               2   10[BANK0 ] int 
  5333 ;; Return value:  Size  Location     Type
  5334 ;;                  1    wreg      void 
  5335 ;; Registers used:
  5336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5337 ;; Tracked objects:
  5338 ;;		On entry : 0/0
  5339 ;;		On exit  : 0/0
  5340 ;;		Unchanged: 0/0
  5341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5343 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5344 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5345 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5346 ;;Total ram usage:        6 bytes
  5347 ;; Hardware stack levels used:    1
  5348 ;; Hardware stack levels required when called:    9
  5349 ;; This function calls:
  5350 ;;		___wmul
  5351 ;; This function is called by:
  5352 ;;		_initialiseDetMemory
  5353 ;; This function uses a non-reentrant model
  5354 ;;
  5355                           
  5356                           	psect	text22
  5357  00544E                     __ptext22:
  5358                           	opt stack 0
  5359  00544E                     _initialiseDetWindows:
  5360                           	opt stack 19
  5361                           
  5362                           ;initialise.c: 167: for (int i = 0; i < 101; i++ ){
  5363                           
  5364                           ;incstack = 0
  5365  00544E  0E00               	movlw	0
  5366  005450  0100               	movlb	0	; () banked
  5367  005452  6F6B               	movwf	(initialiseDetWindows@i+1)& (0+255),b
  5368  005454  0E00               	movlw	0
  5369  005456  6F6A               	movwf	initialiseDetWindows@i& (0+255),b
  5370  005458                     l14362:
  5371                           
  5372                           ; BSR set to: 0
  5373  005458  0100               	movlb	0	; () banked
  5374  00545A  BF6B               	btfsc	(initialiseDetWindows@i+1)& (0+255),7,b
  5375  00545C  D008               	goto	l14366
  5376  00545E  0100               	movlb	0	; () banked
  5377  005460  516B               	movf	(initialiseDetWindows@i+1)& (0+255),w,b
  5378  005462  E155               	bnz	l592
  5379  005464  0E65               	movlw	101
  5380  005466  0100               	movlb	0	; () banked
  5381  005468  5D6A               	subwf	initialiseDetWindows@i& (0+255),w,b
  5382  00546A  B0D8               	btfsc	status,0,c
  5383  00546C  0012               	return	
  5384  00546E                     l14366:
  5385                           
  5386                           ; BSR set to: 0
  5387                           ;initialise.c: 168: ABB_1.det_arrays.UIDs[i].window = i;
  5388  00546E  C06A  F060         	movff	initialiseDetWindows@i,___wmul@multiplier
  5389  005472  C06B  F061         	movff	initialiseDetWindows@i+1,___wmul@multiplier+1
  5390  005476  0E00               	movlw	0
  5391  005478  0100               	movlb	0	; () banked
  5392  00547A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5393  00547C  0E05               	movlw	5
  5394  00547E  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5395  005480  ECB3  F038         	call	___wmul	;wreg free
  5396  005484  0EC0               	movlw	low _ABB_1
  5397  005486  0100               	movlb	0	; () banked
  5398  005488  6F66               	movwf	??_initialiseDetWindows& (0+255),b
  5399  00548A  0E03               	movlw	high _ABB_1
  5400  00548C  0100               	movlb	0	; () banked
  5401  00548E  6F67               	movwf	(??_initialiseDetWindows+1)& (0+255),b
  5402  005490  0E04               	movlw	4
  5403  005492  0100               	movlb	0	; () banked
  5404  005494  2766               	addwf	??_initialiseDetWindows& (0+255),f,b
  5405  005496  0E00               	movlw	0
  5406  005498  2367               	addwfc	(??_initialiseDetWindows+1)& (0+255),f,b
  5407  00549A  0100               	movlb	0	; () banked
  5408  00549C  5160               	movf	?___wmul& (0+255),w,b
  5409  00549E  0100               	movlb	0	; () banked
  5410  0054A0  2766               	addwf	??_initialiseDetWindows& (0+255),f,b
  5411  0054A2  0100               	movlb	0	; () banked
  5412  0054A4  5161               	movf	(?___wmul+1)& (0+255),w,b
  5413  0054A6  0100               	movlb	0	; () banked
  5414  0054A8  2367               	addwfc	(??_initialiseDetWindows+1)& (0+255),f,b
  5415  0054AA  0E04               	movlw	4
  5416  0054AC  0100               	movlb	0	; () banked
  5417  0054AE  2566               	addwf	??_initialiseDetWindows& (0+255),w,b
  5418  0054B0  6ED9               	movwf	fsr2l,c
  5419  0054B2  0E00               	movlw	0
  5420  0054B4  0100               	movlb	0	; () banked
  5421  0054B6  2167               	addwfc	(??_initialiseDetWindows+1)& (0+255),w,b
  5422  0054B8  6EDA               	movwf	fsr2h,c
  5423  0054BA  C06A  FFDF         	movff	initialiseDetWindows@i,indf2
  5424                           
  5425                           ; BSR set to: 0
  5426                           ;initialise.c: 169: ABB_1.det_arrays.info[i].window = i;
  5427  0054BE  0EF9               	movlw	249
  5428  0054C0  0100               	movlb	0	; () banked
  5429  0054C2  6F66               	movwf	??_initialiseDetWindows& (0+255),b
  5430  0054C4  0E01               	movlw	1
  5431  0054C6  0100               	movlb	0	; () banked
  5432  0054C8  6F67               	movwf	(??_initialiseDetWindows+1)& (0+255),b
  5433  0054CA  C06A  F068         	movff	initialiseDetWindows@i,??_initialiseDetWindows+2
  5434  0054CE  C06B  F069         	movff	initialiseDetWindows@i+1,??_initialiseDetWindows+3
  5435  0054D2  0100               	movlb	0	; () banked
  5436  0054D4  90D8               	bcf	status,0,c
  5437  0054D6  3768               	rlcf	(??_initialiseDetWindows+2)& (0+255),f,b
  5438  0054D8  3769               	rlcf	(??_initialiseDetWindows+3)& (0+255),f,b
  5439  0054DA  0100               	movlb	0	; () banked
  5440  0054DC  90D8               	bcf	status,0,c
  5441  0054DE  3768               	rlcf	(??_initialiseDetWindows+2)& (0+255),f,b
  5442  0054E0  3769               	rlcf	(??_initialiseDetWindows+3)& (0+255),f,b
  5443  0054E2  0100               	movlb	0	; () banked
  5444  0054E4  5166               	movf	??_initialiseDetWindows& (0+255),w,b
  5445  0054E6  0100               	movlb	0	; () banked
  5446  0054E8  2768               	addwf	(??_initialiseDetWindows+2)& (0+255),f,b
  5447  0054EA  0100               	movlb	0	; () banked
  5448  0054EC  5167               	movf	(??_initialiseDetWindows+1)& (0+255),w,b
  5449  0054EE  0100               	movlb	0	; () banked
  5450  0054F0  2369               	addwfc	(??_initialiseDetWindows+3)& (0+255),f,b
  5451  0054F2  0EC4               	movlw	low (_ABB_1+4)
  5452  0054F4  0100               	movlb	0	; () banked
  5453  0054F6  2568               	addwf	(??_initialiseDetWindows+2)& (0+255),w,b
  5454  0054F8  6ED9               	movwf	fsr2l,c
  5455  0054FA  0E03               	movlw	high (_ABB_1+4)
  5456  0054FC  0100               	movlb	0	; () banked
  5457  0054FE  2169               	addwfc	(??_initialiseDetWindows+3)& (0+255),w,b
  5458  005500  6EDA               	movwf	fsr2h,c
  5459  005502  C06A  FFDF         	movff	initialiseDetWindows@i,indf2
  5460                           
  5461                           ; BSR set to: 0
  5462  005506  0100               	movlb	0	; () banked
  5463  005508  4B6A               	infsnz	initialiseDetWindows@i& (0+255),f,b
  5464  00550A  2B6B               	incf	(initialiseDetWindows@i+1)& (0+255),f,b
  5465  00550C  D7A5               	goto	l14362
  5466  00550E                     l592:
  5467                           
  5468                           ; BSR set to: 0
  5469  00550E  0012               	return		;funcret
  5470  005510                     __end_of_initialiseDetWindows:
  5471                           	opt stack 0
  5472                           tblptru	equ	0xFF8
  5473                           tblptrh	equ	0xFF7
  5474                           tblptrl	equ	0xFF6
  5475                           tablat	equ	0xFF5
  5476                           intcon	equ	0xFF2
  5477                           postinc0	equ	0xFEE
  5478                           wreg	equ	0xFE8
  5479                           postdec1	equ	0xFE5
  5480                           fsr1h	equ	0xFE2
  5481                           fsr1l	equ	0xFE1
  5482                           indf2	equ	0xFDF
  5483                           postinc2	equ	0xFDE
  5484                           postdec2	equ	0xFDD
  5485                           fsr2h	equ	0xFDA
  5486                           fsr2l	equ	0xFD9
  5487                           status	equ	0xFD8
  5488                           
  5489 ;; *************** function _initialiseBluetooth *****************
  5490 ;; Defined at:
  5491 ;;		line 44 in file "bluetooth.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;		None
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;		None
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  1    wreg      void 
  5498 ;; Registers used:
  5499 ;;		wreg, status,2, cstack
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5509 ;;Total ram usage:        0 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; Hardware stack levels required when called:   10
  5512 ;; This function calls:
  5513 ;;		_initialiseBluetoothPins
  5514 ;; This function is called by:
  5515 ;;		_initialise
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519                           	psect	text23
  5520  007BCC                     __ptext23:
  5521                           	opt stack 0
  5522  007BCC                     _initialiseBluetooth:
  5523                           	opt stack 19
  5524                           
  5525                           ;bluetooth.c: 45: initialiseBluetoothPins();
  5526                           
  5527                           ; BSR set to: 0
  5528                           ;incstack = 0
  5529  007BCC  EC11  F03B         	call	_initialiseBluetoothPins	;wreg free
  5530  007BD0  0012               	return		;funcret
  5531  007BD2                     __end_of_initialiseBluetooth:
  5532                           	opt stack 0
  5533                           tblptru	equ	0xFF8
  5534                           tblptrh	equ	0xFF7
  5535                           tblptrl	equ	0xFF6
  5536                           tablat	equ	0xFF5
  5537                           intcon	equ	0xFF2
  5538                           postinc0	equ	0xFEE
  5539                           wreg	equ	0xFE8
  5540                           postdec1	equ	0xFE5
  5541                           fsr1h	equ	0xFE2
  5542                           fsr1l	equ	0xFE1
  5543                           indf2	equ	0xFDF
  5544                           postinc2	equ	0xFDE
  5545                           postdec2	equ	0xFDD
  5546                           fsr2h	equ	0xFDA
  5547                           fsr2l	equ	0xFD9
  5548                           status	equ	0xFD8
  5549                           
  5550 ;; *************** function _initialiseBluetoothPins *****************
  5551 ;; Defined at:
  5552 ;;		line 60 in file "bluetooth.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;		None
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;		None
  5557 ;; Return value:  Size  Location     Type
  5558 ;;                  1    wreg      void 
  5559 ;; Registers used:
  5560 ;;		wreg, status,2, cstack
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5570 ;;Total ram usage:        0 bytes
  5571 ;; Hardware stack levels used:    1
  5572 ;; Hardware stack levels required when called:    9
  5573 ;; This function calls:
  5574 ;;		_ppsLock
  5575 ;;		_ppsUnlock
  5576 ;; This function is called by:
  5577 ;;		_initialiseBluetooth
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           	psect	text24
  5582  007622                     __ptext24:
  5583                           	opt stack 0
  5584  007622                     _initialiseBluetoothPins:
  5585                           	opt stack 19
  5586                           
  5587                           ;bluetooth.c: 61: ppsUnlock();
  5588                           
  5589                           ;incstack = 0
  5590  007622  ECDF  F03B         	call	_ppsUnlock	;wreg free
  5591                           
  5592                           ;bluetooth.c: 62: RX3PPS = 0b00100001;
  5593  007626  0E21               	movlw	33
  5594  007628  010E               	movlb	14	; () banked
  5595  00762A  6F13               	movwf	19,b	;volatile
  5596                           
  5597                           ; BSR set to: 14
  5598                           ;bluetooth.c: 63: RE0PPS = 0x10;
  5599  00762C  0E10               	movlw	16
  5600  00762E  010E               	movlb	14	; () banked
  5601  007630  6F72               	movwf	114,b	;volatile
  5602                           
  5603                           ;bluetooth.c: 64: ppsLock();
  5604  007632  ECED  F03B         	call	_ppsLock	;wreg free
  5605                           
  5606                           ;bluetooth.c: 66: TRISEbits.TRISE1 = 1;
  5607  007636  8285               	bsf	3973,1,c	;volatile
  5608                           
  5609                           ;bluetooth.c: 67: ANSELEbits.ANSELE1 = 0;
  5610  007638  010E               	movlb	14	; () banked
  5611  00763A  93AF               	bcf	175,1,b	;volatile
  5612                           
  5613                           ; BSR set to: 14
  5614                           ;bluetooth.c: 68: TRISEbits.TRISE0 = 1;
  5615  00763C  8085               	bsf	3973,0,c	;volatile
  5616                           
  5617                           ; BSR set to: 14
  5618                           ;bluetooth.c: 70: TRISGbits.TRISG0 = 0;
  5619  00763E  9087               	bcf	3975,0,c	;volatile
  5620                           
  5621                           ; BSR set to: 14
  5622                           ;bluetooth.c: 71: LATGbits.LATG0 = 1;
  5623  007640  807F               	bsf	3967,0,c	;volatile
  5624                           
  5625                           ; BSR set to: 14
  5626                           ;bluetooth.c: 73: TRISDbits.TRISD3 = 0;
  5627  007642  9684               	bcf	3972,3,c	;volatile
  5628                           
  5629                           ; BSR set to: 14
  5630                           ;bluetooth.c: 74: LATDbits.LATD3 = 0;
  5631  007644  967C               	bcf	3964,3,c	;volatile
  5632                           
  5633                           ; BSR set to: 14
  5634  007646  0012               	return		;funcret
  5635  007648                     __end_of_initialiseBluetoothPins:
  5636                           	opt stack 0
  5637                           tblptru	equ	0xFF8
  5638                           tblptrh	equ	0xFF7
  5639                           tblptrl	equ	0xFF6
  5640                           tablat	equ	0xFF5
  5641                           intcon	equ	0xFF2
  5642                           postinc0	equ	0xFEE
  5643                           wreg	equ	0xFE8
  5644                           postdec1	equ	0xFE5
  5645                           fsr1h	equ	0xFE2
  5646                           fsr1l	equ	0xFE1
  5647                           indf2	equ	0xFDF
  5648                           postinc2	equ	0xFDE
  5649                           postdec2	equ	0xFDD
  5650                           fsr2h	equ	0xFDA
  5651                           fsr2l	equ	0xFD9
  5652                           status	equ	0xFD8
  5653                           
  5654 ;; *************** function _initialise24V *****************
  5655 ;; Defined at:
  5656 ;;		line 179 in file "initialise.c"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;		None
  5659 ;; Auto vars:     Size  Location     Type
  5660 ;;		None
  5661 ;; Return value:  Size  Location     Type
  5662 ;;                  1    wreg      void 
  5663 ;; Registers used:
  5664 ;;		None
  5665 ;; Tracked objects:
  5666 ;;		On entry : 0/0
  5667 ;;		On exit  : 0/0
  5668 ;;		Unchanged: 0/0
  5669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5674 ;;Total ram usage:        0 bytes
  5675 ;; Hardware stack levels used:    1
  5676 ;; Hardware stack levels required when called:    8
  5677 ;; This function calls:
  5678 ;;		Nothing
  5679 ;; This function is called by:
  5680 ;;		_initialise
  5681 ;; This function uses a non-reentrant model
  5682 ;;
  5683                           
  5684                           	psect	text25
  5685  007B76                     __ptext25:
  5686                           	opt stack 0
  5687  007B76                     _initialise24V:
  5688                           	opt stack 21
  5689                           
  5690                           ;initialise.c: 180: ANSELFbits.ANSELF3 = 0;
  5691                           
  5692                           ; BSR set to: 14
  5693                           ;incstack = 0
  5694  007B76  010E               	movlb	14	; () banked
  5695  007B78  97B4               	bcf	180,3,b	;volatile
  5696                           
  5697                           ;initialise.c: 181: TRISFbits.TRISF3 = 0;
  5698  007B7A  9686               	bcf	3974,3,c	;volatile
  5699                           
  5700                           ;initialise.c: 182: LATFbits.LATF3 = 0;
  5701  007B7C  967E               	bcf	3966,3,c	;volatile
  5702                           
  5703                           ; BSR set to: 14
  5704  007B7E  0012               	return		;funcret
  5705  007B80                     __end_of_initialise24V:
  5706                           	opt stack 0
  5707                           tblptru	equ	0xFF8
  5708                           tblptrh	equ	0xFF7
  5709                           tblptrl	equ	0xFF6
  5710                           tablat	equ	0xFF5
  5711                           intcon	equ	0xFF2
  5712                           postinc0	equ	0xFEE
  5713                           wreg	equ	0xFE8
  5714                           postdec1	equ	0xFE5
  5715                           fsr1h	equ	0xFE2
  5716                           fsr1l	equ	0xFE1
  5717                           indf2	equ	0xFDF
  5718                           postinc2	equ	0xFDE
  5719                           postdec2	equ	0xFDD
  5720                           fsr2h	equ	0xFDA
  5721                           fsr2l	equ	0xFD9
  5722                           status	equ	0xFD8
  5723                           
  5724 ;; *************** function _initialise12V *****************
  5725 ;; Defined at:
  5726 ;;		line 173 in file "initialise.c"
  5727 ;; Parameters:    Size  Location     Type
  5728 ;;		None
  5729 ;; Auto vars:     Size  Location     Type
  5730 ;;		None
  5731 ;; Return value:  Size  Location     Type
  5732 ;;                  1    wreg      void 
  5733 ;; Registers used:
  5734 ;;		None
  5735 ;; Tracked objects:
  5736 ;;		On entry : 0/0
  5737 ;;		On exit  : 0/0
  5738 ;;		Unchanged: 0/0
  5739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5744 ;;Total ram usage:        0 bytes
  5745 ;; Hardware stack levels used:    1
  5746 ;; Hardware stack levels required when called:    8
  5747 ;; This function calls:
  5748 ;;		Nothing
  5749 ;; This function is called by:
  5750 ;;		_initialise
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           	psect	text26
  5755  007B80                     __ptext26:
  5756                           	opt stack 0
  5757  007B80                     _initialise12V:
  5758                           	opt stack 21
  5759                           
  5760                           ;initialise.c: 174: ANSELGbits.ANSELG1 = 0;
  5761                           
  5762                           ; BSR set to: 14
  5763                           ;incstack = 0
  5764  007B80  010E               	movlb	14	; () banked
  5765  007B82  93BC               	bcf	188,1,b	;volatile
  5766                           
  5767                           ;initialise.c: 175: TRISGbits.TRISG1 = 0;
  5768  007B84  9287               	bcf	3975,1,c	;volatile
  5769                           
  5770                           ;initialise.c: 176: LATGbits.LATG1 = 1;
  5771  007B86  827F               	bsf	3967,1,c	;volatile
  5772                           
  5773                           ; BSR set to: 14
  5774  007B88  0012               	return		;funcret
  5775  007B8A                     __end_of_initialise12V:
  5776                           	opt stack 0
  5777                           tblptru	equ	0xFF8
  5778                           tblptrh	equ	0xFF7
  5779                           tblptrl	equ	0xFF6
  5780                           tablat	equ	0xFF5
  5781                           intcon	equ	0xFF2
  5782                           postinc0	equ	0xFEE
  5783                           wreg	equ	0xFE8
  5784                           postdec1	equ	0xFE5
  5785                           fsr1h	equ	0xFE2
  5786                           fsr1l	equ	0xFE1
  5787                           indf2	equ	0xFDF
  5788                           postinc2	equ	0xFDE
  5789                           postdec2	equ	0xFDD
  5790                           fsr2h	equ	0xFDA
  5791                           fsr2l	equ	0xFD9
  5792                           status	equ	0xFD8
  5793                           
  5794 ;; *************** function _deviceStateHandler *****************
  5795 ;; Defined at:
  5796 ;;		line 257 in file "main.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;		None
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;		None
  5801 ;; Return value:  Size  Location     Type
  5802 ;;                  1    wreg      void 
  5803 ;; Registers used:
  5804 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5805 ;; Tracked objects:
  5806 ;;		On entry : 0/0
  5807 ;;		On exit  : 0/0
  5808 ;;		Unchanged: 0/0
  5809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5814 ;;Total ram usage:        0 bytes
  5815 ;; Hardware stack levels used:    1
  5816 ;; Hardware stack levels required when called:    8
  5817 ;; This function calls:
  5818 ;;		Nothing
  5819 ;; This function is called by:
  5820 ;;		_main
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824                           	psect	text27
  5825  001D18                     __ptext27:
  5826                           	opt stack 0
  5827  001D18                     _deviceStateHandler:
  5828                           	opt stack 22
  5829                           
  5830                           ;main.c: 258: switch(ABB_1.deviceState){
  5831                           
  5832                           ; BSR set to: 14
  5833                           ;incstack = 0
  5834  001D18  D113               	goto	l15976
  5835  001D1A                     l141:
  5836                           
  5837                           ;main.c: 260: ABB_1.deviceState = 1;
  5838  001D1A  0E01               	movlw	1
  5839  001D1C  CFE8 F754          	movff	wreg,_ABB_1+916
  5840                           
  5841                           ;main.c: 261: break;
  5842  001D20  0012               	return	
  5843  001D22                     l143:
  5844                           
  5845                           ;main.c: 264: ABB_1.deviceState = 12;
  5846  001D22  0E0C               	movlw	12
  5847  001D24  CFE8 F754          	movff	wreg,_ABB_1+916
  5848                           
  5849                           ;main.c: 265: break;
  5850  001D28  0012               	return	
  5851  001D2A                     l15898:
  5852                           
  5853                           ;main.c: 268: if(ABB_1.info.statusBits.voltage || PORTBbits.RB2)
  5854  001D2A  EE23  F0C1         	lfsr	2,_ABB_1+1
  5855  001D2E  BADF               	btfsc	indf2,5,c
  5856  001D30  D002               	goto	l147
  5857  001D32  A48A               	btfss	3978,2,c	;volatile
  5858  001D34  D004               	goto	l145
  5859  001D36                     l147:
  5860                           
  5861                           ;main.c: 269: ABB_1.deviceState = 12;
  5862  001D36  0E0C               	movlw	12
  5863  001D38  CFE8 F754          	movff	wreg,_ABB_1+916
  5864  001D3C  0012               	return	
  5865  001D3E                     l145:
  5866                           
  5867                           ;main.c: 270: else
  5868                           ;main.c: 271: ABB_1.deviceState = 0;
  5869  001D3E  0E00               	movlw	0
  5870  001D40  CFE8 F754          	movff	wreg,_ABB_1+916
  5871                           
  5872                           ;main.c: 272: break;
  5873  001D44  0012               	return	
  5874  001D46                     l149:
  5875                           
  5876                           ;main.c: 275: ABB_1.deviceState = 12;
  5877  001D46  0E0C               	movlw	12
  5878  001D48  CFE8 F754          	movff	wreg,_ABB_1+916
  5879                           
  5880                           ;main.c: 276: break;
  5881  001D4C  0012               	return	
  5882  001D4E                     l150:
  5883                           
  5884                           ;main.c: 279: ABB_1.deviceState = 12;
  5885  001D4E  0E0C               	movlw	12
  5886  001D50  CFE8 F754          	movff	wreg,_ABB_1+916
  5887                           
  5888                           ;main.c: 280: break;
  5889  001D54  0012               	return	
  5890  001D56                     l15902:
  5891                           
  5892                           ;main.c: 283: if(!ABB_1.info.statusBits.voltage && !FLAGS.shaftComplete && !PORTBbits.RB
      +                          2)
  5893  001D56  EE23  F0C1         	lfsr	2,_ABB_1+1
  5894  001D5A  AADF               	btfss	indf2,5,c
  5895  001D5C  BC38               	btfsc	_FLAGS+1,6,c
  5896  001D5E  D006               	goto	l152
  5897  001D60  B48A               	btfsc	3978,2,c	;volatile
  5898  001D62  D004               	goto	l152
  5899                           
  5900                           ;main.c: 284: ABB_1.deviceState = 2;
  5901  001D64  0E02               	movlw	2
  5902  001D66  CFE8 F754          	movff	wreg,_ABB_1+916
  5903  001D6A  0012               	return	
  5904  001D6C                     l152:
  5905                           
  5906                           ;main.c: 285: else if(FLAGS.shaftComplete){
  5907  001D6C  AC38               	btfss	_FLAGS+1,6,c
  5908  001D6E  D00C               	goto	l15914
  5909                           
  5910                           ;main.c: 286: if(ABB_1.info.statusBits.shaftFault)
  5911  001D70  EE23  F0C1         	lfsr	2,_ABB_1+1
  5912  001D74  A8DF               	btfss	indf2,4,c
  5913  001D76  D004               	goto	l155
  5914                           
  5915                           ;main.c: 287: ABB_1.deviceState = 2;
  5916  001D78  0E02               	movlw	2
  5917  001D7A  CFE8 F754          	movff	wreg,_ABB_1+916
  5918  001D7E  0012               	return	
  5919  001D80                     l155:
  5920                           
  5921                           ;main.c: 288: else
  5922                           ;main.c: 289: ABB_1.deviceState = 13;
  5923  001D80  0E0D               	movlw	13
  5924  001D82  CFE8 F754          	movff	wreg,_ABB_1+916
  5925                           
  5926                           ;main.c: 290: }
  5927  001D86  0012               	return	
  5928  001D88                     l15914:
  5929                           
  5930                           ;main.c: 291: else if(ABB_1.info.statusBits.cable_fault)
  5931  001D88  EE23  F0C1         	lfsr	2,_ABB_1+1
  5932  001D8C  A2DF               	btfss	indf2,1,c
  5933  001D8E  D004               	goto	l15918
  5934                           
  5935                           ;main.c: 292: ABB_1.deviceState = 3;
  5936  001D90  0E03               	movlw	3
  5937  001D92  CFE8 F754          	movff	wreg,_ABB_1+916
  5938  001D96  0012               	return	
  5939  001D98                     l15918:
  5940                           
  5941                           ;main.c: 293: else if(ABB_1.info.statusBits.key_switch_status ){
  5942  001D98  EE23  F0C1         	lfsr	2,_ABB_1+1
  5943  001D9C  A0DF               	btfss	indf2,0,c
  5944  001D9E  D00A               	goto	l160
  5945                           
  5946                           ;main.c: 294: if (FLAGS.min10)
  5947  001DA0  A038               	btfss	_FLAGS+1,0,c
  5948  001DA2  D004               	goto	l161
  5949                           
  5950                           ;main.c: 295: ABB_1.deviceState = 14;
  5951  001DA4  0E0E               	movlw	14
  5952  001DA6  CFE8 F754          	movff	wreg,_ABB_1+916
  5953  001DAA  0012               	return	
  5954  001DAC                     l161:
  5955                           
  5956                           ;main.c: 296: else
  5957                           ;main.c: 297: ABB_1.deviceState = 15;
  5958  001DAC  0E0F               	movlw	15
  5959  001DAE  CFE8 F754          	movff	wreg,_ABB_1+916
  5960                           
  5961                           ;main.c: 298: }
  5962  001DB2  0012               	return	
  5963  001DB4                     l160:
  5964                           
  5965                           ;main.c: 299: else if (FLAGS.bluetoothTimer && FLAGS.bluetooth)
  5966  001DB4  B639               	btfsc	_FLAGS+2,3,c
  5967  001DB6  A439               	btfss	_FLAGS+2,2,c
  5968  001DB8  D004               	goto	l164
  5969                           
  5970                           ;main.c: 300: ABB_1.deviceState = 23;
  5971  001DBA  0E17               	movlw	23
  5972  001DBC  CFE8 F754          	movff	wreg,_ABB_1+916
  5973  001DC0  0012               	return	
  5974  001DC2                     l164:
  5975                           
  5976                           ;main.c: 301: else
  5977                           ;main.c: 302: ABB_1.deviceState = 1;
  5978  001DC2  0E01               	movlw	1
  5979  001DC4  CFE8 F754          	movff	wreg,_ABB_1+916
  5980                           
  5981                           ;main.c: 303: break;
  5982  001DC8  0012               	return	
  5983  001DCA                     l15928:
  5984                           
  5985                           ;main.c: 306: if(ABB_1.info.statusBits.mains)
  5986  001DCA  EE23  F0C1         	lfsr	2,_ABB_1+1
  5987  001DCE  A6DF               	btfss	indf2,3,c
  5988  001DD0  D004               	goto	l15932
  5989                           
  5990                           ;main.c: 307: ABB_1.deviceState = 21;
  5991  001DD2  0E15               	movlw	21
  5992  001DD4  CFE8 F754          	movff	wreg,_ABB_1+916
  5993  001DD8  0012               	return	
  5994  001DDA                     l15932:
  5995                           
  5996                           ;main.c: 308: else{
  5997                           ;main.c: 309: if(ABB_1.info.statusBits.lowBat)
  5998  001DDA  EE23  F0C1         	lfsr	2,_ABB_1+1
  5999  001DDE  ACDF               	btfss	indf2,6,c
  6000  001DE0  D004               	goto	l169
  6001                           
  6002                           ;main.c: 310: ABB_1.deviceState = 4;
  6003  001DE2  0E04               	movlw	4
  6004  001DE4  CFE8 F754          	movff	wreg,_ABB_1+916
  6005  001DE8  0012               	return	
  6006  001DEA                     l169:
  6007                           
  6008                           ;main.c: 311: else
  6009                           ;main.c: 312: ABB_1.deviceState = 21;
  6010  001DEA  0E15               	movlw	21
  6011  001DEC  CFE8 F754          	movff	wreg,_ABB_1+916
  6012                           
  6013                           ;main.c: 313: }
  6014                           ;main.c: 314: break;
  6015  001DF0  0012               	return	
  6016  001DF2                     l171:
  6017                           
  6018                           ;main.c: 317: if(FLAGS.sec3){
  6019  001DF2  AC37               	btfss	_FLAGS,6,c
  6020  001DF4  0012               	return	
  6021                           
  6022                           ;main.c: 318: if(ABB_1.info.statusBits.lowBat2)
  6023  001DF6  EE23  F0C1         	lfsr	2,_ABB_1+1
  6024  001DFA  AEDF               	btfss	indf2,7,c
  6025  001DFC  D004               	goto	l173
  6026                           
  6027                           ;main.c: 319: ABB_1.deviceState = 24;
  6028  001DFE  0E18               	movlw	24
  6029  001E00  CFE8 F754          	movff	wreg,_ABB_1+916
  6030  001E04  0012               	return	
  6031  001E06                     l173:
  6032                           
  6033                           ;main.c: 320: else
  6034                           ;main.c: 321: ABB_1.deviceState = 21;
  6035  001E06  0E15               	movlw	21
  6036  001E08  CFE8 F754          	movff	wreg,_ABB_1+916
  6037                           
  6038                           ;main.c: 322: }
  6039                           ;main.c: 323: break;
  6040  001E0C  0012               	return	
  6041  001E0E                     l175:
  6042                           
  6043                           ;main.c: 326: ABB_1.deviceState = 5;
  6044  001E0E  0E05               	movlw	5
  6045  001E10  CFE8 F754          	movff	wreg,_ABB_1+916
  6046                           
  6047                           ;main.c: 327: break;
  6048  001E14  0012               	return	
  6049  001E16                     l15940:
  6050                           
  6051                           ;main.c: 330: if(ABB_1.info.statusBits.mains)
  6052  001E16  EE23  F0C1         	lfsr	2,_ABB_1+1
  6053  001E1A  A6DF               	btfss	indf2,3,c
  6054  001E1C  0012               	return	
  6055                           
  6056                           ;main.c: 331: ABB_1.deviceState = 27;
  6057  001E1E  0E1B               	movlw	27
  6058  001E20  CFE8 F754          	movff	wreg,_ABB_1+916
  6059                           
  6060                           ;main.c: 332: break;
  6061  001E24  0012               	return	
  6062  001E26                     l178:
  6063                           
  6064                           ;main.c: 335: ABB_1.deviceState = 1;
  6065  001E26  0E01               	movlw	1
  6066  001E28  CFE8 F754          	movff	wreg,_ABB_1+916
  6067                           
  6068                           ;main.c: 336: break;
  6069  001E2C  0012               	return	
  6070  001E2E                     l179:
  6071                           
  6072                           ;main.c: 339: if(FLAGS.sec1){
  6073  001E2E  A837               	btfss	_FLAGS,4,c
  6074  001E30  0012               	return	
  6075                           
  6076                           ;main.c: 340: if(ABB_1.info.statusBits.key_switch_status)
  6077  001E32  EE23  F0C1         	lfsr	2,_ABB_1+1
  6078  001E36  A0DF               	btfss	indf2,0,c
  6079  001E38  D004               	goto	l181
  6080                           
  6081                           ;main.c: 341: ABB_1.deviceState = 8;
  6082  001E3A  0E08               	movlw	8
  6083  001E3C  CFE8 F754          	movff	wreg,_ABB_1+916
  6084  001E40  0012               	return	
  6085  001E42                     l181:
  6086                           
  6087                           ;main.c: 342: else
  6088                           ;main.c: 343: ABB_1.deviceState = 22;
  6089  001E42  0E16               	movlw	22
  6090  001E44  CFE8 F754          	movff	wreg,_ABB_1+916
  6091                           
  6092                           ;main.c: 344: }
  6093                           ;main.c: 345: break;
  6094  001E48  0012               	return	
  6095  001E4A                     l183:
  6096                           
  6097                           ;main.c: 348: ABB_1.deviceState = 1;
  6098  001E4A  0E01               	movlw	1
  6099  001E4C  CFE8 F754          	movff	wreg,_ABB_1+916
  6100                           
  6101                           ;main.c: 349: break;
  6102  001E50  0012               	return	
  6103  001E52                     l184:
  6104                           
  6105                           ;main.c: 352: ABB_1.deviceState = 1;
  6106  001E52  0E01               	movlw	1
  6107  001E54  CFE8 F754          	movff	wreg,_ABB_1+916
  6108                           
  6109                           ;main.c: 353: break;
  6110  001E58  0012               	return	
  6111  001E5A                     l185:
  6112                           
  6113                           ;main.c: 356: ABB_1.deviceState = 15;
  6114  001E5A  0E0F               	movlw	15
  6115  001E5C  CFE8 F754          	movff	wreg,_ABB_1+916
  6116                           
  6117                           ;main.c: 357: break;
  6118  001E60  0012               	return	
  6119  001E62                     l186:
  6120                           
  6121                           ;main.c: 360: if(FLAGS.progSuccess)
  6122  001E62  A438               	btfss	_FLAGS+1,2,c
  6123  001E64  D004               	goto	l187
  6124                           
  6125                           ;main.c: 361: ABB_1.deviceState = 6;
  6126  001E66  0E06               	movlw	6
  6127  001E68  CFE8 F754          	movff	wreg,_ABB_1+916
  6128  001E6C  0012               	return	
  6129  001E6E                     l187:
  6130                           
  6131                           ;main.c: 362: else
  6132                           ;main.c: 363: ABB_1.deviceState = 7;
  6133  001E6E  0E07               	movlw	7
  6134  001E70  CFE8 F754          	movff	wreg,_ABB_1+916
  6135                           
  6136                           ;main.c: 364: break;
  6137  001E74  0012               	return	
  6138  001E76                     l189:
  6139                           
  6140                           ;main.c: 367: if(FLAGS.fireFlag || COUNTERS.missingPulses > 3)
  6141  001E76  B638               	btfsc	_FLAGS+1,3,c
  6142  001E78  D004               	goto	l192
  6143  001E7A  0E03               	movlw	3
  6144  001E7C  0100               	movlb	0	; () banked
  6145  001E7E  65B2               	cpfsgt	(_COUNTERS+15)& (0+255),b
  6146  001E80  D004               	goto	l190
  6147  001E82                     l192:
  6148                           
  6149                           ;main.c: 368: ABB_1.deviceState = 9;
  6150  001E82  0E09               	movlw	9
  6151  001E84  CFE8 F754          	movff	wreg,_ABB_1+916
  6152  001E88  0012               	return	
  6153  001E8A                     l190:
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;main.c: 369: else
  6157                           ;main.c: 370: ABB_1.deviceState = 12;
  6158  001E8A  0E0C               	movlw	12
  6159  001E8C  CFE8 F754          	movff	wreg,_ABB_1+916
  6160                           
  6161                           ; BSR set to: 0
  6162                           ;main.c: 372: break;
  6163  001E90  0012               	return	
  6164  001E92                     l194:
  6165                           
  6166                           ;main.c: 375: if(FLAGS.fireFlag || COUNTERS.missingPulses > 3)
  6167  001E92  B638               	btfsc	_FLAGS+1,3,c
  6168  001E94  D004               	goto	l197
  6169  001E96  0E03               	movlw	3
  6170  001E98  0100               	movlb	0	; () banked
  6171  001E9A  65B2               	cpfsgt	(_COUNTERS+15)& (0+255),b
  6172  001E9C  D004               	goto	l195
  6173  001E9E                     l197:
  6174                           
  6175                           ;main.c: 376: ABB_1.deviceState = 9;
  6176  001E9E  0E09               	movlw	9
  6177  001EA0  CFE8 F754          	movff	wreg,_ABB_1+916
  6178  001EA4  0012               	return	
  6179  001EA6                     l195:
  6180                           
  6181                           ; BSR set to: 0
  6182                           ;main.c: 377: else
  6183                           ;main.c: 378: ABB_1.deviceState = 12;
  6184  001EA6  0E0C               	movlw	12
  6185  001EA8  CFE8 F754          	movff	wreg,_ABB_1+916
  6186                           
  6187                           ; BSR set to: 0
  6188                           ;main.c: 380: break;
  6189  001EAC  0012               	return	
  6190  001EAE                     l199:
  6191                           
  6192                           ;main.c: 383: ABB_1.deviceState = 19;
  6193  001EAE  0E13               	movlw	19
  6194  001EB0  CFE8 F754          	movff	wreg,_ABB_1+916
  6195                           
  6196                           ;main.c: 384: break;
  6197  001EB4  0012               	return	
  6198  001EB6                     l200:
  6199                           
  6200                           ;main.c: 387: if(FLAGS.fireSuccessFlag)
  6201  001EB6  A039               	btfss	_FLAGS+2,0,c
  6202  001EB8  D004               	goto	l201
  6203                           
  6204                           ;main.c: 388: ABB_1.deviceState = 11;
  6205  001EBA  0E0B               	movlw	11
  6206  001EBC  CFE8 F754          	movff	wreg,_ABB_1+916
  6207  001EC0  0012               	return	
  6208  001EC2                     l201:
  6209                           
  6210                           ;main.c: 389: else
  6211                           ;main.c: 390: ABB_1.deviceState = 10;
  6212  001EC2  0E0A               	movlw	10
  6213  001EC4  CFE8 F754          	movff	wreg,_ABB_1+916
  6214                           
  6215                           ;main.c: 391: break;
  6216  001EC8  0012               	return	
  6217  001ECA                     l203:
  6218                           
  6219                           ;main.c: 394: ABB_1.deviceState = 17;
  6220  001ECA  0E11               	movlw	17
  6221  001ECC  CFE8 F754          	movff	wreg,_ABB_1+916
  6222                           
  6223                           ;main.c: 395: break;
  6224  001ED0  0012               	return	
  6225  001ED2                     l204:
  6226                           
  6227                           ;main.c: 398: ABB_1.deviceState = 17;
  6228  001ED2  0E11               	movlw	17
  6229  001ED4  CFE8 F754          	movff	wreg,_ABB_1+916
  6230                           
  6231                           ;main.c: 399: break;
  6232  001ED8  0012               	return	
  6233  001EDA                     l15956:
  6234                           
  6235                           ;main.c: 402: if(!ABB_1.info.statusBits.key_switch_status)
  6236  001EDA  EE23  F0C1         	lfsr	2,_ABB_1+1
  6237  001EDE  B0DF               	btfsc	indf2,0,c
  6238  001EE0  D004               	goto	l206
  6239                           
  6240                           ;main.c: 403: ABB_1.deviceState = 18;
  6241  001EE2  0E12               	movlw	18
  6242  001EE4  CFE8 F754          	movff	wreg,_ABB_1+916
  6243  001EE8  0012               	return	
  6244  001EEA                     l206:
  6245                           
  6246                           ;main.c: 404: else if(FLAGS.fireFlag || COUNTERS.missingPulses > 3)
  6247  001EEA  B638               	btfsc	_FLAGS+1,3,c
  6248  001EEC  D004               	goto	l210
  6249  001EEE  0E03               	movlw	3
  6250  001EF0  0100               	movlb	0	; () banked
  6251  001EF2  65B2               	cpfsgt	(_COUNTERS+15)& (0+255),b
  6252  001EF4  D004               	goto	l15962
  6253  001EF6                     l210:
  6254                           
  6255                           ;main.c: 405: ABB_1.deviceState = 9;
  6256  001EF6  0E09               	movlw	9
  6257  001EF8  CFE8 F754          	movff	wreg,_ABB_1+916
  6258  001EFC  0012               	return	
  6259  001EFE                     l15962:
  6260                           
  6261                           ;main.c: 406: else if(!ABB_1.info.statusBits.voltage && !FLAGS.shaftComplete && !PORTBbi
      +                          ts.RB2)
  6262  001EFE  EE23  F0C1         	lfsr	2,_ABB_1+1
  6263  001F02  AADF               	btfss	indf2,5,c
  6264  001F04  BC38               	btfsc	_FLAGS+1,6,c
  6265  001F06  D006               	goto	l212
  6266  001F08  B48A               	btfsc	3978,2,c	;volatile
  6267  001F0A  D004               	goto	l212
  6268                           
  6269                           ;main.c: 407: ABB_1.deviceState = 2;
  6270  001F0C  0E02               	movlw	2
  6271  001F0E  CFE8 F754          	movff	wreg,_ABB_1+916
  6272  001F12  0012               	return	
  6273  001F14                     l212:
  6274                           
  6275                           ;main.c: 408: else if(FLAGS.shaftComplete){
  6276  001F14  AC38               	btfss	_FLAGS+1,6,c
  6277  001F16  D00C               	goto	l214
  6278                           
  6279                           ;main.c: 409: if(ABB_1.info.statusBits.shaftFault)
  6280  001F18  EE23  F0C1         	lfsr	2,_ABB_1+1
  6281  001F1C  A8DF               	btfss	indf2,4,c
  6282  001F1E  D004               	goto	l215
  6283                           
  6284                           ;main.c: 410: ABB_1.deviceState = 2;
  6285  001F20  0E02               	movlw	2
  6286  001F22  CFE8 F754          	movff	wreg,_ABB_1+916
  6287  001F26  0012               	return	
  6288  001F28                     l215:
  6289                           
  6290                           ;main.c: 411: else
  6291                           ;main.c: 412: ABB_1.deviceState = 13;
  6292  001F28  0E0D               	movlw	13
  6293  001F2A  CFE8 F754          	movff	wreg,_ABB_1+916
  6294                           
  6295                           ;main.c: 413: }
  6296  001F2E  0012               	return	
  6297  001F30                     l214:
  6298                           
  6299                           ;main.c: 414: else
  6300                           ;main.c: 415: ABB_1.deviceState = 19;
  6301  001F30  0E13               	movlw	19
  6302  001F32  CFE8 F754          	movff	wreg,_ABB_1+916
  6303                           
  6304                           ;main.c: 416: break;
  6305  001F36  0012               	return	
  6306  001F38                     l218:
  6307                           
  6308                           ;main.c: 419: ABB_1.deviceState = 1;
  6309  001F38  0E01               	movlw	1
  6310  001F3A  CFE8 F754          	movff	wreg,_ABB_1+916
  6311                           
  6312                           ;main.c: 424: }
  6313                           
  6314                           ;main.c: 423: break;
  6315                           
  6316                           ;main.c: 422: default :
  6317                           
  6318                           ;main.c: 420: break;
  6319  001F3E  0012               	return	
  6320  001F40                     l15976:
  6321  001F40  EE27  F054         	lfsr	2,_ABB_1+916
  6322  001F44  50DF               	movf	indf2,w,c
  6323                           
  6324                           ; Switch size 1, requested type "space"
  6325                           ; Number of cases is 24, Range of values is 0 to 27
  6326                           ; switch strategies available:
  6327                           ; Name         Instructions Cycles
  6328                           ; simple_byte           73    37 (average)
  6329                           ;	Chosen strategy is simple_byte
  6330  001F46  0A00               	xorlw	0	; case 0
  6331  001F48  B4D8               	btfsc	status,2,c
  6332  001F4A  D6E7               	goto	l141
  6333  001F4C  0A01               	xorlw	1	; case 1
  6334  001F4E  B4D8               	btfsc	status,2,c
  6335  001F50  D6FA               	goto	l149
  6336  001F52  0A03               	xorlw	3	; case 2
  6337  001F54  B4D8               	btfsc	status,2,c
  6338  001F56  D6E5               	goto	l143
  6339  001F58  0A01               	xorlw	1	; case 3
  6340  001F5A  B4D8               	btfsc	status,2,c
  6341  001F5C  D6F8               	goto	l150
  6342  001F5E  0A07               	xorlw	7	; case 4
  6343  001F60  B4D8               	btfsc	status,2,c
  6344  001F62  D747               	goto	l171
  6345  001F64  0A01               	xorlw	1	; case 5
  6346  001F66  B4D8               	btfsc	status,2,c
  6347  001F68  D756               	goto	l15940
  6348  001F6A  0A03               	xorlw	3	; case 6
  6349  001F6C  B4D8               	btfsc	status,2,c
  6350  001F6E  D783               	goto	l189
  6351  001F70  0A01               	xorlw	1	; case 7
  6352  001F72  B4D8               	btfsc	status,2,c
  6353  001F74  D78E               	goto	l194
  6354  001F76  0A0F               	xorlw	15	; case 8
  6355  001F78  B4D8               	btfsc	status,2,c
  6356  001F7A  D76F               	goto	l185
  6357  001F7C  0A01               	xorlw	1	; case 9
  6358  001F7E  B4D8               	btfsc	status,2,c
  6359  001F80  D796               	goto	l199
  6360  001F82  0A03               	xorlw	3	; case 10
  6361  001F84  B4D8               	btfsc	status,2,c
  6362  001F86  D7A5               	goto	l204
  6363  001F88  0A01               	xorlw	1	; case 11
  6364  001F8A  B4D8               	btfsc	status,2,c
  6365  001F8C  D79E               	goto	l203
  6366  001F8E  0A07               	xorlw	7	; case 12
  6367  001F90  B4D8               	btfsc	status,2,c
  6368  001F92  D6E1               	goto	l15902
  6369  001F94  0A01               	xorlw	1	; case 13
  6370  001F96  B4D8               	btfsc	status,2,c
  6371  001F98  D6C8               	goto	l15898
  6372  001F9A  0A03               	xorlw	3	; case 14
  6373  001F9C  B4D8               	btfsc	status,2,c
  6374  001F9E  D715               	goto	l15928
  6375  001FA0  0A01               	xorlw	1	; case 15
  6376  001FA2  B4D8               	btfsc	status,2,c
  6377  001FA4  D75E               	goto	l186
  6378  001FA6  0A1E               	xorlw	30	; case 17
  6379  001FA8  B4D8               	btfsc	status,2,c
  6380  001FAA  D797               	goto	l15956
  6381  001FAC  0A03               	xorlw	3	; case 18
  6382  001FAE  B4D8               	btfsc	status,2,c
  6383  001FB0  D7C3               	goto	l218
  6384  001FB2  0A01               	xorlw	1	; case 19
  6385  001FB4  B4D8               	btfsc	status,2,c
  6386  001FB6  D77F               	goto	l200
  6387  001FB8  0A06               	xorlw	6	; case 21
  6388  001FBA  B4D8               	btfsc	status,2,c
  6389  001FBC  D738               	goto	l179
  6390  001FBE  0A03               	xorlw	3	; case 22
  6391  001FC0  B4D8               	btfsc	status,2,c
  6392  001FC2  D743               	goto	l183
  6393  001FC4  0A01               	xorlw	1	; case 23
  6394  001FC6  B4D8               	btfsc	status,2,c
  6395  001FC8  D744               	goto	l184
  6396  001FCA  0A0F               	xorlw	15	; case 24
  6397  001FCC  B4D8               	btfsc	status,2,c
  6398  001FCE  D71F               	goto	l175
  6399  001FD0  0A03               	xorlw	3	; case 27
  6400  001FD2  A4D8               	btfss	status,2,c
  6401  001FD4  0012               	return	
  6402  001FD6  D727               	goto	l178
  6403  001FD8                     __end_of_deviceStateHandler:
  6404                           	opt stack 0
  6405                           tblptru	equ	0xFF8
  6406                           tblptrh	equ	0xFF7
  6407                           tblptrl	equ	0xFF6
  6408                           tablat	equ	0xFF5
  6409                           intcon	equ	0xFF2
  6410                           postinc0	equ	0xFEE
  6411                           wreg	equ	0xFE8
  6412                           postdec1	equ	0xFE5
  6413                           fsr1h	equ	0xFE2
  6414                           fsr1l	equ	0xFE1
  6415                           indf2	equ	0xFDF
  6416                           postinc2	equ	0xFDE
  6417                           postdec2	equ	0xFDD
  6418                           fsr2h	equ	0xFDA
  6419                           fsr2l	equ	0xFD9
  6420                           status	equ	0xFD8
  6421                           
  6422 ;; *************** function _device *****************
  6423 ;; Defined at:
  6424 ;;		line 121 in file "main.c"
  6425 ;; Parameters:    Size  Location     Type
  6426 ;;		None
  6427 ;; Auto vars:     Size  Location     Type
  6428 ;;		None
  6429 ;; Return value:  Size  Location     Type
  6430 ;;                  1    wreg      void 
  6431 ;; Registers used:
  6432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6433 ;; Tracked objects:
  6434 ;;		On entry : 0/0
  6435 ;;		On exit  : 0/0
  6436 ;;		Unchanged: 0/0
  6437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6442 ;;Total ram usage:        0 bytes
  6443 ;; Hardware stack levels used:    1
  6444 ;; Hardware stack levels required when called:   16
  6445 ;; This function calls:
  6446 ;;		_activateBluetooth
  6447 ;;		_checkStatusBits
  6448 ;;		_currentStateHandler
  6449 ;;		_disengageRelay
  6450 ;;		_fire
  6451 ;;		_mainsSleep
  6452 ;;		_mainsWake
  6453 ;;		_program
  6454 ;;		_sleep
  6455 ;;		_sleepBluetooth
  6456 ;;		_writeStructureToEeprom
  6457 ;; This function is called by:
  6458 ;;		_main
  6459 ;; This function uses a non-reentrant model
  6460 ;;
  6461                           
  6462                           	psect	text28
  6463  00293E                     __ptext28:
  6464                           	opt stack 0
  6465  00293E                     _device:
  6466                           	opt stack 14
  6467                           
  6468                           ;main.c: 122: switch(ABB_1.deviceState){
  6469                           
  6470                           ;incstack = 0
  6471  00293E  D0C4               	goto	l15894
  6472  002940                     l15762:
  6473                           
  6474                           ;main.c: 124: sleep();
  6475  002940  EC71  F021         	call	_sleep	;wreg free
  6476                           
  6477                           ;main.c: 125: break;
  6478  002944  0012               	return	
  6479  002946                     l15764:
  6480                           
  6481                           ;main.c: 128: checkStatusBits();
  6482  002946  EC38  F035         	call	_checkStatusBits	;wreg free
  6483                           
  6484                           ;main.c: 129: currentStateHandler();
  6485  00294A  EC5A  F018         	call	_currentStateHandler	;wreg free
  6486                           
  6487                           ;main.c: 130: FLAGS.shaftCheck = 1;
  6488  00294E  8A38               	bsf	_FLAGS+1,5,c
  6489                           
  6490                           ;main.c: 131: break;
  6491  002950  0012               	return	
  6492  002952                     l15770:
  6493                           
  6494                           ;main.c: 134: checkStatusBits();
  6495  002952  EC38  F035         	call	_checkStatusBits	;wreg free
  6496                           
  6497                           ;main.c: 135: currentStateHandler();
  6498  002956  EC5A  F018         	call	_currentStateHandler	;wreg free
  6499                           
  6500                           ;main.c: 136: disengageRelay();
  6501  00295A  ECFA  F03D         	call	_disengageRelay	;wreg free
  6502                           
  6503                           ;main.c: 137: break;
  6504  00295E  0012               	return	
  6505  002960                     l15776:
  6506                           
  6507                           ;main.c: 140: checkStatusBits();
  6508  002960  EC38  F035         	call	_checkStatusBits	;wreg free
  6509                           
  6510                           ;main.c: 141: currentStateHandler();
  6511  002964  EC5A  F018         	call	_currentStateHandler	;wreg free
  6512                           
  6513                           ;main.c: 142: FLAGS.shaftComplete = 0;
  6514  002968  9C38               	bcf	_FLAGS+1,6,c
  6515                           
  6516                           ;main.c: 143: FLAGS.min10 = 1;
  6517  00296A  8038               	bsf	_FLAGS+1,0,c
  6518                           
  6519                           ;main.c: 144: FLAGS.sec3 = 0;
  6520  00296C  9C37               	bcf	_FLAGS,6,c
  6521                           
  6522                           ;main.c: 145: COUNTERS.sec3 = 3000;
  6523  00296E  0E0B               	movlw	11
  6524  002970  0100               	movlb	0	; () banked
  6525  002972  6FAE               	movwf	(_COUNTERS+11)& (0+255),b
  6526  002974  0EB8               	movlw	184
  6527  002976  6FAD               	movwf	(_COUNTERS+10)& (0+255),b
  6528                           
  6529                           ; BSR set to: 0
  6530                           ;main.c: 146: FLAGS.sec1 = 0;
  6531  002978  9837               	bcf	_FLAGS,4,c
  6532                           
  6533                           ; BSR set to: 0
  6534                           ;main.c: 147: COUNTERS.sec1 = 1000;
  6535  00297A  0E03               	movlw	3
  6536  00297C  0100               	movlb	0	; () banked
  6537  00297E  6FAA               	movwf	(_COUNTERS+7)& (0+255),b
  6538  002980  0EE8               	movlw	232
  6539  002982  6FA9               	movwf	(_COUNTERS+6)& (0+255),b
  6540                           
  6541                           ; BSR set to: 0
  6542                           ;main.c: 148: ABB_1.ledDeviceState = ABB_1.deviceState;
  6543  002984  C754  F753         	movff	_ABB_1+916,_ABB_1+915
  6544                           
  6545                           ; BSR set to: 0
  6546                           ;main.c: 149: ABB_1.info.statusBits.ready = 0;
  6547  002988  EE23  F0C2         	lfsr	2,_ABB_1+2
  6548  00298C  90DF               	bcf	indf2,0,c
  6549                           
  6550                           ; BSR set to: 0
  6551                           ;main.c: 150: ABB_1.info.statusBits.detError = 0;
  6552  00298E  EE23  F0C2         	lfsr	2,_ABB_1+2
  6553  002992  92DF               	bcf	indf2,1,c
  6554                           
  6555                           ;main.c: 151: break;
  6556  002994  0012               	return	
  6557  002996                     l15798:
  6558                           
  6559                           ;main.c: 154: checkStatusBits();
  6560  002996  EC38  F035         	call	_checkStatusBits	;wreg free
  6561                           
  6562                           ;main.c: 155: currentStateHandler();
  6563  00299A  EC5A  F018         	call	_currentStateHandler	;wreg free
  6564                           
  6565                           ;main.c: 156: ABB_1.ledDeviceState = ABB_1.deviceState;
  6566  00299E  C754  F753         	movff	_ABB_1+916,_ABB_1+915
  6567                           
  6568                           ;main.c: 157: break;
  6569  0029A2  0012               	return	
  6570  0029A4                     l15804:
  6571                           
  6572                           ;main.c: 160: checkStatusBits();
  6573  0029A4  EC38  F035         	call	_checkStatusBits	;wreg free
  6574                           
  6575                           ;main.c: 161: currentStateHandler();
  6576  0029A8  EC5A  F018         	call	_currentStateHandler	;wreg free
  6577                           
  6578                           ;main.c: 162: ABB_1.ledDeviceState = ABB_1.deviceState;
  6579  0029AC  C754  F753         	movff	_ABB_1+916,_ABB_1+915
  6580                           
  6581                           ;main.c: 163: break;
  6582  0029B0  0012               	return	
  6583  0029B2                     l15810:
  6584                           
  6585                           ;main.c: 166: mainsSleep();
  6586  0029B2  EC16  F036         	call	_mainsSleep	;wreg free
  6587                           
  6588                           ;main.c: 167: break;
  6589  0029B6  0012               	return	
  6590  0029B8                     l15812:
  6591                           
  6592                           ;main.c: 170: checkStatusBits();
  6593  0029B8  EC38  F035         	call	_checkStatusBits	;wreg free
  6594                           
  6595                           ;main.c: 171: currentStateHandler();
  6596  0029BC  EC5A  F018         	call	_currentStateHandler	;wreg free
  6597                           
  6598                           ;main.c: 172: break;
  6599  0029C0  0012               	return	
  6600  0029C2                     l15816:
  6601                           
  6602                           ;main.c: 175: mainsWake();
  6603  0029C2  EC6C  F037         	call	_mainsWake	;wreg free
  6604                           
  6605                           ;main.c: 176: break;
  6606  0029C6  0012               	return	
  6607  0029C8                     l15818:
  6608                           
  6609                           ;main.c: 179: checkStatusBits();
  6610  0029C8  EC38  F035         	call	_checkStatusBits	;wreg free
  6611                           
  6612                           ;main.c: 180: currentStateHandler();
  6613  0029CC  EC5A  F018         	call	_currentStateHandler	;wreg free
  6614                           
  6615                           ;main.c: 181: ABB_1.ledDeviceState = ABB_1.deviceState;
  6616  0029D0  C754  F753         	movff	_ABB_1+916,_ABB_1+915
  6617                           
  6618                           ;main.c: 182: ABB_1.info.statusBits.ready = 1;
  6619  0029D4  EE23  F0C2         	lfsr	2,_ABB_1+2
  6620  0029D8  80DF               	bsf	indf2,0,c
  6621                           
  6622                           ;main.c: 183: FLAGS.sec3 = 0;
  6623  0029DA  9C37               	bcf	_FLAGS,6,c
  6624                           
  6625                           ;main.c: 184: COUNTERS.sec3 = 3000;
  6626  0029DC  0E0B               	movlw	11
  6627  0029DE  0100               	movlb	0	; () banked
  6628  0029E0  6FAE               	movwf	(_COUNTERS+11)& (0+255),b
  6629  0029E2  0EB8               	movlw	184
  6630  0029E4  6FAD               	movwf	(_COUNTERS+10)& (0+255),b
  6631                           
  6632                           ; BSR set to: 0
  6633                           ;main.c: 185: FLAGS.sec1 = 0;
  6634  0029E6  9837               	bcf	_FLAGS,4,c
  6635                           
  6636                           ; BSR set to: 0
  6637                           ;main.c: 186: COUNTERS.sec1 = 1000;
  6638  0029E8  0E03               	movlw	3
  6639  0029EA  0100               	movlb	0	; () banked
  6640  0029EC  6FAA               	movwf	(_COUNTERS+7)& (0+255),b
  6641  0029EE  0EE8               	movlw	232
  6642  0029F0  6FA9               	movwf	(_COUNTERS+6)& (0+255),b
  6643                           
  6644                           ;main.c: 187: break;
  6645  0029F2  0012               	return	
  6646  0029F4                     l15834:
  6647                           
  6648                           ;main.c: 190: checkStatusBits();
  6649  0029F4  EC38  F035         	call	_checkStatusBits	;wreg free
  6650                           
  6651                           ;main.c: 191: currentStateHandler();
  6652  0029F8  EC5A  F018         	call	_currentStateHandler	;wreg free
  6653                           
  6654                           ;main.c: 192: ABB_1.ledDeviceState = ABB_1.deviceState;
  6655  0029FC  C754  F753         	movff	_ABB_1+916,_ABB_1+915
  6656                           
  6657                           ;main.c: 193: ABB_1.info.statusBits.detError = 1;
  6658  002A00  EE23  F0C2         	lfsr	2,_ABB_1+2
  6659  002A04  82DF               	bsf	indf2,1,c
  6660                           
  6661                           ;main.c: 194: FLAGS.sec3 = 0;
  6662  002A06  9C37               	bcf	_FLAGS,6,c
  6663                           
  6664                           ;main.c: 195: COUNTERS.sec3 = 0;
  6665  002A08  0E00               	movlw	0
  6666  002A0A  0100               	movlb	0	; () banked
  6667  002A0C  6FAE               	movwf	(_COUNTERS+11)& (0+255),b
  6668  002A0E  0E00               	movlw	0
  6669  002A10  6FAD               	movwf	(_COUNTERS+10)& (0+255),b
  6670                           
  6671                           ; BSR set to: 0
  6672                           ;main.c: 196: FLAGS.sec1 = 0;
  6673  002A12  9837               	bcf	_FLAGS,4,c
  6674                           
  6675                           ; BSR set to: 0
  6676                           ;main.c: 197: COUNTERS.sec1 = 1000;
  6677  002A14  0E03               	movlw	3
  6678  002A16  0100               	movlb	0	; () banked
  6679  002A18  6FAA               	movwf	(_COUNTERS+7)& (0+255),b
  6680  002A1A  0EE8               	movlw	232
  6681  002A1C  6FA9               	movwf	(_COUNTERS+6)& (0+255),b
  6682                           
  6683                           ;main.c: 198: break;
  6684  002A1E  0012               	return	
  6685  002A20                     l15850:
  6686                           
  6687                           ;main.c: 201: activateBluetooth();
  6688  002A20  ECCE  F038         	call	_activateBluetooth	;wreg free
  6689                           
  6690                           ;main.c: 202: COUNTERS.min10 = 600000;
  6691  002A24  0EC0               	movlw	192
  6692  002A26  0100               	movlb	0	; () banked
  6693  002A28  6FA5               	movwf	(_COUNTERS+2)& (0+255),b
  6694  002A2A  0E27               	movlw	39
  6695  002A2C  6FA6               	movwf	(_COUNTERS+3)& (0+255),b
  6696  002A2E  0E09               	movlw	9
  6697  002A30  6FA7               	movwf	(_COUNTERS+4)& (0+255),b
  6698  002A32  0E00               	movlw	0
  6699  002A34  6FA8               	movwf	(_COUNTERS+5)& (0+255),b
  6700                           
  6701                           ; BSR set to: 0
  6702                           ;main.c: 203: FLAGS.min10 = 0;
  6703  002A36  9038               	bcf	_FLAGS+1,0,c
  6704                           
  6705                           ;main.c: 204: break;
  6706  002A38  0012               	return	
  6707  002A3A                     l15856:
  6708                           
  6709                           ;main.c: 207: sleepBluetooth();
  6710  002A3A  ECE9  F03D         	call	_sleepBluetooth	;wreg free
  6711                           
  6712                           ;main.c: 208: FLAGS.bluetoothTimer = 0;
  6713  002A3E  9639               	bcf	_FLAGS+2,3,c
  6714                           
  6715                           ;main.c: 209: COUNTERS.bluetoothTimer = 60000;
  6716  002A40  0EEA               	movlw	234
  6717  002A42  0100               	movlb	0	; () banked
  6718  002A44  6FB5               	movwf	(_COUNTERS+18)& (0+255),b
  6719  002A46  0E60               	movlw	96
  6720  002A48  6FB4               	movwf	(_COUNTERS+17)& (0+255),b
  6721                           
  6722                           ; BSR set to: 0
  6723                           ;main.c: 210: FLAGS.bluetooth = 0;
  6724  002A4A  9439               	bcf	_FLAGS+2,2,c
  6725                           
  6726                           ;main.c: 211: break;
  6727  002A4C  0012               	return	
  6728  002A4E                     l130:
  6729                           
  6730                           ;main.c: 214: FLAGS.fireFlag = 0;
  6731  002A4E  9638               	bcf	_FLAGS+1,3,c
  6732                           
  6733                           ;main.c: 215: FLAGS.progComplete = 0;
  6734  002A50  9238               	bcf	_FLAGS+1,1,c
  6735                           
  6736                           ;main.c: 216: COUNTERS.min10 = 600000;
  6737  002A52  0EC0               	movlw	192
  6738  002A54  0100               	movlb	0	; () banked
  6739  002A56  6FA5               	movwf	(_COUNTERS+2)& (0+255),b
  6740  002A58  0E27               	movlw	39
  6741  002A5A  6FA6               	movwf	(_COUNTERS+3)& (0+255),b
  6742  002A5C  0E09               	movlw	9
  6743  002A5E  6FA7               	movwf	(_COUNTERS+4)& (0+255),b
  6744  002A60  0E00               	movlw	0
  6745  002A62  6FA8               	movwf	(_COUNTERS+5)& (0+255),b
  6746                           
  6747                           ; BSR set to: 0
  6748                           ;main.c: 217: FLAGS.min10 = 0;
  6749  002A64  9038               	bcf	_FLAGS+1,0,c
  6750                           
  6751                           ; BSR set to: 0
  6752                           ;main.c: 218: program();
  6753  002A66  ECB5  F03B         	call	_program	;wreg free
  6754                           
  6755                           ;main.c: 219: break;
  6756  002A6A  0012               	return	
  6757  002A6C                     l15870:
  6758                           
  6759                           ;main.c: 222: fire();
  6760  002A6C  EC9C  F025         	call	_fire	;wreg free
  6761                           
  6762                           ;main.c: 223: FLAGS.fireFlag = 0;
  6763  002A70  9638               	bcf	_FLAGS+1,3,c
  6764                           
  6765                           ;main.c: 224: break;
  6766  002A72  0012               	return	
  6767  002A74                     l15874:
  6768                           
  6769                           ;main.c: 227: checkStatusBits();
  6770  002A74  EC38  F035         	call	_checkStatusBits	;wreg free
  6771                           
  6772                           ;main.c: 228: currentStateHandler();
  6773  002A78  EC5A  F018         	call	_currentStateHandler	;wreg free
  6774                           
  6775                           ;main.c: 229: break;
  6776  002A7C  0012               	return	
  6777  002A7E                     l133:
  6778                           
  6779                           ;main.c: 232: ABB_1.ledDeviceState = ABB_1.deviceState;
  6780  002A7E  C754  F753         	movff	_ABB_1+916,_ABB_1+915
  6781                           
  6782                           ;main.c: 233: checkStatusBits();
  6783  002A82  EC38  F035         	call	_checkStatusBits	;wreg free
  6784                           
  6785                           ;main.c: 234: currentStateHandler();
  6786  002A86  EC5A  F018         	call	_currentStateHandler	;wreg free
  6787                           
  6788                           ;main.c: 235: break;
  6789  002A8A  0012               	return	
  6790  002A8C                     l134:
  6791                           
  6792                           ;main.c: 238: ABB_1.ledDeviceState = ABB_1.deviceState;
  6793  002A8C  C754  F753         	movff	_ABB_1+916,_ABB_1+915
  6794                           
  6795                           ;main.c: 239: checkStatusBits();
  6796  002A90  EC38  F035         	call	_checkStatusBits	;wreg free
  6797                           
  6798                           ;main.c: 240: currentStateHandler();
  6799  002A94  EC5A  F018         	call	_currentStateHandler	;wreg free
  6800                           
  6801                           ;main.c: 241: break;
  6802  002A98  0012               	return	
  6803  002A9A                     l135:
  6804                           
  6805                           ;main.c: 244: ABB_1.dets_length = 0;
  6806  002A9A  0E00               	movlw	0
  6807  002A9C  CFE8 F3C0          	movff	wreg,_ABB_1
  6808                           
  6809                           ;main.c: 245: writeStructureToEeprom(&ABB_1.dets_length,1);
  6810  002AA0  0EC0               	movlw	low _ABB_1
  6811  002AA2  0100               	movlb	0	; () banked
  6812  002AA4  6F66               	movwf	writeStructureToEeprom@structure& (0+255),b
  6813  002AA6  0E03               	movlw	high _ABB_1
  6814  002AA8  0100               	movlb	0	; () banked
  6815  002AAA  6F67               	movwf	(writeStructureToEeprom@structure+1)& (0+255),b
  6816  002AAC  0E00               	movlw	0
  6817  002AAE  0100               	movlb	0	; () banked
  6818  002AB0  6F69               	movwf	(writeStructureToEeprom@size+1)& (0+255),b
  6819  002AB2  0E01               	movlw	1
  6820  002AB4  6F68               	movwf	writeStructureToEeprom@size& (0+255),b
  6821  002AB6  EC4A  F037         	call	_writeStructureToEeprom	;wreg free
  6822  002ABA  00FF               	reset		;# 
  6823                           
  6824                           ;main.c: 247: break;
  6825  002ABC  0012               	return	
  6826  002ABE                     l15888:
  6827                           
  6828                           ;main.c: 250: checkStatusBits();
  6829  002ABE  EC38  F035         	call	_checkStatusBits	;wreg free
  6830                           
  6831                           ;main.c: 251: currentStateHandler();
  6832  002AC2  EC5A  F018         	call	_currentStateHandler	;wreg free
  6833                           
  6834                           ;main.c: 253: }
  6835                           
  6836                           ;main.c: 252: break;
  6837  002AC6  0012               	return	
  6838  002AC8                     l15894:
  6839  002AC8  EE27  F054         	lfsr	2,_ABB_1+916
  6840  002ACC  50DF               	movf	indf2,w,c
  6841                           
  6842                           ; Switch size 1, requested type "space"
  6843                           ; Number of cases is 19, Range of values is 0 to 27
  6844                           ; switch strategies available:
  6845                           ; Name         Instructions Cycles
  6846                           ; simple_byte           58    30 (average)
  6847                           ;	Chosen strategy is simple_byte
  6848  002ACE  0A00               	xorlw	0	; case 0
  6849  002AD0  B4D8               	btfsc	status,2,c
  6850  002AD2  D736               	goto	l15762
  6851  002AD4  0A01               	xorlw	1	; case 1
  6852  002AD6  B4D8               	btfsc	status,2,c
  6853  002AD8  D743               	goto	l15776
  6854  002ADA  0A03               	xorlw	3	; case 2
  6855  002ADC  B4D8               	btfsc	status,2,c
  6856  002ADE  D733               	goto	l15764
  6857  002AE0  0A01               	xorlw	1	; case 3
  6858  002AE2  B4D8               	btfsc	status,2,c
  6859  002AE4  D758               	goto	l15798
  6860  002AE6  0A07               	xorlw	7	; case 4
  6861  002AE8  B4D8               	btfsc	status,2,c
  6862  002AEA  D75C               	goto	l15804
  6863  002AEC  0A01               	xorlw	1	; case 5
  6864  002AEE  B4D8               	btfsc	status,2,c
  6865  002AF0  D763               	goto	l15812
  6866  002AF2  0A03               	xorlw	3	; case 6
  6867  002AF4  B4D8               	btfsc	status,2,c
  6868  002AF6  D768               	goto	l15818
  6869  002AF8  0A01               	xorlw	1	; case 7
  6870  002AFA  B4D8               	btfsc	status,2,c
  6871  002AFC  D77B               	goto	l15834
  6872  002AFE  0A0F               	xorlw	15	; case 8
  6873  002B00  B4D8               	btfsc	status,2,c
  6874  002B02  D7A5               	goto	l130
  6875  002B04  0A01               	xorlw	1	; case 9
  6876  002B06  B4D8               	btfsc	status,2,c
  6877  002B08  D7B1               	goto	l15870
  6878  002B0A  0A03               	xorlw	3	; case 10
  6879  002B0C  B4D8               	btfsc	status,2,c
  6880  002B0E  D7BE               	goto	l134
  6881  002B10  0A01               	xorlw	1	; case 11
  6882  002B12  B4D8               	btfsc	status,2,c
  6883  002B14  D7B4               	goto	l133
  6884  002B16  0A06               	xorlw	6	; case 13
  6885  002B18  B4D8               	btfsc	status,2,c
  6886  002B1A  D71B               	goto	l15770
  6887  002B1C  0A1F               	xorlw	31	; case 18
  6888  002B1E  B4D8               	btfsc	status,2,c
  6889  002B20  D7BC               	goto	l135
  6890  002B22  0A01               	xorlw	1	; case 19
  6891  002B24  B4D8               	btfsc	status,2,c
  6892  002B26  D7A6               	goto	l15874
  6893  002B28  0A05               	xorlw	5	; case 22
  6894  002B2A  B4D8               	btfsc	status,2,c
  6895  002B2C  D779               	goto	l15850
  6896  002B2E  0A01               	xorlw	1	; case 23
  6897  002B30  B4D8               	btfsc	status,2,c
  6898  002B32  D783               	goto	l15856
  6899  002B34  0A0F               	xorlw	15	; case 24
  6900  002B36  B4D8               	btfsc	status,2,c
  6901  002B38  D73C               	goto	l15810
  6902  002B3A  0A03               	xorlw	3	; case 27
  6903  002B3C  B4D8               	btfsc	status,2,c
  6904  002B3E  D741               	goto	l15816
  6905  002B40  D7BE               	goto	l15888
  6906  002B42                     __end_of_device:
  6907                           	opt stack 0
  6908                           tblptru	equ	0xFF8
  6909                           tblptrh	equ	0xFF7
  6910                           tblptrl	equ	0xFF6
  6911                           tablat	equ	0xFF5
  6912                           intcon	equ	0xFF2
  6913                           postinc0	equ	0xFEE
  6914                           wreg	equ	0xFE8
  6915                           postdec1	equ	0xFE5
  6916                           fsr1h	equ	0xFE2
  6917                           fsr1l	equ	0xFE1
  6918                           indf2	equ	0xFDF
  6919                           postinc2	equ	0xFDE
  6920                           postdec2	equ	0xFDD
  6921                           fsr2h	equ	0xFDA
  6922                           fsr2l	equ	0xFD9
  6923                           status	equ	0xFD8
  6924                           
  6925 ;; *************** function _sleep *****************
  6926 ;; Defined at:
  6927 ;;		line 29 in file "sleep.c"
  6928 ;; Parameters:    Size  Location     Type
  6929 ;;		None
  6930 ;; Auto vars:     Size  Location     Type
  6931 ;;		None
  6932 ;; Return value:  Size  Location     Type
  6933 ;;                  1    wreg      void 
  6934 ;; Registers used:
  6935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6936 ;; Tracked objects:
  6937 ;;		On entry : 0/0
  6938 ;;		On exit  : 0/0
  6939 ;;		Unchanged: 0/0
  6940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6943 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6944 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6945 ;;Total ram usage:        2 bytes
  6946 ;; Hardware stack levels used:    1
  6947 ;; Hardware stack levels required when called:   10
  6948 ;; This function calls:
  6949 ;;		_Set_Line_Low
  6950 ;;		___wmul
  6951 ;;		__delay_ms
  6952 ;;		_modemSleep
  6953 ;;		_setOffLed
  6954 ;;		_sleep12V
  6955 ;;		_sleepBluetooth
  6956 ;;		_tagSleep
  6957 ;;		_turnOffCableTest
  6958 ;;		_writeStructureToEeprom
  6959 ;; This function is called by:
  6960 ;;		_device
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           	psect	text29
  6965  0042E2                     __ptext29:
  6966                           	opt stack 0
  6967  0042E2                     _sleep:
  6968                           	opt stack 19
  6969                           
  6970                           ;sleep.c: 30: setOffLed();
  6971                           
  6972                           ;incstack = 0
  6973  0042E2  ECCE  F03D         	call	_setOffLed	;wreg free
  6974                           
  6975                           ;sleep.c: 31: sleepBluetooth();
  6976  0042E6  ECE9  F03D         	call	_sleepBluetooth	;wreg free
  6977                           
  6978                           ;sleep.c: 32: sleep12V();
  6979  0042EA  ECF4  F03D         	call	_sleep12V	;wreg free
  6980                           
  6981                           ;sleep.c: 33: _delay_ms(1000);
  6982  0042EE  0E03               	movlw	3
  6983  0042F0  0100               	movlb	0	; () banked
  6984  0042F2  6F62               	movwf	(__delay_ms@delay+1)& (0+255),b
  6985  0042F4  0EE8               	movlw	232
  6986  0042F6  6F61               	movwf	__delay_ms@delay& (0+255),b
  6987  0042F8  EC02  F037         	call	__delay_ms	;wreg free
  6988                           
  6989                           ;sleep.c: 34: Set_Line_Low();
  6990  0042FC  ECF6  F03D         	call	_Set_Line_Low	;wreg free
  6991                           
  6992                           ;sleep.c: 35: turnOffCableTest();
  6993  004300  ECF2  F03D         	call	_turnOffCableTest	;wreg free
  6994                           
  6995                           ;sleep.c: 36: tagSleep();
  6996  004304  EC5C  F03C         	call	_tagSleep	;wreg free
  6997                           
  6998                           ;sleep.c: 37: T2CONbits.T2ON = 0;
  6999  004308  9EBD               	bcf	4029,7,c	;volatile
  7000                           
  7001                           ;sleep.c: 38: T4CONbits.T4ON = 0;
  7002  00430A  9EB7               	bcf	4023,7,c	;volatile
  7003                           
  7004                           ;sleep.c: 39: T6CONbits.T6ON = 0;
  7005  00430C  9EB1               	bcf	4017,7,c	;volatile
  7006                           
  7007                           ;sleep.c: 40: T8CONbits.T8ON = 0;
  7008  00430E  010F               	movlb	15	; () banked
  7009  004310  9F2A               	bcf	42,7,b	;volatile
  7010                           
  7011                           ; BSR set to: 15
  7012                           ;sleep.c: 41: PIE0bits.TMR0IE = 0;
  7013  004312  010E               	movlb	14	; () banked
  7014  004314  9B29               	bcf	41,5,b	;volatile
  7015                           
  7016                           ; BSR set to: 14
  7017                           ;sleep.c: 42: PIE0bits.INT0IE = 0;
  7018  004316  010E               	movlb	14	; () banked
  7019  004318  9129               	bcf	41,0,b	;volatile
  7020                           
  7021                           ; BSR set to: 14
  7022                           ;sleep.c: 43: writeStructureToEeprom(ABB_1.det_arrays.UIDs,sizeof(detonator_UID)*(ABB_1.
      +                          dets_length + 1));
  7023  00431A  0EC4               	movlw	low (_ABB_1+4)
  7024  00431C  0100               	movlb	0	; () banked
  7025  00431E  6F66               	movwf	writeStructureToEeprom@structure& (0+255),b
  7026  004320  0E03               	movlw	high (_ABB_1+4)
  7027  004322  0100               	movlb	0	; () banked
  7028  004324  6F67               	movwf	(writeStructureToEeprom@structure+1)& (0+255),b
  7029  004326  C3C0  F06C         	movff	_ABB_1,??_sleep
  7030  00432A  0E01               	movlw	1
  7031  00432C  0100               	movlb	0	; () banked
  7032  00432E  256C               	addwf	??_sleep& (0+255),w,b
  7033  004330  0100               	movlb	0	; () banked
  7034  004332  6F60               	movwf	___wmul@multiplier& (0+255),b
  7035  004334  0100               	movlb	0	; () banked
  7036  004336  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
  7037  004338  0E00               	movlw	0
  7038  00433A  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
  7039  00433C  0E00               	movlw	0
  7040  00433E  0100               	movlb	0	; () banked
  7041  004340  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7042  004342  0E05               	movlw	5
  7043  004344  6F62               	movwf	___wmul@multiplicand& (0+255),b
  7044  004346  ECB3  F038         	call	___wmul	;wreg free
  7045  00434A  C060  F068         	movff	?___wmul,writeStructureToEeprom@size
  7046  00434E  C061  F069         	movff	?___wmul+1,writeStructureToEeprom@size+1
  7047  004352  EC4A  F037         	call	_writeStructureToEeprom	;wreg free
  7048                           
  7049                           ;sleep.c: 44: writeStructureToEeprom(ABB_1.det_arrays.info,sizeof(detonator_data)*(ABB_1
      +                          .dets_length + 1));
  7050  004356  0EBD               	movlw	low (_ABB_1+509)
  7051  004358  0100               	movlb	0	; () banked
  7052  00435A  6F66               	movwf	writeStructureToEeprom@structure& (0+255),b
  7053  00435C  0E05               	movlw	high (_ABB_1+509)
  7054  00435E  0100               	movlb	0	; () banked
  7055  004360  6F67               	movwf	(writeStructureToEeprom@structure+1)& (0+255),b
  7056  004362  EE23  F0C0         	lfsr	2,_ABB_1
  7057  004366  50DF               	movf	indf2,w,c
  7058  004368  0100               	movlb	0	; () banked
  7059  00436A  6F6C               	movwf	??_sleep& (0+255),b
  7060  00436C  6B6D               	clrf	(??_sleep+1)& (0+255),b
  7061  00436E  0100               	movlb	0	; () banked
  7062  004370  90D8               	bcf	status,0,c
  7063  004372  376C               	rlcf	??_sleep& (0+255),f,b
  7064  004374  376D               	rlcf	(??_sleep+1)& (0+255),f,b
  7065  004376  0100               	movlb	0	; () banked
  7066  004378  90D8               	bcf	status,0,c
  7067  00437A  376C               	rlcf	??_sleep& (0+255),f,b
  7068  00437C  376D               	rlcf	(??_sleep+1)& (0+255),f,b
  7069  00437E  0E04               	movlw	4
  7070  004380  0100               	movlb	0	; () banked
  7071  004382  256C               	addwf	??_sleep& (0+255),w,b
  7072  004384  0100               	movlb	0	; () banked
  7073  004386  6F68               	movwf	writeStructureToEeprom@size& (0+255),b
  7074  004388  0E00               	movlw	0
  7075  00438A  0100               	movlb	0	; () banked
  7076  00438C  216D               	addwfc	(??_sleep+1)& (0+255),w,b
  7077  00438E  0100               	movlb	0	; () banked
  7078  004390  6F69               	movwf	(writeStructureToEeprom@size+1)& (0+255),b
  7079  004392  EC4A  F037         	call	_writeStructureToEeprom	;wreg free
  7080                           
  7081                           ;sleep.c: 45: writeStructureToEeprom(&ABB_1.dets_length,1);
  7082  004396  0EC0               	movlw	low _ABB_1
  7083  004398  0100               	movlb	0	; () banked
  7084  00439A  6F66               	movwf	writeStructureToEeprom@structure& (0+255),b
  7085  00439C  0E03               	movlw	high _ABB_1
  7086  00439E  0100               	movlb	0	; () banked
  7087  0043A0  6F67               	movwf	(writeStructureToEeprom@structure+1)& (0+255),b
  7088  0043A2  0E00               	movlw	0
  7089  0043A4  0100               	movlb	0	; () banked
  7090  0043A6  6F69               	movwf	(writeStructureToEeprom@size+1)& (0+255),b
  7091  0043A8  0E01               	movlw	1
  7092  0043AA  6F68               	movwf	writeStructureToEeprom@size& (0+255),b
  7093  0043AC  EC4A  F037         	call	_writeStructureToEeprom	;wreg free
  7094                           
  7095                           ;sleep.c: 46: writeStructureToEeprom(&ABB_1.destination,2);
  7096  0043B0  0E51               	movlw	low (_ABB_1+913)
  7097  0043B2  0100               	movlb	0	; () banked
  7098  0043B4  6F66               	movwf	writeStructureToEeprom@structure& (0+255),b
  7099  0043B6  0E07               	movlw	high (_ABB_1+913)
  7100  0043B8  0100               	movlb	0	; () banked
  7101  0043BA  6F67               	movwf	(writeStructureToEeprom@structure+1)& (0+255),b
  7102  0043BC  0E00               	movlw	0
  7103  0043BE  0100               	movlb	0	; () banked
  7104  0043C0  6F69               	movwf	(writeStructureToEeprom@size+1)& (0+255),b
  7105  0043C2  0E02               	movlw	2
  7106  0043C4  6F68               	movwf	writeStructureToEeprom@size& (0+255),b
  7107  0043C6  EC4A  F037         	call	_writeStructureToEeprom	;wreg free
  7108                           
  7109                           ;sleep.c: 47: modemSleep();
  7110  0043CA  EC76  F03D         	call	_modemSleep	;wreg free
  7111                           
  7112                           ;sleep.c: 48: ADCON0bits.ADON = 0;
  7113  0043CE  9E60               	bcf	3936,7,c	;volatile
  7114                           
  7115                           ;sleep.c: 49: FVRCONbits.FVREN = 0;
  7116  0043D0  010E               	movlb	14	; () banked
  7117  0043D2  9FC4               	bcf	196,7,b	;volatile
  7118                           
  7119                           ; BSR set to: 14
  7120                           ;sleep.c: 50: INTCONbits.INT2EDG = 1;
  7121  0043D4  84F2               	bsf	intcon,2,c	;volatile
  7122                           
  7123                           ; BSR set to: 14
  7124                           ;sleep.c: 51: CPUDOZEbits.IDLEN = 0;
  7125  0043D6  010E               	movlb	14	; () banked
  7126  0043D8  9F42               	bcf	66,7,b	;volatile
  7127                           
  7128                           ; BSR set to: 14
  7129                           ;sleep.c: 52: ABB_1.deviceState = 0;
  7130  0043DA  0E00               	movlw	0
  7131  0043DC  CFE8 F754          	movff	wreg,_ABB_1+916
  7132                           
  7133                           ; BSR set to: 14
  7134                           ;sleep.c: 53: WDTCON0bits.SEN = 0;
  7135  0043E0  010E               	movlb	14	; () banked
  7136  0043E2  913D               	bcf	61,0,b	;volatile
  7137  0043E4  0003               	sleep		;# 
  7138  0043E6  0012               	return		;funcret
  7139  0043E8                     __end_of_sleep:
  7140                           	opt stack 0
  7141                           tblptru	equ	0xFF8
  7142                           tblptrh	equ	0xFF7
  7143                           tblptrl	equ	0xFF6
  7144                           tablat	equ	0xFF5
  7145                           intcon	equ	0xFF2
  7146                           postinc0	equ	0xFEE
  7147                           wreg	equ	0xFE8
  7148                           postdec1	equ	0xFE5
  7149                           fsr1h	equ	0xFE2
  7150                           fsr1l	equ	0xFE1
  7151                           indf2	equ	0xFDF
  7152                           postinc2	equ	0xFDE
  7153                           postdec2	equ	0xFDD
  7154                           fsr2h	equ	0xFDA
  7155                           fsr2l	equ	0xFD9
  7156                           status	equ	0xFD8
  7157                           
  7158 ;; *************** function _writeStructureToEeprom *****************
  7159 ;; Defined at:
  7160 ;;		line 230 in file "peripherals.c"
  7161 ;; Parameters:    Size  Location     Type
  7162 ;;  structure       2    6[BANK0 ] PTR unsigned char 
  7163 ;;		 -> ABB_1.det_arrays(909), ABB_1(917), 
  7164 ;;  size            2    8[BANK0 ] unsigned int 
  7165 ;; Auto vars:     Size  Location     Type
  7166 ;;  i               2   10[BANK0 ] int 
  7167 ;; Return value:  Size  Location     Type
  7168 ;;                  1    wreg      void 
  7169 ;; Registers used:
  7170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7171 ;; Tracked objects:
  7172 ;;		On entry : 0/0
  7173 ;;		On exit  : 0/0
  7174 ;;		Unchanged: 0/0
  7175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7176 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7177 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7179 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7180 ;;Total ram usage:        6 bytes
  7181 ;; Hardware stack levels used:    1
  7182 ;; Hardware stack levels required when called:    9
  7183 ;; This function calls:
  7184 ;;		_writeByteToEeprom
  7185 ;; This function is called by:
  7186 ;;		_device
  7187 ;;		_sleep
  7188 ;; This function uses a non-reentrant model
  7189 ;;
  7190                           
  7191                           	psect	text30
  7192  006E94                     __ptext30:
  7193                           	opt stack 0
  7194  006E94                     _writeStructureToEeprom:
  7195                           	opt stack 20
  7196                           
  7197                           ;peripherals.c: 231: for (int i = 0; i < size; i++){
  7198                           
  7199                           ;incstack = 0
  7200  006E94  0E00               	movlw	0
  7201  006E96  0100               	movlb	0	; () banked
  7202  006E98  6F6B               	movwf	(writeStructureToEeprom@i+1)& (0+255),b
  7203  006E9A  0E00               	movlw	0
  7204  006E9C  6F6A               	movwf	writeStructureToEeprom@i& (0+255),b
  7205  006E9E  D011               	goto	l14334
  7206  006EA0                     l14330:
  7207                           
  7208                           ; BSR set to: 0
  7209                           ;peripherals.c: 232: writeByteToEeprom(structure + i);
  7210  006EA0  0100               	movlb	0	; () banked
  7211  006EA2  516A               	movf	writeStructureToEeprom@i& (0+255),w,b
  7212  006EA4  0100               	movlb	0	; () banked
  7213  006EA6  2566               	addwf	writeStructureToEeprom@structure& (0+255),w,b
  7214  006EA8  0100               	movlb	0	; () banked
  7215  006EAA  6F60               	movwf	writeByteToEeprom@byte& (0+255),b
  7216  006EAC  0100               	movlb	0	; () banked
  7217  006EAE  516B               	movf	(writeStructureToEeprom@i+1)& (0+255),w,b
  7218  006EB0  0100               	movlb	0	; () banked
  7219  006EB2  2167               	addwfc	(writeStructureToEeprom@structure+1)& (0+255),w,b
  7220  006EB4  0100               	movlb	0	; () banked
  7221  006EB6  6F61               	movwf	(writeByteToEeprom@byte+1)& (0+255),b
  7222  006EB8  EC0D  F032         	call	_writeByteToEeprom	;wreg free
  7223  006EBC  0100               	movlb	0	; () banked
  7224  006EBE  4B6A               	infsnz	writeStructureToEeprom@i& (0+255),f,b
  7225  006EC0  2B6B               	incf	(writeStructureToEeprom@i+1)& (0+255),f,b
  7226  006EC2                     l14334:
  7227                           
  7228                           ; BSR set to: 0
  7229  006EC2  0100               	movlb	0	; () banked
  7230  006EC4  5168               	movf	writeStructureToEeprom@size& (0+255),w,b
  7231  006EC6  0100               	movlb	0	; () banked
  7232  006EC8  5D6A               	subwf	writeStructureToEeprom@i& (0+255),w,b
  7233  006ECA  0100               	movlb	0	; () banked
  7234  006ECC  5169               	movf	(writeStructureToEeprom@size+1)& (0+255),w,b
  7235  006ECE  0100               	movlb	0	; () banked
  7236  006ED0  596B               	subwfb	(writeStructureToEeprom@i+1)& (0+255),w,b
  7237  006ED2  B0D8               	btfsc	status,0,c
  7238  006ED4  0012               	return	
  7239  006ED6  D7E4               	goto	l14330
  7240  006ED8                     __end_of_writeStructureToEeprom:
  7241                           	opt stack 0
  7242                           tblptru	equ	0xFF8
  7243                           tblptrh	equ	0xFF7
  7244                           tblptrl	equ	0xFF6
  7245                           tablat	equ	0xFF5
  7246                           intcon	equ	0xFF2
  7247                           postinc0	equ	0xFEE
  7248                           wreg	equ	0xFE8
  7249                           postdec1	equ	0xFE5
  7250                           fsr1h	equ	0xFE2
  7251                           fsr1l	equ	0xFE1
  7252                           indf2	equ	0xFDF
  7253                           postinc2	equ	0xFDE
  7254                           postdec2	equ	0xFDD
  7255                           fsr2h	equ	0xFDA
  7256                           fsr2l	equ	0xFD9
  7257                           status	equ	0xFD8
  7258                           
  7259 ;; *************** function _writeByteToEeprom *****************
  7260 ;; Defined at:
  7261 ;;		line 200 in file "peripherals.c"
  7262 ;; Parameters:    Size  Location     Type
  7263 ;;  byte            2    0[BANK0 ] PTR unsigned char 
  7264 ;;		 -> ABB_1.det_arrays(909), ABB_1(917), 
  7265 ;; Auto vars:     Size  Location     Type
  7266 ;;  address         2    4[BANK0 ] unsigned int 
  7267 ;; Return value:  Size  Location     Type
  7268 ;;                  1    wreg      void 
  7269 ;; Registers used:
  7270 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7271 ;; Tracked objects:
  7272 ;;		On entry : 0/0
  7273 ;;		On exit  : 0/0
  7274 ;;		Unchanged: 0/0
  7275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7276 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7277 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7278 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7279 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7280 ;;Total ram usage:        6 bytes
  7281 ;; Hardware stack levels used:    1
  7282 ;; Hardware stack levels required when called:    8
  7283 ;; This function calls:
  7284 ;;		Nothing
  7285 ;; This function is called by:
  7286 ;;		_writeStructureToEeprom
  7287 ;; This function uses a non-reentrant model
  7288 ;;
  7289                           
  7290                           	psect	text31
  7291  00641A                     __ptext31:
  7292                           	opt stack 0
  7293  00641A                     _writeByteToEeprom:
  7294                           	opt stack 20
  7295                           
  7296                           ;peripherals.c: 201: unsigned int address = byte - &ABB_1;
  7297                           
  7298                           ; BSR set to: 0
  7299                           ;incstack = 0
  7300  00641A  0EC0               	movlw	low _ABB_1
  7301  00641C  0100               	movlb	0	; () banked
  7302  00641E  6F62               	movwf	??_writeByteToEeprom& (0+255),b
  7303  006420  0E03               	movlw	high _ABB_1
  7304  006422  0100               	movlb	0	; () banked
  7305  006424  6F63               	movwf	(??_writeByteToEeprom+1)& (0+255),b
  7306  006426  0100               	movlb	0	; () banked
  7307  006428  1F62               	comf	??_writeByteToEeprom& (0+255),f,b
  7308  00642A  1F63               	comf	(??_writeByteToEeprom+1)& (0+255),f,b
  7309  00642C  4B62               	infsnz	??_writeByteToEeprom& (0+255),f,b
  7310  00642E  2B63               	incf	(??_writeByteToEeprom+1)& (0+255),f,b
  7311  006430  0100               	movlb	0	; () banked
  7312  006432  5160               	movf	writeByteToEeprom@byte& (0+255),w,b
  7313  006434  0100               	movlb	0	; () banked
  7314  006436  2562               	addwf	??_writeByteToEeprom& (0+255),w,b
  7315  006438  0100               	movlb	0	; () banked
  7316  00643A  6F64               	movwf	writeByteToEeprom@address& (0+255),b
  7317  00643C  0100               	movlb	0	; () banked
  7318  00643E  5161               	movf	(writeByteToEeprom@byte+1)& (0+255),w,b
  7319  006440  0100               	movlb	0	; () banked
  7320  006442  2163               	addwfc	(??_writeByteToEeprom+1)& (0+255),w,b
  7321  006444  0100               	movlb	0	; () banked
  7322  006446  6F65               	movwf	(writeByteToEeprom@address+1)& (0+255),b
  7323                           
  7324                           ;peripherals.c: 202: if(address >= 240)
  7325  006448  0100               	movlb	0	; () banked
  7326  00644A  5165               	movf	(writeByteToEeprom@address+1)& (0+255),w,b
  7327  00644C  E104               	bnz	u9830
  7328  00644E  0EF0               	movlw	240
  7329  006450  0100               	movlb	0	; () banked
  7330  006452  5D64               	subwf	writeByteToEeprom@address& (0+255),w,b
  7331  006454  B0D8               	btfsc	status,0,c
  7332  006456                     u9830:
  7333                           
  7334                           ; BSR set to: 0
  7335                           ;peripherals.c: 203: __nop();
  7336  006456  F000               	nop	
  7337                           
  7338                           ;peripherals.c: 204: NVMCON1bits.NVMREG0 = 0;
  7339  006458  9C77               	bcf	3959,6,c	;volatile
  7340                           
  7341                           ;peripherals.c: 205: NVMCON1bits.NVMREG1 = 0;
  7342  00645A  9E77               	bcf	3959,7,c	;volatile
  7343                           
  7344                           ;peripherals.c: 206: NVMADRL = address & 0xFF;
  7345  00645C  C064  FF74         	movff	writeByteToEeprom@address,3956	;volatile
  7346                           
  7347                           ;peripherals.c: 207: NVMADRH = (address >> 8) & 0xFF;
  7348  006460  0100               	movlb	0	; () banked
  7349  006462  5165               	movf	(writeByteToEeprom@address+1)& (0+255),w,b
  7350  006464  6E75               	movwf	3957,c	;volatile
  7351                           
  7352                           ; BSR set to: 0
  7353                           ;peripherals.c: 208: NVMDAT = *byte;
  7354  006466  C060  FFD9         	movff	writeByteToEeprom@byte,fsr2l
  7355  00646A  C061  FFDA         	movff	writeByteToEeprom@byte+1,fsr2h
  7356  00646E  50DF               	movf	indf2,w,c
  7357  006470  6E76               	movwf	3958,c	;volatile
  7358                           
  7359                           ; BSR set to: 0
  7360                           ;peripherals.c: 209: NVMCON1bits.WREN = 1;
  7361  006472  8477               	bsf	3959,2,c	;volatile
  7362                           
  7363                           ; BSR set to: 0
  7364                           ;peripherals.c: 210: INTCONbits.GIE = 0;
  7365  006474  9EF2               	bcf	intcon,7,c	;volatile
  7366                           
  7367                           ; BSR set to: 0
  7368                           ;peripherals.c: 211: NVMCON2 = 0x55;
  7369  006476  0E55               	movlw	85
  7370  006478  6E78               	movwf	3960,c	;volatile
  7371                           
  7372                           ; BSR set to: 0
  7373                           ;peripherals.c: 212: NVMCON2 = 0xAA;
  7374  00647A  0EAA               	movlw	170
  7375  00647C  6E78               	movwf	3960,c	;volatile
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;peripherals.c: 213: NVMCON1bits.WR = 1;
  7379  00647E  8277               	bsf	3959,1,c	;volatile
  7380  006480                     l374:
  7381  006480  B277               	btfsc	3959,1,c	;volatile
  7382  006482  D7FE               	goto	l374
  7383                           
  7384                           ;peripherals.c: 215: INTCONbits.GIE = 1;
  7385  006484  8EF2               	bsf	intcon,7,c	;volatile
  7386                           
  7387                           ;peripherals.c: 216: NVMCON1bits.WREN = 0;
  7388  006486  9477               	bcf	3959,2,c	;volatile
  7389  006488  0012               	return		;funcret
  7390  00648A                     __end_of_writeByteToEeprom:
  7391                           	opt stack 0
  7392                           tblptru	equ	0xFF8
  7393                           tblptrh	equ	0xFF7
  7394                           tblptrl	equ	0xFF6
  7395                           tablat	equ	0xFF5
  7396                           intcon	equ	0xFF2
  7397                           postinc0	equ	0xFEE
  7398                           wreg	equ	0xFE8
  7399                           postdec1	equ	0xFE5
  7400                           fsr1h	equ	0xFE2
  7401                           fsr1l	equ	0xFE1
  7402                           indf2	equ	0xFDF
  7403                           postinc2	equ	0xFDE
  7404                           postdec2	equ	0xFDD
  7405                           fsr2h	equ	0xFDA
  7406                           fsr2l	equ	0xFD9
  7407                           status	equ	0xFD8
  7408                           
  7409 ;; *************** function _program *****************
  7410 ;; Defined at:
  7411 ;;		line 41 in file "program.c"
  7412 ;; Parameters:    Size  Location     Type
  7413 ;;		None
  7414 ;; Auto vars:     Size  Location     Type
  7415 ;;		None
  7416 ;; Return value:  Size  Location     Type
  7417 ;;                  1    wreg      void 
  7418 ;; Registers used:
  7419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7420 ;; Tracked objects:
  7421 ;;		On entry : 0/0
  7422 ;;		On exit  : 0/0
  7423 ;;		Unchanged: 0/0
  7424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7429 ;;Total ram usage:        0 bytes
  7430 ;; Hardware stack levels used:    1
  7431 ;; Hardware stack levels required when called:   15
  7432 ;; This function calls:
  7433 ;;		_initialiseStates
  7434 ;;		_prepareForProgramming
  7435 ;;		_programInitialise
  7436 ;;		_programUIDs
  7437 ;;		_returnFromProgramming
  7438 ;;		_setOffLed
  7439 ;; This function is called by:
  7440 ;;		_device
  7441 ;; This function uses a non-reentrant model
  7442 ;;
  7443                           
  7444                           	psect	text32
  7445  00776A                     __ptext32:
  7446                           	opt stack 0
  7447  00776A                     _program:
  7448                           	opt stack 14
  7449                           
  7450                           ;incstack = 0
  7451  00776A  0004               	clrwdt		;# 
  7452                           
  7453                           ;program.c: 43: setOffLed();
  7454  00776C  ECCE  F03D         	call	_setOffLed	;wreg free
  7455                           
  7456                           ;program.c: 44: prepareForProgramming();
  7457  007770  ECB8  F036         	call	_prepareForProgramming	;wreg free
  7458                           
  7459                           ;program.c: 45: programInitialise();
  7460  007774  EC97  F03D         	call	_programInitialise	;wreg free
  7461                           
  7462                           ;program.c: 46: programUIDs();
  7463  007778  EC1A  F00A         	call	_programUIDs	;wreg free
  7464                           
  7465                           ;program.c: 53: initialiseStates();
  7466  00777C  EC61  F029         	call	_initialiseStates	;wreg free
  7467                           
  7468                           ;program.c: 54: returnFromProgramming();
  7469  007780  ECE9  F038         	call	_returnFromProgramming	;wreg free
  7470  007784  0012               	return		;funcret
  7471  007786                     __end_of_program:
  7472                           	opt stack 0
  7473                           tblptru	equ	0xFF8
  7474                           tblptrh	equ	0xFF7
  7475                           tblptrl	equ	0xFF6
  7476                           tablat	equ	0xFF5
  7477                           intcon	equ	0xFF2
  7478                           postinc0	equ	0xFEE
  7479                           wreg	equ	0xFE8
  7480                           postdec1	equ	0xFE5
  7481                           fsr1h	equ	0xFE2
  7482                           fsr1l	equ	0xFE1
  7483                           indf2	equ	0xFDF
  7484                           postinc2	equ	0xFDE
  7485                           postdec2	equ	0xFDD
  7486                           fsr2h	equ	0xFDA
  7487                           fsr2l	equ	0xFD9
  7488                           status	equ	0xFD8
  7489                           
  7490 ;; *************** function _programUIDs *****************
  7491 ;; Defined at:
  7492 ;;		line 100 in file "program.c"
  7493 ;; Parameters:    Size  Location     Type
  7494 ;;		None
  7495 ;; Auto vars:     Size  Location     Type
  7496 ;;  i               2   52[BANK0 ] int 
  7497 ;;  i               2   54[BANK0 ] int 
  7498 ;;  attempts        1   56[BANK0 ] unsigned char 
  7499 ;; Return value:  Size  Location     Type
  7500 ;;                  1    wreg      void 
  7501 ;; Registers used:
  7502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7503 ;; Tracked objects:
  7504 ;;		On entry : 0/0
  7505 ;;		On exit  : 0/0
  7506 ;;		Unchanged: 0/0
  7507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7509 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7510 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7511 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7512 ;;Total ram usage:       11 bytes
  7513 ;; Hardware stack levels used:    1
  7514 ;; Hardware stack levels required when called:   14
  7515 ;; This function calls:
  7516 ;;		_EDD_Calibrate
  7517 ;;		__delay_ms
  7518 ;;		_addPacketToOutgoingQueue
  7519 ;;		_checkLineForConnectedUIDs
  7520 ;;		_programRetryChecks
  7521 ;;		_programUID
  7522 ;;		_readUID
  7523 ;;		_selfCheckUID
  7524 ;;		_setBlueLed
  7525 ;; This function is called by:
  7526 ;;		_program
  7527 ;; This function uses a non-reentrant model
  7528 ;;
  7529                           
  7530                           	psect	text33
  7531  001434                     __ptext33:
  7532                           	opt stack 0
  7533  001434                     _programUIDs:
  7534                           	opt stack 14
  7535                           
  7536                           ;program.c: 101: WDTCON0bits.SEN = 0;
  7537                           
  7538                           ;incstack = 0
  7539  001434  010E               	movlb	14	; () banked
  7540  001436  913D               	bcf	61,0,b	;volatile
  7541                           
  7542                           ; BSR set to: 14
  7543                           ;program.c: 102: maxProgramAttempts = 5;
  7544  001438  0E05               	movlw	5
  7545  00143A  0100               	movlb	0	; () banked
  7546  00143C  6FC9               	movwf	_maxProgramAttempts& (0+255),b
  7547                           
  7548                           ;program.c: 103: unsigned char attempts = 0;
  7549  00143E  0E00               	movlw	0
  7550  001440  0100               	movlb	0	; () banked
  7551  001442  6F98               	movwf	programUIDs@attempts& (0+255),b
  7552                           
  7553                           ; BSR set to: 0
  7554                           ;program.c: 104: if(!checkLineForConnectedUIDs()){
  7555  001444  EC86  F033         	call	_checkLineForConnectedUIDs	;wreg free
  7556  001448  0900               	iorlw	0
  7557  00144A  A4D8               	btfss	status,2,c
  7558  00144C  D007               	goto	l15046
  7559                           
  7560                           ;program.c: 105: if(ABB_1.dets_length > 0)
  7561  00144E  EE23  F0C0         	lfsr	2,_ABB_1
  7562  001452  50DF               	movf	indf2,w,c
  7563  001454  A4D8               	btfss	status,2,c
  7564                           
  7565                           ;program.c: 106: FLAGS.progSuccess = 0;
  7566  001456  9438               	bcf	_FLAGS+1,2,c
  7567                           
  7568                           ;program.c: 107: FLAGS.progComplete = 1;
  7569  001458  8238               	bsf	_FLAGS+1,1,c
  7570                           
  7571                           ;program.c: 108: return;
  7572  00145A  0012               	return	
  7573  00145C                     l15046:
  7574                           
  7575                           ;program.c: 110: else{
  7576                           ;program.c: 111: if(ABB_1.dets_length == 0)
  7577  00145C  EE23  F0C0         	lfsr	2,_ABB_1
  7578  001460  50DF               	movf	indf2,w,c
  7579  001462  B4D8               	btfsc	status,2,c
  7580                           
  7581                           ;program.c: 112: FLAGS.progSuccess = 0;
  7582  001464  9438               	bcf	_FLAGS+1,2,c
  7583  001466  0004               	clrwdt		;# 
  7584                           
  7585                           ;program.c: 115: setBlueLed();
  7586  001468  ECD6  F03D         	call	_setBlueLed	;wreg free
  7587                           
  7588                           ;program.c: 116: if(ABB_1.dets_length > 0){
  7589  00146C  EE23  F0C0         	lfsr	2,_ABB_1
  7590  001470  50DF               	movf	indf2,w,c
  7591  001472  B4D8               	btfsc	status,2,c
  7592  001474  D0A3               	goto	l15072
  7593                           
  7594                           ;program.c: 117: for(int i = 1; i <= ABB_1.dets_length; i++){
  7595  001476  0E00               	movlw	0
  7596  001478  0100               	movlb	0	; () banked
  7597  00147A  6F97               	movwf	(programUIDs@i+1)& (0+255),b
  7598  00147C  0E01               	movlw	1
  7599  00147E  6F96               	movwf	programUIDs@i& (0+255),b
  7600  001480  D087               	goto	l15070
  7601  001482                     l15056:
  7602                           
  7603                           ; BSR set to: 0
  7604                           ;program.c: 118: attempts = 2;
  7605  001482  0E02               	movlw	2
  7606  001484  0100               	movlb	0	; () banked
  7607  001486  6F98               	movwf	programUIDs@attempts& (0+255),b
  7608  001488                     l15058:
  7609  001488  0E98               	movlw	low programUIDs@attempts
  7610  00148A  0100               	movlb	0	; () banked
  7611  00148C  6F8B               	movwf	programRetryChecks@retry& (0+255),b
  7612  00148E  0E00               	movlw	high programUIDs@attempts
  7613  001490  0100               	movlb	0	; () banked
  7614  001492  6F8C               	movwf	(programRetryChecks@retry+1)& (0+255),b
  7615  001494  0100               	movlb	0	; () banked
  7616  001496  5196               	movf	programUIDs@i& (0+255),w,b
  7617  001498  ECEB  F032         	call	_programRetryChecks
  7618  00149C  0900               	iorlw	0
  7619  00149E  B4D8               	btfsc	status,2,c
  7620  0014A0  D7F3               	goto	l15058
  7621                           
  7622                           ;program.c: 120: if(attempts == 0){
  7623  0014A2  0100               	movlb	0	; () banked
  7624  0014A4  5198               	movf	programUIDs@attempts& (0+255),w,b
  7625  0014A6  0100               	movlb	0	; () banked
  7626  0014A8  A4D8               	btfss	status,2,c
  7627  0014AA  D038               	goto	l15066
  7628                           
  7629                           ; BSR set to: 0
  7630                           ;program.c: 121: FLAGS.progSuccess = 0;
  7631  0014AC  9438               	bcf	_FLAGS+1,2,c
  7632                           
  7633                           ; BSR set to: 0
  7634                           ;program.c: 122: ABB_1.det_arrays.info[i].data.connection_status = 0;
  7635  0014AE  0EF9               	movlw	249
  7636  0014B0  0100               	movlb	0	; () banked
  7637  0014B2  6F8E               	movwf	??_programUIDs& (0+255),b
  7638  0014B4  0E01               	movlw	1
  7639  0014B6  0100               	movlb	0	; () banked
  7640  0014B8  6F8F               	movwf	(??_programUIDs+1)& (0+255),b
  7641  0014BA  C096  F090         	movff	programUIDs@i,??_programUIDs+2
  7642  0014BE  C097  F091         	movff	programUIDs@i+1,??_programUIDs+3
  7643  0014C2  0100               	movlb	0	; () banked
  7644  0014C4  90D8               	bcf	status,0,c
  7645  0014C6  3790               	rlcf	(??_programUIDs+2)& (0+255),f,b
  7646  0014C8  3791               	rlcf	(??_programUIDs+3)& (0+255),f,b
  7647  0014CA  0100               	movlb	0	; () banked
  7648  0014CC  90D8               	bcf	status,0,c
  7649  0014CE  3790               	rlcf	(??_programUIDs+2)& (0+255),f,b
  7650  0014D0  3791               	rlcf	(??_programUIDs+3)& (0+255),f,b
  7651  0014D2  0100               	movlb	0	; () banked
  7652  0014D4  518E               	movf	??_programUIDs& (0+255),w,b
  7653  0014D6  0100               	movlb	0	; () banked
  7654  0014D8  2790               	addwf	(??_programUIDs+2)& (0+255),f,b
  7655  0014DA  0100               	movlb	0	; () banked
  7656  0014DC  518F               	movf	(??_programUIDs+1)& (0+255),w,b
  7657  0014DE  0100               	movlb	0	; () banked
  7658  0014E0  2391               	addwfc	(??_programUIDs+3)& (0+255),f,b
  7659  0014E2  0EC0               	movlw	low _ABB_1
  7660  0014E4  0100               	movlb	0	; () banked
  7661  0014E6  6F92               	movwf	(??_programUIDs+4)& (0+255),b
  7662  0014E8  0E03               	movlw	high _ABB_1
  7663  0014EA  0100               	movlb	0	; () banked
  7664  0014EC  6F93               	movwf	(??_programUIDs+5)& (0+255),b
  7665  0014EE  0E04               	movlw	4
  7666  0014F0  0100               	movlb	0	; () banked
  7667  0014F2  2792               	addwf	(??_programUIDs+4)& (0+255),f,b
  7668  0014F4  0E00               	movlw	0
  7669  0014F6  2393               	addwfc	(??_programUIDs+5)& (0+255),f,b
  7670  0014F8  0100               	movlb	0	; () banked
  7671  0014FA  5190               	movf	(??_programUIDs+2)& (0+255),w,b
  7672  0014FC  0100               	movlb	0	; () banked
  7673  0014FE  2792               	addwf	(??_programUIDs+4)& (0+255),f,b
  7674  001500  0100               	movlb	0	; () banked
  7675  001502  5191               	movf	(??_programUIDs+3)& (0+255),w,b
  7676  001504  0100               	movlb	0	; () banked
  7677  001506  2393               	addwfc	(??_programUIDs+5)& (0+255),f,b
  7678  001508  0E01               	movlw	1
  7679  00150A  0100               	movlb	0	; () banked
  7680  00150C  2592               	addwf	(??_programUIDs+4)& (0+255),w,b
  7681  00150E  6ED9               	movwf	fsr2l,c
  7682  001510  0E00               	movlw	0
  7683  001512  0100               	movlb	0	; () banked
  7684  001514  2193               	addwfc	(??_programUIDs+5)& (0+255),w,b
  7685  001516  6EDA               	movwf	fsr2h,c
  7686  001518  92DF               	bcf	indf2,1,c
  7687                           
  7688                           ;program.c: 123: }
  7689  00151A  D036               	goto	l2045
  7690  00151C                     l15066:
  7691                           
  7692                           ; BSR set to: 0
  7693                           ;program.c: 124: else
  7694                           ;program.c: 125: ABB_1.det_arrays.info[i].data.connection_status = 1;
  7695  00151C  0EF9               	movlw	249
  7696  00151E  0100               	movlb	0	; () banked
  7697  001520  6F8E               	movwf	??_programUIDs& (0+255),b
  7698  001522  0E01               	movlw	1
  7699  001524  0100               	movlb	0	; () banked
  7700  001526  6F8F               	movwf	(??_programUIDs+1)& (0+255),b
  7701  001528  C096  F090         	movff	programUIDs@i,??_programUIDs+2
  7702  00152C  C097  F091         	movff	programUIDs@i+1,??_programUIDs+3
  7703  001530  0100               	movlb	0	; () banked
  7704  001532  90D8               	bcf	status,0,c
  7705  001534  3790               	rlcf	(??_programUIDs+2)& (0+255),f,b
  7706  001536  3791               	rlcf	(??_programUIDs+3)& (0+255),f,b
  7707  001538  0100               	movlb	0	; () banked
  7708  00153A  90D8               	bcf	status,0,c
  7709  00153C  3790               	rlcf	(??_programUIDs+2)& (0+255),f,b
  7710  00153E  3791               	rlcf	(??_programUIDs+3)& (0+255),f,b
  7711  001540  0100               	movlb	0	; () banked
  7712  001542  518E               	movf	??_programUIDs& (0+255),w,b
  7713  001544  0100               	movlb	0	; () banked
  7714  001546  2790               	addwf	(??_programUIDs+2)& (0+255),f,b
  7715  001548  0100               	movlb	0	; () banked
  7716  00154A  518F               	movf	(??_programUIDs+1)& (0+255),w,b
  7717  00154C  0100               	movlb	0	; () banked
  7718  00154E  2391               	addwfc	(??_programUIDs+3)& (0+255),f,b
  7719  001550  0EC0               	movlw	low _ABB_1
  7720  001552  0100               	movlb	0	; () banked
  7721  001554  6F92               	movwf	(??_programUIDs+4)& (0+255),b
  7722  001556  0E03               	movlw	high _ABB_1
  7723  001558  0100               	movlb	0	; () banked
  7724  00155A  6F93               	movwf	(??_programUIDs+5)& (0+255),b
  7725  00155C  0E04               	movlw	4
  7726  00155E  0100               	movlb	0	; () banked
  7727  001560  2792               	addwf	(??_programUIDs+4)& (0+255),f,b
  7728  001562  0E00               	movlw	0
  7729  001564  2393               	addwfc	(??_programUIDs+5)& (0+255),f,b
  7730  001566  0100               	movlb	0	; () banked
  7731  001568  5190               	movf	(??_programUIDs+2)& (0+255),w,b
  7732  00156A  0100               	movlb	0	; () banked
  7733  00156C  2792               	addwf	(??_programUIDs+4)& (0+255),f,b
  7734  00156E  0100               	movlb	0	; () banked
  7735  001570  5191               	movf	(??_programUIDs+3)& (0+255),w,b
  7736  001572  0100               	movlb	0	; () banked
  7737  001574  2393               	addwfc	(??_programUIDs+5)& (0+255),f,b
  7738  001576  0E01               	movlw	1
  7739  001578  0100               	movlb	0	; () banked
  7740  00157A  2592               	addwf	(??_programUIDs+4)& (0+255),w,b
  7741  00157C  6ED9               	movwf	fsr2l,c
  7742  00157E  0E00               	movlw	0
  7743  001580  0100               	movlb	0	; () banked
  7744  001582  2193               	addwfc	(??_programUIDs+5)& (0+255),w,b
  7745  001584  6EDA               	movwf	fsr2h,c
  7746  001586  82DF               	bsf	indf2,1,c
  7747  001588                     l2045:
  7748                           
  7749                           ; BSR set to: 0
  7750  001588  0004               	clrwdt		;# 
  7751  00158A  0100               	movlb	0	; () banked
  7752  00158C  4B96               	infsnz	programUIDs@i& (0+255),f,b
  7753  00158E  2B97               	incf	(programUIDs@i+1)& (0+255),f,b
  7754  001590                     l15070:
  7755                           
  7756                           ; BSR set to: 0
  7757  001590  EE23  F0C0         	lfsr	2,_ABB_1
  7758  001594  50DF               	movf	indf2,w,c
  7759  001596  0100               	movlb	0	; () banked
  7760  001598  6F8E               	movwf	??_programUIDs& (0+255),b
  7761  00159A  6B8F               	clrf	(??_programUIDs+1)& (0+255),b
  7762  00159C  0100               	movlb	0	; () banked
  7763  00159E  5196               	movf	programUIDs@i& (0+255),w,b
  7764  0015A0  0100               	movlb	0	; () banked
  7765  0015A2  5D8E               	subwf	??_programUIDs& (0+255),w,b
  7766  0015A4  0100               	movlb	0	; () banked
  7767  0015A6  518F               	movf	(??_programUIDs+1)& (0+255),w,b
  7768  0015A8  0A80               	xorlw	128
  7769  0015AA  0100               	movlb	0	; () banked
  7770  0015AC  6F90               	movwf	(??_programUIDs+2)& (0+255),b
  7771  0015AE  0100               	movlb	0	; () banked
  7772  0015B0  5197               	movf	(programUIDs@i+1)& (0+255),w,b
  7773  0015B2  0A80               	xorlw	128
  7774  0015B4  0100               	movlb	0	; () banked
  7775  0015B6  5990               	subwfb	(??_programUIDs+2)& (0+255),w,b
  7776  0015B8  B0D8               	btfsc	status,0,c
  7777  0015BA  D763               	goto	l15056
  7778  0015BC                     l15072:
  7779                           
  7780                           ;program.c: 127: }
  7781                           ;program.c: 128: }
  7782                           ;program.c: 129: _delay_ms(1000);
  7783  0015BC  0E03               	movlw	3
  7784  0015BE  0100               	movlb	0	; () banked
  7785  0015C0  6F62               	movwf	(__delay_ms@delay+1)& (0+255),b
  7786  0015C2  0EE8               	movlw	232
  7787  0015C4  6F61               	movwf	__delay_ms@delay& (0+255),b
  7788  0015C6  EC02  F037         	call	__delay_ms	;wreg free
  7789                           
  7790                           ;program.c: 130: if(readUID(101)){
  7791  0015CA  0E65               	movlw	101
  7792  0015CC  EC47  F011         	call	_readUID
  7793  0015D0  0900               	iorlw	0
  7794  0015D2  B4D8               	btfsc	status,2,c
  7795  0015D4  D053               	goto	l15086
  7796                           
  7797                           ;program.c: 131: FLAGS.progSuccess = 0;
  7798  0015D6  9438               	bcf	_FLAGS+1,2,c
  7799                           
  7800                           ;program.c: 132: if(programUID(ABB_1.dets_length)){
  7801  0015D8  EE23  F0C0         	lfsr	2,_ABB_1
  7802  0015DC  50DF               	movf	indf2,w,c
  7803  0015DE  ECEC  F00F         	call	_programUID
  7804  0015E2  0900               	iorlw	0
  7805  0015E4  B4D8               	btfsc	status,2,c
  7806  0015E6  D045               	goto	l15084
  7807                           
  7808                           ;program.c: 133: ABB_1.det_arrays.info[ABB_1.dets_length].data.connection_status = 1;
  7809  0015E8  0EF9               	movlw	249
  7810  0015EA  0100               	movlb	0	; () banked
  7811  0015EC  6F8E               	movwf	??_programUIDs& (0+255),b
  7812  0015EE  0E01               	movlw	1
  7813  0015F0  0100               	movlb	0	; () banked
  7814  0015F2  6F8F               	movwf	(??_programUIDs+1)& (0+255),b
  7815  0015F4  C3C0  F090         	movff	_ABB_1,??_programUIDs+2
  7816  0015F8  0100               	movlb	0	; () banked
  7817  0015FA  5190               	movf	(??_programUIDs+2)& (0+255),w,b
  7818  0015FC  0D04               	mullw	4
  7819  0015FE  0100               	movlb	0	; () banked
  7820  001600  518E               	movf	??_programUIDs& (0+255),w,b
  7821  001602  26F3               	addwf	prodl,f,c
  7822  001604  0100               	movlb	0	; () banked
  7823  001606  518F               	movf	(??_programUIDs+1)& (0+255),w,b
  7824  001608  22F4               	addwfc	prodh,f,c
  7825  00160A  0EC0               	movlw	low _ABB_1
  7826  00160C  0100               	movlb	0	; () banked
  7827  00160E  6F91               	movwf	(??_programUIDs+3)& (0+255),b
  7828  001610  0E03               	movlw	high _ABB_1
  7829  001612  0100               	movlb	0	; () banked
  7830  001614  6F92               	movwf	(??_programUIDs+4)& (0+255),b
  7831  001616  0E04               	movlw	4
  7832  001618  0100               	movlb	0	; () banked
  7833  00161A  2791               	addwf	(??_programUIDs+3)& (0+255),f,b
  7834  00161C  0E00               	movlw	0
  7835  00161E  2392               	addwfc	(??_programUIDs+4)& (0+255),f,b
  7836  001620  50F3               	movf	prodl,w,c
  7837  001622  0100               	movlb	0	; () banked
  7838  001624  2791               	addwf	(??_programUIDs+3)& (0+255),f,b
  7839  001626  50F4               	movf	prodh,w,c
  7840  001628  0100               	movlb	0	; () banked
  7841  00162A  2392               	addwfc	(??_programUIDs+4)& (0+255),f,b
  7842  00162C  0E01               	movlw	1
  7843  00162E  0100               	movlb	0	; () banked
  7844  001630  2591               	addwf	(??_programUIDs+3)& (0+255),w,b
  7845  001632  6ED9               	movwf	fsr2l,c
  7846  001634  0E00               	movlw	0
  7847  001636  0100               	movlb	0	; () banked
  7848  001638  2192               	addwfc	(??_programUIDs+4)& (0+255),w,b
  7849  00163A  6EDA               	movwf	fsr2h,c
  7850  00163C  82DF               	bsf	indf2,1,c
  7851                           
  7852                           ; BSR set to: 0
  7853                           ;program.c: 134: addPacketToOutgoingQueue(&ABB_1.det_arrays.UIDs[ABB_1.dets_length], 0b0
      +                          0001010, sizeof(detonator_UID), ABB_1.destination);
  7854  00163E  C3C0  F08E         	movff	_ABB_1,??_programUIDs
  7855  001642  0100               	movlb	0	; () banked
  7856  001644  518E               	movf	??_programUIDs& (0+255),w,b
  7857  001646  0D05               	mullw	5
  7858  001648  0EC4               	movlw	low (_ABB_1+4)
  7859  00164A  24F3               	addwf	prodl,w,c
  7860  00164C  0100               	movlb	0	; () banked
  7861  00164E  6F60               	movwf	addPacketToOutgoingQueue@data& (0+255),b
  7862  001650  0E03               	movlw	high (_ABB_1+4)
  7863  001652  20F4               	addwfc	prodh,w,c
  7864  001654  0100               	movlb	0	; () banked
  7865  001656  6F61               	movwf	(addPacketToOutgoingQueue@data+1)& (0+255),b
  7866  001658  0E0A               	movlw	10
  7867  00165A  0100               	movlb	0	; () banked
  7868  00165C  6F62               	movwf	addPacketToOutgoingQueue@command& (0+255),b
  7869  00165E  0E05               	movlw	5
  7870  001660  0100               	movlb	0	; () banked
  7871  001662  6F63               	movwf	addPacketToOutgoingQueue@length& (0+255),b
  7872  001664  C751  F064         	movff	_ABB_1+913,addPacketToOutgoingQueue@destination
  7873  001668  C752  F065         	movff	_ABB_1+914,addPacketToOutgoingQueue@destination+1
  7874  00166C  ECFD  F02B         	call	_addPacketToOutgoingQueue	;wreg free
  7875                           
  7876                           ;program.c: 135: }
  7877  001670  D005               	goto	l15086
  7878  001672                     l15084:
  7879                           
  7880                           ;program.c: 136: else{
  7881                           ;program.c: 137: ABB_1.dets_length--;
  7882  001672  C3C0  FFE8         	movff	_ABB_1,wreg
  7883  001676  0FFF               	addlw	-1
  7884  001678  CFE8 F3C0          	movff	wreg,_ABB_1
  7885  00167C                     l15086:
  7886                           
  7887                           ;program.c: 138: }
  7888                           ;program.c: 139: }
  7889                           ;program.c: 141: if(ABB_1.dets_length > 0){
  7890  00167C  EE23  F0C0         	lfsr	2,_ABB_1
  7891  001680  50DF               	movf	indf2,w,c
  7892  001682  B4D8               	btfsc	status,2,c
  7893  001684  D073               	goto	l2050
  7894                           
  7895                           ;program.c: 142: EDD_Calibrate();
  7896  001686  EC03  F039         	call	_EDD_Calibrate	;wreg free
  7897                           
  7898                           ;program.c: 143: for(int i = 1; i <= ABB_1.dets_length; i++){
  7899  00168A  0E00               	movlw	0
  7900  00168C  0100               	movlb	0	; () banked
  7901  00168E  6F95               	movwf	(programUIDs@i_6446+1)& (0+255),b
  7902  001690  0E01               	movlw	1
  7903  001692  6F94               	movwf	programUIDs@i_6446& (0+255),b
  7904  001694  D055               	goto	l15106
  7905  001696                     l15092:
  7906                           
  7907                           ; BSR set to: 0
  7908                           ;program.c: 144: if(ABB_1.det_arrays.info[i].data.connection_status){
  7909  001696  0EF9               	movlw	249
  7910  001698  0100               	movlb	0	; () banked
  7911  00169A  6F8E               	movwf	??_programUIDs& (0+255),b
  7912  00169C  0E01               	movlw	1
  7913  00169E  0100               	movlb	0	; () banked
  7914  0016A0  6F8F               	movwf	(??_programUIDs+1)& (0+255),b
  7915  0016A2  C094  F090         	movff	programUIDs@i_6446,??_programUIDs+2
  7916  0016A6  C095  F091         	movff	programUIDs@i_6446+1,??_programUIDs+3
  7917  0016AA  0100               	movlb	0	; () banked
  7918  0016AC  90D8               	bcf	status,0,c
  7919  0016AE  3790               	rlcf	(??_programUIDs+2)& (0+255),f,b
  7920  0016B0  3791               	rlcf	(??_programUIDs+3)& (0+255),f,b
  7921  0016B2  0100               	movlb	0	; () banked
  7922  0016B4  90D8               	bcf	status,0,c
  7923  0016B6  3790               	rlcf	(??_programUIDs+2)& (0+255),f,b
  7924  0016B8  3791               	rlcf	(??_programUIDs+3)& (0+255),f,b
  7925  0016BA  0100               	movlb	0	; () banked
  7926  0016BC  518E               	movf	??_programUIDs& (0+255),w,b
  7927  0016BE  0100               	movlb	0	; () banked
  7928  0016C0  2790               	addwf	(??_programUIDs+2)& (0+255),f,b
  7929  0016C2  0100               	movlb	0	; () banked
  7930  0016C4  518F               	movf	(??_programUIDs+1)& (0+255),w,b
  7931  0016C6  0100               	movlb	0	; () banked
  7932  0016C8  2391               	addwfc	(??_programUIDs+3)& (0+255),f,b
  7933  0016CA  0EC0               	movlw	low _ABB_1
  7934  0016CC  0100               	movlb	0	; () banked
  7935  0016CE  6F92               	movwf	(??_programUIDs+4)& (0+255),b
  7936  0016D0  0E03               	movlw	high _ABB_1
  7937  0016D2  0100               	movlb	0	; () banked
  7938  0016D4  6F93               	movwf	(??_programUIDs+5)& (0+255),b
  7939  0016D6  0E04               	movlw	4
  7940  0016D8  0100               	movlb	0	; () banked
  7941  0016DA  2792               	addwf	(??_programUIDs+4)& (0+255),f,b
  7942  0016DC  0E00               	movlw	0
  7943  0016DE  2393               	addwfc	(??_programUIDs+5)& (0+255),f,b
  7944  0016E0  0100               	movlb	0	; () banked
  7945  0016E2  5190               	movf	(??_programUIDs+2)& (0+255),w,b
  7946  0016E4  0100               	movlb	0	; () banked
  7947  0016E6  2792               	addwf	(??_programUIDs+4)& (0+255),f,b
  7948  0016E8  0100               	movlb	0	; () banked
  7949  0016EA  5191               	movf	(??_programUIDs+3)& (0+255),w,b
  7950  0016EC  0100               	movlb	0	; () banked
  7951  0016EE  2393               	addwfc	(??_programUIDs+5)& (0+255),f,b
  7952  0016F0  0E01               	movlw	1
  7953  0016F2  0100               	movlb	0	; () banked
  7954  0016F4  2592               	addwf	(??_programUIDs+4)& (0+255),w,b
  7955  0016F6  6ED9               	movwf	fsr2l,c
  7956  0016F8  0E00               	movlw	0
  7957  0016FA  0100               	movlb	0	; () banked
  7958  0016FC  2193               	addwfc	(??_programUIDs+5)& (0+255),w,b
  7959  0016FE  6EDA               	movwf	fsr2h,c
  7960  001700  A2DF               	btfss	indf2,1,c
  7961  001702  D01A               	goto	l2053
  7962                           
  7963                           ; BSR set to: 0
  7964                           ;program.c: 145: attempts = 0;
  7965  001704  0E00               	movlw	0
  7966  001706  0100               	movlb	0	; () banked
  7967  001708  6F98               	movwf	programUIDs@attempts& (0+255),b
  7968  00170A                     l15096:
  7969                           
  7970                           ; BSR set to: 0
  7971  00170A  C094  F075         	movff	programUIDs@i_6446,selfCheckUID@window
  7972  00170E  C095  F076         	movff	programUIDs@i_6446+1,selfCheckUID@window+1
  7973  001712  EC6D  F006         	call	_selfCheckUID	;wreg free
  7974  001716  0900               	iorlw	0
  7975  001718  A4D8               	btfss	status,2,c
  7976  00171A  D009               	goto	l15100
  7977  00171C  0100               	movlb	0	; () banked
  7978  00171E  2B98               	incf	programUIDs@attempts& (0+255),f,b
  7979  001720  0598               	decf	programUIDs@attempts& (0+255),w,b
  7980  001722  0100               	movlb	0	; () banked
  7981  001724  6F8E               	movwf	??_programUIDs& (0+255),b
  7982  001726  0E01               	movlw	1
  7983  001728  0100               	movlb	0	; () banked
  7984  00172A  658E               	cpfsgt	??_programUIDs& (0+255),b
  7985  00172C  D7EE               	goto	l15096
  7986  00172E                     l15100:
  7987                           
  7988                           ;program.c: 147: if(attempts >= 2)
  7989  00172E  0E01               	movlw	1
  7990  001730  0100               	movlb	0	; () banked
  7991  001732  6598               	cpfsgt	programUIDs@attempts& (0+255),b
  7992  001734  D001               	goto	l2053
  7993                           
  7994                           ; BSR set to: 0
  7995                           ;program.c: 149: __nop();
  7996  001736  F000               	nop	
  7997  001738                     l2053:
  7998  001738  0004               	clrwdt		;# 
  7999  00173A  0100               	movlb	0	; () banked
  8000  00173C  4B94               	infsnz	programUIDs@i_6446& (0+255),f,b
  8001  00173E  2B95               	incf	(programUIDs@i_6446+1)& (0+255),f,b
  8002  001740                     l15106:
  8003                           
  8004                           ; BSR set to: 0
  8005  001740  EE23  F0C0         	lfsr	2,_ABB_1
  8006  001744  50DF               	movf	indf2,w,c
  8007  001746  0100               	movlb	0	; () banked
  8008  001748  6F8E               	movwf	??_programUIDs& (0+255),b
  8009  00174A  6B8F               	clrf	(??_programUIDs+1)& (0+255),b
  8010  00174C  0100               	movlb	0	; () banked
  8011  00174E  5194               	movf	programUIDs@i_6446& (0+255),w,b
  8012  001750  0100               	movlb	0	; () banked
  8013  001752  5D8E               	subwf	??_programUIDs& (0+255),w,b
  8014  001754  0100               	movlb	0	; () banked
  8015  001756  518F               	movf	(??_programUIDs+1)& (0+255),w,b
  8016  001758  0A80               	xorlw	128
  8017  00175A  0100               	movlb	0	; () banked
  8018  00175C  6F90               	movwf	(??_programUIDs+2)& (0+255),b
  8019  00175E  0100               	movlb	0	; () banked
  8020  001760  5195               	movf	(programUIDs@i_6446+1)& (0+255),w,b
  8021  001762  0A80               	xorlw	128
  8022  001764  0100               	movlb	0	; () banked
  8023  001766  5990               	subwfb	(??_programUIDs+2)& (0+255),w,b
  8024  001768  B0D8               	btfsc	status,0,c
  8025  00176A  D795               	goto	l15092
  8026  00176C                     l2050:
  8027                           
  8028                           ;program.c: 152: }
  8029                           ;program.c: 153: }
  8030                           ;program.c: 154: FLAGS.progComplete = 1;
  8031  00176C  8238               	bsf	_FLAGS+1,1,c
  8032  00176E  0012               	return		;funcret
  8033  001770                     __end_of_programUIDs:
  8034                           	opt stack 0
  8035                           tblptru	equ	0xFF8
  8036                           tblptrh	equ	0xFF7
  8037                           tblptrl	equ	0xFF6
  8038                           tablat	equ	0xFF5
  8039                           prodh	equ	0xFF4
  8040                           prodl	equ	0xFF3
  8041                           intcon	equ	0xFF2
  8042                           postinc0	equ	0xFEE
  8043                           wreg	equ	0xFE8
  8044                           postdec1	equ	0xFE5
  8045                           fsr1h	equ	0xFE2
  8046                           fsr1l	equ	0xFE1
  8047                           indf2	equ	0xFDF
  8048                           postinc2	equ	0xFDE
  8049                           postdec2	equ	0xFDD
  8050                           fsr2h	equ	0xFDA
  8051                           fsr2l	equ	0xFD9
  8052                           status	equ	0xFD8
  8053                           
  8054 ;; *************** function _selfCheckUID *****************
  8055 ;; Defined at:
  8056 ;;		line 305 in file "eddComms.c"
  8057 ;; Parameters:    Size  Location     Type
  8058 ;;  window          2   21[BANK0 ] unsigned short 
  8059 ;; Auto vars:     Size  Location     Type
  8060 ;;  txPacket        3   29[BANK0 ] unsigned char [3]
  8061 ;;  attempts        1   32[BANK0 ] unsigned char 
  8062 ;; Return value:  Size  Location     Type
  8063 ;;                  1    wreg      unsigned char 
  8064 ;; Registers used:
  8065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8066 ;; Tracked objects:
  8067 ;;		On entry : 0/0
  8068 ;;		On exit  : 0/0
  8069 ;;		Unchanged: 0/0
  8070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8071 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8072 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8073 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8074 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8075 ;;Total ram usage:       12 bytes
  8076 ;; Hardware stack levels used:    1
  8077 ;; Hardware stack levels required when called:   12
  8078 ;; This function calls:
  8079 ;;		_commandResponse
  8080 ;; This function is called by:
  8081 ;;		_programUIDs
  8082 ;; This function uses a non-reentrant model
  8083 ;;
  8084                           
  8085                           	psect	text34
  8086  000CDA                     __ptext34:
  8087                           	opt stack 0
  8088  000CDA                     _selfCheckUID:
  8089                           	opt stack 15
  8090                           
  8091                           ;eddComms.c: 306: unsigned char attempts = 0;
  8092                           
  8093                           ;incstack = 0
  8094  000CDA  0E00               	movlw	0
  8095  000CDC  0100               	movlb	0	; () banked
  8096  000CDE  6F80               	movwf	selfCheckUID@attempts& (0+255),b
  8097                           
  8098                           ;eddComms.c: 307: unsigned char txPacket[3];
  8099                           ;eddComms.c: 308: txPacket[0] = 0b00010110;
  8100  000CE0  0E16               	movlw	22
  8101  000CE2  0100               	movlb	0	; () banked
  8102  000CE4  6F7D               	movwf	selfCheckUID@txPacket& (0+255),b
  8103                           
  8104                           ;eddComms.c: 309: txPacket[1] = 0;
  8105  000CE6  0E00               	movlw	0
  8106  000CE8  0100               	movlb	0	; () banked
  8107  000CEA  6F7E               	movwf	(selfCheckUID@txPacket+1)& (0+255),b
  8108                           
  8109                           ; BSR set to: 0
  8110                           ;eddComms.c: 310: txPacket[2] = window;
  8111  000CEC  C075  F07F         	movff	selfCheckUID@window,selfCheckUID@txPacket+2
  8112  000CF0                     l14096:
  8113                           
  8114                           ; BSR set to: 0
  8115  000CF0  0E01               	movlw	1
  8116  000CF2  0100               	movlb	0	; () banked
  8117  000CF4  6F6A               	movwf	commandResponse@RxLength& (0+255),b
  8118  000CF6  0E7D               	movlw	low selfCheckUID@txPacket
  8119  000CF8  0100               	movlb	0	; () banked
  8120  000CFA  6F6B               	movwf	commandResponse@data& (0+255),b
  8121  000CFC  0E00               	movlw	high selfCheckUID@txPacket
  8122  000CFE  0100               	movlb	0	; () banked
  8123  000D00  6F6C               	movwf	(commandResponse@data+1)& (0+255),b
  8124  000D02  0E03               	movlw	3
  8125  000D04  EC96  F028         	call	_commandResponse
  8126  000D08  0900               	iorlw	0
  8127  000D0A  A4D8               	btfss	status,2,c
  8128  000D0C  D009               	goto	l14100
  8129  000D0E  0100               	movlb	0	; () banked
  8130  000D10  2B80               	incf	selfCheckUID@attempts& (0+255),f,b
  8131  000D12  0580               	decf	selfCheckUID@attempts& (0+255),w,b
  8132  000D14  0100               	movlb	0	; () banked
  8133  000D16  6F77               	movwf	??_selfCheckUID& (0+255),b
  8134  000D18  0E03               	movlw	3
  8135  000D1A  0100               	movlb	0	; () banked
  8136  000D1C  6577               	cpfsgt	??_selfCheckUID& (0+255),b
  8137  000D1E  D7E8               	goto	l14096
  8138  000D20                     l14100:
  8139                           
  8140                           ;eddComms.c: 312: if(attempts < 4){
  8141  000D20  0E04               	movlw	4
  8142  000D22  0100               	movlb	0	; () banked
  8143  000D24  6180               	cpfslt	selfCheckUID@attempts& (0+255),b
  8144  000D26  D1C9               	goto	l14138
  8145                           
  8146                           ; BSR set to: 0
  8147                           ;eddComms.c: 313: if(response[0] & 0b10000000)
  8148  000D28  0100               	movlb	0	; () banked
  8149  000D2A  AFE0               	btfss	_response& (0+255),7,b
  8150  000D2C  D037               	goto	l14106
  8151                           
  8152                           ; BSR set to: 0
  8153                           ;eddComms.c: 314: ABB_1.det_arrays.info[window].data.energy_storing = 1;
  8154  000D2E  0EF9               	movlw	249
  8155  000D30  0100               	movlb	0	; () banked
  8156  000D32  6F77               	movwf	??_selfCheckUID& (0+255),b
  8157  000D34  0E01               	movlw	1
  8158  000D36  0100               	movlb	0	; () banked
  8159  000D38  6F78               	movwf	(??_selfCheckUID+1)& (0+255),b
  8160  000D3A  C075  F079         	movff	selfCheckUID@window,??_selfCheckUID+2
  8161  000D3E  C076  F07A         	movff	selfCheckUID@window+1,??_selfCheckUID+3
  8162  000D42  0100               	movlb	0	; () banked
  8163  000D44  90D8               	bcf	status,0,c
  8164  000D46  3779               	rlcf	(??_selfCheckUID+2)& (0+255),f,b
  8165  000D48  377A               	rlcf	(??_selfCheckUID+3)& (0+255),f,b
  8166  000D4A  0100               	movlb	0	; () banked
  8167  000D4C  90D8               	bcf	status,0,c
  8168  000D4E  3779               	rlcf	(??_selfCheckUID+2)& (0+255),f,b
  8169  000D50  377A               	rlcf	(??_selfCheckUID+3)& (0+255),f,b
  8170  000D52  0100               	movlb	0	; () banked
  8171  000D54  5177               	movf	??_selfCheckUID& (0+255),w,b
  8172  000D56  0100               	movlb	0	; () banked
  8173  000D58  2779               	addwf	(??_selfCheckUID+2)& (0+255),f,b
  8174  000D5A  0100               	movlb	0	; () banked
  8175  000D5C  5178               	movf	(??_selfCheckUID+1)& (0+255),w,b
  8176  000D5E  0100               	movlb	0	; () banked
  8177  000D60  237A               	addwfc	(??_selfCheckUID+3)& (0+255),f,b
  8178  000D62  0EC0               	movlw	low _ABB_1
  8179  000D64  0100               	movlb	0	; () banked
  8180  000D66  6F7B               	movwf	(??_selfCheckUID+4)& (0+255),b
  8181  000D68  0E03               	movlw	high _ABB_1
  8182  000D6A  0100               	movlb	0	; () banked
  8183  000D6C  6F7C               	movwf	(??_selfCheckUID+5)& (0+255),b
  8184  000D6E  0E04               	movlw	4
  8185  000D70  0100               	movlb	0	; () banked
  8186  000D72  277B               	addwf	(??_selfCheckUID+4)& (0+255),f,b
  8187  000D74  0E00               	movlw	0
  8188  000D76  237C               	addwfc	(??_selfCheckUID+5)& (0+255),f,b
  8189  000D78  0100               	movlb	0	; () banked
  8190  000D7A  5179               	movf	(??_selfCheckUID+2)& (0+255),w,b
  8191  000D7C  0100               	movlb	0	; () banked
  8192  000D7E  277B               	addwf	(??_selfCheckUID+4)& (0+255),f,b
  8193  000D80  0100               	movlb	0	; () banked
  8194  000D82  517A               	movf	(??_selfCheckUID+3)& (0+255),w,b
  8195  000D84  0100               	movlb	0	; () banked
  8196  000D86  237C               	addwfc	(??_selfCheckUID+5)& (0+255),f,b
  8197  000D88  0E01               	movlw	1
  8198  000D8A  0100               	movlb	0	; () banked
  8199  000D8C  257B               	addwf	(??_selfCheckUID+4)& (0+255),w,b
  8200  000D8E  6ED9               	movwf	fsr2l,c
  8201  000D90  0E00               	movlw	0
  8202  000D92  0100               	movlb	0	; () banked
  8203  000D94  217C               	addwfc	(??_selfCheckUID+5)& (0+255),w,b
  8204  000D96  6EDA               	movwf	fsr2h,c
  8205  000D98  8EDF               	bsf	indf2,7,c
  8206  000D9A  D036               	goto	l14108
  8207  000D9C                     l14106:
  8208                           
  8209                           ; BSR set to: 0
  8210                           ;eddComms.c: 315: else
  8211                           ;eddComms.c: 316: ABB_1.det_arrays.info[window].data.energy_storing = 0;
  8212  000D9C  0EF9               	movlw	249
  8213  000D9E  0100               	movlb	0	; () banked
  8214  000DA0  6F77               	movwf	??_selfCheckUID& (0+255),b
  8215  000DA2  0E01               	movlw	1
  8216  000DA4  0100               	movlb	0	; () banked
  8217  000DA6  6F78               	movwf	(??_selfCheckUID+1)& (0+255),b
  8218  000DA8  C075  F079         	movff	selfCheckUID@window,??_selfCheckUID+2
  8219  000DAC  C076  F07A         	movff	selfCheckUID@window+1,??_selfCheckUID+3
  8220  000DB0  0100               	movlb	0	; () banked
  8221  000DB2  90D8               	bcf	status,0,c
  8222  000DB4  3779               	rlcf	(??_selfCheckUID+2)& (0+255),f,b
  8223  000DB6  377A               	rlcf	(??_selfCheckUID+3)& (0+255),f,b
  8224  000DB8  0100               	movlb	0	; () banked
  8225  000DBA  90D8               	bcf	status,0,c
  8226  000DBC  3779               	rlcf	(??_selfCheckUID+2)& (0+255),f,b
  8227  000DBE  377A               	rlcf	(??_selfCheckUID+3)& (0+255),f,b
  8228  000DC0  0100               	movlb	0	; () banked
  8229  000DC2  5177               	movf	??_selfCheckUID& (0+255),w,b
  8230  000DC4  0100               	movlb	0	; () banked
  8231  000DC6  2779               	addwf	(??_selfCheckUID+2)& (0+255),f,b
  8232  000DC8  0100               	movlb	0	; () banked
  8233  000DCA  5178               	movf	(??_selfCheckUID+1)& (0+255),w,b
  8234  000DCC  0100               	movlb	0	; () banked
  8235  000DCE  237A               	addwfc	(??_selfCheckUID+3)& (0+255),f,b
  8236  000DD0  0EC0               	movlw	low _ABB_1
  8237  000DD2  0100               	movlb	0	; () banked
  8238  000DD4  6F7B               	movwf	(??_selfCheckUID+4)& (0+255),b
  8239  000DD6  0E03               	movlw	high _ABB_1
  8240  000DD8  0100               	movlb	0	; () banked
  8241  000DDA  6F7C               	movwf	(??_selfCheckUID+5)& (0+255),b
  8242  000DDC  0E04               	movlw	4
  8243  000DDE  0100               	movlb	0	; () banked
  8244  000DE0  277B               	addwf	(??_selfCheckUID+4)& (0+255),f,b
  8245  000DE2  0E00               	movlw	0
  8246  000DE4  237C               	addwfc	(??_selfCheckUID+5)& (0+255),f,b
  8247  000DE6  0100               	movlb	0	; () banked
  8248  000DE8  5179               	movf	(??_selfCheckUID+2)& (0+255),w,b
  8249  000DEA  0100               	movlb	0	; () banked
  8250  000DEC  277B               	addwf	(??_selfCheckUID+4)& (0+255),f,b
  8251  000DEE  0100               	movlb	0	; () banked
  8252  000DF0  517A               	movf	(??_selfCheckUID+3)& (0+255),w,b
  8253  000DF2  0100               	movlb	0	; () banked
  8254  000DF4  237C               	addwfc	(??_selfCheckUID+5)& (0+255),f,b
  8255  000DF6  0E01               	movlw	1
  8256  000DF8  0100               	movlb	0	; () banked
  8257  000DFA  257B               	addwf	(??_selfCheckUID+4)& (0+255),w,b
  8258  000DFC  6ED9               	movwf	fsr2l,c
  8259  000DFE  0E00               	movlw	0
  8260  000E00  0100               	movlb	0	; () banked
  8261  000E02  217C               	addwfc	(??_selfCheckUID+5)& (0+255),w,b
  8262  000E04  6EDA               	movwf	fsr2h,c
  8263  000E06  9EDF               	bcf	indf2,7,c
  8264  000E08                     l14108:
  8265                           
  8266                           ; BSR set to: 0
  8267                           ;eddComms.c: 318: if(response[0] & 0b01000000)
  8268  000E08  0100               	movlb	0	; () banked
  8269  000E0A  ADE0               	btfss	_response& (0+255),6,b
  8270  000E0C  D037               	goto	l14112
  8271                           
  8272                           ; BSR set to: 0
  8273                           ;eddComms.c: 319: ABB_1.det_arrays.info[window].data.bridge_wire_resitance = 1;
  8274  000E0E  0EF9               	movlw	249
  8275  000E10  0100               	movlb	0	; () banked
  8276  000E12  6F77               	movwf	??_selfCheckUID& (0+255),b
  8277  000E14  0E01               	movlw	1
  8278  000E16  0100               	movlb	0	; () banked
  8279  000E18  6F78               	movwf	(??_selfCheckUID+1)& (0+255),b
  8280  000E1A  C075  F079         	movff	selfCheckUID@window,??_selfCheckUID+2
  8281  000E1E  C076  F07A         	movff	selfCheckUID@window+1,??_selfCheckUID+3
  8282  000E22  0100               	movlb	0	; () banked
  8283  000E24  90D8               	bcf	status,0,c
  8284  000E26  3779               	rlcf	(??_selfCheckUID+2)& (0+255),f,b
  8285  000E28  377A               	rlcf	(??_selfCheckUID+3)& (0+255),f,b
  8286  000E2A  0100               	movlb	0	; () banked
  8287  000E2C  90D8               	bcf	status,0,c
  8288  000E2E  3779               	rlcf	(??_selfCheckUID+2)& (0+255),f,b
  8289  000E30  377A               	rlcf	(??_selfCheckUID+3)& (0+255),f,b
  8290  000E32  0100               	movlb	0	; () banked
  8291  000E34  5177               	movf	??_selfCheckUID& (0+255),w,b
  8292  000E36  0100               	movlb	0	; () banked
  8293  000E38  2779               	addwf	(??_selfCheckUID+2)& (0+255),f,b
  8294  000E3A  0100               	movlb	0	; () banked
  8295  000E3C  5178               	movf	(??_selfCheckUID+1)& (0+255),w,b
  8296  000E3E  0100               	movlb	0	; () banked
  8297  000E40  237A               	addwfc	(??_selfCheckUID+3)& (0+255),f,b
  8298  000E42  0EC0               	movlw	low _ABB_1
  8299  000E44  0100               	movlb	0	; () banked
  8300  000E46  6F7B               	movwf	(??_selfCheckUID+4)& (0+255),b
  8301  000E48  0E03               	movlw	high _ABB_1
  8302  000E4A  0100               	movlb	0	; () banked
  8303  000E4C  6F7C               	movwf	(??_selfCheckUID+5)& (0+255),b
  8304  000E4E  0E04               	movlw	4
  8305  000E50  0100               	movlb	0	; () banked
  8306  000E52  277B               	addwf	(??_selfCheckUID+4)& (0+255),f,b
  8307  000E54  0E00               	movlw	0
  8308  000E56  237C               	addwfc	(??_selfCheckUID+5)& (0+255),f,b
  8309  000E58  0100               	movlb	0	; () banked
  8310  000E5A  5179               	movf	(??_selfCheckUID+2)& (0+255),w,b
  8311  000E5C  0100               	movlb	0	; () banked
  8312  000E5E  277B               	addwf	(??_selfCheckUID+4)& (0+255),f,b
  8313  000E60  0100               	movlb	0	; () banked
  8314  000E62  517A               	movf	(??_selfCheckUID+3)& (0+255),w,b
  8315  000E64  0100               	movlb	0	; () banked
  8316  000E66  237C               	addwfc	(??_selfCheckUID+5)& (0+255),f,b
  8317  000E68  0E01               	movlw	1
  8318  000E6A  0100               	movlb	0	; () banked
  8319  000E6C  257B               	addwf	(??_selfCheckUID+4)& (0+255),w,b
  8320  000E6E  6ED9               	movwf	fsr2l,c
  8321  000E70  0E00               	movlw	0
  8322  000E72  0100               	movlb	0	; () banked
  8323  000E74  217C               	addwfc	(??_selfCheckUID+5)& (0+255),w,b
  8324  000E76  6EDA               	movwf	fsr2h,c
  8325  000E78  8CDF               	bsf	indf2,6,c
  8326  000E7A  D036               	goto	l14114
  8327  000E7C                     l14112:
  8328                           
  8329                           ; BSR set to: 0
  8330                           ;eddComms.c: 320: else
  8331                           ;eddComms.c: 321: ABB_1.det_arrays.info[window].data.bridge_wire_resitance = 0;
  8332  000E7C  0EF9               	movlw	249
  8333  000E7E  0100               	movlb	0	; () banked
  8334  000E80  6F77               	movwf	??_selfCheckUID& (0+255),b
  8335  000E82  0E01               	movlw	1
  8336  000E84  0100               	movlb	0	; () banked
  8337  000E86  6F78               	movwf	(??_selfCheckUID+1)& (0+255),b
  8338  000E88  C075  F079         	movff	selfCheckUID@window,??_selfCheckUID+2
  8339  000E8C  C076  F07A         	movff	selfCheckUID@window+1,??_selfCheckUID+3
  8340  000E90  0100               	movlb	0	; () banked
  8341  000E92  90D8               	bcf	status,0,c
  8342  000E94  3779               	rlcf	(??_selfCheckUID+2)& (0+255),f,b
  8343  000E96  377A               	rlcf	(??_selfCheckUID+3)& (0+255),f,b
  8344  000E98  0100               	movlb	0	; () banked
  8345  000E9A  90D8               	bcf	status,0,c
  8346  000E9C  3779               	rlcf	(??_selfCheckUID+2)& (0+255),f,b
  8347  000E9E  377A               	rlcf	(??_selfCheckUID+3)& (0+255),f,b
  8348  000EA0  0100               	movlb	0	; () banked
  8349  000EA2  5177               	movf	??_selfCheckUID& (0+255),w,b
  8350  000EA4  0100               	movlb	0	; () banked
  8351  000EA6  2779               	addwf	(??_selfCheckUID+2)& (0+255),f,b
  8352  000EA8  0100               	movlb	0	; () banked
  8353  000EAA  5178               	movf	(??_selfCheckUID+1)& (0+255),w,b
  8354  000EAC  0100               	movlb	0	; () banked
  8355  000EAE  237A               	addwfc	(??_selfCheckUID+3)& (0+255),f,b
  8356  000EB0  0EC0               	movlw	low _ABB_1
  8357  000EB2  0100               	movlb	0	; () banked
  8358  000EB4  6F7B               	movwf	(??_selfCheckUID+4)& (0+255),b
  8359  000EB6  0E03               	movlw	high _ABB_1
  8360  000EB8  0100               	movlb	0	; () banked
  8361  000EBA  6F7C               	movwf	(??_selfCheckUID+5)& (0+255),b
  8362  000EBC  0E04               	movlw	4
  8363  000EBE  0100               	movlb	0	; () banked
  8364  000EC0  277B               	addwf	(??_selfCheckUID+4)& (0+255),f,b
  8365  000EC2  0E00               	movlw	0
  8366  000EC4  237C               	addwfc	(??_selfCheckUID+5)& (0+255),f,b
  8367  000EC6  0100               	movlb	0	; () banked
  8368  000EC8  5179               	movf	(??_selfCheckUID+2)& (0+255),w,b
  8369  000ECA  0100               	movlb	0	; () banked
  8370  000ECC  277B               	addwf	(??_selfCheckUID+4)& (0+255),f,b
  8371  000ECE  0100               	movlb	0	; () banked
  8372  000ED0  517A               	movf	(??_selfCheckUID+3)& (0+255),w,b
  8373  000ED2  0100               	movlb	0	; () banked
  8374  000ED4  237C               	addwfc	(??_selfCheckUID+5)& (0+255),f,b
  8375  000ED6  0E01               	movlw	1
  8376  000ED8  0100               	movlb	0	; () banked
  8377  000EDA  257B               	addwf	(??_selfCheckUID+4)& (0+255),w,b
  8378  000EDC  6ED9               	movwf	fsr2l,c
  8379  000EDE  0E00               	movlw	0
  8380  000EE0  0100               	movlb	0	; () banked
  8381  000EE2  217C               	addwfc	(??_selfCheckUID+5)& (0+255),w,b
  8382  000EE4  6EDA               	movwf	fsr2h,c
  8383  000EE6  9CDF               	bcf	indf2,6,c
  8384  000EE8                     l14114:
  8385                           
  8386                           ; BSR set to: 0
  8387                           ;eddComms.c: 323: if(response[0] & 0b00100000)
  8388  000EE8  0100               	movlb	0	; () banked
  8389  000EEA  ABE0               	btfss	_response& (0+255),5,b
  8390  000EEC  D037               	goto	l14118
  8391                           
  8392                           ; BSR set to: 0
  8393                           ;eddComms.c: 324: ABB_1.det_arrays.info[window].data.calibration_status = 1;
  8394  000EEE  0EF9               	movlw	249
  8395  000EF0  0100               	movlb	0	; () banked
  8396  000EF2  6F77               	movwf	??_selfCheckUID& (0+255),b
  8397  000EF4  0E01               	movlw	1
  8398  000EF6  0100               	movlb	0	; () banked
  8399  000EF8  6F78               	movwf	(??_selfCheckUID+1)& (0+255),b
  8400  000EFA  C075  F079         	movff	selfCheckUID@window,??_selfCheckUID+2
  8401  000EFE  C076  F07A         	movff	selfCheckUID@window+1,??_selfCheckUID+3
  8402  000F02  0100               	movlb	0	; () banked
  8403  000F04  90D8               	bcf	status,0,c
  8404  000F06  3779               	rlcf	(??_selfCheckUID+2)& (0+255),f,b
  8405  000F08  377A               	rlcf	(??_selfCheckUID+3)& (0+255),f,b
  8406  000F0A  0100               	movlb	0	; () banked
  8407  000F0C  90D8               	bcf	status,0,c
  8408  000F0E  3779               	rlcf	(??_selfCheckUID+2)& (0+255),f,b
  8409  000F10  377A               	rlcf	(??_selfCheckUID+3)& (0+255),f,b
  8410  000F12  0100               	movlb	0	; () banked
  8411  000F14  5177               	movf	??_selfCheckUID& (0+255),w,b
  8412  000F16  0100               	movlb	0	; () banked
  8413  000F18  2779               	addwf	(??_selfCheckUID+2)& (0+255),f,b
  8414  000F1A  0100               	movlb	0	; () banked
  8415  000F1C  5178               	movf	(??_selfCheckUID+1)& (0+255),w,b
  8416  000F1E  0100               	movlb	0	; () banked
  8417  000F20  237A               	addwfc	(??_selfCheckUID+3)& (0+255),f,b
  8418  000F22  0EC0               	movlw	low _ABB_1
  8419  000F24  0100               	movlb	0	; () banked
  8420  000F26  6F7B               	movwf	(??_selfCheckUID+4)& (0+255),b
  8421  000F28  0E03               	movlw	high _ABB_1
  8422  000F2A  0100               	movlb	0	; () banked
  8423  000F2C  6F7C               	movwf	(??_selfCheckUID+5)& (0+255),b
  8424  000F2E  0E04               	movlw	4
  8425  000F30  0100               	movlb	0	; () banked
  8426  000F32  277B               	addwf	(??_selfCheckUID+4)& (0+255),f,b
  8427  000F34  0E00               	movlw	0
  8428  000F36  237C               	addwfc	(??_selfCheckUID+5)& (0+255),f,b
  8429  000F38  0100               	movlb	0	; () banked
  8430  000F3A  5179               	movf	(??_selfCheckUID+2)& (0+255),w,b
  8431  000F3C  0100               	movlb	0	; () banked
  8432  000F3E  277B               	addwf	(??_selfCheckUID+4)& (0+255),f,b
  8433  000F40  0100               	movlb	0	; () banked
  8434  000F42  517A               	movf	(??_selfCheckUID+3)& (0+255),w,b
  8435  000F44  0100               	movlb	0	; () banked
  8436  000F46  237C               	addwfc	(??_selfCheckUID+5)& (0+255),f,b
  8437  000F48  0E01               	movlw	1
  8438  000F4A  0100               	movlb	0	; () banked
  8439  000F4C  257B               	addwf	(??_selfCheckUID+4)& (0+255),w,b
  8440  000F4E  6ED9               	movwf	fsr2l,c
  8441  000F50  0E00               	movlw	0
  8442  000F52  0100               	movlb	0	; () banked
  8443  000F54  217C               	addwfc	(??_selfCheckUID+5)& (0+255),w,b
  8444  000F56  6EDA               	movwf	fsr2h,c
  8445  000F58  8ADF               	bsf	indf2,5,c
  8446  000F5A  D036               	goto	l14120
  8447  000F5C                     l14118:
  8448                           
  8449                           ; BSR set to: 0
  8450                           ;eddComms.c: 325: else
  8451                           ;eddComms.c: 326: ABB_1.det_arrays.info[window].data.calibration_status = 0;
  8452  000F5C  0EF9               	movlw	249
  8453  000F5E  0100               	movlb	0	; () banked
  8454  000F60  6F77               	movwf	??_selfCheckUID& (0+255),b
  8455  000F62  0E01               	movlw	1
  8456  000F64  0100               	movlb	0	; () banked
  8457  000F66  6F78               	movwf	(??_selfCheckUID+1)& (0+255),b
  8458  000F68  C075  F079         	movff	selfCheckUID@window,??_selfCheckUID+2
  8459  000F6C  C076  F07A         	movff	selfCheckUID@window+1,??_selfCheckUID+3
  8460  000F70  0100               	movlb	0	; () banked
  8461  000F72  90D8               	bcf	status,0,c
  8462  000F74  3779               	rlcf	(??_selfCheckUID+2)& (0+255),f,b
  8463  000F76  377A               	rlcf	(??_selfCheckUID+3)& (0+255),f,b
  8464  000F78  0100               	movlb	0	; () banked
  8465  000F7A  90D8               	bcf	status,0,c
  8466  000F7C  3779               	rlcf	(??_selfCheckUID+2)& (0+255),f,b
  8467  000F7E  377A               	rlcf	(??_selfCheckUID+3)& (0+255),f,b
  8468  000F80  0100               	movlb	0	; () banked
  8469  000F82  5177               	movf	??_selfCheckUID& (0+255),w,b
  8470  000F84  0100               	movlb	0	; () banked
  8471  000F86  2779               	addwf	(??_selfCheckUID+2)& (0+255),f,b
  8472  000F88  0100               	movlb	0	; () banked
  8473  000F8A  5178               	movf	(??_selfCheckUID+1)& (0+255),w,b
  8474  000F8C  0100               	movlb	0	; () banked
  8475  000F8E  237A               	addwfc	(??_selfCheckUID+3)& (0+255),f,b
  8476  000F90  0EC0               	movlw	low _ABB_1
  8477  000F92  0100               	movlb	0	; () banked
  8478  000F94  6F7B               	movwf	(??_selfCheckUID+4)& (0+255),b
  8479  000F96  0E03               	movlw	high _ABB_1
  8480  000F98  0100               	movlb	0	; () banked
  8481  000F9A  6F7C               	movwf	(??_selfCheckUID+5)& (0+255),b
  8482  000F9C  0E04               	movlw	4
  8483  000F9E  0100               	movlb	0	; () banked
  8484  000FA0  277B               	addwf	(??_selfCheckUID+4)& (0+255),f,b
  8485  000FA2  0E00               	movlw	0
  8486  000FA4  237C               	addwfc	(??_selfCheckUID+5)& (0+255),f,b
  8487  000FA6  0100               	movlb	0	; () banked
  8488  000FA8  5179               	movf	(??_selfCheckUID+2)& (0+255),w,b
  8489  000FAA  0100               	movlb	0	; () banked
  8490  000FAC  277B               	addwf	(??_selfCheckUID+4)& (0+255),f,b
  8491  000FAE  0100               	movlb	0	; () banked
  8492  000FB0  517A               	movf	(??_selfCheckUID+3)& (0+255),w,b
  8493  000FB2  0100               	movlb	0	; () banked
  8494  000FB4  237C               	addwfc	(??_selfCheckUID+5)& (0+255),f,b
  8495  000FB6  0E01               	movlw	1
  8496  000FB8  0100               	movlb	0	; () banked
  8497  000FBA  257B               	addwf	(??_selfCheckUID+4)& (0+255),w,b
  8498  000FBC  6ED9               	movwf	fsr2l,c
  8499  000FBE  0E00               	movlw	0
  8500  000FC0  0100               	movlb	0	; () banked
  8501  000FC2  217C               	addwfc	(??_selfCheckUID+5)& (0+255),w,b
  8502  000FC4  6EDA               	movwf	fsr2h,c
  8503  000FC6  9ADF               	bcf	indf2,5,c
  8504  000FC8                     l14120:
  8505                           
  8506                           ; BSR set to: 0
  8507                           ;eddComms.c: 328: if(response[0] & 0b00001000)
  8508  000FC8  0100               	movlb	0	; () banked
  8509  000FCA  A7E0               	btfss	_response& (0+255),3,b
  8510  000FCC  D037               	goto	l14124
  8511                           
  8512                           ; BSR set to: 0
  8513                           ;eddComms.c: 329: ABB_1.det_arrays.info[window].data.program_status = 1;
  8514  000FCE  0EF9               	movlw	249
  8515  000FD0  0100               	movlb	0	; () banked
  8516  000FD2  6F77               	movwf	??_selfCheckUID& (0+255),b
  8517  000FD4  0E01               	movlw	1
  8518  000FD6  0100               	movlb	0	; () banked
  8519  000FD8  6F78               	movwf	(??_selfCheckUID+1)& (0+255),b
  8520  000FDA  C075  F079         	movff	selfCheckUID@window,??_selfCheckUID+2
  8521  000FDE  C076  F07A         	movff	selfCheckUID@window+1,??_selfCheckUID+3
  8522  000FE2  0100               	movlb	0	; () banked
  8523  000FE4  90D8               	bcf	status,0,c
  8524  000FE6  3779               	rlcf	(??_selfCheckUID+2)& (0+255),f,b
  8525  000FE8  377A               	rlcf	(??_selfCheckUID+3)& (0+255),f,b
  8526  000FEA  0100               	movlb	0	; () banked
  8527  000FEC  90D8               	bcf	status,0,c
  8528  000FEE  3779               	rlcf	(??_selfCheckUID+2)& (0+255),f,b
  8529  000FF0  377A               	rlcf	(??_selfCheckUID+3)& (0+255),f,b
  8530  000FF2  0100               	movlb	0	; () banked
  8531  000FF4  5177               	movf	??_selfCheckUID& (0+255),w,b
  8532  000FF6  0100               	movlb	0	; () banked
  8533  000FF8  2779               	addwf	(??_selfCheckUID+2)& (0+255),f,b
  8534  000FFA  0100               	movlb	0	; () banked
  8535  000FFC  5178               	movf	(??_selfCheckUID+1)& (0+255),w,b
  8536  000FFE  0100               	movlb	0	; () banked
  8537  001000  237A               	addwfc	(??_selfCheckUID+3)& (0+255),f,b
  8538  001002  0EC0               	movlw	low _ABB_1
  8539  001004  0100               	movlb	0	; () banked
  8540  001006  6F7B               	movwf	(??_selfCheckUID+4)& (0+255),b
  8541  001008  0E03               	movlw	high _ABB_1
  8542  00100A  0100               	movlb	0	; () banked
  8543  00100C  6F7C               	movwf	(??_selfCheckUID+5)& (0+255),b
  8544  00100E  0E04               	movlw	4
  8545  001010  0100               	movlb	0	; () banked
  8546  001012  277B               	addwf	(??_selfCheckUID+4)& (0+255),f,b
  8547  001014  0E00               	movlw	0
  8548  001016  237C               	addwfc	(??_selfCheckUID+5)& (0+255),f,b
  8549  001018  0100               	movlb	0	; () banked
  8550  00101A  5179               	movf	(??_selfCheckUID+2)& (0+255),w,b
  8551  00101C  0100               	movlb	0	; () banked
  8552  00101E  277B               	addwf	(??_selfCheckUID+4)& (0+255),f,b
  8553  001020  0100               	movlb	0	; () banked
  8554  001022  517A               	movf	(??_selfCheckUID+3)& (0+255),w,b
  8555  001024  0100               	movlb	0	; () banked
  8556  001026  237C               	addwfc	(??_selfCheckUID+5)& (0+255),f,b
  8557  001028  0E01               	movlw	1
  8558  00102A  0100               	movlb	0	; () banked
  8559  00102C  257B               	addwf	(??_selfCheckUID+4)& (0+255),w,b
  8560  00102E  6ED9               	movwf	fsr2l,c
  8561  001030  0E00               	movlw	0
  8562  001032  0100               	movlb	0	; () banked
  8563  001034  217C               	addwfc	(??_selfCheckUID+5)& (0+255),w,b
  8564  001036  6EDA               	movwf	fsr2h,c
  8565  001038  88DF               	bsf	indf2,4,c
  8566  00103A  D036               	goto	l14126
  8567  00103C                     l14124:
  8568                           
  8569                           ; BSR set to: 0
  8570                           ;eddComms.c: 330: else
  8571                           ;eddComms.c: 331: ABB_1.det_arrays.info[window].data.program_status = 0;
  8572  00103C  0EF9               	movlw	249
  8573  00103E  0100               	movlb	0	; () banked
  8574  001040  6F77               	movwf	??_selfCheckUID& (0+255),b
  8575  001042  0E01               	movlw	1
  8576  001044  0100               	movlb	0	; () banked
  8577  001046  6F78               	movwf	(??_selfCheckUID+1)& (0+255),b
  8578  001048  C075  F079         	movff	selfCheckUID@window,??_selfCheckUID+2
  8579  00104C  C076  F07A         	movff	selfCheckUID@window+1,??_selfCheckUID+3
  8580  001050  0100               	movlb	0	; () banked
  8581  001052  90D8               	bcf	status,0,c
  8582  001054  3779               	rlcf	(??_selfCheckUID+2)& (0+255),f,b
  8583  001056  377A               	rlcf	(??_selfCheckUID+3)& (0+255),f,b
  8584  001058  0100               	movlb	0	; () banked
  8585  00105A  90D8               	bcf	status,0,c
  8586  00105C  3779               	rlcf	(??_selfCheckUID+2)& (0+255),f,b
  8587  00105E  377A               	rlcf	(??_selfCheckUID+3)& (0+255),f,b
  8588  001060  0100               	movlb	0	; () banked
  8589  001062  5177               	movf	??_selfCheckUID& (0+255),w,b
  8590  001064  0100               	movlb	0	; () banked
  8591  001066  2779               	addwf	(??_selfCheckUID+2)& (0+255),f,b
  8592  001068  0100               	movlb	0	; () banked
  8593  00106A  5178               	movf	(??_selfCheckUID+1)& (0+255),w,b
  8594  00106C  0100               	movlb	0	; () banked
  8595  00106E  237A               	addwfc	(??_selfCheckUID+3)& (0+255),f,b
  8596  001070  0EC0               	movlw	low _ABB_1
  8597  001072  0100               	movlb	0	; () banked
  8598  001074  6F7B               	movwf	(??_selfCheckUID+4)& (0+255),b
  8599  001076  0E03               	movlw	high _ABB_1
  8600  001078  0100               	movlb	0	; () banked
  8601  00107A  6F7C               	movwf	(??_selfCheckUID+5)& (0+255),b
  8602  00107C  0E04               	movlw	4
  8603  00107E  0100               	movlb	0	; () banked
  8604  001080  277B               	addwf	(??_selfCheckUID+4)& (0+255),f,b
  8605  001082  0E00               	movlw	0
  8606  001084  237C               	addwfc	(??_selfCheckUID+5)& (0+255),f,b
  8607  001086  0100               	movlb	0	; () banked
  8608  001088  5179               	movf	(??_selfCheckUID+2)& (0+255),w,b
  8609  00108A  0100               	movlb	0	; () banked
  8610  00108C  277B               	addwf	(??_selfCheckUID+4)& (0+255),f,b
  8611  00108E  0100               	movlb	0	; () banked
  8612  001090  517A               	movf	(??_selfCheckUID+3)& (0+255),w,b
  8613  001092  0100               	movlb	0	; () banked
  8614  001094  237C               	addwfc	(??_selfCheckUID+5)& (0+255),f,b
  8615  001096  0E01               	movlw	1
  8616  001098  0100               	movlb	0	; () banked
  8617  00109A  257B               	addwf	(??_selfCheckUID+4)& (0+255),w,b
  8618  00109C  6ED9               	movwf	fsr2l,c
  8619  00109E  0E00               	movlw	0
  8620  0010A0  0100               	movlb	0	; () banked
  8621  0010A2  217C               	addwfc	(??_selfCheckUID+5)& (0+255),w,b
  8622  0010A4  6EDA               	movwf	fsr2h,c
  8623  0010A6  98DF               	bcf	indf2,4,c
  8624  0010A8                     l14126:
  8625                           
  8626                           ; BSR set to: 0
  8627                           ;eddComms.c: 333: if(response[0] == 0x68)
  8628  0010A8  0E68               	movlw	104
  8629  0010AA  0100               	movlb	0	; () banked
  8630  0010AC  19E0               	xorwf	_response& (0+255),w,b
  8631  0010AE  A4D8               	btfss	status,2,c
  8632  0010B0  D002               	goto	l14134
  8633                           
  8634                           ; BSR set to: 0
  8635                           ;eddComms.c: 334: return 1;
  8636  0010B2  0E01               	movlw	1
  8637                           
  8638                           ; BSR set to: 0
  8639                           
  8640                           ; BSR set to: 0
  8641  0010B4  0012               	return	
  8642  0010B6                     l14134:
  8643                           
  8644                           ; BSR set to: 0
  8645                           ;eddComms.c: 335: else
  8646                           ;eddComms.c: 336: return 0;
  8647  0010B6  0E00               	movlw	0
  8648                           
  8649                           ; BSR set to: 0
  8650                           ;eddComms.c: 337: }
  8651                           
  8652                           ; BSR set to: 0
  8653  0010B8  0012               	return	
  8654  0010BA                     l14138:
  8655                           
  8656                           ; BSR set to: 0
  8657                           ;eddComms.c: 338: else
  8658                           ;eddComms.c: 339: return 0;
  8659  0010BA  0E00               	movlw	0
  8660                           
  8661                           ; BSR set to: 0
  8662  0010BC  0012               	return	
  8663  0010BE                     __end_of_selfCheckUID:
  8664                           	opt stack 0
  8665                           tblptru	equ	0xFF8
  8666                           tblptrh	equ	0xFF7
  8667                           tblptrl	equ	0xFF6
  8668                           tablat	equ	0xFF5
  8669                           prodh	equ	0xFF4
  8670                           prodl	equ	0xFF3
  8671                           intcon	equ	0xFF2
  8672                           postinc0	equ	0xFEE
  8673                           wreg	equ	0xFE8
  8674                           postdec1	equ	0xFE5
  8675                           fsr1h	equ	0xFE2
  8676                           fsr1l	equ	0xFE1
  8677                           indf2	equ	0xFDF
  8678                           postinc2	equ	0xFDE
  8679                           postdec2	equ	0xFDD
  8680                           fsr2h	equ	0xFDA
  8681                           fsr2l	equ	0xFD9
  8682                           status	equ	0xFD8
  8683                           
  8684 ;; *************** function _readUID *****************
  8685 ;; Defined at:
  8686 ;;		line 212 in file "eddComms.c"
  8687 ;; Parameters:    Size  Location     Type
  8688 ;;  window          1    wreg     unsigned char 
  8689 ;; Auto vars:     Size  Location     Type
  8690 ;;  window          1   26[BANK0 ] unsigned char 
  8691 ;;  i               2   35[BANK0 ] int 
  8692 ;;  i               2   33[BANK0 ] int 
  8693 ;;  txPacket        5   27[BANK0 ] unsigned char [5]
  8694 ;;  attempts        1   32[BANK0 ] unsigned char 
  8695 ;; Return value:  Size  Location     Type
  8696 ;;                  1    wreg      unsigned char 
  8697 ;; Registers used:
  8698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8699 ;; Tracked objects:
  8700 ;;		On entry : 0/0
  8701 ;;		On exit  : 0/0
  8702 ;;		Unchanged: 0/0
  8703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8705 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8706 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8707 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8708 ;;Total ram usage:       16 bytes
  8709 ;; Hardware stack levels used:    1
  8710 ;; Hardware stack levels required when called:   12
  8711 ;; This function calls:
  8712 ;;		_checkForExistingUID
  8713 ;;		_commandResponse
  8714 ;; This function is called by:
  8715 ;;		_programUIDs
  8716 ;; This function uses a non-reentrant model
  8717 ;;
  8718                           
  8719                           	psect	text35
  8720  00228E                     __ptext35:
  8721                           	opt stack 0
  8722  00228E                     _readUID:
  8723                           	opt stack 15
  8724                           
  8725                           ; BSR set to: 0
  8726                           ;incstack = 0
  8727                           ;readUID@window stored from wreg
  8728  00228E  0100               	movlb	0	; () banked
  8729  002290  6F7A               	movwf	readUID@window& (0+255),b
  8730                           
  8731                           ;eddComms.c: 213: unsigned char attempts = 0;
  8732  002292  0E00               	movlw	0
  8733  002294  0100               	movlb	0	; () banked
  8734  002296  6F80               	movwf	readUID@attempts& (0+255),b
  8735                           
  8736                           ;eddComms.c: 214: unsigned char txPacket[5];
  8737                           ;eddComms.c: 215: txPacket[0] = 0b00000011;
  8738  002298  0E03               	movlw	3
  8739  00229A  0100               	movlb	0	; () banked
  8740  00229C  6F7B               	movwf	readUID@txPacket& (0+255),b
  8741                           
  8742                           ;eddComms.c: 216: txPacket[1] = 0;
  8743  00229E  0E00               	movlw	0
  8744  0022A0  0100               	movlb	0	; () banked
  8745  0022A2  6F7C               	movwf	(readUID@txPacket+1)& (0+255),b
  8746                           
  8747                           ;eddComms.c: 217: txPacket[2] = 0;
  8748  0022A4  0E00               	movlw	0
  8749  0022A6  0100               	movlb	0	; () banked
  8750  0022A8  6F7D               	movwf	(readUID@txPacket+2)& (0+255),b
  8751                           
  8752                           ;eddComms.c: 218: txPacket[3] = 0;
  8753  0022AA  0E00               	movlw	0
  8754  0022AC  0100               	movlb	0	; () banked
  8755  0022AE  6F7E               	movwf	(readUID@txPacket+3)& (0+255),b
  8756                           
  8757                           ; BSR set to: 0
  8758                           ;eddComms.c: 219: txPacket[4] = window;
  8759  0022B0  C07A  F07F         	movff	readUID@window,readUID@txPacket+4
  8760                           
  8761                           ; BSR set to: 0
  8762                           ;eddComms.c: 220: if(txPacket[4] == 101)
  8763  0022B4  0E65               	movlw	101
  8764  0022B6  0100               	movlb	0	; () banked
  8765  0022B8  197F               	xorwf	(readUID@txPacket+4)& (0+255),w,b
  8766  0022BA  A4D8               	btfss	status,2,c
  8767  0022BC  D003               	goto	l13996
  8768                           
  8769                           ; BSR set to: 0
  8770                           ;eddComms.c: 221: txPacket[4] = 0;
  8771  0022BE  0E00               	movlw	0
  8772  0022C0  0100               	movlb	0	; () banked
  8773  0022C2  6F7F               	movwf	(readUID@txPacket+4)& (0+255),b
  8774  0022C4                     l13996:
  8775                           
  8776                           ; BSR set to: 0
  8777  0022C4  0E04               	movlw	4
  8778  0022C6  0100               	movlb	0	; () banked
  8779  0022C8  6F6A               	movwf	commandResponse@RxLength& (0+255),b
  8780  0022CA  0E7B               	movlw	low readUID@txPacket
  8781  0022CC  0100               	movlb	0	; () banked
  8782  0022CE  6F6B               	movwf	commandResponse@data& (0+255),b
  8783  0022D0  0E00               	movlw	high readUID@txPacket
  8784  0022D2  0100               	movlb	0	; () banked
  8785  0022D4  6F6C               	movwf	(commandResponse@data+1)& (0+255),b
  8786  0022D6  0E05               	movlw	5
  8787  0022D8  EC96  F028         	call	_commandResponse
  8788  0022DC  0900               	iorlw	0
  8789  0022DE  A4D8               	btfss	status,2,c
  8790  0022E0  D009               	goto	l14000
  8791  0022E2  0100               	movlb	0	; () banked
  8792  0022E4  2B80               	incf	readUID@attempts& (0+255),f,b
  8793  0022E6  0580               	decf	readUID@attempts& (0+255),w,b
  8794  0022E8  0100               	movlb	0	; () banked
  8795  0022EA  6F75               	movwf	??_readUID& (0+255),b
  8796  0022EC  0E03               	movlw	3
  8797  0022EE  0100               	movlb	0	; () banked
  8798  0022F0  6575               	cpfsgt	??_readUID& (0+255),b
  8799  0022F2  D7E8               	goto	l13996
  8800  0022F4                     l14000:
  8801                           
  8802                           ;eddComms.c: 223: if(attempts < 4){
  8803  0022F4  0E04               	movlw	4
  8804  0022F6  0100               	movlb	0	; () banked
  8805  0022F8  6180               	cpfslt	readUID@attempts& (0+255),b
  8806  0022FA  D0F6               	goto	l14050
  8807                           
  8808                           ; BSR set to: 0
  8809                           ;eddComms.c: 224: if(!txPacket[1]){
  8810  0022FC  0100               	movlb	0	; () banked
  8811  0022FE  517C               	movf	(readUID@txPacket+1)& (0+255),w,b
  8812  002300  A4D8               	btfss	status,2,c
  8813  002302  D0AE               	goto	l14030
  8814                           
  8815                           ; BSR set to: 0
  8816                           ;eddComms.c: 225: if(checkForExistingUID(response) || ABB_1.dets_length >= 100)
  8817  002304  0EE0               	movlw	low _response
  8818  002306  0100               	movlb	0	; () banked
  8819  002308  6F66               	movwf	checkForExistingUID@receivedUID& (0+255),b
  8820  00230A  0E00               	movlw	high _response
  8821  00230C  0100               	movlb	0	; () banked
  8822  00230E  6F67               	movwf	(checkForExistingUID@receivedUID+1)& (0+255),b
  8823  002310  EC04  F02D         	call	_checkForExistingUID	;wreg free
  8824  002314  0900               	iorlw	0
  8825  002316  A4D8               	btfss	status,2,c
  8826  002318  D005               	goto	l14008
  8827  00231A  EE23  F0C0         	lfsr	2,_ABB_1
  8828  00231E  0E63               	movlw	99
  8829  002320  64DF               	cpfsgt	indf2,c
  8830  002322  D002               	goto	l14012
  8831  002324                     l14008:
  8832                           
  8833                           ;eddComms.c: 226: return 1;
  8834  002324  0E01               	movlw	1
  8835  002326  0012               	return	
  8836  002328                     l14012:
  8837                           
  8838                           ;eddComms.c: 227: ABB_1.dets_length++;
  8839  002328  C3C0  FFE8         	movff	_ABB_1,wreg
  8840  00232C  0F01               	addlw	1
  8841  00232E  CFE8 F3C0          	movff	wreg,_ABB_1
  8842                           
  8843                           ;eddComms.c: 228: ABB_1.det_arrays.info[ABB_1.dets_length].delay = 4000;
  8844  002332  0EF9               	movlw	249
  8845  002334  0100               	movlb	0	; () banked
  8846  002336  6F75               	movwf	??_readUID& (0+255),b
  8847  002338  0E01               	movlw	1
  8848  00233A  0100               	movlb	0	; () banked
  8849  00233C  6F76               	movwf	(??_readUID+1)& (0+255),b
  8850  00233E  C3C0  F077         	movff	_ABB_1,??_readUID+2
  8851  002342  0100               	movlb	0	; () banked
  8852  002344  5177               	movf	(??_readUID+2)& (0+255),w,b
  8853  002346  0D04               	mullw	4
  8854  002348  0100               	movlb	0	; () banked
  8855  00234A  5175               	movf	??_readUID& (0+255),w,b
  8856  00234C  26F3               	addwf	prodl,f,c
  8857  00234E  0100               	movlb	0	; () banked
  8858  002350  5176               	movf	(??_readUID+1)& (0+255),w,b
  8859  002352  22F4               	addwfc	prodh,f,c
  8860  002354  0EC0               	movlw	low _ABB_1
  8861  002356  0100               	movlb	0	; () banked
  8862  002358  6F78               	movwf	(??_readUID+3)& (0+255),b
  8863  00235A  0E03               	movlw	high _ABB_1
  8864  00235C  0100               	movlb	0	; () banked
  8865  00235E  6F79               	movwf	(??_readUID+4)& (0+255),b
  8866  002360  0E04               	movlw	4
  8867  002362  0100               	movlb	0	; () banked
  8868  002364  2778               	addwf	(??_readUID+3)& (0+255),f,b
  8869  002366  0E00               	movlw	0
  8870  002368  2379               	addwfc	(??_readUID+4)& (0+255),f,b
  8871  00236A  50F3               	movf	prodl,w,c
  8872  00236C  0100               	movlb	0	; () banked
  8873  00236E  2778               	addwf	(??_readUID+3)& (0+255),f,b
  8874  002370  50F4               	movf	prodh,w,c
  8875  002372  0100               	movlb	0	; () banked
  8876  002374  2379               	addwfc	(??_readUID+4)& (0+255),f,b
  8877  002376  0E02               	movlw	2
  8878  002378  0100               	movlb	0	; () banked
  8879  00237A  2578               	addwf	(??_readUID+3)& (0+255),w,b
  8880  00237C  6ED9               	movwf	fsr2l,c
  8881  00237E  0E00               	movlw	0
  8882  002380  0100               	movlb	0	; () banked
  8883  002382  2179               	addwfc	(??_readUID+4)& (0+255),w,b
  8884  002384  6EDA               	movwf	fsr2h,c
  8885  002386  0EA0               	movlw	160
  8886  002388  6EDE               	movwf	postinc2,c
  8887  00238A  0E0F               	movlw	15
  8888  00238C  6EDD               	movwf	postdec2,c
  8889                           
  8890                           ; BSR set to: 0
  8891                           ;eddComms.c: 229: ABB_1.det_arrays.info[ABB_1.dets_length].data.connection_status = 0;
  8892  00238E  0EF9               	movlw	249
  8893  002390  0100               	movlb	0	; () banked
  8894  002392  6F75               	movwf	??_readUID& (0+255),b
  8895  002394  0E01               	movlw	1
  8896  002396  0100               	movlb	0	; () banked
  8897  002398  6F76               	movwf	(??_readUID+1)& (0+255),b
  8898  00239A  C3C0  F077         	movff	_ABB_1,??_readUID+2
  8899  00239E  0100               	movlb	0	; () banked
  8900  0023A0  5177               	movf	(??_readUID+2)& (0+255),w,b
  8901  0023A2  0D04               	mullw	4
  8902  0023A4  0100               	movlb	0	; () banked
  8903  0023A6  5175               	movf	??_readUID& (0+255),w,b
  8904  0023A8  26F3               	addwf	prodl,f,c
  8905  0023AA  0100               	movlb	0	; () banked
  8906  0023AC  5176               	movf	(??_readUID+1)& (0+255),w,b
  8907  0023AE  22F4               	addwfc	prodh,f,c
  8908  0023B0  0EC0               	movlw	low _ABB_1
  8909  0023B2  0100               	movlb	0	; () banked
  8910  0023B4  6F78               	movwf	(??_readUID+3)& (0+255),b
  8911  0023B6  0E03               	movlw	high _ABB_1
  8912  0023B8  0100               	movlb	0	; () banked
  8913  0023BA  6F79               	movwf	(??_readUID+4)& (0+255),b
  8914  0023BC  0E04               	movlw	4
  8915  0023BE  0100               	movlb	0	; () banked
  8916  0023C0  2778               	addwf	(??_readUID+3)& (0+255),f,b
  8917  0023C2  0E00               	movlw	0
  8918  0023C4  2379               	addwfc	(??_readUID+4)& (0+255),f,b
  8919  0023C6  50F3               	movf	prodl,w,c
  8920  0023C8  0100               	movlb	0	; () banked
  8921  0023CA  2778               	addwf	(??_readUID+3)& (0+255),f,b
  8922  0023CC  50F4               	movf	prodh,w,c
  8923  0023CE  0100               	movlb	0	; () banked
  8924  0023D0  2379               	addwfc	(??_readUID+4)& (0+255),f,b
  8925  0023D2  0E01               	movlw	1
  8926  0023D4  0100               	movlb	0	; () banked
  8927  0023D6  2578               	addwf	(??_readUID+3)& (0+255),w,b
  8928  0023D8  6ED9               	movwf	fsr2l,c
  8929  0023DA  0E00               	movlw	0
  8930  0023DC  0100               	movlb	0	; () banked
  8931  0023DE  2179               	addwfc	(??_readUID+4)& (0+255),w,b
  8932  0023E0  6EDA               	movwf	fsr2h,c
  8933  0023E2  92DF               	bcf	indf2,1,c
  8934                           
  8935                           ; BSR set to: 0
  8936                           ;eddComms.c: 230: for(int i = 0; i < 4; i++){
  8937  0023E4  0E00               	movlw	0
  8938  0023E6  0100               	movlb	0	; () banked
  8939  0023E8  6F82               	movwf	(readUID@i+1)& (0+255),b
  8940  0023EA  0E00               	movlw	0
  8941  0023EC  6F81               	movwf	readUID@i& (0+255),b
  8942  0023EE                     
  8943                           ; BSR set to: 0
  8944  0023EE  0100               	movlb	0	; () banked
  8945  0023F0  BF82               	btfsc	(readUID@i+1)& (0+255),7,b
  8946  0023F2  D008               	goto	l14024
  8947  0023F4  0100               	movlb	0	; () banked
  8948  0023F6  5182               	movf	(readUID@i+1)& (0+255),w,b
  8949  0023F8  E175               	bnz	l14046
  8950  0023FA  0E04               	movlw	4
  8951  0023FC  0100               	movlb	0	; () banked
  8952  0023FE  5D81               	subwf	readUID@i& (0+255),w,b
  8953  002400  B0D8               	btfsc	status,0,c
  8954  002402  D070               	goto	l14046
  8955  002404                     l14024:
  8956                           
  8957                           ; BSR set to: 0
  8958                           ;eddComms.c: 231: ABB_1.det_arrays.UIDs[ABB_1.dets_length].UID[i] = response[i];
  8959  002404  0EE0               	movlw	low _response
  8960  002406  0100               	movlb	0	; () banked
  8961  002408  2581               	addwf	readUID@i& (0+255),w,b
  8962  00240A  6ED9               	movwf	fsr2l,c
  8963  00240C  0E00               	movlw	high _response
  8964  00240E  0100               	movlb	0	; () banked
  8965  002410  2182               	addwfc	(readUID@i+1)& (0+255),w,b
  8966  002412  6EDA               	movwf	fsr2h,c
  8967  002414  C3C0  F075         	movff	_ABB_1,??_readUID
  8968  002418  0100               	movlb	0	; () banked
  8969  00241A  5175               	movf	??_readUID& (0+255),w,b
  8970  00241C  0D05               	mullw	5
  8971  00241E  0EC0               	movlw	low _ABB_1
  8972  002420  0100               	movlb	0	; () banked
  8973  002422  6F76               	movwf	(??_readUID+1)& (0+255),b
  8974  002424  0E03               	movlw	high _ABB_1
  8975  002426  0100               	movlb	0	; () banked
  8976  002428  6F77               	movwf	(??_readUID+2)& (0+255),b
  8977  00242A  0E04               	movlw	4
  8978  00242C  0100               	movlb	0	; () banked
  8979  00242E  2776               	addwf	(??_readUID+1)& (0+255),f,b
  8980  002430  0E00               	movlw	0
  8981  002432  2377               	addwfc	(??_readUID+2)& (0+255),f,b
  8982  002434  50F3               	movf	prodl,w,c
  8983  002436  0100               	movlb	0	; () banked
  8984  002438  2776               	addwf	(??_readUID+1)& (0+255),f,b
  8985  00243A  50F4               	movf	prodh,w,c
  8986  00243C  0100               	movlb	0	; () banked
  8987  00243E  2377               	addwfc	(??_readUID+2)& (0+255),f,b
  8988  002440  0100               	movlb	0	; () banked
  8989  002442  5181               	movf	readUID@i& (0+255),w,b
  8990  002444  0100               	movlb	0	; () banked
  8991  002446  2576               	addwf	(??_readUID+1)& (0+255),w,b
  8992  002448  6EE1               	movwf	fsr1l,c
  8993  00244A  0100               	movlb	0	; () banked
  8994  00244C  5182               	movf	(readUID@i+1)& (0+255),w,b
  8995  00244E  0100               	movlb	0	; () banked
  8996  002450  2177               	addwfc	(??_readUID+2)& (0+255),w,b
  8997  002452  6EE2               	movwf	fsr1h,c
  8998  002454  CFDF FFE7          	movff	indf2,indf1
  8999                           
  9000                           ; BSR set to: 0
  9001  002458  0100               	movlb	0	; () banked
  9002  00245A  4B81               	infsnz	readUID@i& (0+255),f,b
  9003  00245C  2B82               	incf	(readUID@i+1)& (0+255),f,b
  9004  00245E  D7C7               	goto	L27
  9005  002460                     l14030:
  9006                           
  9007                           ; BSR set to: 0
  9008                           ;eddComms.c: 234: else{
  9009                           ;eddComms.c: 235: for(int i = 0; i < 4; i++){
  9010  002460  0E00               	movlw	0
  9011  002462  0100               	movlb	0	; () banked
  9012  002464  6F84               	movwf	(readUID@i_6063+1)& (0+255),b
  9013  002466  0E00               	movlw	0
  9014  002468  6F83               	movwf	readUID@i_6063& (0+255),b
  9015  00246A                     l14032:
  9016                           
  9017                           ; BSR set to: 0
  9018  00246A  0100               	movlb	0	; () banked
  9019  00246C  BF84               	btfsc	(readUID@i_6063+1)& (0+255),7,b
  9020  00246E  D008               	goto	l14036
  9021  002470  0100               	movlb	0	; () banked
  9022  002472  5184               	movf	(readUID@i_6063+1)& (0+255),w,b
  9023  002474  E137               	bnz	l14046
  9024  002476  0E04               	movlw	4
  9025  002478  0100               	movlb	0	; () banked
  9026  00247A  5D83               	subwf	readUID@i_6063& (0+255),w,b
  9027  00247C  B0D8               	btfsc	status,0,c
  9028  00247E  D032               	goto	l14046
  9029  002480                     l14036:
  9030                           
  9031                           ; BSR set to: 0
  9032                           ;eddComms.c: 236: if(ABB_1.det_arrays.UIDs[ABB_1.dets_length].UID[i] != response[i])
  9033  002480  0EE0               	movlw	low _response
  9034  002482  0100               	movlb	0	; () banked
  9035  002484  2583               	addwf	readUID@i_6063& (0+255),w,b
  9036  002486  6ED9               	movwf	fsr2l,c
  9037  002488  0E00               	movlw	high _response
  9038  00248A  0100               	movlb	0	; () banked
  9039  00248C  2184               	addwfc	(readUID@i_6063+1)& (0+255),w,b
  9040  00248E  6EDA               	movwf	fsr2h,c
  9041  002490  C3C0  F076         	movff	_ABB_1,??_readUID+1
  9042  002494  0100               	movlb	0	; () banked
  9043  002496  5176               	movf	(??_readUID+1)& (0+255),w,b
  9044  002498  0D05               	mullw	5
  9045  00249A  0EC0               	movlw	low _ABB_1
  9046  00249C  0100               	movlb	0	; () banked
  9047  00249E  6F77               	movwf	(??_readUID+2)& (0+255),b
  9048  0024A0  0E03               	movlw	high _ABB_1
  9049  0024A2  0100               	movlb	0	; () banked
  9050  0024A4  6F78               	movwf	(??_readUID+3)& (0+255),b
  9051  0024A6  0E04               	movlw	4
  9052  0024A8  0100               	movlb	0	; () banked
  9053  0024AA  2777               	addwf	(??_readUID+2)& (0+255),f,b
  9054  0024AC  0E00               	movlw	0
  9055  0024AE  2378               	addwfc	(??_readUID+3)& (0+255),f,b
  9056  0024B0  50F3               	movf	prodl,w,c
  9057  0024B2  0100               	movlb	0	; () banked
  9058  0024B4  2777               	addwf	(??_readUID+2)& (0+255),f,b
  9059  0024B6  50F4               	movf	prodh,w,c
  9060  0024B8  0100               	movlb	0	; () banked
  9061  0024BA  2378               	addwfc	(??_readUID+3)& (0+255),f,b
  9062  0024BC  0100               	movlb	0	; () banked
  9063  0024BE  5183               	movf	readUID@i_6063& (0+255),w,b
  9064  0024C0  0100               	movlb	0	; () banked
  9065  0024C2  2577               	addwf	(??_readUID+2)& (0+255),w,b
  9066  0024C4  6EE1               	movwf	fsr1l,c
  9067  0024C6  0100               	movlb	0	; () banked
  9068  0024C8  5184               	movf	(readUID@i_6063+1)& (0+255),w,b
  9069  0024CA  0100               	movlb	0	; () banked
  9070  0024CC  2178               	addwfc	(??_readUID+3)& (0+255),w,b
  9071  0024CE  6EE2               	movwf	fsr1h,c
  9072  0024D0  50DE               	movf	postinc2,w,c
  9073  0024D2  18E6               	xorwf	postinc1,w,c
  9074  0024D4  B4D8               	btfsc	status,2,c
  9075  0024D6  D002               	goto	l14042
  9076                           
  9077                           ; BSR set to: 0
  9078                           ;eddComms.c: 237: return 0;
  9079  0024D8  0E00               	movlw	0
  9080                           
  9081                           ; BSR set to: 0
  9082  0024DA  0012               	return	
  9083  0024DC                     l14042:
  9084                           
  9085                           ; BSR set to: 0
  9086  0024DC  0100               	movlb	0	; () banked
  9087  0024DE  4B83               	infsnz	readUID@i_6063& (0+255),f,b
  9088  0024E0  2B84               	incf	(readUID@i_6063+1)& (0+255),f,b
  9089  0024E2  D7C3               	goto	l14032
  9090  0024E4                     l14046:
  9091                           
  9092                           ; BSR set to: 0
  9093                           ;eddComms.c: 238: }
  9094                           ;eddComms.c: 240: }
  9095                           ;eddComms.c: 241: return 1;
  9096  0024E4  0E01               	movlw	1
  9097                           
  9098                           ; BSR set to: 0
  9099  0024E6  0012               	return	
  9100  0024E8                     l14050:
  9101                           
  9102                           ; BSR set to: 0
  9103                           ;eddComms.c: 242: }
  9104                           ;eddComms.c: 243: return 0;
  9105  0024E8  0E00               	movlw	0
  9106  0024EA  0012               	return	
  9107  0024EC                     __end_of_readUID:
  9108                           	opt stack 0
  9109                           tblptru	equ	0xFF8
  9110                           tblptrh	equ	0xFF7
  9111                           tblptrl	equ	0xFF6
  9112                           tablat	equ	0xFF5
  9113                           prodh	equ	0xFF4
  9114                           prodl	equ	0xFF3
  9115                           intcon	equ	0xFF2
  9116                           postinc0	equ	0xFEE
  9117                           wreg	equ	0xFE8
  9118                           indf1	equ	0xFE7
  9119                           postinc1	equ	0xFE6
  9120                           postdec1	equ	0xFE5
  9121                           fsr1h	equ	0xFE2
  9122                           fsr1l	equ	0xFE1
  9123                           indf2	equ	0xFDF
  9124                           postinc2	equ	0xFDE
  9125                           postdec2	equ	0xFDD
  9126                           fsr2h	equ	0xFDA
  9127                           fsr2l	equ	0xFD9
  9128                           status	equ	0xFD8
  9129                           
  9130 ;; *************** function _programInitialise *****************
  9131 ;; Defined at:
  9132 ;;		line 57 in file "program.c"
  9133 ;; Parameters:    Size  Location     Type
  9134 ;;		None
  9135 ;; Auto vars:     Size  Location     Type
  9136 ;;		None
  9137 ;; Return value:  Size  Location     Type
  9138 ;;                  1    wreg      void 
  9139 ;; Registers used:
  9140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9141 ;; Tracked objects:
  9142 ;;		On entry : 0/0
  9143 ;;		On exit  : 0/0
  9144 ;;		Unchanged: 0/0
  9145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9150 ;;Total ram usage:        0 bytes
  9151 ;; Hardware stack levels used:    1
  9152 ;; Hardware stack levels required when called:   10
  9153 ;; This function calls:
  9154 ;;		_EDD_Init_Comms
  9155 ;;		_clearEDDStatusbits
  9156 ;; This function is called by:
  9157 ;;		_program
  9158 ;;		_firePic
  9159 ;; This function uses a non-reentrant model
  9160 ;;
  9161                           
  9162                           	psect	text36
  9163  007B2E                     __ptext36:
  9164                           	opt stack 0
  9165  007B2E                     _programInitialise:
  9166                           	opt stack 18
  9167                           
  9168                           ;program.c: 58: clearEDDStatusbits();
  9169                           
  9170                           ;incstack = 0
  9171  007B2E  EC2B  F00D         	call	_clearEDDStatusbits	;wreg free
  9172                           
  9173                           ;program.c: 59: EDD_Init_Comms();
  9174  007B32  ECFE  F03C         	call	_EDD_Init_Comms	;wreg free
  9175                           
  9176                           ;program.c: 60: FLAGS.progSuccess = 1;
  9177  007B36  8438               	bsf	_FLAGS+1,2,c
  9178  007B38  0012               	return		;funcret
  9179  007B3A                     __end_of_programInitialise:
  9180                           	opt stack 0
  9181                           tblptru	equ	0xFF8
  9182                           tblptrh	equ	0xFF7
  9183                           tblptrl	equ	0xFF6
  9184                           tablat	equ	0xFF5
  9185                           prodh	equ	0xFF4
  9186                           prodl	equ	0xFF3
  9187                           intcon	equ	0xFF2
  9188                           postinc0	equ	0xFEE
  9189                           wreg	equ	0xFE8
  9190                           indf1	equ	0xFE7
  9191                           postinc1	equ	0xFE6
  9192                           postdec1	equ	0xFE5
  9193                           fsr1h	equ	0xFE2
  9194                           fsr1l	equ	0xFE1
  9195                           indf2	equ	0xFDF
  9196                           postinc2	equ	0xFDE
  9197                           postdec2	equ	0xFDD
  9198                           fsr2h	equ	0xFDA
  9199                           fsr2l	equ	0xFD9
  9200                           status	equ	0xFD8
  9201                           
  9202 ;; *************** function _clearEDDStatusbits *****************
  9203 ;; Defined at:
  9204 ;;		line 477 in file "peripherals.c"
  9205 ;; Parameters:    Size  Location     Type
  9206 ;;		None
  9207 ;; Auto vars:     Size  Location     Type
  9208 ;;  i               2    6[BANK0 ] int 
  9209 ;; Return value:  Size  Location     Type
  9210 ;;                  1    wreg      void 
  9211 ;; Registers used:
  9212 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9213 ;; Tracked objects:
  9214 ;;		On entry : 0/0
  9215 ;;		On exit  : 0/0
  9216 ;;		Unchanged: 0/0
  9217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9219 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9220 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9221 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9222 ;;Total ram usage:        8 bytes
  9223 ;; Hardware stack levels used:    1
  9224 ;; Hardware stack levels required when called:    8
  9225 ;; This function calls:
  9226 ;;		Nothing
  9227 ;; This function is called by:
  9228 ;;		_initialiseDetMemory
  9229 ;;		_programInitialise
  9230 ;; This function uses a non-reentrant model
  9231 ;;
  9232                           
  9233                           	psect	text37
  9234  001A56                     __ptext37:
  9235                           	opt stack 0
  9236  001A56                     _clearEDDStatusbits:
  9237                           	opt stack 20
  9238                           
  9239                           ;peripherals.c: 478: for(int i = 0; i < 101; i++){
  9240                           
  9241                           ;incstack = 0
  9242  001A56  0E00               	movlw	0
  9243  001A58  0100               	movlb	0	; () banked
  9244  001A5A  6F67               	movwf	(clearEDDStatusbits@i+1)& (0+255),b
  9245  001A5C  0E00               	movlw	0
  9246  001A5E  6F66               	movwf	clearEDDStatusbits@i& (0+255),b
  9247                           
  9248                           ; BSR set to: 0
  9249  001A60  0100               	movlb	0	; () banked
  9250  001A62  BF67               	btfsc	(clearEDDStatusbits@i+1)& (0+255),7,b
  9251  001A64  D00A               	goto	l13690
  9252  001A66  0100               	movlb	0	; () banked
  9253  001A68  5167               	movf	(clearEDDStatusbits@i+1)& (0+255),w,b
  9254  001A6A  E106               	bnz	u9860
  9255  001A6C  0E65               	movlw	101
  9256  001A6E  0100               	movlb	0	; () banked
  9257  001A70  5D66               	subwf	clearEDDStatusbits@i& (0+255),w,b
  9258  001A72  B0D8               	btfsc	status,0,c
  9259  001A74  0012               	return	
  9260  001A76  D001               	goto	l13690
  9261  001A78                     u9860:
  9262                           
  9263                           ; BSR set to: 0
  9264  001A78  0012               	return	
  9265  001A7A                     l13690:
  9266                           
  9267                           ; BSR set to: 0
  9268                           ;peripherals.c: 479: ABB_1.det_arrays.info[i].data.connection_status = 0;
  9269  001A7A  0EF9               	movlw	249
  9270  001A7C  0100               	movlb	0	; () banked
  9271  001A7E  6F60               	movwf	??_clearEDDStatusbits& (0+255),b
  9272  001A80  0E01               	movlw	1
  9273  001A82  0100               	movlb	0	; () banked
  9274  001A84  6F61               	movwf	(??_clearEDDStatusbits+1)& (0+255),b
  9275  001A86  C066  F062         	movff	clearEDDStatusbits@i,??_clearEDDStatusbits+2
  9276  001A8A  C067  F063         	movff	clearEDDStatusbits@i+1,??_clearEDDStatusbits+3
  9277  001A8E  0100               	movlb	0	; () banked
  9278  001A90  90D8               	bcf	status,0,c
  9279  001A92  3762               	rlcf	(??_clearEDDStatusbits+2)& (0+255),f,b
  9280  001A94  3763               	rlcf	(??_clearEDDStatusbits+3)& (0+255),f,b
  9281  001A96  0100               	movlb	0	; () banked
  9282  001A98  90D8               	bcf	status,0,c
  9283  001A9A  3762               	rlcf	(??_clearEDDStatusbits+2)& (0+255),f,b
  9284  001A9C  3763               	rlcf	(??_clearEDDStatusbits+3)& (0+255),f,b
  9285  001A9E  0100               	movlb	0	; () banked
  9286  001AA0  5160               	movf	??_clearEDDStatusbits& (0+255),w,b
  9287  001AA2  0100               	movlb	0	; () banked
  9288  001AA4  2762               	addwf	(??_clearEDDStatusbits+2)& (0+255),f,b
  9289  001AA6  0100               	movlb	0	; () banked
  9290  001AA8  5161               	movf	(??_clearEDDStatusbits+1)& (0+255),w,b
  9291  001AAA  0100               	movlb	0	; () banked
  9292  001AAC  2363               	addwfc	(??_clearEDDStatusbits+3)& (0+255),f,b
  9293  001AAE  0EC0               	movlw	low _ABB_1
  9294  001AB0  0100               	movlb	0	; () banked
  9295  001AB2  6F64               	movwf	(??_clearEDDStatusbits+4)& (0+255),b
  9296  001AB4  0E03               	movlw	high _ABB_1
  9297  001AB6  0100               	movlb	0	; () banked
  9298  001AB8  6F65               	movwf	(??_clearEDDStatusbits+5)& (0+255),b
  9299  001ABA  0E04               	movlw	4
  9300  001ABC  0100               	movlb	0	; () banked
  9301  001ABE  2764               	addwf	(??_clearEDDStatusbits+4)& (0+255),f,b
  9302  001AC0  0E00               	movlw	0
  9303  001AC2  2365               	addwfc	(??_clearEDDStatusbits+5)& (0+255),f,b
  9304  001AC4  0100               	movlb	0	; () banked
  9305  001AC6  5162               	movf	(??_clearEDDStatusbits+2)& (0+255),w,b
  9306  001AC8  0100               	movlb	0	; () banked
  9307  001ACA  2764               	addwf	(??_clearEDDStatusbits+4)& (0+255),f,b
  9308  001ACC  0100               	movlb	0	; () banked
  9309  001ACE  5163               	movf	(??_clearEDDStatusbits+3)& (0+255),w,b
  9310  001AD0  0100               	movlb	0	; () banked
  9311  001AD2  2365               	addwfc	(??_clearEDDStatusbits+5)& (0+255),f,b
  9312  001AD4  0E01               	movlw	1
  9313  001AD6  0100               	movlb	0	; () banked
  9314  001AD8  2564               	addwf	(??_clearEDDStatusbits+4)& (0+255),w,b
  9315  001ADA  6ED9               	movwf	fsr2l,c
  9316  001ADC  0E00               	movlw	0
  9317  001ADE  0100               	movlb	0	; () banked
  9318  001AE0  2165               	addwfc	(??_clearEDDStatusbits+5)& (0+255),w,b
  9319  001AE2  6EDA               	movwf	fsr2h,c
  9320  001AE4  92DF               	bcf	indf2,1,c
  9321                           
  9322                           ;peripherals.c: 480: ABB_1.det_arrays.info[i].data.calibration_status = 0;
  9323  001AE6  0EF9               	movlw	249
  9324  001AE8  0100               	movlb	0	; () banked
  9325  001AEA  6F60               	movwf	??_clearEDDStatusbits& (0+255),b
  9326  001AEC  0E01               	movlw	1
  9327  001AEE  0100               	movlb	0	; () banked
  9328  001AF0  6F61               	movwf	(??_clearEDDStatusbits+1)& (0+255),b
  9329  001AF2  C066  F062         	movff	clearEDDStatusbits@i,??_clearEDDStatusbits+2
  9330  001AF6  C067  F063         	movff	clearEDDStatusbits@i+1,??_clearEDDStatusbits+3
  9331  001AFA  0100               	movlb	0	; () banked
  9332  001AFC  90D8               	bcf	status,0,c
  9333  001AFE  3762               	rlcf	(??_clearEDDStatusbits+2)& (0+255),f,b
  9334  001B00  3763               	rlcf	(??_clearEDDStatusbits+3)& (0+255),f,b
  9335  001B02  0100               	movlb	0	; () banked
  9336  001B04  90D8               	bcf	status,0,c
  9337  001B06  3762               	rlcf	(??_clearEDDStatusbits+2)& (0+255),f,b
  9338  001B08  3763               	rlcf	(??_clearEDDStatusbits+3)& (0+255),f,b
  9339  001B0A  0100               	movlb	0	; () banked
  9340  001B0C  5160               	movf	??_clearEDDStatusbits& (0+255),w,b
  9341  001B0E  0100               	movlb	0	; () banked
  9342  001B10  2762               	addwf	(??_clearEDDStatusbits+2)& (0+255),f,b
  9343  001B12  0100               	movlb	0	; () banked
  9344  001B14  5161               	movf	(??_clearEDDStatusbits+1)& (0+255),w,b
  9345  001B16  0100               	movlb	0	; () banked
  9346  001B18  2363               	addwfc	(??_clearEDDStatusbits+3)& (0+255),f,b
  9347  001B1A  0EC0               	movlw	low _ABB_1
  9348  001B1C  0100               	movlb	0	; () banked
  9349  001B1E  6F64               	movwf	(??_clearEDDStatusbits+4)& (0+255),b
  9350  001B20  0E03               	movlw	high _ABB_1
  9351  001B22  0100               	movlb	0	; () banked
  9352  001B24  6F65               	movwf	(??_clearEDDStatusbits+5)& (0+255),b
  9353  001B26  0E04               	movlw	4
  9354  001B28  0100               	movlb	0	; () banked
  9355  001B2A  2764               	addwf	(??_clearEDDStatusbits+4)& (0+255),f,b
  9356  001B2C  0E00               	movlw	0
  9357  001B2E  2365               	addwfc	(??_clearEDDStatusbits+5)& (0+255),f,b
  9358  001B30  0100               	movlb	0	; () banked
  9359  001B32  5162               	movf	(??_clearEDDStatusbits+2)& (0+255),w,b
  9360  001B34  0100               	movlb	0	; () banked
  9361  001B36  2764               	addwf	(??_clearEDDStatusbits+4)& (0+255),f,b
  9362  001B38  0100               	movlb	0	; () banked
  9363  001B3A  5163               	movf	(??_clearEDDStatusbits+3)& (0+255),w,b
  9364  001B3C  0100               	movlb	0	; () banked
  9365  001B3E  2365               	addwfc	(??_clearEDDStatusbits+5)& (0+255),f,b
  9366  001B40  0E01               	movlw	1
  9367  001B42  0100               	movlb	0	; () banked
  9368  001B44  2564               	addwf	(??_clearEDDStatusbits+4)& (0+255),w,b
  9369  001B46  6ED9               	movwf	fsr2l,c
  9370  001B48  0E00               	movlw	0
  9371  001B4A  0100               	movlb	0	; () banked
  9372  001B4C  2165               	addwfc	(??_clearEDDStatusbits+5)& (0+255),w,b
  9373  001B4E  6EDA               	movwf	fsr2h,c
  9374  001B50  9ADF               	bcf	indf2,5,c
  9375                           
  9376                           ;peripherals.c: 481: ABB_1.det_arrays.info[i].data.energy_storing = 0;
  9377  001B52  0EF9               	movlw	249
  9378  001B54  0100               	movlb	0	; () banked
  9379  001B56  6F60               	movwf	??_clearEDDStatusbits& (0+255),b
  9380  001B58  0E01               	movlw	1
  9381  001B5A  0100               	movlb	0	; () banked
  9382  001B5C  6F61               	movwf	(??_clearEDDStatusbits+1)& (0+255),b
  9383  001B5E  C066  F062         	movff	clearEDDStatusbits@i,??_clearEDDStatusbits+2
  9384  001B62  C067  F063         	movff	clearEDDStatusbits@i+1,??_clearEDDStatusbits+3
  9385  001B66  0100               	movlb	0	; () banked
  9386  001B68  90D8               	bcf	status,0,c
  9387  001B6A  3762               	rlcf	(??_clearEDDStatusbits+2)& (0+255),f,b
  9388  001B6C  3763               	rlcf	(??_clearEDDStatusbits+3)& (0+255),f,b
  9389  001B6E  0100               	movlb	0	; () banked
  9390  001B70  90D8               	bcf	status,0,c
  9391  001B72  3762               	rlcf	(??_clearEDDStatusbits+2)& (0+255),f,b
  9392  001B74  3763               	rlcf	(??_clearEDDStatusbits+3)& (0+255),f,b
  9393  001B76  0100               	movlb	0	; () banked
  9394  001B78  5160               	movf	??_clearEDDStatusbits& (0+255),w,b
  9395  001B7A  0100               	movlb	0	; () banked
  9396  001B7C  2762               	addwf	(??_clearEDDStatusbits+2)& (0+255),f,b
  9397  001B7E  0100               	movlb	0	; () banked
  9398  001B80  5161               	movf	(??_clearEDDStatusbits+1)& (0+255),w,b
  9399  001B82  0100               	movlb	0	; () banked
  9400  001B84  2363               	addwfc	(??_clearEDDStatusbits+3)& (0+255),f,b
  9401  001B86  0EC0               	movlw	low _ABB_1
  9402  001B88  0100               	movlb	0	; () banked
  9403  001B8A  6F64               	movwf	(??_clearEDDStatusbits+4)& (0+255),b
  9404  001B8C  0E03               	movlw	high _ABB_1
  9405  001B8E  0100               	movlb	0	; () banked
  9406  001B90  6F65               	movwf	(??_clearEDDStatusbits+5)& (0+255),b
  9407  001B92  0E04               	movlw	4
  9408  001B94  0100               	movlb	0	; () banked
  9409  001B96  2764               	addwf	(??_clearEDDStatusbits+4)& (0+255),f,b
  9410  001B98  0E00               	movlw	0
  9411  001B9A  2365               	addwfc	(??_clearEDDStatusbits+5)& (0+255),f,b
  9412  001B9C  0100               	movlb	0	; () banked
  9413  001B9E  5162               	movf	(??_clearEDDStatusbits+2)& (0+255),w,b
  9414  001BA0  0100               	movlb	0	; () banked
  9415  001BA2  2764               	addwf	(??_clearEDDStatusbits+4)& (0+255),f,b
  9416  001BA4  0100               	movlb	0	; () banked
  9417  001BA6  5163               	movf	(??_clearEDDStatusbits+3)& (0+255),w,b
  9418  001BA8  0100               	movlb	0	; () banked
  9419  001BAA  2365               	addwfc	(??_clearEDDStatusbits+5)& (0+255),f,b
  9420  001BAC  0E01               	movlw	1
  9421  001BAE  0100               	movlb	0	; () banked
  9422  001BB0  2564               	addwf	(??_clearEDDStatusbits+4)& (0+255),w,b
  9423  001BB2  6ED9               	movwf	fsr2l,c
  9424  001BB4  0E00               	movlw	0
  9425  001BB6  0100               	movlb	0	; () banked
  9426  001BB8  2165               	addwfc	(??_clearEDDStatusbits+5)& (0+255),w,b
  9427  001BBA  6EDA               	movwf	fsr2h,c
  9428  001BBC  9EDF               	bcf	indf2,7,c
  9429                           
  9430                           ;peripherals.c: 482: ABB_1.det_arrays.info[i].data.bridge_wire_resitance = 0;
  9431  001BBE  0EF9               	movlw	249
  9432  001BC0  0100               	movlb	0	; () banked
  9433  001BC2  6F60               	movwf	??_clearEDDStatusbits& (0+255),b
  9434  001BC4  0E01               	movlw	1
  9435  001BC6  0100               	movlb	0	; () banked
  9436  001BC8  6F61               	movwf	(??_clearEDDStatusbits+1)& (0+255),b
  9437  001BCA  C066  F062         	movff	clearEDDStatusbits@i,??_clearEDDStatusbits+2
  9438  001BCE  C067  F063         	movff	clearEDDStatusbits@i+1,??_clearEDDStatusbits+3
  9439  001BD2  0100               	movlb	0	; () banked
  9440  001BD4  90D8               	bcf	status,0,c
  9441  001BD6  3762               	rlcf	(??_clearEDDStatusbits+2)& (0+255),f,b
  9442  001BD8  3763               	rlcf	(??_clearEDDStatusbits+3)& (0+255),f,b
  9443  001BDA  0100               	movlb	0	; () banked
  9444  001BDC  90D8               	bcf	status,0,c
  9445  001BDE  3762               	rlcf	(??_clearEDDStatusbits+2)& (0+255),f,b
  9446  001BE0  3763               	rlcf	(??_clearEDDStatusbits+3)& (0+255),f,b
  9447  001BE2  0100               	movlb	0	; () banked
  9448  001BE4  5160               	movf	??_clearEDDStatusbits& (0+255),w,b
  9449  001BE6  0100               	movlb	0	; () banked
  9450  001BE8  2762               	addwf	(??_clearEDDStatusbits+2)& (0+255),f,b
  9451  001BEA  0100               	movlb	0	; () banked
  9452  001BEC  5161               	movf	(??_clearEDDStatusbits+1)& (0+255),w,b
  9453  001BEE  0100               	movlb	0	; () banked
  9454  001BF0  2363               	addwfc	(??_clearEDDStatusbits+3)& (0+255),f,b
  9455  001BF2  0EC0               	movlw	low _ABB_1
  9456  001BF4  0100               	movlb	0	; () banked
  9457  001BF6  6F64               	movwf	(??_clearEDDStatusbits+4)& (0+255),b
  9458  001BF8  0E03               	movlw	high _ABB_1
  9459  001BFA  0100               	movlb	0	; () banked
  9460  001BFC  6F65               	movwf	(??_clearEDDStatusbits+5)& (0+255),b
  9461  001BFE  0E04               	movlw	4
  9462  001C00  0100               	movlb	0	; () banked
  9463  001C02  2764               	addwf	(??_clearEDDStatusbits+4)& (0+255),f,b
  9464  001C04  0E00               	movlw	0
  9465  001C06  2365               	addwfc	(??_clearEDDStatusbits+5)& (0+255),f,b
  9466  001C08  0100               	movlb	0	; () banked
  9467  001C0A  5162               	movf	(??_clearEDDStatusbits+2)& (0+255),w,b
  9468  001C0C  0100               	movlb	0	; () banked
  9469  001C0E  2764               	addwf	(??_clearEDDStatusbits+4)& (0+255),f,b
  9470  001C10  0100               	movlb	0	; () banked
  9471  001C12  5163               	movf	(??_clearEDDStatusbits+3)& (0+255),w,b
  9472  001C14  0100               	movlb	0	; () banked
  9473  001C16  2365               	addwfc	(??_clearEDDStatusbits+5)& (0+255),f,b
  9474  001C18  0E01               	movlw	1
  9475  001C1A  0100               	movlb	0	; () banked
  9476  001C1C  2564               	addwf	(??_clearEDDStatusbits+4)& (0+255),w,b
  9477  001C1E  6ED9               	movwf	fsr2l,c
  9478  001C20  0E00               	movlw	0
  9479  001C22  0100               	movlb	0	; () banked
  9480  001C24  2165               	addwfc	(??_clearEDDStatusbits+5)& (0+255),w,b
  9481  001C26  6EDA               	movwf	fsr2h,c
  9482  001C28  9CDF               	bcf	indf2,6,c
  9483                           
  9484                           ;peripherals.c: 483: ABB_1.det_arrays.info[i].data.energy_storing = 0;
  9485  001C2A  0EF9               	movlw	249
  9486  001C2C  0100               	movlb	0	; () banked
  9487  001C2E  6F60               	movwf	??_clearEDDStatusbits& (0+255),b
  9488  001C30  0E01               	movlw	1
  9489  001C32  0100               	movlb	0	; () banked
  9490  001C34  6F61               	movwf	(??_clearEDDStatusbits+1)& (0+255),b
  9491  001C36  C066  F062         	movff	clearEDDStatusbits@i,??_clearEDDStatusbits+2
  9492  001C3A  C067  F063         	movff	clearEDDStatusbits@i+1,??_clearEDDStatusbits+3
  9493  001C3E  0100               	movlb	0	; () banked
  9494  001C40  90D8               	bcf	status,0,c
  9495  001C42  3762               	rlcf	(??_clearEDDStatusbits+2)& (0+255),f,b
  9496  001C44  3763               	rlcf	(??_clearEDDStatusbits+3)& (0+255),f,b
  9497  001C46  0100               	movlb	0	; () banked
  9498  001C48  90D8               	bcf	status,0,c
  9499  001C4A  3762               	rlcf	(??_clearEDDStatusbits+2)& (0+255),f,b
  9500  001C4C  3763               	rlcf	(??_clearEDDStatusbits+3)& (0+255),f,b
  9501  001C4E  0100               	movlb	0	; () banked
  9502  001C50  5160               	movf	??_clearEDDStatusbits& (0+255),w,b
  9503  001C52  0100               	movlb	0	; () banked
  9504  001C54  2762               	addwf	(??_clearEDDStatusbits+2)& (0+255),f,b
  9505  001C56  0100               	movlb	0	; () banked
  9506  001C58  5161               	movf	(??_clearEDDStatusbits+1)& (0+255),w,b
  9507  001C5A  0100               	movlb	0	; () banked
  9508  001C5C  2363               	addwfc	(??_clearEDDStatusbits+3)& (0+255),f,b
  9509  001C5E  0EC0               	movlw	low _ABB_1
  9510  001C60  0100               	movlb	0	; () banked
  9511  001C62  6F64               	movwf	(??_clearEDDStatusbits+4)& (0+255),b
  9512  001C64  0E03               	movlw	high _ABB_1
  9513  001C66  0100               	movlb	0	; () banked
  9514  001C68  6F65               	movwf	(??_clearEDDStatusbits+5)& (0+255),b
  9515  001C6A  0E04               	movlw	4
  9516  001C6C  0100               	movlb	0	; () banked
  9517  001C6E  2764               	addwf	(??_clearEDDStatusbits+4)& (0+255),f,b
  9518  001C70  0E00               	movlw	0
  9519  001C72  2365               	addwfc	(??_clearEDDStatusbits+5)& (0+255),f,b
  9520  001C74  0100               	movlb	0	; () banked
  9521  001C76  5162               	movf	(??_clearEDDStatusbits+2)& (0+255),w,b
  9522  001C78  0100               	movlb	0	; () banked
  9523  001C7A  2764               	addwf	(??_clearEDDStatusbits+4)& (0+255),f,b
  9524  001C7C  0100               	movlb	0	; () banked
  9525  001C7E  5163               	movf	(??_clearEDDStatusbits+3)& (0+255),w,b
  9526  001C80  0100               	movlb	0	; () banked
  9527  001C82  2365               	addwfc	(??_clearEDDStatusbits+5)& (0+255),f,b
  9528  001C84  0E01               	movlw	1
  9529  001C86  0100               	movlb	0	; () banked
  9530  001C88  2564               	addwf	(??_clearEDDStatusbits+4)& (0+255),w,b
  9531  001C8A  6ED9               	movwf	fsr2l,c
  9532  001C8C  0E00               	movlw	0
  9533  001C8E  0100               	movlb	0	; () banked
  9534  001C90  2165               	addwfc	(??_clearEDDStatusbits+5)& (0+255),w,b
  9535  001C92  6EDA               	movwf	fsr2h,c
  9536  001C94  9EDF               	bcf	indf2,7,c
  9537                           
  9538                           ;peripherals.c: 484: ABB_1.det_arrays.info[i].data.program_status = 0;
  9539  001C96  0EF9               	movlw	249
  9540  001C98  0100               	movlb	0	; () banked
  9541  001C9A  6F60               	movwf	??_clearEDDStatusbits& (0+255),b
  9542  001C9C  0E01               	movlw	1
  9543  001C9E  0100               	movlb	0	; () banked
  9544  001CA0  6F61               	movwf	(??_clearEDDStatusbits+1)& (0+255),b
  9545  001CA2  C066  F062         	movff	clearEDDStatusbits@i,??_clearEDDStatusbits+2
  9546  001CA6  C067  F063         	movff	clearEDDStatusbits@i+1,??_clearEDDStatusbits+3
  9547  001CAA  0100               	movlb	0	; () banked
  9548  001CAC  90D8               	bcf	status,0,c
  9549  001CAE  3762               	rlcf	(??_clearEDDStatusbits+2)& (0+255),f,b
  9550  001CB0  3763               	rlcf	(??_clearEDDStatusbits+3)& (0+255),f,b
  9551  001CB2  0100               	movlb	0	; () banked
  9552  001CB4  90D8               	bcf	status,0,c
  9553  001CB6  3762               	rlcf	(??_clearEDDStatusbits+2)& (0+255),f,b
  9554  001CB8  3763               	rlcf	(??_clearEDDStatusbits+3)& (0+255),f,b
  9555  001CBA  0100               	movlb	0	; () banked
  9556  001CBC  5160               	movf	??_clearEDDStatusbits& (0+255),w,b
  9557  001CBE  0100               	movlb	0	; () banked
  9558  001CC0  2762               	addwf	(??_clearEDDStatusbits+2)& (0+255),f,b
  9559  001CC2  0100               	movlb	0	; () banked
  9560  001CC4  5161               	movf	(??_clearEDDStatusbits+1)& (0+255),w,b
  9561  001CC6  0100               	movlb	0	; () banked
  9562  001CC8  2363               	addwfc	(??_clearEDDStatusbits+3)& (0+255),f,b
  9563  001CCA  0EC0               	movlw	low _ABB_1
  9564  001CCC  0100               	movlb	0	; () banked
  9565  001CCE  6F64               	movwf	(??_clearEDDStatusbits+4)& (0+255),b
  9566  001CD0  0E03               	movlw	high _ABB_1
  9567  001CD2  0100               	movlb	0	; () banked
  9568  001CD4  6F65               	movwf	(??_clearEDDStatusbits+5)& (0+255),b
  9569  001CD6  0E04               	movlw	4
  9570  001CD8  0100               	movlb	0	; () banked
  9571  001CDA  2764               	addwf	(??_clearEDDStatusbits+4)& (0+255),f,b
  9572  001CDC  0E00               	movlw	0
  9573  001CDE  2365               	addwfc	(??_clearEDDStatusbits+5)& (0+255),f,b
  9574  001CE0  0100               	movlb	0	; () banked
  9575  001CE2  5162               	movf	(??_clearEDDStatusbits+2)& (0+255),w,b
  9576  001CE4  0100               	movlb	0	; () banked
  9577  001CE6  2764               	addwf	(??_clearEDDStatusbits+4)& (0+255),f,b
  9578  001CE8  0100               	movlb	0	; () banked
  9579  001CEA  5163               	movf	(??_clearEDDStatusbits+3)& (0+255),w,b
  9580  001CEC  0100               	movlb	0	; () banked
  9581  001CEE  2365               	addwfc	(??_clearEDDStatusbits+5)& (0+255),f,b
  9582  001CF0  0E01               	movlw	1
  9583  001CF2  0100               	movlb	0	; () banked
  9584  001CF4  2564               	addwf	(??_clearEDDStatusbits+4)& (0+255),w,b
  9585  001CF6  6ED9               	movwf	fsr2l,c
  9586  001CF8  0E00               	movlw	0
  9587  001CFA  0100               	movlb	0	; () banked
  9588  001CFC  2165               	addwfc	(??_clearEDDStatusbits+5)& (0+255),w,b
  9589  001CFE  6EDA               	movwf	fsr2h,c
  9590  001D00  98DF               	bcf	indf2,4,c
  9591                           
  9592                           ; BSR set to: 0
  9593  001D02  0100               	movlb	0	; () banked
  9594  001D04  4B66               	infsnz	clearEDDStatusbits@i& (0+255),f,b
  9595  001D06  2B67               	incf	(clearEDDStatusbits@i+1)& (0+255),f,b
  9596                           
  9597                           ; BSR set to: 0
  9598  001D08  0100               	movlb	0	; () banked
  9599  001D0A  BF67               	btfsc	(clearEDDStatusbits@i+1)& (0+255),7,b
  9600  001D0C  D6B6               	goto	l13690
  9601  001D0E  0100               	movlb	0	; () banked
  9602  001D10  5167               	movf	(clearEDDStatusbits@i+1)& (0+255),w,b
  9603  001D12  E101               	bnz	l415
  9604  001D14  D6AB               	goto	L8
  9605  001D16                     l415:
  9606                           
  9607                           ; BSR set to: 0
  9608  001D16  0012               	return		;funcret
  9609  001D18                     __end_of_clearEDDStatusbits:
  9610                           	opt stack 0
  9611                           tblptru	equ	0xFF8
  9612                           tblptrh	equ	0xFF7
  9613                           tblptrl	equ	0xFF6
  9614                           tablat	equ	0xFF5
  9615                           prodh	equ	0xFF4
  9616                           prodl	equ	0xFF3
  9617                           intcon	equ	0xFF2
  9618                           postinc0	equ	0xFEE
  9619                           wreg	equ	0xFE8
  9620                           indf1	equ	0xFE7
  9621                           postinc1	equ	0xFE6
  9622                           postdec1	equ	0xFE5
  9623                           fsr1h	equ	0xFE2
  9624                           fsr1l	equ	0xFE1
  9625                           indf2	equ	0xFDF
  9626                           postinc2	equ	0xFDE
  9627                           postdec2	equ	0xFDD
  9628                           fsr2h	equ	0xFDA
  9629                           fsr2l	equ	0xFD9
  9630                           status	equ	0xFD8
  9631                           
  9632 ;; *************** function _mainsWake *****************
  9633 ;; Defined at:
  9634 ;;		line 105 in file "sleep.c"
  9635 ;; Parameters:    Size  Location     Type
  9636 ;;		None
  9637 ;; Auto vars:     Size  Location     Type
  9638 ;;		None
  9639 ;; Return value:  Size  Location     Type
  9640 ;;                  1    wreg      void 
  9641 ;; Registers used:
  9642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9643 ;; Tracked objects:
  9644 ;;		On entry : 0/0
  9645 ;;		On exit  : 0/0
  9646 ;;		Unchanged: 0/0
  9647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9652 ;;Total ram usage:        0 bytes
  9653 ;; Hardware stack levels used:    1
  9654 ;; Hardware stack levels required when called:   13
  9655 ;; This function calls:
  9656 ;;		__delay_ms
  9657 ;;		_initialiseModem
  9658 ;;		_initialiseStates
  9659 ;;		_reset4SecTimer
  9660 ;;		_tagForInterrupt
  9661 ;; This function is called by:
  9662 ;;		_device
  9663 ;; This function uses a non-reentrant model
  9664 ;;
  9665                           
  9666                           	psect	text38
  9667  006ED8                     __ptext38:
  9668                           	opt stack 0
  9669  006ED8                     _mainsWake:
  9670                           	opt stack 16
  9671                           
  9672                           ;sleep.c: 106: INTCONbits.GIE = 0;
  9673                           
  9674                           ; BSR set to: 0
  9675                           ;incstack = 0
  9676  006ED8  9EF2               	bcf	intcon,7,c	;volatile
  9677                           
  9678                           ;sleep.c: 107: ABB_1.deviceState = 1;
  9679  006EDA  0E01               	movlw	1
  9680  006EDC  CFE8 F754          	movff	wreg,_ABB_1+916
  9681                           
  9682                           ;sleep.c: 108: reset4SecTimer();
  9683  006EE0  EC1D  F03D         	call	_reset4SecTimer	;wreg free
  9684                           
  9685                           ;sleep.c: 109: LATGbits.LATG1 = 1;
  9686  006EE4  827F               	bsf	3967,1,c	;volatile
  9687                           
  9688                           ;sleep.c: 110: _delay_ms(100);
  9689  006EE6  0E00               	movlw	0
  9690  006EE8  0100               	movlb	0	; () banked
  9691  006EEA  6F62               	movwf	(__delay_ms@delay+1)& (0+255),b
  9692  006EEC  0E64               	movlw	100
  9693  006EEE  6F61               	movwf	__delay_ms@delay& (0+255),b
  9694  006EF0  EC02  F037         	call	__delay_ms	;wreg free
  9695                           
  9696                           ;sleep.c: 111: initialiseModem();
  9697  006EF4  EC0A  F035         	call	_initialiseModem	;wreg free
  9698                           
  9699                           ;sleep.c: 112: initialiseStates();
  9700  006EF8  EC61  F029         	call	_initialiseStates	;wreg free
  9701                           
  9702                           ;sleep.c: 113: tagForInterrupt();
  9703  006EFC  ECC3  F03B         	call	_tagForInterrupt	;wreg free
  9704                           
  9705                           ;sleep.c: 114: INTCONbits.GIE = 1;
  9706  006F00  8EF2               	bsf	intcon,7,c	;volatile
  9707                           
  9708                           ;sleep.c: 115: INTCONbits.PEIE = 1;
  9709  006F02  8CF2               	bsf	intcon,6,c	;volatile
  9710                           
  9711                           ;sleep.c: 116: ABB_1.info.statusBits.voltage = 1;
  9712  006F04  EE23  F0C1         	lfsr	2,_ABB_1+1
  9713  006F08  8ADF               	bsf	indf2,5,c
  9714                           
  9715                           ;sleep.c: 117: FLAGS.shaftCheck = 0;
  9716  006F0A  9A38               	bcf	_FLAGS+1,5,c
  9717                           
  9718                           ;sleep.c: 118: FLAGS.shaftComplete = 0;
  9719  006F0C  9C38               	bcf	_FLAGS+1,6,c
  9720                           
  9721                           ;sleep.c: 119: WDTCON0bits.SEN = 1;
  9722  006F0E  010E               	movlb	14	; () banked
  9723  006F10  813D               	bsf	61,0,b	;volatile
  9724                           
  9725                           ; BSR set to: 14
  9726                           ;sleep.c: 120: ABB_1.info.statusBits.key_switch_status = 0;
  9727  006F12  EE23  F0C1         	lfsr	2,_ABB_1+1
  9728  006F16  90DF               	bcf	indf2,0,c
  9729                           
  9730                           ; BSR set to: 14
  9731  006F18  0012               	return		;funcret
  9732  006F1A                     __end_of_mainsWake:
  9733                           	opt stack 0
  9734                           tblptru	equ	0xFF8
  9735                           tblptrh	equ	0xFF7
  9736                           tblptrl	equ	0xFF6
  9737                           tablat	equ	0xFF5
  9738                           prodh	equ	0xFF4
  9739                           prodl	equ	0xFF3
  9740                           intcon	equ	0xFF2
  9741                           postinc0	equ	0xFEE
  9742                           wreg	equ	0xFE8
  9743                           indf1	equ	0xFE7
  9744                           postinc1	equ	0xFE6
  9745                           postdec1	equ	0xFE5
  9746                           fsr1h	equ	0xFE2
  9747                           fsr1l	equ	0xFE1
  9748                           indf2	equ	0xFDF
  9749                           postinc2	equ	0xFDE
  9750                           postdec2	equ	0xFDD
  9751                           fsr2h	equ	0xFDA
  9752                           fsr2l	equ	0xFD9
  9753                           status	equ	0xFD8
  9754                           
  9755 ;; *************** function _tagForInterrupt *****************
  9756 ;; Defined at:
  9757 ;;		line 79 in file "tagRead.c"
  9758 ;; Parameters:    Size  Location     Type
  9759 ;;		None
  9760 ;; Auto vars:     Size  Location     Type
  9761 ;;		None
  9762 ;; Return value:  Size  Location     Type
  9763 ;;                  1    wreg      void 
  9764 ;; Registers used:
  9765 ;;		None
  9766 ;; Tracked objects:
  9767 ;;		On entry : 0/0
  9768 ;;		On exit  : 0/0
  9769 ;;		Unchanged: 0/0
  9770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9775 ;;Total ram usage:        0 bytes
  9776 ;; Hardware stack levels used:    1
  9777 ;; Hardware stack levels required when called:    8
  9778 ;; This function calls:
  9779 ;;		Nothing
  9780 ;; This function is called by:
  9781 ;;		_initialiseTag
  9782 ;;		_mainsWake
  9783 ;; This function uses a non-reentrant model
  9784 ;;
  9785                           
  9786                           	psect	text39
  9787  007786                     __ptext39:
  9788                           	opt stack 0
  9789  007786                     _tagForInterrupt:
  9790                           	opt stack 20
  9791                           
  9792                           ;tagRead.c: 80: ANSELEbits.ANSELE2 = 0;
  9793                           
  9794                           ; BSR set to: 14
  9795                           ;incstack = 0
  9796  007786  010E               	movlb	14	; () banked
  9797  007788  95AF               	bcf	175,2,b	;volatile
  9798                           
  9799                           ;tagRead.c: 81: TRISEbits.TRISE2 = 1;
  9800  00778A  8485               	bsf	3973,2,c	;volatile
  9801                           
  9802                           ;tagRead.c: 82: WPUEbits.WPUE2 = 1;
  9803  00778C  010E               	movlb	14	; () banked
  9804  00778E  85AE               	bsf	174,2,b	;volatile
  9805                           
  9806                           ;tagRead.c: 84: ANSELEbits.ANSELE3 = 0;
  9807  007790  010E               	movlb	14	; () banked
  9808  007792  97AF               	bcf	175,3,b	;volatile
  9809                           
  9810                           ;tagRead.c: 85: TRISEbits.TRISE3 = 0;
  9811  007794  9685               	bcf	3973,3,c	;volatile
  9812                           
  9813                           ;tagRead.c: 86: LATEbits.LATE3 = 0;
  9814  007796  967D               	bcf	3965,3,c	;volatile
  9815                           
  9816                           ;tagRead.c: 88: ADCON0bits.ADON = 0;
  9817  007798  9E60               	bcf	3936,7,c	;volatile
  9818                           
  9819                           ;tagRead.c: 89: FVRCONbits.FVREN = 0;
  9820  00779A  010E               	movlb	14	; () banked
  9821  00779C  9FC4               	bcf	196,7,b	;volatile
  9822                           
  9823                           ;tagRead.c: 91: T0CON0bits.T0EN = 1;
  9824  00779E  8ED5               	bsf	4053,7,c	;volatile
  9825                           
  9826                           ; BSR set to: 14
  9827  0077A0  0012               	return		;funcret
  9828  0077A2                     __end_of_tagForInterrupt:
  9829                           	opt stack 0
  9830                           tblptru	equ	0xFF8
  9831                           tblptrh	equ	0xFF7
  9832                           tblptrl	equ	0xFF6
  9833                           tablat	equ	0xFF5
  9834                           prodh	equ	0xFF4
  9835                           prodl	equ	0xFF3
  9836                           intcon	equ	0xFF2
  9837                           postinc0	equ	0xFEE
  9838                           wreg	equ	0xFE8
  9839                           indf1	equ	0xFE7
  9840                           postinc1	equ	0xFE6
  9841                           postdec1	equ	0xFE5
  9842                           fsr1h	equ	0xFE2
  9843                           fsr1l	equ	0xFE1
  9844                           indf2	equ	0xFDF
  9845                           postinc2	equ	0xFDE
  9846                           postdec2	equ	0xFDD
  9847                           fsr2h	equ	0xFDA
  9848                           fsr2l	equ	0xFD9
  9849                           status	equ	0xFD8
  9850                           
  9851 ;; *************** function _reset4SecTimer *****************
  9852 ;; Defined at:
  9853 ;;		line 70 in file "acOr36V.c"
  9854 ;; Parameters:    Size  Location     Type
  9855 ;;		None
  9856 ;; Auto vars:     Size  Location     Type
  9857 ;;		None
  9858 ;; Return value:  Size  Location     Type
  9859 ;;                  1    wreg      void 
  9860 ;; Registers used:
  9861 ;;		wreg, status,2
  9862 ;; Tracked objects:
  9863 ;;		On entry : 0/0
  9864 ;;		On exit  : 0/0
  9865 ;;		Unchanged: 0/0
  9866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9871 ;;Total ram usage:        0 bytes
  9872 ;; Hardware stack levels used:    1
  9873 ;; Hardware stack levels required when called:    8
  9874 ;; This function calls:
  9875 ;;		Nothing
  9876 ;; This function is called by:
  9877 ;;		_mainsWake
  9878 ;; This function uses a non-reentrant model
  9879 ;;
  9880                           
  9881                           	psect	text40
  9882  007A3A                     __ptext40:
  9883                           	opt stack 0
  9884  007A3A                     _reset4SecTimer:
  9885                           	opt stack 20
  9886                           
  9887                           ;acOr36V.c: 71: PIE0bits.TMR0IE = 0;
  9888                           
  9889                           ; BSR set to: 14
  9890                           ;incstack = 0
  9891  007A3A  010E               	movlb	14	; () banked
  9892  007A3C  9B29               	bcf	41,5,b	;volatile
  9893                           
  9894                           ;acOr36V.c: 72: T0CON0bits.T0EN = 0;
  9895  007A3E  9ED5               	bcf	4053,7,c	;volatile
  9896                           
  9897                           ; BSR set to: 14
  9898                           ;acOr36V.c: 73: TMR0 = 0;
  9899  007A40  0E00               	movlw	0
  9900  007A42  6ED3               	movwf	4051,c	;volatile
  9901                           
  9902                           ; BSR set to: 14
  9903                           ;acOr36V.c: 74: T0CON0bits.T0EN = 1;
  9904  007A44  8ED5               	bsf	4053,7,c	;volatile
  9905                           
  9906                           ; BSR set to: 14
  9907                           ;acOr36V.c: 75: PIE0bits.TMR0IE = 1;
  9908  007A46  010E               	movlb	14	; () banked
  9909  007A48  8B29               	bsf	41,5,b	;volatile
  9910                           
  9911                           ; BSR set to: 14
  9912  007A4A  0012               	return		;funcret
  9913  007A4C                     __end_of_reset4SecTimer:
  9914                           	opt stack 0
  9915                           tblptru	equ	0xFF8
  9916                           tblptrh	equ	0xFF7
  9917                           tblptrl	equ	0xFF6
  9918                           tablat	equ	0xFF5
  9919                           prodh	equ	0xFF4
  9920                           prodl	equ	0xFF3
  9921                           intcon	equ	0xFF2
  9922                           postinc0	equ	0xFEE
  9923                           wreg	equ	0xFE8
  9924                           indf1	equ	0xFE7
  9925                           postinc1	equ	0xFE6
  9926                           postdec1	equ	0xFE5
  9927                           fsr1h	equ	0xFE2
  9928                           fsr1l	equ	0xFE1
  9929                           indf2	equ	0xFDF
  9930                           postinc2	equ	0xFDE
  9931                           postdec2	equ	0xFDD
  9932                           fsr2h	equ	0xFDA
  9933                           fsr2l	equ	0xFD9
  9934                           status	equ	0xFD8
  9935                           
  9936 ;; *************** function _initialiseModem *****************
  9937 ;; Defined at:
  9938 ;;		line 22 in file "outgoingMessages.c"
  9939 ;; Parameters:    Size  Location     Type
  9940 ;;		None
  9941 ;; Auto vars:     Size  Location     Type
  9942 ;;  attempts        1   28[BANK0 ] unsigned char 
  9943 ;; Return value:  Size  Location     Type
  9944 ;;                  1    wreg      void 
  9945 ;; Registers used:
  9946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9947 ;; Tracked objects:
  9948 ;;		On entry : 0/0
  9949 ;;		On exit  : 0/0
  9950 ;;		Unchanged: 0/0
  9951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9953 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9955 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9956 ;;Total ram usage:        1 bytes
  9957 ;; Hardware stack levels used:    1
  9958 ;; Hardware stack levels required when called:   12
  9959 ;; This function calls:
  9960 ;;		_InitST7540
  9961 ;;		_initialiseQueues
  9962 ;;		_initialiseState
  9963 ;; This function is called by:
  9964 ;;		_initialise
  9965 ;;		_mainsWake
  9966 ;; This function uses a non-reentrant model
  9967 ;;
  9968                           
  9969                           	psect	text41
  9970  006A14                     __ptext41:
  9971                           	opt stack 0
  9972  006A14                     _initialiseModem:
  9973                           	opt stack 17
  9974                           
  9975                           ;outgoingMessages.c: 23: unsigned char attempts = 0;
  9976                           
  9977                           ; BSR set to: 14
  9978                           ;incstack = 0
  9979  006A14  0E00               	movlw	0
  9980  006A16  0100               	movlb	0	; () banked
  9981  006A18  6F7C               	movwf	initialiseModem@attempts& (0+255),b
  9982                           
  9983                           ; BSR set to: 0
  9984                           ;outgoingMessages.c: 24: PIE3bits.SSP1IE = 0;
  9985  006A1A  010E               	movlb	14	; () banked
  9986  006A1C  912C               	bcf	44,0,b	;volatile
  9987                           
  9988                           ; BSR set to: 14
  9989                           ;outgoingMessages.c: 25: initialiseState(&state.outgoingMessages, 5);
  9990  006A1E  0EC8               	movlw	low (_state+33)
  9991  006A20  0100               	movlb	0	; () banked
  9992  006A22  6F60               	movwf	initialiseState@specific& (0+255),b
  9993  006A24  0E01               	movlw	high (_state+33)
  9994  006A26  0100               	movlb	0	; () banked
  9995  006A28  6F61               	movwf	(initialiseState@specific+1)& (0+255),b
  9996  006A2A  0E05               	movlw	5
  9997  006A2C  0100               	movlb	0	; () banked
  9998  006A2E  6F62               	movwf	initialiseState@number& (0+255),b
  9999  006A30  ECDB  F034         	call	_initialiseState	;wreg free
 10000                           
 10001                           ;outgoingMessages.c: 26: initialiseState(&state.incomingCommands, 3);
 10002  006A34  0ECF               	movlw	low (_state+40)
 10003  006A36  0100               	movlb	0	; () banked
 10004  006A38  6F60               	movwf	initialiseState@specific& (0+255),b
 10005  006A3A  0E01               	movlw	high (_state+40)
 10006  006A3C  0100               	movlb	0	; () banked
 10007  006A3E  6F61               	movwf	(initialiseState@specific+1)& (0+255),b
 10008  006A40  0E03               	movlw	3
 10009  006A42  0100               	movlb	0	; () banked
 10010  006A44  6F62               	movwf	initialiseState@number& (0+255),b
 10011  006A46  ECDB  F034         	call	_initialiseState	;wreg free
 10012                           
 10013                           ;outgoingMessages.c: 27: initialiseQueues();
 10014  006A4A  EC4F  F03C         	call	_initialiseQueues	;wreg free
 10015                           
 10016                           ;outgoingMessages.c: 28: while(!InitST7540() && attempts < 5){
 10017  006A4E  D002               	goto	l14356
 10018  006A50                     l14354:
 10019                           
 10020                           ;outgoingMessages.c: 29: attempts++;
 10021  006A50  0100               	movlb	0	; () banked
 10022  006A52  2B7C               	incf	initialiseModem@attempts& (0+255),f,b
 10023  006A54                     l14356:
 10024  006A54  ECF4  F021         	call	_InitST7540	;wreg free
 10025  006A58  0900               	iorlw	0
 10026  006A5A  A4D8               	btfss	status,2,c
 10027  006A5C  D004               	goto	l2103
 10028  006A5E  0E04               	movlw	4
 10029  006A60  0100               	movlb	0	; () banked
 10030  006A62  657C               	cpfsgt	initialiseModem@attempts& (0+255),b
 10031  006A64  D7F5               	goto	l14354
 10032  006A66                     l2103:
 10033                           
 10034                           ;outgoingMessages.c: 30: }
 10035                           ;outgoingMessages.c: 31: TRISBbits.TRISB6 = 0;
 10036  006A66  9C82               	bcf	3970,6,c	;volatile
 10037                           
 10038                           ;outgoingMessages.c: 32: LATBbits.LATB6 = 0;
 10039  006A68  9C7A               	bcf	3962,6,c	;volatile
 10040                           
 10041                           ;outgoingMessages.c: 33: TRISBbits.TRISB7 = 0;
 10042  006A6A  9E82               	bcf	3970,7,c	;volatile
 10043                           
 10044                           ;outgoingMessages.c: 34: LATBbits.LATB7 = 0;
 10045  006A6C  9E7A               	bcf	3962,7,c	;volatile
 10046  006A6E  0012               	return		;funcret
 10047  006A70                     __end_of_initialiseModem:
 10048                           	opt stack 0
 10049                           tblptru	equ	0xFF8
 10050                           tblptrh	equ	0xFF7
 10051                           tblptrl	equ	0xFF6
 10052                           tablat	equ	0xFF5
 10053                           prodh	equ	0xFF4
 10054                           prodl	equ	0xFF3
 10055                           intcon	equ	0xFF2
 10056                           postinc0	equ	0xFEE
 10057                           wreg	equ	0xFE8
 10058                           indf1	equ	0xFE7
 10059                           postinc1	equ	0xFE6
 10060                           postdec1	equ	0xFE5
 10061                           fsr1h	equ	0xFE2
 10062                           fsr1l	equ	0xFE1
 10063                           indf2	equ	0xFDF
 10064                           postinc2	equ	0xFDE
 10065                           postdec2	equ	0xFDD
 10066                           fsr2h	equ	0xFDA
 10067                           fsr2l	equ	0xFD9
 10068                           status	equ	0xFD8
 10069                           
 10070 ;; *************** function _initialiseQueues *****************
 10071 ;; Defined at:
 10072 ;;		line 96 in file "outgoingMessages.c"
 10073 ;; Parameters:    Size  Location     Type
 10074 ;;		None
 10075 ;; Auto vars:     Size  Location     Type
 10076 ;;		None
 10077 ;; Return value:  Size  Location     Type
 10078 ;;                  1    wreg      void 
 10079 ;; Registers used:
 10080 ;;		wreg, status,2
 10081 ;; Tracked objects:
 10082 ;;		On entry : 0/0
 10083 ;;		On exit  : 0/0
 10084 ;;		Unchanged: 0/0
 10085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10090 ;;Total ram usage:        0 bytes
 10091 ;; Hardware stack levels used:    1
 10092 ;; Hardware stack levels required when called:    8
 10093 ;; This function calls:
 10094 ;;		Nothing
 10095 ;; This function is called by:
 10096 ;;		_initialiseModem
 10097 ;; This function uses a non-reentrant model
 10098 ;;
 10099                           
 10100                           	psect	text42
 10101  00789E                     __ptext42:
 10102                           	opt stack 0
 10103  00789E                     _initialiseQueues:
 10104                           	opt stack 20
 10105                           
 10106                           ;outgoingMessages.c: 97: outgoingQueue.queue_pointer = 0;
 10107                           
 10108                           ;incstack = 0
 10109  00789E  0E00               	movlw	0
 10110  0078A0  0101               	movlb	1	; () banked
 10111  0078A2  6F01               	movwf	(_outgoingQueue+1)& (0+255),b
 10112                           
 10113                           ;outgoingMessages.c: 98: outgoingQueue.length = 0;
 10114  0078A4  0E00               	movlw	0
 10115  0078A6  0101               	movlb	1	; () banked
 10116  0078A8  6F00               	movwf	_outgoingQueue& (0+255),b
 10117                           
 10118                           ;outgoingMessages.c: 99: incomingQueue.queue_pointer = 0;
 10119  0078AA  0E00               	movlw	0
 10120  0078AC  0103               	movlb	3	; () banked
 10121  0078AE  6F01               	movwf	(_incomingQueue+1)& (0+255),b
 10122                           
 10123                           ;outgoingMessages.c: 100: incomingQueue.length = 0;
 10124  0078B0  0E00               	movlw	0
 10125  0078B2  0103               	movlb	3	; () banked
 10126  0078B4  6F00               	movwf	_incomingQueue& (0+255),b
 10127                           
 10128                           ; BSR set to: 3
 10129  0078B6  0012               	return		;funcret
 10130  0078B8                     __end_of_initialiseQueues:
 10131                           	opt stack 0
 10132                           tblptru	equ	0xFF8
 10133                           tblptrh	equ	0xFF7
 10134                           tblptrl	equ	0xFF6
 10135                           tablat	equ	0xFF5
 10136                           prodh	equ	0xFF4
 10137                           prodl	equ	0xFF3
 10138                           intcon	equ	0xFF2
 10139                           postinc0	equ	0xFEE
 10140                           wreg	equ	0xFE8
 10141                           indf1	equ	0xFE7
 10142                           postinc1	equ	0xFE6
 10143                           postdec1	equ	0xFE5
 10144                           fsr1h	equ	0xFE2
 10145                           fsr1l	equ	0xFE1
 10146                           indf2	equ	0xFDF
 10147                           postinc2	equ	0xFDE
 10148                           postdec2	equ	0xFDD
 10149                           fsr2h	equ	0xFDA
 10150                           fsr2l	equ	0xFD9
 10151                           status	equ	0xFD8
 10152                           
 10153 ;; *************** function _InitST7540 *****************
 10154 ;; Defined at:
 10155 ;;		line 72 in file "ST7540.c"
 10156 ;; Parameters:    Size  Location     Type
 10157 ;;		None
 10158 ;; Auto vars:     Size  Location     Type
 10159 ;;  configDataRX    3   25[BANK0 ] unsigned um
 10160 ;;  frameDataRXU    3   22[BANK0 ] unsigned um
 10161 ;;  configDataTX    3   19[BANK0 ] unsigned um
 10162 ;;  frameDataTXU    3   16[BANK0 ] unsigned um
 10163 ;; Return value:  Size  Location     Type
 10164 ;;                  1    wreg      unsigned char 
 10165 ;; Registers used:
 10166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10167 ;; Tracked objects:
 10168 ;;		On entry : 0/0
 10169 ;;		On exit  : 0/0
 10170 ;;		Unchanged: 0/0
 10171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10173 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10175 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10176 ;;Total ram usage:       12 bytes
 10177 ;; Hardware stack levels used:    1
 10178 ;; Hardware stack levels required when called:   11
 10179 ;; This function calls:
 10180 ;;		_InitST7540Pins
 10181 ;;		_ReadConfigST7540
 10182 ;;		_WriteConfigST7540
 10183 ;;		_initST7540Interrupts
 10184 ;; This function is called by:
 10185 ;;		_initialiseModem
 10186 ;; This function uses a non-reentrant model
 10187 ;;
 10188                           
 10189                           	psect	text43
 10190  0043E8                     __ptext43:
 10191                           	opt stack 0
 10192  0043E8                     _InitST7540:
 10193                           	opt stack 17
 10194                           
 10195                           ;ST7540.c: 73: unsigned long short frameDataTXUS;
 10196                           ;ST7540.c: 74: unsigned long short frameDataRXUS = 0;
 10197                           
 10198                           ; BSR set to: 3
 10199                           ;incstack = 0
 10200  0043E8  0E00               	movlw	0
 10201  0043EA  0100               	movlb	0	; () banked
 10202  0043EC  6F76               	movwf	InitST7540@frameDataRXUS& (0+255),b
 10203  0043EE  0E00               	movlw	0
 10204  0043F0  0100               	movlb	0	; () banked
 10205  0043F2  6F77               	movwf	(InitST7540@frameDataRXUS+1)& (0+255),b
 10206  0043F4  0E00               	movlw	0
 10207  0043F6  0100               	movlb	0	; () banked
 10208  0043F8  6F78               	movwf	(InitST7540@frameDataRXUS+2)& (0+255),b
 10209                           
 10210                           ;ST7540.c: 75: unsigned long short configDataTXUS;
 10211                           ;ST7540.c: 76: unsigned long short configDataRXUS = 0;
 10212  0043FA  0E00               	movlw	0
 10213  0043FC  0100               	movlb	0	; () banked
 10214  0043FE  6F79               	movwf	InitST7540@configDataRXUS& (0+255),b
 10215  004400  0E00               	movlw	0
 10216  004402  0100               	movlb	0	; () banked
 10217  004404  6F7A               	movwf	(InitST7540@configDataRXUS+1)& (0+255),b
 10218  004406  0E00               	movlw	0
 10219  004408  0100               	movlb	0	; () banked
 10220  00440A  6F7B               	movwf	(InitST7540@configDataRXUS+2)& (0+255),b
 10221                           
 10222                           ; BSR set to: 0
 10223                           ;ST7540.c: 78: InitST7540Pins();
 10224  00440C  ECC2  F03A         	call	_InitST7540Pins	;wreg free
 10225                           
 10226                           ;ST7540.c: 80: frameDataTXUS = (unsigned long short) 0x9b58;
 10227  004410  0E58               	movlw	88
 10228  004412  0100               	movlb	0	; () banked
 10229  004414  6F70               	movwf	InitST7540@frameDataTXUS& (0+255),b
 10230  004416  0E9B               	movlw	155
 10231  004418  0100               	movlb	0	; () banked
 10232  00441A  6F71               	movwf	(InitST7540@frameDataTXUS+1)& (0+255),b
 10233  00441C  0E00               	movlw	0
 10234  00441E  0100               	movlb	0	; () banked
 10235  004420  6F72               	movwf	(InitST7540@frameDataTXUS+2)& (0+255),b
 10236                           
 10237                           ; BSR set to: 0
 10238                           ;ST7540.c: 81: configDataTXUS = 0b000000000000000000000110 |
 10239                           ;ST7540.c: 82: 0b000000000000000000010000 |
 10240                           ;ST7540.c: 83: 0b000000000000000000000000 |
 10241                           ;ST7540.c: 84: 0b000000000000000000000000 |
 10242                           ;ST7540.c: 85: 0b000000000000000010000000 |
 10243                           ;ST7540.c: 86: 0b000000000000001000000000 |
 10244                           ;ST7540.c: 87: 0b000000000001000000000000 |
 10245                           ;ST7540.c: 88: 0b000000000000000000000000 |
 10246                           ;ST7540.c: 89: 0b000000011000000000000000 |
 10247                           ;ST7540.c: 90: 0b000000100000000000000000 |
 10248                           ;ST7540.c: 91: 0b000001000000000000000000 |
 10249                           ;ST7540.c: 92: 0b000000000000000000000000 |
 10250  004422  0E96               	movlw	150
 10251  004424  0100               	movlb	0	; () banked
 10252  004426  6F73               	movwf	InitST7540@configDataTXUS& (0+255),b
 10253  004428  0E92               	movlw	146
 10254  00442A  0100               	movlb	0	; () banked
 10255  00442C  6F74               	movwf	(InitST7540@configDataTXUS+1)& (0+255),b
 10256  00442E  0E77               	movlw	119
 10257  004430  0100               	movlb	0	; () banked
 10258  004432  6F75               	movwf	(InitST7540@configDataTXUS+2)& (0+255),b
 10259                           
 10260                           ; BSR set to: 0
 10261                           ;ST7540.c: 98: SSP1STATbits.CKE = 1;
 10262  004434  8C94               	bsf	3988,6,c	;volatile
 10263                           
 10264                           ; BSR set to: 0
 10265                           ;ST7540.c: 99: SSP1CON1bits.SSPM = 0b0101;
 10266  004436  5095               	movf	3989,w,c	;volatile
 10267  004438  0BF0               	andlw	-16
 10268  00443A  0905               	iorlw	5
 10269  00443C  6E95               	movwf	3989,c	;volatile
 10270                           
 10271                           ; BSR set to: 0
 10272                           ;ST7540.c: 101: WriteConfigST7540(frameDataTXUS, configDataTXUS);
 10273  00443E  C070  F065         	movff	InitST7540@frameDataTXUS,WriteConfigST7540@frameDataUS
 10274  004442  C071  F066         	movff	InitST7540@frameDataTXUS+1,WriteConfigST7540@frameDataUS+1
 10275  004446  C072  F067         	movff	InitST7540@frameDataTXUS+2,WriteConfigST7540@frameDataUS+2
 10276  00444A  C073  F068         	movff	InitST7540@configDataTXUS,WriteConfigST7540@configDataUS
 10277  00444E  C074  F069         	movff	InitST7540@configDataTXUS+1,WriteConfigST7540@configDataUS+1
 10278  004452  C075  F06A         	movff	InitST7540@configDataTXUS+2,WriteConfigST7540@configDataUS+2
 10279  004456  EC5B  F02D         	call	_WriteConfigST7540	;wreg free
 10280                           
 10281                           ;ST7540.c: 102: WriteConfigST7540(frameDataTXUS, configDataTXUS);
 10282  00445A  C070  F065         	movff	InitST7540@frameDataTXUS,WriteConfigST7540@frameDataUS
 10283  00445E  C071  F066         	movff	InitST7540@frameDataTXUS+1,WriteConfigST7540@frameDataUS+1
 10284  004462  C072  F067         	movff	InitST7540@frameDataTXUS+2,WriteConfigST7540@frameDataUS+2
 10285  004466  C073  F068         	movff	InitST7540@configDataTXUS,WriteConfigST7540@configDataUS
 10286  00446A  C074  F069         	movff	InitST7540@configDataTXUS+1,WriteConfigST7540@configDataUS+1
 10287  00446E  C075  F06A         	movff	InitST7540@configDataTXUS+2,WriteConfigST7540@configDataUS+2
 10288  004472  EC5B  F02D         	call	_WriteConfigST7540	;wreg free
 10289                           
 10290                           ;ST7540.c: 103: ReadConfigST7540(&frameDataRXUS, &configDataRXUS);
 10291  004476  0E76               	movlw	low InitST7540@frameDataRXUS
 10292  004478  0100               	movlb	0	; () banked
 10293  00447A  6F60               	movwf	ReadConfigST7540@frameDataUS& (0+255),b
 10294  00447C  0E00               	movlw	high InitST7540@frameDataRXUS
 10295  00447E  0100               	movlb	0	; () banked
 10296  004480  6F61               	movwf	(ReadConfigST7540@frameDataUS+1)& (0+255),b
 10297  004482  0E79               	movlw	low InitST7540@configDataRXUS
 10298  004484  0100               	movlb	0	; () banked
 10299  004486  6F62               	movwf	ReadConfigST7540@configDataUS& (0+255),b
 10300  004488  0E00               	movlw	high InitST7540@configDataRXUS
 10301  00448A  0100               	movlb	0	; () banked
 10302  00448C  6F63               	movwf	(ReadConfigST7540@configDataUS+1)& (0+255),b
 10303  00448E  EC3B  F01F         	call	_ReadConfigST7540	;wreg free
 10304                           
 10305                           ;ST7540.c: 104: if((frameDataTXUS != frameDataRXUS) && (configDataTXUS != configDataRXUS
      +                          ))
 10306  004492  0100               	movlb	0	; () banked
 10307  004494  5176               	movf	InitST7540@frameDataRXUS& (0+255),w,b
 10308  004496  0100               	movlb	0	; () banked
 10309  004498  1970               	xorwf	InitST7540@frameDataTXUS& (0+255),w,b
 10310  00449A  E10B               	bnz	u9880
 10311  00449C  0100               	movlb	0	; () banked
 10312  00449E  5177               	movf	(InitST7540@frameDataRXUS+1)& (0+255),w,b
 10313  0044A0  0100               	movlb	0	; () banked
 10314  0044A2  1971               	xorwf	(InitST7540@frameDataTXUS+1)& (0+255),w,b
 10315  0044A4  E106               	bnz	u9880
 10316  0044A6  0100               	movlb	0	; () banked
 10317  0044A8  5178               	movf	(InitST7540@frameDataRXUS+2)& (0+255),w,b
 10318  0044AA  0100               	movlb	0	; () banked
 10319  0044AC  1972               	xorwf	(InitST7540@frameDataTXUS+2)& (0+255),w,b
 10320  0044AE  B4D8               	btfsc	status,2,c
 10321  0044B0  D012               	goto	l13732
 10322  0044B2                     u9880:
 10323                           
 10324                           ; BSR set to: 0
 10325  0044B2  0100               	movlb	0	; () banked
 10326  0044B4  5179               	movf	InitST7540@configDataRXUS& (0+255),w,b
 10327  0044B6  0100               	movlb	0	; () banked
 10328  0044B8  1973               	xorwf	InitST7540@configDataTXUS& (0+255),w,b
 10329  0044BA  E10B               	bnz	u9890
 10330  0044BC  0100               	movlb	0	; () banked
 10331  0044BE  517A               	movf	(InitST7540@configDataRXUS+1)& (0+255),w,b
 10332  0044C0  0100               	movlb	0	; () banked
 10333  0044C2  1974               	xorwf	(InitST7540@configDataTXUS+1)& (0+255),w,b
 10334  0044C4  E106               	bnz	u9890
 10335  0044C6  0100               	movlb	0	; () banked
 10336  0044C8  517B               	movf	(InitST7540@configDataRXUS+2)& (0+255),w,b
 10337  0044CA  0100               	movlb	0	; () banked
 10338  0044CC  1975               	xorwf	(InitST7540@configDataTXUS+2)& (0+255),w,b
 10339  0044CE  B4D8               	btfsc	status,2,c
 10340  0044D0  D002               	goto	l13732
 10341  0044D2                     u9890:
 10342                           
 10343                           ; BSR set to: 0
 10344                           ;ST7540.c: 105: return 0;
 10345  0044D2  0E00               	movlw	0
 10346                           
 10347                           ; BSR set to: 0
 10348  0044D4  0012               	return	
 10349  0044D6                     l13732:
 10350                           
 10351                           ; BSR set to: 0
 10352                           ;ST7540.c: 107: initST7540Interrupts();
 10353  0044D6  ECB7  F03C         	call	_initST7540Interrupts	;wreg free
 10354                           
 10355                           ;ST7540.c: 109: return 1;
 10356  0044DA  0E01               	movlw	1
 10357  0044DC  0012               	return	
 10358  0044DE                     __end_of_InitST7540:
 10359                           	opt stack 0
 10360                           tblptru	equ	0xFF8
 10361                           tblptrh	equ	0xFF7
 10362                           tblptrl	equ	0xFF6
 10363                           tablat	equ	0xFF5
 10364                           prodh	equ	0xFF4
 10365                           prodl	equ	0xFF3
 10366                           intcon	equ	0xFF2
 10367                           postinc0	equ	0xFEE
 10368                           wreg	equ	0xFE8
 10369                           indf1	equ	0xFE7
 10370                           postinc1	equ	0xFE6
 10371                           postdec1	equ	0xFE5
 10372                           fsr1h	equ	0xFE2
 10373                           fsr1l	equ	0xFE1
 10374                           indf2	equ	0xFDF
 10375                           postinc2	equ	0xFDE
 10376                           postdec2	equ	0xFDD
 10377                           fsr2h	equ	0xFDA
 10378                           fsr2l	equ	0xFD9
 10379                           status	equ	0xFD8
 10380                           
 10381 ;; *************** function _initST7540Interrupts *****************
 10382 ;; Defined at:
 10383 ;;		line 364 in file "ST7540.c"
 10384 ;; Parameters:    Size  Location     Type
 10385 ;;		None
 10386 ;; Auto vars:     Size  Location     Type
 10387 ;;		None
 10388 ;; Return value:  Size  Location     Type
 10389 ;;                  1    wreg      void 
 10390 ;; Registers used:
 10391 ;;		None
 10392 ;; Tracked objects:
 10393 ;;		On entry : 0/0
 10394 ;;		On exit  : 0/0
 10395 ;;		Unchanged: 0/0
 10396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10401 ;;Total ram usage:        0 bytes
 10402 ;; Hardware stack levels used:    1
 10403 ;; Hardware stack levels required when called:    8
 10404 ;; This function calls:
 10405 ;;		Nothing
 10406 ;; This function is called by:
 10407 ;;		_InitST7540
 10408 ;; This function uses a non-reentrant model
 10409 ;;
 10410                           
 10411                           	psect	text44
 10412  00796E                     __ptext44:
 10413                           	opt stack 0
 10414  00796E                     _initST7540Interrupts:
 10415                           	opt stack 19
 10416                           
 10417                           ;ST7540.c: 365: INTCONbits.INT0EDG = 0;
 10418                           
 10419                           ;incstack = 0
 10420  00796E  90F2               	bcf	intcon,0,c	;volatile
 10421                           
 10422                           ;ST7540.c: 366: PIE0bits.INT0IE = 1;
 10423  007970  010E               	movlb	14	; () banked
 10424  007972  8129               	bsf	41,0,b	;volatile
 10425                           
 10426                           ;ST7540.c: 367: PIR0bits.INT0IF = 0;
 10427  007974  010E               	movlb	14	; () banked
 10428  007976  9133               	bcf	51,0,b	;volatile
 10429                           
 10430                           ;ST7540.c: 369: PIE3bits.SSP1IE = 1;
 10431  007978  010E               	movlb	14	; () banked
 10432  00797A  812C               	bsf	44,0,b	;volatile
 10433                           
 10434                           ;ST7540.c: 370: PIR3bits.SSP1IF = 0;
 10435  00797C  010E               	movlb	14	; () banked
 10436  00797E  9136               	bcf	54,0,b	;volatile
 10437                           
 10438                           ;ST7540.c: 371: IPR3bits.SSP1IP = 1;
 10439  007980  010E               	movlb	14	; () banked
 10440  007982  8122               	bsf	34,0,b	;volatile
 10441                           
 10442                           ; BSR set to: 14
 10443  007984  0012               	return		;funcret
 10444  007986                     __end_of_initST7540Interrupts:
 10445                           	opt stack 0
 10446                           tblptru	equ	0xFF8
 10447                           tblptrh	equ	0xFF7
 10448                           tblptrl	equ	0xFF6
 10449                           tablat	equ	0xFF5
 10450                           prodh	equ	0xFF4
 10451                           prodl	equ	0xFF3
 10452                           intcon	equ	0xFF2
 10453                           postinc0	equ	0xFEE
 10454                           wreg	equ	0xFE8
 10455                           indf1	equ	0xFE7
 10456                           postinc1	equ	0xFE6
 10457                           postdec1	equ	0xFE5
 10458                           fsr1h	equ	0xFE2
 10459                           fsr1l	equ	0xFE1
 10460                           indf2	equ	0xFDF
 10461                           postinc2	equ	0xFDE
 10462                           postdec2	equ	0xFDD
 10463                           fsr2h	equ	0xFDA
 10464                           fsr2l	equ	0xFD9
 10465                           status	equ	0xFD8
 10466                           
 10467 ;; *************** function _WriteConfigST7540 *****************
 10468 ;; Defined at:
 10469 ;;		line 112 in file "ST7540.c"
 10470 ;; Parameters:    Size  Location     Type
 10471 ;;  frameDataUS     3    5[BANK0 ] unsigned um
 10472 ;;  configDataUS    3    8[BANK0 ] unsigned um
 10473 ;; Auto vars:     Size  Location     Type
 10474 ;;  bitsSentUC      1   15[BANK0 ] unsigned char 
 10475 ;;  discardUC       1   14[BANK0 ] unsigned char 
 10476 ;; Return value:  Size  Location     Type
 10477 ;;                  1    wreg      void 
 10478 ;; Registers used:
 10479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10480 ;; Tracked objects:
 10481 ;;		On entry : 0/0
 10482 ;;		On exit  : 0/0
 10483 ;;		Unchanged: 0/0
 10484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10485 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10486 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10487 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10488 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10489 ;;Total ram usage:       11 bytes
 10490 ;; Hardware stack levels used:    1
 10491 ;; Hardware stack levels required when called:   10
 10492 ;; This function calls:
 10493 ;;		__delay_ms
 10494 ;; This function is called by:
 10495 ;;		_InitST7540
 10496 ;; This function uses a non-reentrant model
 10497 ;;
 10498                           
 10499                           	psect	text45
 10500  005AB6                     __ptext45:
 10501                           	opt stack 0
 10502  005AB6                     _WriteConfigST7540:
 10503                           	opt stack 17
 10504                           
 10505                           ;ST7540.c: 113: unsigned char discardUC;
 10506                           ;ST7540.c: 114: unsigned char bitsSentUC;
 10507                           ;ST7540.c: 116: bufferTXST7540UCA[0] = (frameDataUS & 0b111111110000000000000000) >> 16;
 10508                           
 10509                           ; BSR set to: 14
 10510                           ;incstack = 0
 10511  005AB6  C067  F200         	movff	WriteConfigST7540@frameDataUS+2,_bufferTXST7540UCA
 10512                           
 10513                           ;ST7540.c: 117: bufferTXST7540UCA[1] = (frameDataUS & 0b000000001111111100000000) >> 8;
 10514  005ABA  C065  F06B         	movff	WriteConfigST7540@frameDataUS,??_WriteConfigST7540
 10515  005ABE  C066  F06C         	movff	WriteConfigST7540@frameDataUS+1,??_WriteConfigST7540+1
 10516  005AC2  C067  F06D         	movff	WriteConfigST7540@frameDataUS+2,??_WriteConfigST7540+2
 10517  005AC6  C06C  F06B         	movff	??_WriteConfigST7540+1,??_WriteConfigST7540
 10518  005ACA  C06D  F06C         	movff	??_WriteConfigST7540+2,??_WriteConfigST7540+1
 10519  005ACE  0100               	movlb	0	; () banked
 10520  005AD0  6B6D               	clrf	(??_WriteConfigST7540+2)& (0+255),b
 10521  005AD2  0100               	movlb	0	; () banked
 10522  005AD4  516B               	movf	??_WriteConfigST7540& (0+255),w,b
 10523  005AD6  0102               	movlb	2	; () banked
 10524  005AD8  6F01               	movwf	(_bufferTXST7540UCA+1)& (0+255),b
 10525                           
 10526                           ; BSR set to: 2
 10527                           ;ST7540.c: 118: bufferTXST7540UCA[2] = frameDataUS & 0b000000000000000011111111;
 10528  005ADA  C065  F202         	movff	WriteConfigST7540@frameDataUS,_bufferTXST7540UCA+2
 10529                           
 10530                           ; BSR set to: 2
 10531                           ;ST7540.c: 119: bufferTXST7540UCA[3] = (configDataUS & 0b111111110000000000000000) >> 16
      +                          ;
 10532  005ADE  C06A  F203         	movff	WriteConfigST7540@configDataUS+2,_bufferTXST7540UCA+3
 10533                           
 10534                           ;ST7540.c: 120: bufferTXST7540UCA[4] = (configDataUS & 0b000000001111111100000000) >> 8;
 10535  005AE2  C068  F06B         	movff	WriteConfigST7540@configDataUS,??_WriteConfigST7540
 10536  005AE6  C069  F06C         	movff	WriteConfigST7540@configDataUS+1,??_WriteConfigST7540+1
 10537  005AEA  C06A  F06D         	movff	WriteConfigST7540@configDataUS+2,??_WriteConfigST7540+2
 10538  005AEE  C06C  F06B         	movff	??_WriteConfigST7540+1,??_WriteConfigST7540
 10539  005AF2  C06D  F06C         	movff	??_WriteConfigST7540+2,??_WriteConfigST7540+1
 10540  005AF6  0100               	movlb	0	; () banked
 10541  005AF8  6B6D               	clrf	(??_WriteConfigST7540+2)& (0+255),b
 10542  005AFA  0100               	movlb	0	; () banked
 10543  005AFC  516B               	movf	??_WriteConfigST7540& (0+255),w,b
 10544  005AFE  0102               	movlb	2	; () banked
 10545  005B00  6F04               	movwf	(_bufferTXST7540UCA+4)& (0+255),b
 10546                           
 10547                           ; BSR set to: 2
 10548                           ;ST7540.c: 121: bufferTXST7540UCA[5] = configDataUS & 0b000000000000000011111111;
 10549  005B02  C068  F205         	movff	WriteConfigST7540@configDataUS,_bufferTXST7540UCA+5
 10550                           
 10551                           ; BSR set to: 2
 10552                           ;ST7540.c: 123: LATCbits.LATC1 = 1;
 10553  005B06  827B               	bsf	3963,1,c	;volatile
 10554                           
 10555                           ; BSR set to: 2
 10556                           ;ST7540.c: 124: LATCbits.LATC6 = 0;
 10557  005B08  9C7B               	bcf	3963,6,c	;volatile
 10558  005B0A                     l705:
 10559  005B0A  B68B               	btfsc	3979,3,c	;volatile
 10560  005B0C  D7FE               	goto	l705
 10561                           
 10562                           ;ST7540.c: 126: SSP1CON1bits.SSPEN = 1;
 10563  005B0E  8A95               	bsf	3989,5,c	;volatile
 10564                           
 10565                           ;ST7540.c: 128: for(bitsSentUC = 0; bitsSentUC < 6; bitsSentUC++){
 10566  005B10  0E00               	movlw	0
 10567  005B12  0100               	movlb	0	; () banked
 10568  005B14  6F6F               	movwf	WriteConfigST7540@bitsSentUC& (0+255),b
 10569  005B16                     l13254:
 10570                           
 10571                           ; BSR set to: 0
 10572  005B16  0E05               	movlw	5
 10573  005B18  0100               	movlb	0	; () banked
 10574  005B1A  656F               	cpfsgt	WriteConfigST7540@bitsSentUC& (0+255),b
 10575  005B1C  D001               	goto	l708
 10576  005B1E  D012               	goto	l709
 10577  005B20                     l708:
 10578                           
 10579                           ; BSR set to: 0
 10580                           ;ST7540.c: 129: discardUC = SSP1BUF;
 10581  005B20  CF91 F06E          	movff	3985,WriteConfigST7540@discardUC	;volatile
 10582                           
 10583                           ; BSR set to: 0
 10584                           ;ST7540.c: 130: SSP1BUF = bufferTXST7540UCA[bitsSentUC];
 10585  005B24  0100               	movlb	0	; () banked
 10586  005B26  516F               	movf	WriteConfigST7540@bitsSentUC& (0+255),w,b
 10587  005B28  0D01               	mullw	1
 10588  005B2A  0E00               	movlw	low _bufferTXST7540UCA
 10589  005B2C  24F3               	addwf	prodl,w,c
 10590  005B2E  6ED9               	movwf	fsr2l,c
 10591  005B30  0E02               	movlw	high _bufferTXST7540UCA
 10592  005B32  20F4               	addwfc	prodh,w,c
 10593  005B34  6EDA               	movwf	fsr2h,c
 10594  005B36  50DF               	movf	indf2,w,c
 10595  005B38  6E91               	movwf	3985,c	;volatile
 10596  005B3A                     l710:
 10597  005B3A  A094               	btfss	3988,0,c	;volatile
 10598  005B3C  D7FE               	goto	l710
 10599  005B3E  0100               	movlb	0	; () banked
 10600  005B40  2B6F               	incf	WriteConfigST7540@bitsSentUC& (0+255),f,b
 10601  005B42  D7E9               	goto	l13254
 10602  005B44                     l709:
 10603                           
 10604                           ; BSR set to: 0
 10605                           ;ST7540.c: 132: }
 10606                           ;ST7540.c: 134: LATCbits.LATC1 = 0;
 10607  005B44  927B               	bcf	3963,1,c	;volatile
 10608                           
 10609                           ;ST7540.c: 135: LATCbits.LATC6 = 1;
 10610  005B46  8C7B               	bsf	3963,6,c	;volatile
 10611                           
 10612                           ;ST7540.c: 136: SSP1CON1bits.SSPEN = 0;
 10613  005B48  9A95               	bcf	3989,5,c	;volatile
 10614                           
 10615                           ; BSR set to: 0
 10616                           ;ST7540.c: 137: _delay_ms(2);
 10617  005B4A  0E00               	movlw	0
 10618  005B4C  0100               	movlb	0	; () banked
 10619  005B4E  6F62               	movwf	(__delay_ms@delay+1)& (0+255),b
 10620  005B50  0E02               	movlw	2
 10621  005B52  6F61               	movwf	__delay_ms@delay& (0+255),b
 10622  005B54  EC02  F037         	call	__delay_ms	;wreg free
 10623  005B58  0012               	return		;funcret
 10624  005B5A                     __end_of_WriteConfigST7540:
 10625                           	opt stack 0
 10626                           tblptru	equ	0xFF8
 10627                           tblptrh	equ	0xFF7
 10628                           tblptrl	equ	0xFF6
 10629                           tablat	equ	0xFF5
 10630                           prodh	equ	0xFF4
 10631                           prodl	equ	0xFF3
 10632                           intcon	equ	0xFF2
 10633                           postinc0	equ	0xFEE
 10634                           wreg	equ	0xFE8
 10635                           indf1	equ	0xFE7
 10636                           postinc1	equ	0xFE6
 10637                           postdec1	equ	0xFE5
 10638                           fsr1h	equ	0xFE2
 10639                           fsr1l	equ	0xFE1
 10640                           indf2	equ	0xFDF
 10641                           postinc2	equ	0xFDE
 10642                           postdec2	equ	0xFDD
 10643                           fsr2h	equ	0xFDA
 10644                           fsr2l	equ	0xFD9
 10645                           status	equ	0xFD8
 10646                           
 10647 ;; *************** function _ReadConfigST7540 *****************
 10648 ;; Defined at:
 10649 ;;		line 140 in file "ST7540.c"
 10650 ;; Parameters:    Size  Location     Type
 10651 ;;  frameDataUS     2    0[BANK0 ] PTR unsigned um
 10652 ;;		 -> InitST7540@frameDataRXUS(3), 
 10653 ;;  configDataUS    2    2[BANK0 ] PTR unsigned um
 10654 ;;		 -> InitST7540@configDataRXUS(3), 
 10655 ;; Auto vars:     Size  Location     Type
 10656 ;;  bitsReceived    1    8[BANK0 ] unsigned char 
 10657 ;;  discardUC       1    7[BANK0 ] unsigned char 
 10658 ;; Return value:  Size  Location     Type
 10659 ;;                  1    wreg      void 
 10660 ;; Registers used:
 10661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10662 ;; Tracked objects:
 10663 ;;		On entry : 0/0
 10664 ;;		On exit  : 0/0
 10665 ;;		Unchanged: 0/0
 10666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10667 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10668 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10669 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10670 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10671 ;;Total ram usage:        9 bytes
 10672 ;; Hardware stack levels used:    1
 10673 ;; Hardware stack levels required when called:    8
 10674 ;; This function calls:
 10675 ;;		Nothing
 10676 ;; This function is called by:
 10677 ;;		_InitST7540
 10678 ;; This function uses a non-reentrant model
 10679 ;;
 10680                           
 10681                           	psect	text46
 10682  003E76                     __ptext46:
 10683                           	opt stack 0
 10684  003E76                     _ReadConfigST7540:
 10685                           	opt stack 19
 10686                           
 10687                           ;ST7540.c: 141: unsigned char bitsReceivedUC;
 10688                           ;ST7540.c: 142: unsigned char discardUC;
 10689                           ;ST7540.c: 144: LATCbits.LATC1 = 1;
 10690                           
 10691                           ;incstack = 0
 10692  003E76  827B               	bsf	3963,1,c	;volatile
 10693                           
 10694                           ;ST7540.c: 145: LATCbits.LATC6 = 1;
 10695  003E78  8C7B               	bsf	3963,6,c	;volatile
 10696  003E7A                     l716:
 10697  003E7A  B68B               	btfsc	3979,3,c	;volatile
 10698  003E7C  D7FE               	goto	l716
 10699                           
 10700                           ;ST7540.c: 147: SSP1CON1bits.SSPEN = 1;
 10701  003E7E  8A95               	bsf	3989,5,c	;volatile
 10702                           
 10703                           ;ST7540.c: 149: discardUC = SSP1BUF;
 10704  003E80  CF91 F067          	movff	3985,ReadConfigST7540@discardUC	;volatile
 10705                           
 10706                           ;ST7540.c: 150: SSP1BUF = 0;
 10707  003E84  0E00               	movlw	0
 10708  003E86  6E91               	movwf	3985,c	;volatile
 10709                           
 10710                           ;ST7540.c: 151: for(bitsReceivedUC = 0; bitsReceivedUC < 6; bitsReceivedUC++){
 10711  003E88  0E00               	movlw	0
 10712  003E8A  0100               	movlb	0	; () banked
 10713  003E8C  6F68               	movwf	ReadConfigST7540@bitsReceivedUC& (0+255),b
 10714  003E8E                     l13270:
 10715                           
 10716                           ; BSR set to: 0
 10717  003E8E  0E05               	movlw	5
 10718  003E90  0100               	movlb	0	; () banked
 10719  003E92  6568               	cpfsgt	ReadConfigST7540@bitsReceivedUC& (0+255),b
 10720  003E94  D001               	goto	l721
 10721  003E96  D012               	goto	l720
 10722  003E98                     l721:
 10723  003E98  A094               	btfss	3988,0,c	;volatile
 10724  003E9A  D7FE               	goto	l721
 10725                           
 10726                           ;ST7540.c: 153: bufferRXST7540UCA[bitsReceivedUC] = SSP1BUF;
 10727  003E9C  0100               	movlb	0	; () banked
 10728  003E9E  5168               	movf	ReadConfigST7540@bitsReceivedUC& (0+255),w,b
 10729  003EA0  0D01               	mullw	1
 10730  003EA2  0E4F               	movlw	low _bufferRXST7540UCA
 10731  003EA4  24F3               	addwf	prodl,w,c
 10732  003EA6  6ED9               	movwf	fsr2l,c
 10733  003EA8  0E02               	movlw	high _bufferRXST7540UCA
 10734  003EAA  20F4               	addwfc	prodh,w,c
 10735  003EAC  6EDA               	movwf	fsr2h,c
 10736  003EAE  CF91 FFDF          	movff	3985,indf2	;volatile
 10737                           
 10738                           ; BSR set to: 0
 10739                           ;ST7540.c: 154: SSP1BUF = 0;
 10740  003EB2  0E00               	movlw	0
 10741  003EB4  6E91               	movwf	3985,c	;volatile
 10742                           
 10743                           ; BSR set to: 0
 10744  003EB6  0100               	movlb	0	; () banked
 10745  003EB8  2B68               	incf	ReadConfigST7540@bitsReceivedUC& (0+255),f,b
 10746  003EBA  D7E9               	goto	l13270
 10747  003EBC                     l720:
 10748                           
 10749                           ; BSR set to: 0
 10750                           ;ST7540.c: 155: }
 10751                           ;ST7540.c: 157: LATCbits.LATC1 = 0;
 10752  003EBC  927B               	bcf	3963,1,c	;volatile
 10753                           
 10754                           ;ST7540.c: 158: SSP1CON1bits.SSPEN = 0;
 10755  003EBE  9A95               	bcf	3989,5,c	;volatile
 10756                           
 10757                           ; BSR set to: 0
 10758                           ;ST7540.c: 160: *frameDataUS |= ((unsigned long short) bufferRXST7540UCA[0] << 16);
 10759  003EC0  0102               	movlb	2	; () banked
 10760  003EC2  514F               	movf	_bufferRXST7540UCA& (0+255),w,b
 10761  003EC4  0100               	movlb	0	; () banked
 10762  003EC6  6F66               	movwf	(??_ReadConfigST7540+2)& (0+255),b
 10763  003EC8  6B65               	clrf	(??_ReadConfigST7540+1)& (0+255),b
 10764  003ECA  6B64               	clrf	??_ReadConfigST7540& (0+255),b
 10765  003ECC  C060  FFD9         	movff	ReadConfigST7540@frameDataUS,fsr2l
 10766  003ED0  C061  FFDA         	movff	ReadConfigST7540@frameDataUS+1,fsr2h
 10767  003ED4  0100               	movlb	0	; () banked
 10768  003ED6  5164               	movf	??_ReadConfigST7540& (0+255),w,b
 10769  003ED8  12DE               	iorwf	postinc2,f,c
 10770  003EDA  5165               	movf	(??_ReadConfigST7540+1)& (0+255),w,b
 10771  003EDC  12DE               	iorwf	postinc2,f,c
 10772  003EDE  5166               	movf	(??_ReadConfigST7540+2)& (0+255),w,b
 10773  003EE0  12DE               	iorwf	postinc2,f,c
 10774                           
 10775                           ; BSR set to: 0
 10776                           ;ST7540.c: 161: *frameDataUS |= ((unsigned long short) bufferRXST7540UCA[1] << 8);
 10777  003EE2  0102               	movlb	2	; () banked
 10778  003EE4  5150               	movf	(_bufferRXST7540UCA+1)& (0+255),w,b
 10779  003EE6  0100               	movlb	0	; () banked
 10780  003EE8  6F64               	movwf	??_ReadConfigST7540& (0+255),b
 10781  003EEA  6B65               	clrf	(??_ReadConfigST7540+1)& (0+255),b
 10782  003EEC  6B66               	clrf	(??_ReadConfigST7540+2)& (0+255),b
 10783  003EEE  C065  F066         	movff	??_ReadConfigST7540+1,??_ReadConfigST7540+2
 10784  003EF2  C064  F065         	movff	??_ReadConfigST7540,??_ReadConfigST7540+1
 10785  003EF6  0100               	movlb	0	; () banked
 10786  003EF8  6B64               	clrf	??_ReadConfigST7540& (0+255),b
 10787  003EFA  C060  FFD9         	movff	ReadConfigST7540@frameDataUS,fsr2l
 10788  003EFE  C061  FFDA         	movff	ReadConfigST7540@frameDataUS+1,fsr2h
 10789  003F02  0100               	movlb	0	; () banked
 10790  003F04  5164               	movf	??_ReadConfigST7540& (0+255),w,b
 10791  003F06  12DE               	iorwf	postinc2,f,c
 10792  003F08  5165               	movf	(??_ReadConfigST7540+1)& (0+255),w,b
 10793  003F0A  12DE               	iorwf	postinc2,f,c
 10794  003F0C  5166               	movf	(??_ReadConfigST7540+2)& (0+255),w,b
 10795  003F0E  12DE               	iorwf	postinc2,f,c
 10796                           
 10797                           ; BSR set to: 0
 10798                           ;ST7540.c: 162: *frameDataUS |= bufferRXST7540UCA[2];
 10799  003F10  0102               	movlb	2	; () banked
 10800  003F12  5151               	movf	(_bufferRXST7540UCA+2)& (0+255),w,b
 10801  003F14  0100               	movlb	0	; () banked
 10802  003F16  6F64               	movwf	??_ReadConfigST7540& (0+255),b
 10803  003F18  6B65               	clrf	(??_ReadConfigST7540+1)& (0+255),b
 10804  003F1A  6B66               	clrf	(??_ReadConfigST7540+2)& (0+255),b
 10805  003F1C  C060  FFD9         	movff	ReadConfigST7540@frameDataUS,fsr2l
 10806  003F20  C061  FFDA         	movff	ReadConfigST7540@frameDataUS+1,fsr2h
 10807  003F24  0100               	movlb	0	; () banked
 10808  003F26  5164               	movf	??_ReadConfigST7540& (0+255),w,b
 10809  003F28  12DE               	iorwf	postinc2,f,c
 10810  003F2A  5165               	movf	(??_ReadConfigST7540+1)& (0+255),w,b
 10811  003F2C  12DE               	iorwf	postinc2,f,c
 10812  003F2E  5166               	movf	(??_ReadConfigST7540+2)& (0+255),w,b
 10813  003F30  12DE               	iorwf	postinc2,f,c
 10814                           
 10815                           ;ST7540.c: 163: *configDataUS |= ((unsigned long short) bufferRXST7540UCA[3] << 16);
 10816  003F32  0102               	movlb	2	; () banked
 10817  003F34  5152               	movf	(_bufferRXST7540UCA+3)& (0+255),w,b
 10818  003F36  0100               	movlb	0	; () banked
 10819  003F38  6F66               	movwf	(??_ReadConfigST7540+2)& (0+255),b
 10820  003F3A  6B65               	clrf	(??_ReadConfigST7540+1)& (0+255),b
 10821  003F3C  6B64               	clrf	??_ReadConfigST7540& (0+255),b
 10822  003F3E  C062  FFD9         	movff	ReadConfigST7540@configDataUS,fsr2l
 10823  003F42  C063  FFDA         	movff	ReadConfigST7540@configDataUS+1,fsr2h
 10824  003F46  0100               	movlb	0	; () banked
 10825  003F48  5164               	movf	??_ReadConfigST7540& (0+255),w,b
 10826  003F4A  12DE               	iorwf	postinc2,f,c
 10827  003F4C  5165               	movf	(??_ReadConfigST7540+1)& (0+255),w,b
 10828  003F4E  12DE               	iorwf	postinc2,f,c
 10829  003F50  5166               	movf	(??_ReadConfigST7540+2)& (0+255),w,b
 10830  003F52  12DE               	iorwf	postinc2,f,c
 10831                           
 10832                           ; BSR set to: 0
 10833                           ;ST7540.c: 164: *configDataUS |= ((unsigned long short) bufferRXST7540UCA[4] << 8);
 10834  003F54  0102               	movlb	2	; () banked
 10835  003F56  5153               	movf	(_bufferRXST7540UCA+4)& (0+255),w,b
 10836  003F58  0100               	movlb	0	; () banked
 10837  003F5A  6F64               	movwf	??_ReadConfigST7540& (0+255),b
 10838  003F5C  6B65               	clrf	(??_ReadConfigST7540+1)& (0+255),b
 10839  003F5E  6B66               	clrf	(??_ReadConfigST7540+2)& (0+255),b
 10840  003F60  C065  F066         	movff	??_ReadConfigST7540+1,??_ReadConfigST7540+2
 10841  003F64  C064  F065         	movff	??_ReadConfigST7540,??_ReadConfigST7540+1
 10842  003F68  0100               	movlb	0	; () banked
 10843  003F6A  6B64               	clrf	??_ReadConfigST7540& (0+255),b
 10844  003F6C  C062  FFD9         	movff	ReadConfigST7540@configDataUS,fsr2l
 10845  003F70  C063  FFDA         	movff	ReadConfigST7540@configDataUS+1,fsr2h
 10846  003F74  0100               	movlb	0	; () banked
 10847  003F76  5164               	movf	??_ReadConfigST7540& (0+255),w,b
 10848  003F78  12DE               	iorwf	postinc2,f,c
 10849  003F7A  5165               	movf	(??_ReadConfigST7540+1)& (0+255),w,b
 10850  003F7C  12DE               	iorwf	postinc2,f,c
 10851  003F7E  5166               	movf	(??_ReadConfigST7540+2)& (0+255),w,b
 10852  003F80  12DE               	iorwf	postinc2,f,c
 10853                           
 10854                           ; BSR set to: 0
 10855                           ;ST7540.c: 165: *configDataUS |= bufferRXST7540UCA[5];
 10856  003F82  0102               	movlb	2	; () banked
 10857  003F84  5154               	movf	(_bufferRXST7540UCA+5)& (0+255),w,b
 10858  003F86  0100               	movlb	0	; () banked
 10859  003F88  6F64               	movwf	??_ReadConfigST7540& (0+255),b
 10860  003F8A  6B65               	clrf	(??_ReadConfigST7540+1)& (0+255),b
 10861  003F8C  6B66               	clrf	(??_ReadConfigST7540+2)& (0+255),b
 10862  003F8E  C062  FFD9         	movff	ReadConfigST7540@configDataUS,fsr2l
 10863  003F92  C063  FFDA         	movff	ReadConfigST7540@configDataUS+1,fsr2h
 10864  003F96  0100               	movlb	0	; () banked
 10865  003F98  5164               	movf	??_ReadConfigST7540& (0+255),w,b
 10866  003F9A  12DE               	iorwf	postinc2,f,c
 10867  003F9C  5165               	movf	(??_ReadConfigST7540+1)& (0+255),w,b
 10868  003F9E  12DE               	iorwf	postinc2,f,c
 10869  003FA0  5166               	movf	(??_ReadConfigST7540+2)& (0+255),w,b
 10870  003FA2  12DE               	iorwf	postinc2,f,c
 10871                           
 10872                           ; BSR set to: 0
 10873  003FA4  0012               	return		;funcret
 10874  003FA6                     __end_of_ReadConfigST7540:
 10875                           	opt stack 0
 10876                           tblptru	equ	0xFF8
 10877                           tblptrh	equ	0xFF7
 10878                           tblptrl	equ	0xFF6
 10879                           tablat	equ	0xFF5
 10880                           prodh	equ	0xFF4
 10881                           prodl	equ	0xFF3
 10882                           intcon	equ	0xFF2
 10883                           postinc0	equ	0xFEE
 10884                           wreg	equ	0xFE8
 10885                           indf1	equ	0xFE7
 10886                           postinc1	equ	0xFE6
 10887                           postdec1	equ	0xFE5
 10888                           fsr1h	equ	0xFE2
 10889                           fsr1l	equ	0xFE1
 10890                           indf2	equ	0xFDF
 10891                           postinc2	equ	0xFDE
 10892                           postdec2	equ	0xFDD
 10893                           fsr2h	equ	0xFDA
 10894                           fsr2l	equ	0xFD9
 10895                           status	equ	0xFD8
 10896                           
 10897 ;; *************** function _InitST7540Pins *****************
 10898 ;; Defined at:
 10899 ;;		line 326 in file "ST7540.c"
 10900 ;; Parameters:    Size  Location     Type
 10901 ;;		None
 10902 ;; Auto vars:     Size  Location     Type
 10903 ;;		None
 10904 ;; Return value:  Size  Location     Type
 10905 ;;                  1    wreg      void 
 10906 ;; Registers used:
 10907 ;;		wreg, status,2, cstack
 10908 ;; Tracked objects:
 10909 ;;		On entry : 0/0
 10910 ;;		On exit  : 0/0
 10911 ;;		Unchanged: 0/0
 10912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10917 ;;Total ram usage:        0 bytes
 10918 ;; Hardware stack levels used:    1
 10919 ;; Hardware stack levels required when called:   10
 10920 ;; This function calls:
 10921 ;;		_initST7540PPS
 10922 ;; This function is called by:
 10923 ;;		_InitST7540
 10924 ;; This function uses a non-reentrant model
 10925 ;;
 10926                           
 10927                           	psect	text47
 10928  007584                     __ptext47:
 10929                           	opt stack 0
 10930  007584                     _InitST7540Pins:
 10931                           	opt stack 17
 10932                           
 10933                           ;ST7540.c: 328: initST7540PPS();
 10934                           
 10935                           ; BSR set to: 0
 10936                           ;incstack = 0
 10937  007584  ECD1  F03B         	call	_initST7540PPS	;wreg free
 10938                           
 10939                           ;ST7540.c: 330: TRISAbits.TRISA4 = 1;
 10940  007588  8881               	bsf	3969,4,c	;volatile
 10941                           
 10942                           ;ST7540.c: 331: ANSELAbits.ANSELA4 = 0;
 10943  00758A  010E               	movlb	14	; () banked
 10944  00758C  9992               	bcf	146,4,b	;volatile
 10945                           
 10946                           ; BSR set to: 14
 10947                           ;ST7540.c: 333: TRISCbits.TRISC1 = 0;
 10948  00758E  9283               	bcf	3971,1,c	;volatile
 10949                           
 10950                           ; BSR set to: 14
 10951                           ;ST7540.c: 334: LATCbits.LATC1 = 0;
 10952  007590  927B               	bcf	3963,1,c	;volatile
 10953                           
 10954                           ; BSR set to: 14
 10955                           ;ST7540.c: 336: TRISCbits.TRISC0 = 1;
 10956  007592  8083               	bsf	3971,0,c	;volatile
 10957                           
 10958                           ; BSR set to: 14
 10959                           ;ST7540.c: 338: TRISCbits.TRISC7 = 0;
 10960  007594  9E83               	bcf	3971,7,c	;volatile
 10961                           
 10962                           ; BSR set to: 14
 10963                           ;ST7540.c: 339: LATCbits.LATC7 = 0;
 10964  007596  9E7B               	bcf	3963,7,c	;volatile
 10965                           
 10966                           ; BSR set to: 14
 10967                           ;ST7540.c: 341: TRISCbits.TRISC6 = 0;
 10968  007598  9C83               	bcf	3971,6,c	;volatile
 10969                           
 10970                           ; BSR set to: 14
 10971                           ;ST7540.c: 342: LATCbits.LATC6 = 1;
 10972  00759A  8C7B               	bsf	3963,6,c	;volatile
 10973                           
 10974                           ; BSR set to: 14
 10975                           ;ST7540.c: 344: TRISCbits.TRISC2 = 1;
 10976  00759C  8483               	bsf	3971,2,c	;volatile
 10977                           
 10978                           ; BSR set to: 14
 10979                           ;ST7540.c: 346: TRISCbits.TRISC3 = 1;
 10980  00759E  8683               	bsf	3971,3,c	;volatile
 10981                           
 10982                           ; BSR set to: 14
 10983                           ;ST7540.c: 348: TRISAbits.TRISA5 = 1;
 10984  0075A0  8A81               	bsf	3969,5,c	;volatile
 10985                           
 10986                           ; BSR set to: 14
 10987                           ;ST7540.c: 349: ANSELAbits.ANSELA5 = 0;
 10988  0075A2  010E               	movlb	14	; () banked
 10989  0075A4  9B92               	bcf	146,5,b	;volatile
 10990                           
 10991                           ; BSR set to: 14
 10992                           ;ST7540.c: 351: TRISCbits.TRISC5 = 0;
 10993  0075A6  9A83               	bcf	3971,5,c	;volatile
 10994                           
 10995                           ; BSR set to: 14
 10996                           ;ST7540.c: 352: LATCbits.LATC5 = 0;
 10997  0075A8  9A7B               	bcf	3963,5,c	;volatile
 10998                           
 10999                           ; BSR set to: 14
 11000  0075AA  0012               	return		;funcret
 11001  0075AC                     __end_of_InitST7540Pins:
 11002                           	opt stack 0
 11003                           tblptru	equ	0xFF8
 11004                           tblptrh	equ	0xFF7
 11005                           tblptrl	equ	0xFF6
 11006                           tablat	equ	0xFF5
 11007                           prodh	equ	0xFF4
 11008                           prodl	equ	0xFF3
 11009                           intcon	equ	0xFF2
 11010                           postinc0	equ	0xFEE
 11011                           wreg	equ	0xFE8
 11012                           indf1	equ	0xFE7
 11013                           postinc1	equ	0xFE6
 11014                           postdec1	equ	0xFE5
 11015                           fsr1h	equ	0xFE2
 11016                           fsr1l	equ	0xFE1
 11017                           indf2	equ	0xFDF
 11018                           postinc2	equ	0xFDE
 11019                           postdec2	equ	0xFDD
 11020                           fsr2h	equ	0xFDA
 11021                           fsr2l	equ	0xFD9
 11022                           status	equ	0xFD8
 11023                           
 11024 ;; *************** function _initST7540PPS *****************
 11025 ;; Defined at:
 11026 ;;		line 356 in file "ST7540.c"
 11027 ;; Parameters:    Size  Location     Type
 11028 ;;		None
 11029 ;; Auto vars:     Size  Location     Type
 11030 ;;		None
 11031 ;; Return value:  Size  Location     Type
 11032 ;;                  1    wreg      void 
 11033 ;; Registers used:
 11034 ;;		wreg, status,2, cstack
 11035 ;; Tracked objects:
 11036 ;;		On entry : 0/0
 11037 ;;		On exit  : 0/0
 11038 ;;		Unchanged: 0/0
 11039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11044 ;;Total ram usage:        0 bytes
 11045 ;; Hardware stack levels used:    1
 11046 ;; Hardware stack levels required when called:    9
 11047 ;; This function calls:
 11048 ;;		_ppsLock
 11049 ;;		_ppsUnlock
 11050 ;; This function is called by:
 11051 ;;		_InitST7540Pins
 11052 ;; This function uses a non-reentrant model
 11053 ;;
 11054                           
 11055                           	psect	text48
 11056  0077A2                     __ptext48:
 11057                           	opt stack 0
 11058  0077A2                     _initST7540PPS:
 11059                           	opt stack 17
 11060                           
 11061                           ;ST7540.c: 357: ppsUnlock();
 11062                           
 11063                           ; BSR set to: 14
 11064                           ;incstack = 0
 11065  0077A2  ECDF  F03B         	call	_ppsUnlock	;wreg free
 11066                           
 11067                           ;ST7540.c: 358: INT0PPS = 0b00000101;
 11068  0077A6  0E05               	movlw	5
 11069  0077A8  010D               	movlb	13	; () banked
 11070  0077AA  6FF0               	movwf	240,b	;volatile
 11071                           
 11072                           ; BSR set to: 13
 11073                           ;ST7540.c: 359: SSP1DATPPS = 0b00010000;
 11074  0077AC  0E10               	movlw	16
 11075  0077AE  010E               	movlb	14	; () banked
 11076  0077B0  6F1A               	movwf	26,b	;volatile
 11077                           
 11078                           ; BSR set to: 14
 11079                           ;ST7540.c: 360: RC7PPS = 0x1A;
 11080  0077B2  0E1A               	movlw	26
 11081  0077B4  010E               	movlb	14	; () banked
 11082  0077B6  6F69               	movwf	105,b	;volatile
 11083                           
 11084                           ; BSR set to: 14
 11085                           ;ST7540.c: 361: ppsLock();
 11086  0077B8  ECED  F03B         	call	_ppsLock	;wreg free
 11087  0077BC  0012               	return		;funcret
 11088  0077BE                     __end_of_initST7540PPS:
 11089                           	opt stack 0
 11090                           tblptru	equ	0xFF8
 11091                           tblptrh	equ	0xFF7
 11092                           tblptrl	equ	0xFF6
 11093                           tablat	equ	0xFF5
 11094                           prodh	equ	0xFF4
 11095                           prodl	equ	0xFF3
 11096                           intcon	equ	0xFF2
 11097                           postinc0	equ	0xFEE
 11098                           wreg	equ	0xFE8
 11099                           indf1	equ	0xFE7
 11100                           postinc1	equ	0xFE6
 11101                           postdec1	equ	0xFE5
 11102                           fsr1h	equ	0xFE2
 11103                           fsr1l	equ	0xFE1
 11104                           indf2	equ	0xFDF
 11105                           postinc2	equ	0xFDE
 11106                           postdec2	equ	0xFDD
 11107                           fsr2h	equ	0xFDA
 11108                           fsr2l	equ	0xFD9
 11109                           status	equ	0xFD8
 11110                           
 11111 ;; *************** function _ppsUnlock *****************
 11112 ;; Defined at:
 11113 ;;		line 160 in file "peripherals.c"
 11114 ;; Parameters:    Size  Location     Type
 11115 ;;		None
 11116 ;; Auto vars:     Size  Location     Type
 11117 ;;		None
 11118 ;; Return value:  Size  Location     Type
 11119 ;;                  1    wreg      void 
 11120 ;; Registers used:
 11121 ;;		wreg, status,2
 11122 ;; Tracked objects:
 11123 ;;		On entry : 0/0
 11124 ;;		On exit  : 0/0
 11125 ;;		Unchanged: 0/0
 11126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11131 ;;Total ram usage:        0 bytes
 11132 ;; Hardware stack levels used:    1
 11133 ;; Hardware stack levels required when called:    8
 11134 ;; This function calls:
 11135 ;;		Nothing
 11136 ;; This function is called by:
 11137 ;;		_initST7540PPS
 11138 ;;		_initialiseTag
 11139 ;;		_initialiseBluetoothPins
 11140 ;; This function uses a non-reentrant model
 11141 ;;
 11142                           
 11143                           	psect	text49
 11144  0077BE                     __ptext49:
 11145                           	opt stack 0
 11146  0077BE                     _ppsUnlock:
 11147                           	opt stack 20
 11148                           
 11149                           ;peripherals.c: 161: INTCONbits.GIE = 0;
 11150                           
 11151                           ;incstack = 0
 11152  0077BE  9EF2               	bcf	intcon,7,c	;volatile
 11153                           
 11154                           ;peripherals.c: 162: PPSLOCK = 0x55;
 11155  0077C0  0E55               	movlw	85
 11156  0077C2  010D               	movlb	13	; () banked
 11157  0077C4  6FEF               	movwf	239,b	;volatile
 11158                           
 11159                           ; BSR set to: 13
 11160                           ;peripherals.c: 163: __nop();
 11161  0077C6  F000               	nop	
 11162                           
 11163                           ;peripherals.c: 164: __nop();
 11164  0077C8  F000               	nop	
 11165                           
 11166                           ;peripherals.c: 165: PPSLOCK = 0xAA;
 11167  0077CA  0EAA               	movlw	170
 11168  0077CC  010D               	movlb	13	; () banked
 11169  0077CE  6FEF               	movwf	239,b	;volatile
 11170                           
 11171                           ; BSR set to: 13
 11172                           ;peripherals.c: 166: __nop();
 11173  0077D0  F000               	nop	
 11174                           
 11175                           ;peripherals.c: 167: __nop();
 11176  0077D2  F000               	nop	
 11177                           
 11178                           ;peripherals.c: 168: PPSLOCKbits.PPSLOCKED = 0;
 11179  0077D4  010D               	movlb	13	; () banked
 11180  0077D6  91EF               	bcf	239,0,b	;volatile
 11181                           
 11182                           ; BSR set to: 13
 11183  0077D8  0012               	return		;funcret
 11184  0077DA                     __end_of_ppsUnlock:
 11185                           	opt stack 0
 11186                           tblptru	equ	0xFF8
 11187                           tblptrh	equ	0xFF7
 11188                           tblptrl	equ	0xFF6
 11189                           tablat	equ	0xFF5
 11190                           prodh	equ	0xFF4
 11191                           prodl	equ	0xFF3
 11192                           intcon	equ	0xFF2
 11193                           postinc0	equ	0xFEE
 11194                           wreg	equ	0xFE8
 11195                           indf1	equ	0xFE7
 11196                           postinc1	equ	0xFE6
 11197                           postdec1	equ	0xFE5
 11198                           fsr1h	equ	0xFE2
 11199                           fsr1l	equ	0xFE1
 11200                           indf2	equ	0xFDF
 11201                           postinc2	equ	0xFDE
 11202                           postdec2	equ	0xFDD
 11203                           fsr2h	equ	0xFDA
 11204                           fsr2l	equ	0xFD9
 11205                           status	equ	0xFD8
 11206                           
 11207 ;; *************** function _ppsLock *****************
 11208 ;; Defined at:
 11209 ;;		line 148 in file "peripherals.c"
 11210 ;; Parameters:    Size  Location     Type
 11211 ;;		None
 11212 ;; Auto vars:     Size  Location     Type
 11213 ;;		None
 11214 ;; Return value:  Size  Location     Type
 11215 ;;                  1    wreg      void 
 11216 ;; Registers used:
 11217 ;;		wreg, status,2
 11218 ;; Tracked objects:
 11219 ;;		On entry : 0/0
 11220 ;;		On exit  : 0/0
 11221 ;;		Unchanged: 0/0
 11222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11227 ;;Total ram usage:        0 bytes
 11228 ;; Hardware stack levels used:    1
 11229 ;; Hardware stack levels required when called:    8
 11230 ;; This function calls:
 11231 ;;		Nothing
 11232 ;; This function is called by:
 11233 ;;		_initST7540PPS
 11234 ;;		_initialiseTag
 11235 ;;		_initialiseBluetoothPins
 11236 ;; This function uses a non-reentrant model
 11237 ;;
 11238                           
 11239                           	psect	text50
 11240  0077DA                     __ptext50:
 11241                           	opt stack 0
 11242  0077DA                     _ppsLock:
 11243                           	opt stack 20
 11244                           
 11245                           ;peripherals.c: 149: INTCONbits.GIE = 0;
 11246                           
 11247                           ; BSR set to: 13
 11248                           ;incstack = 0
 11249  0077DA  9EF2               	bcf	intcon,7,c	;volatile
 11250                           
 11251                           ;peripherals.c: 150: PPSLOCK = 0x55;
 11252  0077DC  0E55               	movlw	85
 11253  0077DE  010D               	movlb	13	; () banked
 11254  0077E0  6FEF               	movwf	239,b	;volatile
 11255                           
 11256                           ; BSR set to: 13
 11257                           ;peripherals.c: 151: __nop();
 11258  0077E2  F000               	nop	
 11259                           
 11260                           ;peripherals.c: 152: __nop();
 11261  0077E4  F000               	nop	
 11262                           
 11263                           ;peripherals.c: 153: PPSLOCK = 0xAA;
 11264  0077E6  0EAA               	movlw	170
 11265  0077E8  010D               	movlb	13	; () banked
 11266  0077EA  6FEF               	movwf	239,b	;volatile
 11267                           
 11268                           ; BSR set to: 13
 11269                           ;peripherals.c: 154: __nop();
 11270  0077EC  F000               	nop	
 11271                           
 11272                           ;peripherals.c: 155: __nop();
 11273  0077EE  F000               	nop	
 11274                           
 11275                           ;peripherals.c: 156: PPSLOCKbits.PPSLOCKED = 1;
 11276  0077F0  010D               	movlb	13	; () banked
 11277  0077F2  81EF               	bsf	239,0,b	;volatile
 11278                           
 11279                           ; BSR set to: 13
 11280  0077F4  0012               	return		;funcret
 11281  0077F6                     __end_of_ppsLock:
 11282                           	opt stack 0
 11283                           tblptru	equ	0xFF8
 11284                           tblptrh	equ	0xFF7
 11285                           tblptrl	equ	0xFF6
 11286                           tablat	equ	0xFF5
 11287                           prodh	equ	0xFF4
 11288                           prodl	equ	0xFF3
 11289                           intcon	equ	0xFF2
 11290                           postinc0	equ	0xFEE
 11291                           wreg	equ	0xFE8
 11292                           indf1	equ	0xFE7
 11293                           postinc1	equ	0xFE6
 11294                           postdec1	equ	0xFE5
 11295                           fsr1h	equ	0xFE2
 11296                           fsr1l	equ	0xFE1
 11297                           indf2	equ	0xFDF
 11298                           postinc2	equ	0xFDE
 11299                           postdec2	equ	0xFDD
 11300                           fsr2h	equ	0xFDA
 11301                           fsr2l	equ	0xFD9
 11302                           status	equ	0xFD8
 11303                           
 11304 ;; *************** function _mainsSleep *****************
 11305 ;; Defined at:
 11306 ;;		line 83 in file "sleep.c"
 11307 ;; Parameters:    Size  Location     Type
 11308 ;;		None
 11309 ;; Auto vars:     Size  Location     Type
 11310 ;;		None
 11311 ;; Return value:  Size  Location     Type
 11312 ;;                  1    wreg      void 
 11313 ;; Registers used:
 11314 ;;		wreg, status,2, status,0, cstack
 11315 ;; Tracked objects:
 11316 ;;		On entry : 0/0
 11317 ;;		On exit  : 0/0
 11318 ;;		Unchanged: 0/0
 11319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11324 ;;Total ram usage:        0 bytes
 11325 ;; Hardware stack levels used:    1
 11326 ;; Hardware stack levels required when called:   10
 11327 ;; This function calls:
 11328 ;;		_Set_Line_Low
 11329 ;;		__delay_ms
 11330 ;;		_modemSleep
 11331 ;;		_setOffLed
 11332 ;;		_sleep12V
 11333 ;;		_sleepBluetooth
 11334 ;;		_tagSleep
 11335 ;;		_turnOffCableTest
 11336 ;; This function is called by:
 11337 ;;		_device
 11338 ;; This function uses a non-reentrant model
 11339 ;;
 11340                           
 11341                           	psect	text51
 11342  006C2C                     __ptext51:
 11343                           	opt stack 0
 11344  006C2C                     _mainsSleep:
 11345                           	opt stack 19
 11346                           
 11347                           ;sleep.c: 84: setOffLed();
 11348                           
 11349                           ; BSR set to: 13
 11350                           ;incstack = 0
 11351  006C2C  ECCE  F03D         	call	_setOffLed	;wreg free
 11352                           
 11353                           ;sleep.c: 85: sleepBluetooth();
 11354  006C30  ECE9  F03D         	call	_sleepBluetooth	;wreg free
 11355                           
 11356                           ;sleep.c: 86: sleep12V();
 11357  006C34  ECF4  F03D         	call	_sleep12V	;wreg free
 11358                           
 11359                           ;sleep.c: 87: _delay_ms(1000);
 11360  006C38  0E03               	movlw	3
 11361  006C3A  0100               	movlb	0	; () banked
 11362  006C3C  6F62               	movwf	(__delay_ms@delay+1)& (0+255),b
 11363  006C3E  0EE8               	movlw	232
 11364  006C40  6F61               	movwf	__delay_ms@delay& (0+255),b
 11365  006C42  EC02  F037         	call	__delay_ms	;wreg free
 11366                           
 11367                           ;sleep.c: 88: Set_Line_Low();
 11368  006C46  ECF6  F03D         	call	_Set_Line_Low	;wreg free
 11369                           
 11370                           ;sleep.c: 89: turnOffCableTest();
 11371  006C4A  ECF2  F03D         	call	_turnOffCableTest	;wreg free
 11372                           
 11373                           ;sleep.c: 90: tagSleep();
 11374  006C4E  EC5C  F03C         	call	_tagSleep	;wreg free
 11375                           
 11376                           ;sleep.c: 91: T2CONbits.T2ON = 0;
 11377  006C52  9EBD               	bcf	4029,7,c	;volatile
 11378                           
 11379                           ;sleep.c: 92: T4CONbits.T4ON = 0;
 11380  006C54  9EB7               	bcf	4023,7,c	;volatile
 11381                           
 11382                           ;sleep.c: 93: T8CONbits.T8ON = 0;
 11383  006C56  010F               	movlb	15	; () banked
 11384  006C58  9F2A               	bcf	42,7,b	;volatile
 11385                           
 11386                           ; BSR set to: 15
 11387                           ;sleep.c: 94: PIE0bits.TMR0IE = 0;
 11388  006C5A  010E               	movlb	14	; () banked
 11389  006C5C  9B29               	bcf	41,5,b	;volatile
 11390                           
 11391                           ; BSR set to: 14
 11392                           ;sleep.c: 95: PIE0bits.INT0IE = 0;
 11393  006C5E  010E               	movlb	14	; () banked
 11394  006C60  9129               	bcf	41,0,b	;volatile
 11395                           
 11396                           ; BSR set to: 14
 11397                           ;sleep.c: 96: modemSleep();
 11398  006C62  EC76  F03D         	call	_modemSleep	;wreg free
 11399                           
 11400                           ;sleep.c: 97: ADCON0bits.ADON = 0;
 11401  006C66  9E60               	bcf	3936,7,c	;volatile
 11402                           
 11403                           ;sleep.c: 98: FVRCONbits.FVREN = 0;
 11404  006C68  010E               	movlb	14	; () banked
 11405  006C6A  9FC4               	bcf	196,7,b	;volatile
 11406                           
 11407                           ; BSR set to: 14
 11408                           ;sleep.c: 99: INTCONbits.INT2EDG = 1;
 11409  006C6C  84F2               	bsf	intcon,2,c	;volatile
 11410                           
 11411                           ; BSR set to: 14
 11412                           ;sleep.c: 100: CPUDOZEbits.IDLEN = 0;
 11413  006C6E  010E               	movlb	14	; () banked
 11414  006C70  9F42               	bcf	66,7,b	;volatile
 11415                           
 11416                           ; BSR set to: 14
 11417                           ;sleep.c: 101: ABB_1.deviceState = 0;
 11418  006C72  0E00               	movlw	0
 11419  006C74  CFE8 F754          	movff	wreg,_ABB_1+916
 11420                           
 11421                           ; BSR set to: 14
 11422                           ;sleep.c: 102: WDTCON0bits.SEN = 0;
 11423  006C78  010E               	movlb	14	; () banked
 11424  006C7A  913D               	bcf	61,0,b	;volatile
 11425                           
 11426                           ; BSR set to: 14
 11427  006C7C  0012               	return		;funcret
 11428  006C7E                     __end_of_mainsSleep:
 11429                           	opt stack 0
 11430                           tblptru	equ	0xFF8
 11431                           tblptrh	equ	0xFF7
 11432                           tblptrl	equ	0xFF6
 11433                           tablat	equ	0xFF5
 11434                           prodh	equ	0xFF4
 11435                           prodl	equ	0xFF3
 11436                           intcon	equ	0xFF2
 11437                           postinc0	equ	0xFEE
 11438                           wreg	equ	0xFE8
 11439                           indf1	equ	0xFE7
 11440                           postinc1	equ	0xFE6
 11441                           postdec1	equ	0xFE5
 11442                           fsr1h	equ	0xFE2
 11443                           fsr1l	equ	0xFE1
 11444                           indf2	equ	0xFDF
 11445                           postinc2	equ	0xFDE
 11446                           postdec2	equ	0xFDD
 11447                           fsr2h	equ	0xFDA
 11448                           fsr2l	equ	0xFD9
 11449                           status	equ	0xFD8
 11450                           
 11451 ;; *************** function _turnOffCableTest *****************
 11452 ;; Defined at:
 11453 ;;		line 189 in file "readKeyCable.c"
 11454 ;; Parameters:    Size  Location     Type
 11455 ;;		None
 11456 ;; Auto vars:     Size  Location     Type
 11457 ;;		None
 11458 ;; Return value:  Size  Location     Type
 11459 ;;                  1    wreg      void 
 11460 ;; Registers used:
 11461 ;;		None
 11462 ;; Tracked objects:
 11463 ;;		On entry : 0/0
 11464 ;;		On exit  : 0/0
 11465 ;;		Unchanged: 0/0
 11466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11471 ;;Total ram usage:        0 bytes
 11472 ;; Hardware stack levels used:    1
 11473 ;; Hardware stack levels required when called:    8
 11474 ;; This function calls:
 11475 ;;		Nothing
 11476 ;; This function is called by:
 11477 ;;		_sleep
 11478 ;;		_mainsSleep
 11479 ;; This function uses a non-reentrant model
 11480 ;;
 11481                           
 11482                           	psect	text52
 11483  007BE4                     __ptext52:
 11484                           	opt stack 0
 11485  007BE4                     _turnOffCableTest:
 11486                           	opt stack 20
 11487                           
 11488                           ;readKeyCable.c: 190: LATEbits.LATE5 = 0;
 11489                           
 11490                           ; BSR set to: 14
 11491                           ;incstack = 0
 11492  007BE4  9A7D               	bcf	3965,5,c	;volatile
 11493  007BE6  0012               	return		;funcret
 11494  007BE8                     __end_of_turnOffCableTest:
 11495                           	opt stack 0
 11496                           tblptru	equ	0xFF8
 11497                           tblptrh	equ	0xFF7
 11498                           tblptrl	equ	0xFF6
 11499                           tablat	equ	0xFF5
 11500                           prodh	equ	0xFF4
 11501                           prodl	equ	0xFF3
 11502                           intcon	equ	0xFF2
 11503                           postinc0	equ	0xFEE
 11504                           wreg	equ	0xFE8
 11505                           indf1	equ	0xFE7
 11506                           postinc1	equ	0xFE6
 11507                           postdec1	equ	0xFE5
 11508                           fsr1h	equ	0xFE2
 11509                           fsr1l	equ	0xFE1
 11510                           indf2	equ	0xFDF
 11511                           postinc2	equ	0xFDE
 11512                           postdec2	equ	0xFDD
 11513                           fsr2h	equ	0xFDA
 11514                           fsr2l	equ	0xFD9
 11515                           status	equ	0xFD8
 11516                           
 11517 ;; *************** function _tagSleep *****************
 11518 ;; Defined at:
 11519 ;;		line 66 in file "tagRead.c"
 11520 ;; Parameters:    Size  Location     Type
 11521 ;;		None
 11522 ;; Auto vars:     Size  Location     Type
 11523 ;;		None
 11524 ;; Return value:  Size  Location     Type
 11525 ;;                  1    wreg      void 
 11526 ;; Registers used:
 11527 ;;		None
 11528 ;; Tracked objects:
 11529 ;;		On entry : 0/0
 11530 ;;		On exit  : 0/0
 11531 ;;		Unchanged: 0/0
 11532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11537 ;;Total ram usage:        0 bytes
 11538 ;; Hardware stack levels used:    1
 11539 ;; Hardware stack levels required when called:    8
 11540 ;; This function calls:
 11541 ;;		Nothing
 11542 ;; This function is called by:
 11543 ;;		_sleep
 11544 ;;		_mainsSleep
 11545 ;; This function uses a non-reentrant model
 11546 ;;
 11547                           
 11548                           	psect	text53
 11549  0078B8                     __ptext53:
 11550                           	opt stack 0
 11551  0078B8                     _tagSleep:
 11552                           	opt stack 20
 11553                           
 11554                           ;tagRead.c: 67: PIE0bits.INT3IE = 0;
 11555                           
 11556                           ;incstack = 0
 11557  0078B8  010E               	movlb	14	; () banked
 11558  0078BA  9729               	bcf	41,3,b	;volatile
 11559                           
 11560                           ;tagRead.c: 68: ANSELEbits.ANSELE2 = 0;
 11561  0078BC  010E               	movlb	14	; () banked
 11562  0078BE  95AF               	bcf	175,2,b	;volatile
 11563                           
 11564                           ;tagRead.c: 69: TRISEbits.TRISE2 = 1;
 11565  0078C0  8485               	bsf	3973,2,c	;volatile
 11566                           
 11567                           ;tagRead.c: 70: WPUEbits.WPUE2 = 0;
 11568  0078C2  010E               	movlb	14	; () banked
 11569  0078C4  95AE               	bcf	174,2,b	;volatile
 11570                           
 11571                           ;tagRead.c: 71: LATEbits.LATE2 = 0;
 11572  0078C6  947D               	bcf	3965,2,c	;volatile
 11573                           
 11574                           ;tagRead.c: 73: ANSELEbits.ANSELE3 = 0;
 11575  0078C8  010E               	movlb	14	; () banked
 11576  0078CA  97AF               	bcf	175,3,b	;volatile
 11577                           
 11578                           ;tagRead.c: 74: TRISEbits.TRISE3 = 1;
 11579  0078CC  8685               	bsf	3973,3,c	;volatile
 11580                           
 11581                           ;tagRead.c: 75: LATEbits.LATE3 = 0;
 11582  0078CE  967D               	bcf	3965,3,c	;volatile
 11583                           
 11584                           ; BSR set to: 14
 11585  0078D0  0012               	return		;funcret
 11586  0078D2                     __end_of_tagSleep:
 11587                           	opt stack 0
 11588                           tblptru	equ	0xFF8
 11589                           tblptrh	equ	0xFF7
 11590                           tblptrl	equ	0xFF6
 11591                           tablat	equ	0xFF5
 11592                           prodh	equ	0xFF4
 11593                           prodl	equ	0xFF3
 11594                           intcon	equ	0xFF2
 11595                           postinc0	equ	0xFEE
 11596                           wreg	equ	0xFE8
 11597                           indf1	equ	0xFE7
 11598                           postinc1	equ	0xFE6
 11599                           postdec1	equ	0xFE5
 11600                           fsr1h	equ	0xFE2
 11601                           fsr1l	equ	0xFE1
 11602                           indf2	equ	0xFDF
 11603                           postinc2	equ	0xFDE
 11604                           postdec2	equ	0xFDD
 11605                           fsr2h	equ	0xFDA
 11606                           fsr2l	equ	0xFD9
 11607                           status	equ	0xFD8
 11608                           
 11609 ;; *************** function _sleepBluetooth *****************
 11610 ;; Defined at:
 11611 ;;		line 434 in file "bluetooth.c"
 11612 ;; Parameters:    Size  Location     Type
 11613 ;;		None
 11614 ;; Auto vars:     Size  Location     Type
 11615 ;;		None
 11616 ;; Return value:  Size  Location     Type
 11617 ;;                  1    wreg      void 
 11618 ;; Registers used:
 11619 ;;		None
 11620 ;; Tracked objects:
 11621 ;;		On entry : 0/0
 11622 ;;		On exit  : 0/0
 11623 ;;		Unchanged: 0/0
 11624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11629 ;;Total ram usage:        0 bytes
 11630 ;; Hardware stack levels used:    1
 11631 ;; Hardware stack levels required when called:    8
 11632 ;; This function calls:
 11633 ;;		Nothing
 11634 ;; This function is called by:
 11635 ;;		_device
 11636 ;;		_sleep
 11637 ;;		_mainsSleep
 11638 ;; This function uses a non-reentrant model
 11639 ;;
 11640                           
 11641                           	psect	text54
 11642  007BD2                     __ptext54:
 11643                           	opt stack 0
 11644  007BD2                     _sleepBluetooth:
 11645                           	opt stack 21
 11646                           
 11647                           ;bluetooth.c: 435: LATDbits.LATD3 = 0;
 11648                           
 11649                           ; BSR set to: 14
 11650                           ;incstack = 0
 11651  007BD2  967C               	bcf	3964,3,c	;volatile
 11652                           
 11653                           ;bluetooth.c: 436: LATGbits.LATG0 = 0;
 11654  007BD4  907F               	bcf	3967,0,c	;volatile
 11655  007BD6  0012               	return		;funcret
 11656  007BD8                     __end_of_sleepBluetooth:
 11657                           	opt stack 0
 11658                           tblptru	equ	0xFF8
 11659                           tblptrh	equ	0xFF7
 11660                           tblptrl	equ	0xFF6
 11661                           tablat	equ	0xFF5
 11662                           prodh	equ	0xFF4
 11663                           prodl	equ	0xFF3
 11664                           intcon	equ	0xFF2
 11665                           postinc0	equ	0xFEE
 11666                           wreg	equ	0xFE8
 11667                           indf1	equ	0xFE7
 11668                           postinc1	equ	0xFE6
 11669                           postdec1	equ	0xFE5
 11670                           fsr1h	equ	0xFE2
 11671                           fsr1l	equ	0xFE1
 11672                           indf2	equ	0xFDF
 11673                           postinc2	equ	0xFDE
 11674                           postdec2	equ	0xFDD
 11675                           fsr2h	equ	0xFDA
 11676                           fsr2l	equ	0xFD9
 11677                           status	equ	0xFD8
 11678                           
 11679 ;; *************** function _sleep12V *****************
 11680 ;; Defined at:
 11681 ;;		line 79 in file "sleep.c"
 11682 ;; Parameters:    Size  Location     Type
 11683 ;;		None
 11684 ;; Auto vars:     Size  Location     Type
 11685 ;;		None
 11686 ;; Return value:  Size  Location     Type
 11687 ;;                  1    wreg      void 
 11688 ;; Registers used:
 11689 ;;		None
 11690 ;; Tracked objects:
 11691 ;;		On entry : 0/0
 11692 ;;		On exit  : 0/0
 11693 ;;		Unchanged: 0/0
 11694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11699 ;;Total ram usage:        0 bytes
 11700 ;; Hardware stack levels used:    1
 11701 ;; Hardware stack levels required when called:    8
 11702 ;; This function calls:
 11703 ;;		Nothing
 11704 ;; This function is called by:
 11705 ;;		_sleep
 11706 ;;		_mainsSleep
 11707 ;; This function uses a non-reentrant model
 11708 ;;
 11709                           
 11710                           	psect	text55
 11711  007BE8                     __ptext55:
 11712                           	opt stack 0
 11713  007BE8                     _sleep12V:
 11714                           	opt stack 20
 11715                           
 11716                           ;sleep.c: 80: LATGbits.LATG1 = 0;
 11717                           
 11718                           ;incstack = 0
 11719  007BE8  927F               	bcf	3967,1,c	;volatile
 11720  007BEA  0012               	return		;funcret
 11721  007BEC                     __end_of_sleep12V:
 11722                           	opt stack 0
 11723                           tblptru	equ	0xFF8
 11724                           tblptrh	equ	0xFF7
 11725                           tblptrl	equ	0xFF6
 11726                           tablat	equ	0xFF5
 11727                           prodh	equ	0xFF4
 11728                           prodl	equ	0xFF3
 11729                           intcon	equ	0xFF2
 11730                           postinc0	equ	0xFEE
 11731                           wreg	equ	0xFE8
 11732                           indf1	equ	0xFE7
 11733                           postinc1	equ	0xFE6
 11734                           postdec1	equ	0xFE5
 11735                           fsr1h	equ	0xFE2
 11736                           fsr1l	equ	0xFE1
 11737                           indf2	equ	0xFDF
 11738                           postinc2	equ	0xFDE
 11739                           postdec2	equ	0xFDD
 11740                           fsr2h	equ	0xFDA
 11741                           fsr2l	equ	0xFD9
 11742                           status	equ	0xFD8
 11743                           
 11744 ;; *************** function _modemSleep *****************
 11745 ;; Defined at:
 11746 ;;		line 374 in file "ST7540.c"
 11747 ;; Parameters:    Size  Location     Type
 11748 ;;		None
 11749 ;; Auto vars:     Size  Location     Type
 11750 ;;		None
 11751 ;; Return value:  Size  Location     Type
 11752 ;;                  1    wreg      void 
 11753 ;; Registers used:
 11754 ;;		None
 11755 ;; Tracked objects:
 11756 ;;		On entry : 0/0
 11757 ;;		On exit  : 0/0
 11758 ;;		Unchanged: 0/0
 11759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11764 ;;Total ram usage:        0 bytes
 11765 ;; Hardware stack levels used:    1
 11766 ;; Hardware stack levels required when called:    8
 11767 ;; This function calls:
 11768 ;;		Nothing
 11769 ;; This function is called by:
 11770 ;;		_sleep
 11771 ;;		_mainsSleep
 11772 ;; This function uses a non-reentrant model
 11773 ;;
 11774                           
 11775                           	psect	text56
 11776  007AEC                     __ptext56:
 11777                           	opt stack 0
 11778  007AEC                     _modemSleep:
 11779                           	opt stack 20
 11780                           
 11781                           ;ST7540.c: 375: TRISCbits.TRISC6 = 1;
 11782                           
 11783                           ;incstack = 0
 11784  007AEC  8C83               	bsf	3971,6,c	;volatile
 11785                           
 11786                           ;ST7540.c: 376: TRISAbits.TRISA4 = 1;
 11787  007AEE  8881               	bsf	3969,4,c	;volatile
 11788                           
 11789                           ;ST7540.c: 377: TRISCbits.TRISC1 = 1;
 11790  007AF0  8283               	bsf	3971,1,c	;volatile
 11791                           
 11792                           ;ST7540.c: 378: TRISCbits.TRISC0 = 1;
 11793  007AF2  8083               	bsf	3971,0,c	;volatile
 11794                           
 11795                           ;ST7540.c: 379: TRISCbits.TRISC7 = 1;
 11796  007AF4  8E83               	bsf	3971,7,c	;volatile
 11797                           
 11798                           ;ST7540.c: 380: TRISCbits.TRISC5 = 1;
 11799  007AF6  8A83               	bsf	3971,5,c	;volatile
 11800  007AF8  0012               	return		;funcret
 11801  007AFA                     __end_of_modemSleep:
 11802                           	opt stack 0
 11803                           tblptru	equ	0xFF8
 11804                           tblptrh	equ	0xFF7
 11805                           tblptrl	equ	0xFF6
 11806                           tablat	equ	0xFF5
 11807                           prodh	equ	0xFF4
 11808                           prodl	equ	0xFF3
 11809                           intcon	equ	0xFF2
 11810                           postinc0	equ	0xFEE
 11811                           wreg	equ	0xFE8
 11812                           indf1	equ	0xFE7
 11813                           postinc1	equ	0xFE6
 11814                           postdec1	equ	0xFE5
 11815                           fsr1h	equ	0xFE2
 11816                           fsr1l	equ	0xFE1
 11817                           indf2	equ	0xFDF
 11818                           postinc2	equ	0xFDE
 11819                           postdec2	equ	0xFDD
 11820                           fsr2h	equ	0xFDA
 11821                           fsr2l	equ	0xFD9
 11822                           status	equ	0xFD8
 11823                           
 11824 ;; *************** function _fire *****************
 11825 ;; Defined at:
 11826 ;;		line 39 in file "fire.c"
 11827 ;; Parameters:    Size  Location     Type
 11828 ;;		None
 11829 ;; Auto vars:     Size  Location     Type
 11830 ;;  missingPulse    1   55[BANK0 ] unsigned char 
 11831 ;; Return value:  Size  Location     Type
 11832 ;;                  1    wreg      void 
 11833 ;; Registers used:
 11834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11835 ;; Tracked objects:
 11836 ;;		On entry : 0/0
 11837 ;;		On exit  : 0/0
 11838 ;;		Unchanged: 0/0
 11839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11841 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11843 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11844 ;;Total ram usage:        1 bytes
 11845 ;; Hardware stack levels used:    1
 11846 ;; Hardware stack levels required when called:   15
 11847 ;; This function calls:
 11848 ;;		_EDD_Blast
 11849 ;;		_EDD_Energy_Store
 11850 ;;		_EDD_Init_Comms
 11851 ;;		__delay_ms
 11852 ;;		_addDataToOutgoingQueue
 11853 ;;		_checkForUnfiredEdds
 11854 ;;		_fireUIDs
 11855 ;;		_initialiseStates
 11856 ;;		_prepareForProgramming
 11857 ;;		_returnFromProgramming
 11858 ;;		_setRedLed
 11859 ;; This function is called by:
 11860 ;;		_device
 11861 ;; This function uses a non-reentrant model
 11862 ;;
 11863                           
 11864                           	psect	text57
 11865  004B38                     __ptext57:
 11866                           	opt stack 0
 11867  004B38                     _fire:
 11868                           	opt stack 14
 11869                           
 11870                           ;fire.c: 40: unsigned char missingPulseCheck = 0;
 11871                           
 11872                           ;incstack = 0
 11873  004B38  0E00               	movlw	0
 11874  004B3A  0100               	movlb	0	; () banked
 11875  004B3C  6F97               	movwf	fire@missingPulseCheck& (0+255),b
 11876                           
 11877                           ; BSR set to: 0
 11878                           ;fire.c: 41: setRedLed();
 11879  004B3E  ECCA  F03D         	call	_setRedLed	;wreg free
 11880                           
 11881                           ;fire.c: 42: FLAGS.fireComplete = 1;
 11882  004B42  8838               	bsf	_FLAGS+1,4,c
 11883                           
 11884                           ;fire.c: 43: prepareForProgramming();
 11885  004B44  ECB8  F036         	call	_prepareForProgramming	;wreg free
 11886                           
 11887                           ;fire.c: 44: FLAGS.fireSuccessFlag = 1;
 11888  004B48  8039               	bsf	_FLAGS+2,0,c
 11889  004B4A  0004               	clrwdt		;# 
 11890                           
 11891                           ;fire.c: 46: _delay_ms(3000);
 11892  004B4C  0E0B               	movlw	11
 11893  004B4E  0100               	movlb	0	; () banked
 11894  004B50  6F62               	movwf	(__delay_ms@delay+1)& (0+255),b
 11895  004B52  0EB8               	movlw	184
 11896  004B54  6F61               	movwf	__delay_ms@delay& (0+255),b
 11897  004B56  EC02  F037         	call	__delay_ms	;wreg free
 11898  004B5A  0004               	clrwdt		;# 
 11899                           
 11900                           ;fire.c: 48: EDD_Init_Comms();
 11901  004B5C  ECFE  F03C         	call	_EDD_Init_Comms	;wreg free
 11902  004B60  0004               	clrwdt		;# 
 11903                           
 11904                           ;fire.c: 50: FLAGS.fireComplete = 0;
 11905  004B62  9838               	bcf	_FLAGS+1,4,c
 11906                           
 11907                           ;fire.c: 51: fireUIDs();
 11908  004B64  EC56  F01B         	call	_fireUIDs	;wreg free
 11909                           
 11910                           ;fire.c: 52: while(missingPulseCheck < COUNTERS.missingPulses && COUNTERS.missingPulses 
      +                          < 20){
 11911  004B68  D00A               	goto	l15470
 11912  004B6A                     l2248:
 11913                           
 11914                           ; BSR set to: 0
 11915                           ;fire.c: 53: missingPulseCheck = COUNTERS.missingPulses;
 11916  004B6A  C0B2  F097         	movff	_COUNTERS+15,fire@missingPulseCheck
 11917                           
 11918                           ; BSR set to: 0
 11919                           ;fire.c: 54: _delay_ms(1000);
 11920  004B6E  0E03               	movlw	3
 11921  004B70  0100               	movlb	0	; () banked
 11922  004B72  6F62               	movwf	(__delay_ms@delay+1)& (0+255),b
 11923  004B74  0EE8               	movlw	232
 11924  004B76  6F61               	movwf	__delay_ms@delay& (0+255),b
 11925  004B78  EC02  F037         	call	__delay_ms	;wreg free
 11926  004B7C  0004               	clrwdt		;# 
 11927  004B7E                     l15470:
 11928  004B7E  0100               	movlb	0	; () banked
 11929  004B80  51B2               	movf	(_COUNTERS+15)& (0+255),w,b
 11930  004B82  0100               	movlb	0	; () banked
 11931  004B84  5D97               	subwf	fire@missingPulseCheck& (0+255),w,b
 11932  004B86  B0D8               	btfsc	status,0,c
 11933  004B88  D004               	goto	l2251
 11934                           
 11935                           ; BSR set to: 0
 11936  004B8A  0E13               	movlw	19
 11937  004B8C  0100               	movlb	0	; () banked
 11938  004B8E  65B2               	cpfsgt	(_COUNTERS+15)& (0+255),b
 11939  004B90  D7EC               	goto	l2248
 11940  004B92                     l2251:
 11941                           
 11942                           ; BSR set to: 0
 11943                           ;fire.c: 56: }
 11944                           ;fire.c: 57: WDTCON0bits.SEN = 0;
 11945  004B92  010E               	movlb	14	; () banked
 11946  004B94  913D               	bcf	61,0,b	;volatile
 11947                           
 11948                           ; BSR set to: 14
 11949                           ;fire.c: 58: if(COUNTERS.missingPulses >= 20){
 11950  004B96  0E13               	movlw	19
 11951  004B98  0100               	movlb	0	; () banked
 11952  004B9A  65B2               	cpfsgt	(_COUNTERS+15)& (0+255),b
 11953  004B9C  D00C               	goto	l2252
 11954                           
 11955                           ; BSR set to: 0
 11956                           ;fire.c: 59: EDD_Energy_Store();
 11957  004B9E  EC8D  F037         	call	_EDD_Energy_Store	;wreg free
 11958                           
 11959                           ;fire.c: 60: EDD_Blast();
 11960  004BA2  EC1F  F033         	call	_EDD_Blast	;wreg free
 11961                           
 11962                           ;fire.c: 61: _delay_ms(10000);
 11963  004BA6  0E27               	movlw	39
 11964  004BA8  0100               	movlb	0	; () banked
 11965  004BAA  6F62               	movwf	(__delay_ms@delay+1)& (0+255),b
 11966  004BAC  0E10               	movlw	16
 11967  004BAE  6F61               	movwf	__delay_ms@delay& (0+255),b
 11968  004BB0  EC02  F037         	call	__delay_ms	;wreg free
 11969                           
 11970                           ;fire.c: 62: }
 11971  004BB4  D00B               	goto	L9
 11972  004BB6                     l2252:
 11973                           
 11974                           ; BSR set to: 0
 11975                           ;fire.c: 63: else{
 11976                           ;fire.c: 64: FLAGS.fireSuccessFlag = 0;
 11977  004BB6  9039               	bcf	_FLAGS+2,0,c
 11978  004BB8  D009               	goto	L9
 11979  004BBA                     l2255:
 11980                           
 11981                           ; BSR set to: 0
 11982                           ;fire.c: 68: missingPulseCheck = COUNTERS.missingPulses;
 11983  004BBA  C0B2  F097         	movff	_COUNTERS+15,fire@missingPulseCheck
 11984                           
 11985                           ; BSR set to: 0
 11986                           ;fire.c: 69: _delay_ms(1000);
 11987  004BBE  0E03               	movlw	3
 11988  004BC0  0100               	movlb	0	; () banked
 11989  004BC2  6F62               	movwf	(__delay_ms@delay+1)& (0+255),b
 11990  004BC4  0EE8               	movlw	232
 11991  004BC6  6F61               	movwf	__delay_ms@delay& (0+255),b
 11992  004BC8  EC02  F037         	call	__delay_ms	;wreg free
 11993  004BCC                     L9:
 11994  004BCC  0004               	clrwdt		;# 
 11995  004BCE  0100               	movlb	0	; () banked
 11996  004BD0  51B2               	movf	(_COUNTERS+15)& (0+255),w,b
 11997  004BD2  0100               	movlb	0	; () banked
 11998  004BD4  5D97               	subwf	fire@missingPulseCheck& (0+255),w,b
 11999  004BD6  A0D8               	btfss	status,0,c
 12000  004BD8  D7F0               	goto	l2255
 12001                           
 12002                           ; BSR set to: 0
 12003                           ;fire.c: 71: }
 12004                           ;fire.c: 72: WDTCON0bits.SEN = 1;
 12005  004BDA  010E               	movlb	14	; () banked
 12006  004BDC  813D               	bsf	61,0,b	;volatile
 12007  004BDE  0004               	clrwdt		;# 
 12008                           
 12009                           ;fire.c: 74: checkForUnfiredEdds();
 12010  004BE0  EC76  F012         	call	_checkForUnfiredEdds	;wreg free
 12011                           
 12012                           ;fire.c: 75: LATFbits.LATF3 = 0;
 12013  004BE4  967E               	bcf	3966,3,c	;volatile
 12014                           
 12015                           ;fire.c: 76: addDataToOutgoingQueue(ABB_1.det_arrays.info, 0b00001011, sizeof(detonator_
      +                          data));
 12016  004BE6  0EBD               	movlw	low (_ABB_1+509)
 12017  004BE8  0100               	movlb	0	; () banked
 12018  004BEA  6F66               	movwf	addDataToOutgoingQueue@data& (0+255),b
 12019  004BEC  0E05               	movlw	high (_ABB_1+509)
 12020  004BEE  0100               	movlb	0	; () banked
 12021  004BF0  6F67               	movwf	(addDataToOutgoingQueue@data+1)& (0+255),b
 12022  004BF2  0E0B               	movlw	11
 12023  004BF4  0100               	movlb	0	; () banked
 12024  004BF6  6F68               	movwf	addDataToOutgoingQueue@command& (0+255),b
 12025  004BF8  0E00               	movlw	0
 12026  004BFA  0100               	movlb	0	; () banked
 12027  004BFC  6F6A               	movwf	(addDataToOutgoingQueue@size+1)& (0+255),b
 12028  004BFE  0E04               	movlw	4
 12029  004C00  6F69               	movwf	addDataToOutgoingQueue@size& (0+255),b
 12030  004C02  ECA1  F016         	call	_addDataToOutgoingQueue	;wreg free
 12031                           
 12032                           ;fire.c: 77: initialiseStates();
 12033  004C06  EC61  F029         	call	_initialiseStates	;wreg free
 12034                           
 12035                           ;fire.c: 78: FLAGS.fireComplete = 1;
 12036  004C0A  8838               	bsf	_FLAGS+1,4,c
 12037                           
 12038                           ;fire.c: 79: COUNTERS.missingPulses = 0;
 12039  004C0C  0E00               	movlw	0
 12040  004C0E  0100               	movlb	0	; () banked
 12041  004C10  6FB2               	movwf	(_COUNTERS+15)& (0+255),b
 12042                           
 12043                           ; BSR set to: 0
 12044                           ;fire.c: 80: FLAGS.fireFlag = 0;
 12045  004C12  9638               	bcf	_FLAGS+1,3,c
 12046                           
 12047                           ; BSR set to: 0
 12048                           ;fire.c: 81: returnFromProgramming();
 12049  004C14  ECE9  F038         	call	_returnFromProgramming	;wreg free
 12050  004C18  0012               	return		;funcret
 12051  004C1A                     __end_of_fire:
 12052                           	opt stack 0
 12053                           tblptru	equ	0xFF8
 12054                           tblptrh	equ	0xFF7
 12055                           tblptrl	equ	0xFF6
 12056                           tablat	equ	0xFF5
 12057                           prodh	equ	0xFF4
 12058                           prodl	equ	0xFF3
 12059                           intcon	equ	0xFF2
 12060                           postinc0	equ	0xFEE
 12061                           wreg	equ	0xFE8
 12062                           indf1	equ	0xFE7
 12063                           postinc1	equ	0xFE6
 12064                           postdec1	equ	0xFE5
 12065                           fsr1h	equ	0xFE2
 12066                           fsr1l	equ	0xFE1
 12067                           indf2	equ	0xFDF
 12068                           postinc2	equ	0xFDE
 12069                           postdec2	equ	0xFDD
 12070                           fsr2h	equ	0xFDA
 12071                           fsr2l	equ	0xFD9
 12072                           status	equ	0xFD8
 12073                           
 12074 ;; *************** function _returnFromProgramming *****************
 12075 ;; Defined at:
 12076 ;;		line 82 in file "program.c"
 12077 ;; Parameters:    Size  Location     Type
 12078 ;;		None
 12079 ;; Auto vars:     Size  Location     Type
 12080 ;;		None
 12081 ;; Return value:  Size  Location     Type
 12082 ;;                  1    wreg      void 
 12083 ;; Registers used:
 12084 ;;		wreg, status,2, cstack
 12085 ;; Tracked objects:
 12086 ;;		On entry : 0/0
 12087 ;;		On exit  : 0/0
 12088 ;;		Unchanged: 0/0
 12089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12094 ;;Total ram usage:        0 bytes
 12095 ;; Hardware stack levels used:    1
 12096 ;; Hardware stack levels required when called:    9
 12097 ;; This function calls:
 12098 ;;		_Set_Line_Low
 12099 ;; This function is called by:
 12100 ;;		_program
 12101 ;;		_fire
 12102 ;;		_firePic
 12103 ;; This function uses a non-reentrant model
 12104 ;;
 12105                           
 12106                           	psect	text58
 12107  0071D2                     __ptext58:
 12108                           	opt stack 0
 12109  0071D2                     _returnFromProgramming:
 12110                           	opt stack 19
 12111                           
 12112                           ;program.c: 83: TMR0 = 0;
 12113                           
 12114                           ;incstack = 0
 12115  0071D2  0E00               	movlw	0
 12116  0071D4  6ED3               	movwf	4051,c	;volatile
 12117                           
 12118                           ;program.c: 84: PIE0bits.TMR0IE = 1;
 12119  0071D6  010E               	movlb	14	; () banked
 12120  0071D8  8B29               	bsf	41,5,b	;volatile
 12121                           
 12122                           ; BSR set to: 14
 12123                           ;program.c: 85: T0CON0bits.T0EN = 1;
 12124  0071DA  8ED5               	bsf	4053,7,c	;volatile
 12125                           
 12126                           ; BSR set to: 14
 12127                           ;program.c: 86: PIE5bits.TMR2IE = 0;
 12128  0071DC  010E               	movlb	14	; () banked
 12129  0071DE  932E               	bcf	46,1,b	;volatile
 12130                           
 12131                           ; BSR set to: 14
 12132                           ;program.c: 87: T2CONbits.T2ON = 0;
 12133  0071E0  9EBD               	bcf	4029,7,c	;volatile
 12134                           
 12135                           ; BSR set to: 14
 12136                           ;program.c: 88: PIE5bits.TMR8IE = 0;
 12137  0071E2  010E               	movlb	14	; () banked
 12138  0071E4  9F2E               	bcf	46,7,b	;volatile
 12139                           
 12140                           ; BSR set to: 14
 12141                           ;program.c: 89: PIE5bits.TMR4IE = 0;
 12142  0071E6  010E               	movlb	14	; () banked
 12143  0071E8  972E               	bcf	46,3,b	;volatile
 12144                           
 12145                           ; BSR set to: 14
 12146                           ;program.c: 90: PIE5bits.TMR6IE = 1;
 12147  0071EA  010E               	movlb	14	; () banked
 12148  0071EC  8B2E               	bsf	46,5,b	;volatile
 12149                           
 12150                           ; BSR set to: 14
 12151                           ;program.c: 91: PIE0bits.INT3IE = 1;
 12152  0071EE  010E               	movlb	14	; () banked
 12153  0071F0  8729               	bsf	41,3,b	;volatile
 12154                           
 12155                           ; BSR set to: 14
 12156                           ;program.c: 92: PIE4bits.RC3IE = 1;
 12157  0071F2  010E               	movlb	14	; () banked
 12158  0071F4  832D               	bsf	45,1,b	;volatile
 12159                           
 12160                           ; BSR set to: 14
 12161                           ;program.c: 93: PIE0bits.INT0IE = 1;
 12162  0071F6  010E               	movlb	14	; () banked
 12163  0071F8  8129               	bsf	41,0,b	;volatile
 12164                           
 12165                           ; BSR set to: 14
 12166                           ;program.c: 94: Set_Line_Low();
 12167  0071FA  ECF6  F03D         	call	_Set_Line_Low	;wreg free
 12168                           
 12169                           ;program.c: 95: LATEbits.LATE5 = 1;
 12170  0071FE  8A7D               	bsf	3965,5,c	;volatile
 12171                           
 12172                           ;program.c: 96: LATFbits.LATF3 = 0;
 12173  007200  967E               	bcf	3966,3,c	;volatile
 12174  007202  0004               	clrwdt		;# 
 12175  007204  0012               	return		;funcret
 12176  007206                     __end_of_returnFromProgramming:
 12177                           	opt stack 0
 12178                           tblptru	equ	0xFF8
 12179                           tblptrh	equ	0xFF7
 12180                           tblptrl	equ	0xFF6
 12181                           tablat	equ	0xFF5
 12182                           prodh	equ	0xFF4
 12183                           prodl	equ	0xFF3
 12184                           intcon	equ	0xFF2
 12185                           postinc0	equ	0xFEE
 12186                           wreg	equ	0xFE8
 12187                           indf1	equ	0xFE7
 12188                           postinc1	equ	0xFE6
 12189                           postdec1	equ	0xFE5
 12190                           fsr1h	equ	0xFE2
 12191                           fsr1l	equ	0xFE1
 12192                           indf2	equ	0xFDF
 12193                           postinc2	equ	0xFDE
 12194                           postdec2	equ	0xFDD
 12195                           fsr2h	equ	0xFDA
 12196                           fsr2l	equ	0xFD9
 12197                           status	equ	0xFD8
 12198                           
 12199 ;; *************** function _prepareForProgramming *****************
 12200 ;; Defined at:
 12201 ;;		line 63 in file "program.c"
 12202 ;; Parameters:    Size  Location     Type
 12203 ;;		None
 12204 ;; Auto vars:     Size  Location     Type
 12205 ;;		None
 12206 ;; Return value:  Size  Location     Type
 12207 ;;                  1    wreg      void 
 12208 ;; Registers used:
 12209 ;;		wreg, status,2, status,0, cstack
 12210 ;; Tracked objects:
 12211 ;;		On entry : 0/0
 12212 ;;		On exit  : 0/0
 12213 ;;		Unchanged: 0/0
 12214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12219 ;;Total ram usage:        0 bytes
 12220 ;; Hardware stack levels used:    1
 12221 ;; Hardware stack levels required when called:   10
 12222 ;; This function calls:
 12223 ;;		_Set_Line_High
 12224 ;;		__delay_ms
 12225 ;; This function is called by:
 12226 ;;		_program
 12227 ;;		_fire
 12228 ;;		_firePic
 12229 ;; This function uses a non-reentrant model
 12230 ;;
 12231                           
 12232                           	psect	text59
 12233  006D70                     __ptext59:
 12234                           	opt stack 0
 12235  006D70                     _prepareForProgramming:
 12236                           	opt stack 18
 12237                           
 12238                           ;program.c: 64: PIE0bits.TMR0IE = 0;
 12239                           
 12240                           ;incstack = 0
 12241  006D70  010E               	movlb	14	; () banked
 12242  006D72  9B29               	bcf	41,5,b	;volatile
 12243                           
 12244                           ;program.c: 65: T0CON0bits.T0EN = 0;
 12245  006D74  9ED5               	bcf	4053,7,c	;volatile
 12246                           
 12247                           ;program.c: 66: PIE5bits.TMR6IE = 0;
 12248  006D76  010E               	movlb	14	; () banked
 12249  006D78  9B2E               	bcf	46,5,b	;volatile
 12250                           
 12251                           ;program.c: 67: PIE0bits.INT3IE = 0;
 12252  006D7A  010E               	movlb	14	; () banked
 12253  006D7C  9729               	bcf	41,3,b	;volatile
 12254                           
 12255                           ;program.c: 68: PIE4bits.RC3IE = 0;
 12256  006D7E  010E               	movlb	14	; () banked
 12257  006D80  932D               	bcf	45,1,b	;volatile
 12258                           
 12259                           ;program.c: 69: PIE0bits.INT0IE = 0;
 12260  006D82  010E               	movlb	14	; () banked
 12261  006D84  9129               	bcf	41,0,b	;volatile
 12262                           
 12263                           ;program.c: 70: LATEbits.LATE5 = 0;
 12264  006D86  9A7D               	bcf	3965,5,c	;volatile
 12265                           
 12266                           ;program.c: 71: LATFbits.LATF3 = 1;
 12267  006D88  867E               	bsf	3966,3,c	;volatile
 12268                           
 12269                           ;program.c: 73: PIE5bits.TMR8IE = 1;
 12270  006D8A  010E               	movlb	14	; () banked
 12271  006D8C  8F2E               	bsf	46,7,b	;volatile
 12272                           
 12273                           ;program.c: 74: PIE5bits.TMR4IE = 1;
 12274  006D8E  010E               	movlb	14	; () banked
 12275  006D90  872E               	bsf	46,3,b	;volatile
 12276                           
 12277                           ;program.c: 75: PIE5bits.TMR2IE = 1;
 12278  006D92  010E               	movlb	14	; () banked
 12279  006D94  832E               	bsf	46,1,b	;volatile
 12280                           
 12281                           ;program.c: 76: T2CONbits.T2ON = 1;
 12282  006D96  8EBD               	bsf	4029,7,c	;volatile
 12283                           
 12284                           ; BSR set to: 14
 12285                           ;program.c: 77: _delay_ms(500);
 12286  006D98  0E01               	movlw	1
 12287  006D9A  0100               	movlb	0	; () banked
 12288  006D9C  6F62               	movwf	(__delay_ms@delay+1)& (0+255),b
 12289  006D9E  0EF4               	movlw	244
 12290  006DA0  6F61               	movwf	__delay_ms@delay& (0+255),b
 12291  006DA2  EC02  F037         	call	__delay_ms	;wreg free
 12292                           
 12293                           ;program.c: 78: Set_Line_High();
 12294  006DA6  ECF8  F03D         	call	_Set_Line_High	;wreg free
 12295                           
 12296                           ;program.c: 79: _delay_ms(2000);
 12297  006DAA  0E07               	movlw	7
 12298  006DAC  0100               	movlb	0	; () banked
 12299  006DAE  6F62               	movwf	(__delay_ms@delay+1)& (0+255),b
 12300  006DB0  0ED0               	movlw	208
 12301  006DB2  6F61               	movwf	__delay_ms@delay& (0+255),b
 12302  006DB4  EC02  F037         	call	__delay_ms	;wreg free
 12303  006DB8  0012               	return		;funcret
 12304  006DBA                     __end_of_prepareForProgramming:
 12305                           	opt stack 0
 12306                           tblptru	equ	0xFF8
 12307                           tblptrh	equ	0xFF7
 12308                           tblptrl	equ	0xFF6
 12309                           tablat	equ	0xFF5
 12310                           prodh	equ	0xFF4
 12311                           prodl	equ	0xFF3
 12312                           intcon	equ	0xFF2
 12313                           postinc0	equ	0xFEE
 12314                           wreg	equ	0xFE8
 12315                           indf1	equ	0xFE7
 12316                           postinc1	equ	0xFE6
 12317                           postdec1	equ	0xFE5
 12318                           fsr1h	equ	0xFE2
 12319                           fsr1l	equ	0xFE1
 12320                           indf2	equ	0xFDF
 12321                           postinc2	equ	0xFDE
 12322                           postdec2	equ	0xFDD
 12323                           fsr2h	equ	0xFDA
 12324                           fsr2l	equ	0xFD9
 12325                           status	equ	0xFD8
 12326                           
 12327 ;; *************** function _initialiseStates *****************
 12328 ;; Defined at:
 12329 ;;		line 185 in file "initialise.c"
 12330 ;; Parameters:    Size  Location     Type
 12331 ;;		None
 12332 ;; Auto vars:     Size  Location     Type
 12333 ;;  i               2    3[BANK0 ] int 
 12334 ;; Return value:  Size  Location     Type
 12335 ;;                  1    wreg      void 
 12336 ;; Registers used:
 12337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12338 ;; Tracked objects:
 12339 ;;		On entry : 0/0
 12340 ;;		On exit  : 0/0
 12341 ;;		Unchanged: 0/0
 12342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12344 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12346 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12347 ;;Total ram usage:        2 bytes
 12348 ;; Hardware stack levels used:    1
 12349 ;; Hardware stack levels required when called:    9
 12350 ;; This function calls:
 12351 ;;		_initialiseState
 12352 ;; This function is called by:
 12353 ;;		_program
 12354 ;;		_fire
 12355 ;;		_mainsWake
 12356 ;;		_firePic
 12357 ;; This function uses a non-reentrant model
 12358 ;;
 12359                           
 12360                           	psect	text60
 12361  0052C2                     __ptext60:
 12362                           	opt stack 0
 12363  0052C2                     _initialiseStates:
 12364                           	opt stack 19
 12365                           
 12366                           ;initialise.c: 186: initialiseState(&state.incomingCommands, 3);
 12367                           
 12368                           ;incstack = 0
 12369  0052C2  0ECF               	movlw	low (_state+40)
 12370  0052C4  0100               	movlb	0	; () banked
 12371  0052C6  6F60               	movwf	initialiseState@specific& (0+255),b
 12372  0052C8  0E01               	movlw	high (_state+40)
 12373  0052CA  0100               	movlb	0	; () banked
 12374  0052CC  6F61               	movwf	(initialiseState@specific+1)& (0+255),b
 12375  0052CE  0E03               	movlw	3
 12376  0052D0  0100               	movlb	0	; () banked
 12377  0052D2  6F62               	movwf	initialiseState@number& (0+255),b
 12378  0052D4  ECDB  F034         	call	_initialiseState	;wreg free
 12379                           
 12380                           ;initialise.c: 187: initialiseState(&state.outgoingMessages, 5);
 12381  0052D8  0EC8               	movlw	low (_state+33)
 12382  0052DA  0100               	movlb	0	; () banked
 12383  0052DC  6F60               	movwf	initialiseState@specific& (0+255),b
 12384  0052DE  0E01               	movlw	high (_state+33)
 12385  0052E0  0100               	movlb	0	; () banked
 12386  0052E2  6F61               	movwf	(initialiseState@specific+1)& (0+255),b
 12387  0052E4  0E05               	movlw	5
 12388  0052E6  0100               	movlb	0	; () banked
 12389  0052E8  6F62               	movwf	initialiseState@number& (0+255),b
 12390  0052EA  ECDB  F034         	call	_initialiseState	;wreg free
 12391                           
 12392                           ;initialise.c: 188: initialiseState(&state.led, 4);
 12393  0052EE  0EB3               	movlw	low (_state+12)
 12394  0052F0  0100               	movlb	0	; () banked
 12395  0052F2  6F60               	movwf	initialiseState@specific& (0+255),b
 12396  0052F4  0E01               	movlw	high (_state+12)
 12397  0052F6  0100               	movlb	0	; () banked
 12398  0052F8  6F61               	movwf	(initialiseState@specific+1)& (0+255),b
 12399  0052FA  0E04               	movlw	4
 12400  0052FC  0100               	movlb	0	; () banked
 12401  0052FE  6F62               	movwf	initialiseState@number& (0+255),b
 12402  005300  ECDB  F034         	call	_initialiseState	;wreg free
 12403                           
 12404                           ;initialise.c: 189: initialiseState(&state.shaftTest, 11);
 12405  005304  0ED6               	movlw	low (_state+47)
 12406  005306  0100               	movlb	0	; () banked
 12407  005308  6F60               	movwf	initialiseState@specific& (0+255),b
 12408  00530A  0E01               	movlw	high (_state+47)
 12409  00530C  0100               	movlb	0	; () banked
 12410  00530E  6F61               	movwf	(initialiseState@specific+1)& (0+255),b
 12411  005310  0E0B               	movlw	11
 12412  005312  0100               	movlb	0	; () banked
 12413  005314  6F62               	movwf	initialiseState@number& (0+255),b
 12414  005316  ECDB  F034         	call	_initialiseState	;wreg free
 12415                           
 12416                           ;initialise.c: 190: initialiseState(&state.bluetooth, 13);
 12417  00531A  0EDD               	movlw	low (_state+54)
 12418  00531C  0100               	movlb	0	; () banked
 12419  00531E  6F60               	movwf	initialiseState@specific& (0+255),b
 12420  005320  0E01               	movlw	high (_state+54)
 12421  005322  0100               	movlb	0	; () banked
 12422  005324  6F61               	movwf	(initialiseState@specific+1)& (0+255),b
 12423  005326  0E0D               	movlw	13
 12424  005328  0100               	movlb	0	; () banked
 12425  00532A  6F62               	movwf	initialiseState@number& (0+255),b
 12426  00532C  ECDB  F034         	call	_initialiseState	;wreg free
 12427                           
 12428                           ;initialise.c: 191: initialiseState(&state.readSupply, 9);
 12429  005330  0EC1               	movlw	low (_state+26)
 12430  005332  0100               	movlb	0	; () banked
 12431  005334  6F60               	movwf	initialiseState@specific& (0+255),b
 12432  005336  0E01               	movlw	high (_state+26)
 12433  005338  0100               	movlb	0	; () banked
 12434  00533A  6F61               	movwf	(initialiseState@specific+1)& (0+255),b
 12435  00533C  0E09               	movlw	9
 12436  00533E  0100               	movlb	0	; () banked
 12437  005340  6F62               	movwf	initialiseState@number& (0+255),b
 12438  005342  ECDB  F034         	call	_initialiseState	;wreg free
 12439                           
 12440                           ;initialise.c: 192: state.queuePointer = 0;
 12441  005346  0E00               	movlw	0
 12442  005348  0101               	movlb	1	; () banked
 12443  00534A  6FB1               	movwf	(_state+10)& (0+255),b
 12444                           
 12445                           ; BSR set to: 1
 12446                           ;initialise.c: 193: for (int i = 0; i < 10; i ++){
 12447  00534C  0E00               	movlw	0
 12448  00534E  0100               	movlb	0	; () banked
 12449  005350  6F64               	movwf	(initialiseStates@i+1)& (0+255),b
 12450  005352  0E00               	movlw	0
 12451  005354  6F63               	movwf	initialiseStates@i& (0+255),b
 12452  005356                     l14380:
 12453                           
 12454                           ; BSR set to: 0
 12455  005356  0100               	movlb	0	; () banked
 12456  005358  BF64               	btfsc	(initialiseStates@i+1)& (0+255),7,b
 12457  00535A  D008               	goto	l14384
 12458  00535C  0100               	movlb	0	; () banked
 12459  00535E  5164               	movf	(initialiseStates@i+1)& (0+255),w,b
 12460  005360  E113               	bnz	l603
 12461  005362  0E0A               	movlw	10
 12462  005364  0100               	movlb	0	; () banked
 12463  005366  5D63               	subwf	initialiseStates@i& (0+255),w,b
 12464  005368  B0D8               	btfsc	status,0,c
 12465  00536A  0012               	return	
 12466  00536C                     l14384:
 12467                           
 12468                           ; BSR set to: 0
 12469                           ;initialise.c: 194: state.stateQueue[i] = 0;
 12470  00536C  0EA7               	movlw	low _state
 12471  00536E  0100               	movlb	0	; () banked
 12472  005370  2563               	addwf	initialiseStates@i& (0+255),w,b
 12473  005372  6ED9               	movwf	fsr2l,c
 12474  005374  0E01               	movlw	high _state
 12475  005376  0100               	movlb	0	; () banked
 12476  005378  2164               	addwfc	(initialiseStates@i+1)& (0+255),w,b
 12477  00537A  6EDA               	movwf	fsr2h,c
 12478  00537C  0E00               	movlw	0
 12479  00537E  6EDF               	movwf	indf2,c
 12480                           
 12481                           ; BSR set to: 0
 12482  005380  0100               	movlb	0	; () banked
 12483  005382  4B63               	infsnz	initialiseStates@i& (0+255),f,b
 12484  005384  2B64               	incf	(initialiseStates@i+1)& (0+255),f,b
 12485  005386  D7E7               	goto	l14380
 12486  005388                     l603:
 12487                           
 12488                           ; BSR set to: 0
 12489  005388  0012               	return		;funcret
 12490  00538A                     __end_of_initialiseStates:
 12491                           	opt stack 0
 12492                           tblptru	equ	0xFF8
 12493                           tblptrh	equ	0xFF7
 12494                           tblptrl	equ	0xFF6
 12495                           tablat	equ	0xFF5
 12496                           prodh	equ	0xFF4
 12497                           prodl	equ	0xFF3
 12498                           intcon	equ	0xFF2
 12499                           postinc0	equ	0xFEE
 12500                           wreg	equ	0xFE8
 12501                           indf1	equ	0xFE7
 12502                           postinc1	equ	0xFE6
 12503                           postdec1	equ	0xFE5
 12504                           fsr1h	equ	0xFE2
 12505                           fsr1l	equ	0xFE1
 12506                           indf2	equ	0xFDF
 12507                           postinc2	equ	0xFDE
 12508                           postdec2	equ	0xFDD
 12509                           fsr2h	equ	0xFDA
 12510                           fsr2l	equ	0xFD9
 12511                           status	equ	0xFD8
 12512                           
 12513 ;; *************** function _fireUIDs *****************
 12514 ;; Defined at:
 12515 ;;		line 113 in file "fire.c"
 12516 ;; Parameters:    Size  Location     Type
 12517 ;;		None
 12518 ;; Auto vars:     Size  Location     Type
 12519 ;;  i               2   53[BANK0 ] int 
 12520 ;;  attempts        1   52[BANK0 ] unsigned char 
 12521 ;; Return value:  Size  Location     Type
 12522 ;;                  1    wreg      void 
 12523 ;; Registers used:
 12524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12525 ;; Tracked objects:
 12526 ;;		On entry : 0/0
 12527 ;;		On exit  : 0/0
 12528 ;;		Unchanged: 0/0
 12529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12531 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12532 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12533 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12534 ;;Total ram usage:        9 bytes
 12535 ;; Hardware stack levels used:    1
 12536 ;; Hardware stack levels required when called:   14
 12537 ;; This function calls:
 12538 ;;		_EDD_Calibrate
 12539 ;;		_programRetryChecks
 12540 ;; This function is called by:
 12541 ;;		_fire
 12542 ;;		_firePic
 12543 ;; This function uses a non-reentrant model
 12544 ;;
 12545                           
 12546                           	psect	text61
 12547  0036AC                     __ptext61:
 12548                           	opt stack 0
 12549  0036AC                     _fireUIDs:
 12550                           	opt stack 14
 12551                           
 12552                           ;fire.c: 114: maxProgramAttempts = 5;
 12553                           
 12554                           ; BSR set to: 0
 12555                           ;incstack = 0
 12556  0036AC  0E05               	movlw	5
 12557  0036AE  0100               	movlb	0	; () banked
 12558  0036B0  6FC9               	movwf	_maxProgramAttempts& (0+255),b
 12559                           
 12560                           ;fire.c: 115: unsigned char attempts = 0;
 12561  0036B2  0E00               	movlw	0
 12562  0036B4  0100               	movlb	0	; () banked
 12563  0036B6  6F94               	movwf	fireUIDs@attempts& (0+255),b
 12564                           
 12565                           ; BSR set to: 0
 12566                           ;fire.c: 116: if(ABB_1.dets_length > 0){
 12567  0036B8  EE23  F0C0         	lfsr	2,_ABB_1
 12568  0036BC  50DF               	movf	indf2,w,c
 12569  0036BE  B4D8               	btfsc	status,2,c
 12570  0036C0  D0A3               	goto	l15158
 12571                           
 12572                           ; BSR set to: 0
 12573                           ;fire.c: 117: for(int i = 1; i <= ABB_1.dets_length; i++){
 12574  0036C2  0E00               	movlw	0
 12575  0036C4  0100               	movlb	0	; () banked
 12576  0036C6  6F96               	movwf	(fireUIDs@i+1)& (0+255),b
 12577  0036C8  0E01               	movlw	1
 12578  0036CA  6F95               	movwf	fireUIDs@i& (0+255),b
 12579  0036CC  D087               	goto	l15156
 12580  0036CE                     l15142:
 12581                           
 12582                           ; BSR set to: 0
 12583                           ;fire.c: 118: attempts = 2;
 12584  0036CE  0E02               	movlw	2
 12585  0036D0  0100               	movlb	0	; () banked
 12586  0036D2  6F94               	movwf	fireUIDs@attempts& (0+255),b
 12587  0036D4                     l15144:
 12588  0036D4  0E94               	movlw	low fireUIDs@attempts
 12589  0036D6  0100               	movlb	0	; () banked
 12590  0036D8  6F8B               	movwf	programRetryChecks@retry& (0+255),b
 12591  0036DA  0E00               	movlw	high fireUIDs@attempts
 12592  0036DC  0100               	movlb	0	; () banked
 12593  0036DE  6F8C               	movwf	(programRetryChecks@retry+1)& (0+255),b
 12594  0036E0  0100               	movlb	0	; () banked
 12595  0036E2  5195               	movf	fireUIDs@i& (0+255),w,b
 12596  0036E4  ECEB  F032         	call	_programRetryChecks
 12597  0036E8  0900               	iorlw	0
 12598  0036EA  B4D8               	btfsc	status,2,c
 12599  0036EC  D7F3               	goto	l15144
 12600                           
 12601                           ;fire.c: 120: if(attempts == 0){
 12602  0036EE  0100               	movlb	0	; () banked
 12603  0036F0  5194               	movf	fireUIDs@attempts& (0+255),w,b
 12604  0036F2  0100               	movlb	0	; () banked
 12605  0036F4  A4D8               	btfss	status,2,c
 12606  0036F6  D038               	goto	l15152
 12607                           
 12608                           ; BSR set to: 0
 12609                           ;fire.c: 121: FLAGS.progSuccess = 0;
 12610  0036F8  9438               	bcf	_FLAGS+1,2,c
 12611                           
 12612                           ; BSR set to: 0
 12613                           ;fire.c: 122: ABB_1.det_arrays.info[i].data.connection_status = 0;
 12614  0036FA  0EF9               	movlw	249
 12615  0036FC  0100               	movlb	0	; () banked
 12616  0036FE  6F8E               	movwf	??_fireUIDs& (0+255),b
 12617  003700  0E01               	movlw	1
 12618  003702  0100               	movlb	0	; () banked
 12619  003704  6F8F               	movwf	(??_fireUIDs+1)& (0+255),b
 12620  003706  C095  F090         	movff	fireUIDs@i,??_fireUIDs+2
 12621  00370A  C096  F091         	movff	fireUIDs@i+1,??_fireUIDs+3
 12622  00370E  0100               	movlb	0	; () banked
 12623  003710  90D8               	bcf	status,0,c
 12624  003712  3790               	rlcf	(??_fireUIDs+2)& (0+255),f,b
 12625  003714  3791               	rlcf	(??_fireUIDs+3)& (0+255),f,b
 12626  003716  0100               	movlb	0	; () banked
 12627  003718  90D8               	bcf	status,0,c
 12628  00371A  3790               	rlcf	(??_fireUIDs+2)& (0+255),f,b
 12629  00371C  3791               	rlcf	(??_fireUIDs+3)& (0+255),f,b
 12630  00371E  0100               	movlb	0	; () banked
 12631  003720  518E               	movf	??_fireUIDs& (0+255),w,b
 12632  003722  0100               	movlb	0	; () banked
 12633  003724  2790               	addwf	(??_fireUIDs+2)& (0+255),f,b
 12634  003726  0100               	movlb	0	; () banked
 12635  003728  518F               	movf	(??_fireUIDs+1)& (0+255),w,b
 12636  00372A  0100               	movlb	0	; () banked
 12637  00372C  2391               	addwfc	(??_fireUIDs+3)& (0+255),f,b
 12638  00372E  0EC0               	movlw	low _ABB_1
 12639  003730  0100               	movlb	0	; () banked
 12640  003732  6F92               	movwf	(??_fireUIDs+4)& (0+255),b
 12641  003734  0E03               	movlw	high _ABB_1
 12642  003736  0100               	movlb	0	; () banked
 12643  003738  6F93               	movwf	(??_fireUIDs+5)& (0+255),b
 12644  00373A  0E04               	movlw	4
 12645  00373C  0100               	movlb	0	; () banked
 12646  00373E  2792               	addwf	(??_fireUIDs+4)& (0+255),f,b
 12647  003740  0E00               	movlw	0
 12648  003742  2393               	addwfc	(??_fireUIDs+5)& (0+255),f,b
 12649  003744  0100               	movlb	0	; () banked
 12650  003746  5190               	movf	(??_fireUIDs+2)& (0+255),w,b
 12651  003748  0100               	movlb	0	; () banked
 12652  00374A  2792               	addwf	(??_fireUIDs+4)& (0+255),f,b
 12653  00374C  0100               	movlb	0	; () banked
 12654  00374E  5191               	movf	(??_fireUIDs+3)& (0+255),w,b
 12655  003750  0100               	movlb	0	; () banked
 12656  003752  2393               	addwfc	(??_fireUIDs+5)& (0+255),f,b
 12657  003754  0E01               	movlw	1
 12658  003756  0100               	movlb	0	; () banked
 12659  003758  2592               	addwf	(??_fireUIDs+4)& (0+255),w,b
 12660  00375A  6ED9               	movwf	fsr2l,c
 12661  00375C  0E00               	movlw	0
 12662  00375E  0100               	movlb	0	; () banked
 12663  003760  2193               	addwfc	(??_fireUIDs+5)& (0+255),w,b
 12664  003762  6EDA               	movwf	fsr2h,c
 12665  003764  92DF               	bcf	indf2,1,c
 12666                           
 12667                           ;fire.c: 123: }
 12668  003766  D036               	goto	l2277
 12669  003768                     l15152:
 12670                           
 12671                           ; BSR set to: 0
 12672                           ;fire.c: 124: else
 12673                           ;fire.c: 125: ABB_1.det_arrays.info[i].data.connection_status = 1;
 12674  003768  0EF9               	movlw	249
 12675  00376A  0100               	movlb	0	; () banked
 12676  00376C  6F8E               	movwf	??_fireUIDs& (0+255),b
 12677  00376E  0E01               	movlw	1
 12678  003770  0100               	movlb	0	; () banked
 12679  003772  6F8F               	movwf	(??_fireUIDs+1)& (0+255),b
 12680  003774  C095  F090         	movff	fireUIDs@i,??_fireUIDs+2
 12681  003778  C096  F091         	movff	fireUIDs@i+1,??_fireUIDs+3
 12682  00377C  0100               	movlb	0	; () banked
 12683  00377E  90D8               	bcf	status,0,c
 12684  003780  3790               	rlcf	(??_fireUIDs+2)& (0+255),f,b
 12685  003782  3791               	rlcf	(??_fireUIDs+3)& (0+255),f,b
 12686  003784  0100               	movlb	0	; () banked
 12687  003786  90D8               	bcf	status,0,c
 12688  003788  3790               	rlcf	(??_fireUIDs+2)& (0+255),f,b
 12689  00378A  3791               	rlcf	(??_fireUIDs+3)& (0+255),f,b
 12690  00378C  0100               	movlb	0	; () banked
 12691  00378E  518E               	movf	??_fireUIDs& (0+255),w,b
 12692  003790  0100               	movlb	0	; () banked
 12693  003792  2790               	addwf	(??_fireUIDs+2)& (0+255),f,b
 12694  003794  0100               	movlb	0	; () banked
 12695  003796  518F               	movf	(??_fireUIDs+1)& (0+255),w,b
 12696  003798  0100               	movlb	0	; () banked
 12697  00379A  2391               	addwfc	(??_fireUIDs+3)& (0+255),f,b
 12698  00379C  0EC0               	movlw	low _ABB_1
 12699  00379E  0100               	movlb	0	; () banked
 12700  0037A0  6F92               	movwf	(??_fireUIDs+4)& (0+255),b
 12701  0037A2  0E03               	movlw	high _ABB_1
 12702  0037A4  0100               	movlb	0	; () banked
 12703  0037A6  6F93               	movwf	(??_fireUIDs+5)& (0+255),b
 12704  0037A8  0E04               	movlw	4
 12705  0037AA  0100               	movlb	0	; () banked
 12706  0037AC  2792               	addwf	(??_fireUIDs+4)& (0+255),f,b
 12707  0037AE  0E00               	movlw	0
 12708  0037B0  2393               	addwfc	(??_fireUIDs+5)& (0+255),f,b
 12709  0037B2  0100               	movlb	0	; () banked
 12710  0037B4  5190               	movf	(??_fireUIDs+2)& (0+255),w,b
 12711  0037B6  0100               	movlb	0	; () banked
 12712  0037B8  2792               	addwf	(??_fireUIDs+4)& (0+255),f,b
 12713  0037BA  0100               	movlb	0	; () banked
 12714  0037BC  5191               	movf	(??_fireUIDs+3)& (0+255),w,b
 12715  0037BE  0100               	movlb	0	; () banked
 12716  0037C0  2393               	addwfc	(??_fireUIDs+5)& (0+255),f,b
 12717  0037C2  0E01               	movlw	1
 12718  0037C4  0100               	movlb	0	; () banked
 12719  0037C6  2592               	addwf	(??_fireUIDs+4)& (0+255),w,b
 12720  0037C8  6ED9               	movwf	fsr2l,c
 12721  0037CA  0E00               	movlw	0
 12722  0037CC  0100               	movlb	0	; () banked
 12723  0037CE  2193               	addwfc	(??_fireUIDs+5)& (0+255),w,b
 12724  0037D0  6EDA               	movwf	fsr2h,c
 12725  0037D2  82DF               	bsf	indf2,1,c
 12726  0037D4                     l2277:
 12727                           
 12728                           ; BSR set to: 0
 12729  0037D4  0004               	clrwdt		;# 
 12730  0037D6  0100               	movlb	0	; () banked
 12731  0037D8  4B95               	infsnz	fireUIDs@i& (0+255),f,b
 12732  0037DA  2B96               	incf	(fireUIDs@i+1)& (0+255),f,b
 12733  0037DC                     l15156:
 12734                           
 12735                           ; BSR set to: 0
 12736  0037DC  EE23  F0C0         	lfsr	2,_ABB_1
 12737  0037E0  50DF               	movf	indf2,w,c
 12738  0037E2  0100               	movlb	0	; () banked
 12739  0037E4  6F8E               	movwf	??_fireUIDs& (0+255),b
 12740  0037E6  6B8F               	clrf	(??_fireUIDs+1)& (0+255),b
 12741  0037E8  0100               	movlb	0	; () banked
 12742  0037EA  5195               	movf	fireUIDs@i& (0+255),w,b
 12743  0037EC  0100               	movlb	0	; () banked
 12744  0037EE  5D8E               	subwf	??_fireUIDs& (0+255),w,b
 12745  0037F0  0100               	movlb	0	; () banked
 12746  0037F2  518F               	movf	(??_fireUIDs+1)& (0+255),w,b
 12747  0037F4  0A80               	xorlw	128
 12748  0037F6  0100               	movlb	0	; () banked
 12749  0037F8  6F90               	movwf	(??_fireUIDs+2)& (0+255),b
 12750  0037FA  0100               	movlb	0	; () banked
 12751  0037FC  5196               	movf	(fireUIDs@i+1)& (0+255),w,b
 12752  0037FE  0A80               	xorlw	128
 12753  003800  0100               	movlb	0	; () banked
 12754  003802  5990               	subwfb	(??_fireUIDs+2)& (0+255),w,b
 12755  003804  B0D8               	btfsc	status,0,c
 12756  003806  D763               	goto	l15142
 12757  003808                     l15158:
 12758                           
 12759                           ; BSR set to: 0
 12760                           ;fire.c: 127: }
 12761                           ;fire.c: 128: }
 12762                           ;fire.c: 129: if(ABB_1.dets_length > 0){
 12763  003808  EE23  F0C0         	lfsr	2,_ABB_1
 12764  00380C  50DF               	movf	indf2,w,c
 12765  00380E  B4D8               	btfsc	status,2,c
 12766  003810  0012               	return	
 12767                           
 12768                           ; BSR set to: 0
 12769                           ;fire.c: 130: EDD_Calibrate();
 12770  003812  EC03  F039         	call	_EDD_Calibrate	;wreg free
 12771  003816  0012               	return	
 12772  003818                     __end_of_fireUIDs:
 12773                           	opt stack 0
 12774                           tblptru	equ	0xFF8
 12775                           tblptrh	equ	0xFF7
 12776                           tblptrl	equ	0xFF6
 12777                           tablat	equ	0xFF5
 12778                           prodh	equ	0xFF4
 12779                           prodl	equ	0xFF3
 12780                           intcon	equ	0xFF2
 12781                           postinc0	equ	0xFEE
 12782                           wreg	equ	0xFE8
 12783                           indf1	equ	0xFE7
 12784                           postinc1	equ	0xFE6
 12785                           postdec1	equ	0xFE5
 12786                           fsr1h	equ	0xFE2
 12787                           fsr1l	equ	0xFE1
 12788                           indf2	equ	0xFDF
 12789                           postinc2	equ	0xFDE
 12790                           postdec2	equ	0xFDD
 12791                           fsr2h	equ	0xFDA
 12792                           fsr2l	equ	0xFD9
 12793                           status	equ	0xFD8
 12794                           
 12795 ;; *************** function _programRetryChecks *****************
 12796 ;; Defined at:
 12797 ;;		line 279 in file "eddComms.c"
 12798 ;; Parameters:    Size  Location     Type
 12799 ;;  window          1    wreg     unsigned char 
 12800 ;;  retry           2   43[BANK0 ] PTR unsigned char 
 12801 ;;		 -> fireUIDs@attempts(1), programUIDs@attempts(1), 
 12802 ;; Auto vars:     Size  Location     Type
 12803 ;;  window          1   45[BANK0 ] unsigned char 
 12804 ;; Return value:  Size  Location     Type
 12805 ;;                  1    wreg      unsigned char 
 12806 ;; Registers used:
 12807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12808 ;; Tracked objects:
 12809 ;;		On entry : 0/0
 12810 ;;		On exit  : 0/0
 12811 ;;		Unchanged: 0/0
 12812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12813 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12814 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12816 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12817 ;;Total ram usage:        3 bytes
 12818 ;; Hardware stack levels used:    1
 12819 ;; Hardware stack levels required when called:   13
 12820 ;; This function calls:
 12821 ;;		_programUID
 12822 ;; This function is called by:
 12823 ;;		_programUIDs
 12824 ;;		_fireUIDs
 12825 ;; This function uses a non-reentrant model
 12826 ;;
 12827                           
 12828                           	psect	text62
 12829  0065D6                     __ptext62:
 12830                           	opt stack 0
 12831  0065D6                     _programRetryChecks:
 12832                           	opt stack 14
 12833                           
 12834                           ;incstack = 0
 12835                           ;programRetryChecks@window stored from wreg
 12836  0065D6  0100               	movlb	0	; () banked
 12837  0065D8  6F8D               	movwf	programRetryChecks@window& (0+255),b
 12838                           
 12839                           ;eddComms.c: 280: switch(programUID(window)){
 12840  0065DA  D01D               	goto	l14090
 12841  0065DC                     l14056:
 12842                           
 12843                           ;eddComms.c: 282: *retry = 0;
 12844  0065DC  C08B  FFD9         	movff	programRetryChecks@retry,fsr2l
 12845  0065E0  C08C  FFDA         	movff	programRetryChecks@retry+1,fsr2h
 12846  0065E4  0E00               	movlw	0
 12847  0065E6  6EDF               	movwf	indf2,c
 12848                           
 12849                           ;eddComms.c: 283: return 1;
 12850  0065E8  0E01               	movlw	1
 12851  0065EA  0012               	return	
 12852  0065EC                     l14062:
 12853                           
 12854                           ;eddComms.c: 286: *retry --;
 12855  0065EC  0100               	movlb	0	; () banked
 12856  0065EE  078B               	decf	programRetryChecks@retry& (0+255),f,b
 12857  0065F0  A0D8               	btfss	status,0,c
 12858  0065F2  078C               	decf	(programRetryChecks@retry+1)& (0+255),f,b
 12859                           
 12860                           ; BSR set to: 0
 12861                           ;eddComms.c: 287: if(*retry > 0)
 12862  0065F4  C08B  FFD9         	movff	programRetryChecks@retry,fsr2l
 12863  0065F8  C08C  FFDA         	movff	programRetryChecks@retry+1,fsr2h
 12864  0065FC  50DF               	movf	indf2,w,c
 12865  0065FE  B4D8               	btfsc	status,2,c
 12866  006600  D002               	goto	l14072
 12867                           
 12868                           ; BSR set to: 0
 12869                           ;eddComms.c: 288: return 0;
 12870  006602  0E00               	movlw	0
 12871                           
 12872                           ; BSR set to: 0
 12873  006604  0012               	return	
 12874  006606                     l14072:
 12875                           
 12876                           ; BSR set to: 0
 12877                           ;eddComms.c: 289: else
 12878                           ;eddComms.c: 290: return 1;
 12879  006606  0E01               	movlw	1
 12880                           
 12881                           ; BSR set to: 0
 12882  006608  0012               	return	
 12883  00660A                     l14076:
 12884                           
 12885                           ;eddComms.c: 293: return 0;
 12886  00660A  0E00               	movlw	0
 12887  00660C  0012               	return	
 12888  00660E                     l14080:
 12889                           
 12890                           ;eddComms.c: 296: return 0;
 12891  00660E  0E00               	movlw	0
 12892  006610  0012               	return	
 12893  006612                     l14084:
 12894                           
 12895                           ;eddComms.c: 299: return 1;
 12896  006612  0E01               	movlw	1
 12897                           
 12898                           ;eddComms.c: 300: }
 12899  006614  0012               	return	
 12900  006616                     l14090:
 12901  006616  0100               	movlb	0	; () banked
 12902  006618  518D               	movf	programRetryChecks@window& (0+255),w,b
 12903  00661A  ECEC  F00F         	call	_programUID
 12904                           
 12905                           ; Switch size 1, requested type "space"
 12906                           ; Number of cases is 5, Range of values is 0 to 4
 12907                           ; switch strategies available:
 12908                           ; Name         Instructions Cycles
 12909                           ; simple_byte           16     9 (average)
 12910                           ;	Chosen strategy is simple_byte
 12911  00661E  0A00               	xorlw	0	; case 0
 12912  006620  B4D8               	btfsc	status,2,c
 12913  006622  D7DC               	goto	l14056
 12914  006624  0A01               	xorlw	1	; case 1
 12915  006626  B4D8               	btfsc	status,2,c
 12916  006628  D7E1               	goto	l14062
 12917  00662A  0A03               	xorlw	3	; case 2
 12918  00662C  B4D8               	btfsc	status,2,c
 12919  00662E  D7ED               	goto	l14076
 12920  006630  0A01               	xorlw	1	; case 3
 12921  006632  B4D8               	btfsc	status,2,c
 12922  006634  D7EC               	goto	l14080
 12923  006636  0A07               	xorlw	7	; case 4
 12924  006638  A4D8               	btfss	status,2,c
 12925  00663A  0012               	return	
 12926  00663C  D7EA               	goto	l14084
 12927  00663E                     __end_of_programRetryChecks:
 12928                           	opt stack 0
 12929                           tblptru	equ	0xFF8
 12930                           tblptrh	equ	0xFF7
 12931                           tblptrl	equ	0xFF6
 12932                           tablat	equ	0xFF5
 12933                           prodh	equ	0xFF4
 12934                           prodl	equ	0xFF3
 12935                           intcon	equ	0xFF2
 12936                           postinc0	equ	0xFEE
 12937                           wreg	equ	0xFE8
 12938                           indf1	equ	0xFE7
 12939                           postinc1	equ	0xFE6
 12940                           postdec1	equ	0xFE5
 12941                           fsr1h	equ	0xFE2
 12942                           fsr1l	equ	0xFE1
 12943                           indf2	equ	0xFDF
 12944                           postinc2	equ	0xFDE
 12945                           postdec2	equ	0xFDD
 12946                           fsr2h	equ	0xFDA
 12947                           fsr2l	equ	0xFD9
 12948                           status	equ	0xFD8
 12949                           
 12950 ;; *************** function _programUID *****************
 12951 ;; Defined at:
 12952 ;;		line 248 in file "eddComms.c"
 12953 ;; Parameters:    Size  Location     Type
 12954 ;;  window          1    wreg     unsigned char 
 12955 ;; Auto vars:     Size  Location     Type
 12956 ;;  window          1   42[BANK0 ] unsigned char 
 12957 ;;  windowCompar    2   40[BANK0 ] unsigned short 
 12958 ;;  delayCompare    2   36[BANK0 ] unsigned short 
 12959 ;;  txPacket        9   27[BANK0 ] unsigned char [9]
 12960 ;;  attempts        1   39[BANK0 ] unsigned char 
 12961 ;;  levelOfSucce    1   38[BANK0 ] unsigned char 
 12962 ;; Return value:  Size  Location     Type
 12963 ;;                  1    wreg      unsigned char 
 12964 ;; Registers used:
 12965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12966 ;; Tracked objects:
 12967 ;;		On entry : 0/0
 12968 ;;		On exit  : 0/0
 12969 ;;		Unchanged: 0/0
 12970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12972 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12973 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12974 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12975 ;;Total ram usage:       22 bytes
 12976 ;; Hardware stack levels used:    1
 12977 ;; Hardware stack levels required when called:   12
 12978 ;; This function calls:
 12979 ;;		_commandResponse
 12980 ;; This function is called by:
 12981 ;;		_programRetryChecks
 12982 ;;		_programUIDs
 12983 ;; This function uses a non-reentrant model
 12984 ;;
 12985                           
 12986                           	psect	text63
 12987  001FD8                     __ptext63:
 12988                           	opt stack 0
 12989  001FD8                     _programUID:
 12990                           	opt stack 15
 12991                           
 12992                           ;incstack = 0
 12993                           ;programUID@window stored from wreg
 12994  001FD8  0100               	movlb	0	; () banked
 12995  001FDA  6F8A               	movwf	programUID@window& (0+255),b
 12996                           
 12997                           ;eddComms.c: 249: unsigned char levelOfSuccess = 0;
 12998  001FDC  0E00               	movlw	0
 12999  001FDE  0100               	movlb	0	; () banked
 13000  001FE0  6F86               	movwf	programUID@levelOfSuccess& (0+255),b
 13001                           
 13002                           ;eddComms.c: 250: unsigned char attempts = 0;
 13003  001FE2  0E00               	movlw	0
 13004  001FE4  0100               	movlb	0	; () banked
 13005  001FE6  6F87               	movwf	programUID@attempts& (0+255),b
 13006                           
 13007                           ;eddComms.c: 251: unsigned char txPacket[9];
 13008                           ;eddComms.c: 252: txPacket[0] = 0b00000010;
 13009  001FE8  0E02               	movlw	2
 13010  001FEA  0100               	movlb	0	; () banked
 13011  001FEC  6F7B               	movwf	programUID@txPacket& (0+255),b
 13012                           
 13013                           ; BSR set to: 0
 13014                           ;eddComms.c: 253: txPacket[1] = ABB_1.det_arrays.UIDs[window].UID[0];
 13015  001FEE  0100               	movlb	0	; () banked
 13016  001FF0  518A               	movf	programUID@window& (0+255),w,b
 13017  001FF2  0D05               	mullw	5
 13018  001FF4  0EC4               	movlw	low (_ABB_1+4)
 13019  001FF6  24F3               	addwf	prodl,w,c
 13020  001FF8  6ED9               	movwf	fsr2l,c
 13021  001FFA  0E03               	movlw	high (_ABB_1+4)
 13022  001FFC  20F4               	addwfc	prodh,w,c
 13023  001FFE  6EDA               	movwf	fsr2h,c
 13024  002000  50DF               	movf	indf2,w,c
 13025  002002  0100               	movlb	0	; () banked
 13026  002004  6F7C               	movwf	(programUID@txPacket+1)& (0+255),b
 13027                           
 13028                           ; BSR set to: 0
 13029                           ;eddComms.c: 254: txPacket[2] = ABB_1.det_arrays.UIDs[window].UID[1];
 13030  002006  0100               	movlb	0	; () banked
 13031  002008  518A               	movf	programUID@window& (0+255),w,b
 13032  00200A  0D05               	mullw	5
 13033  00200C  0EC0               	movlw	low _ABB_1
 13034  00200E  0100               	movlb	0	; () banked
 13035  002010  6F75               	movwf	??_programUID& (0+255),b
 13036  002012  0E03               	movlw	high _ABB_1
 13037  002014  0100               	movlb	0	; () banked
 13038  002016  6F76               	movwf	(??_programUID+1)& (0+255),b
 13039  002018  0E04               	movlw	4
 13040  00201A  0100               	movlb	0	; () banked
 13041  00201C  2775               	addwf	??_programUID& (0+255),f,b
 13042  00201E  0E00               	movlw	0
 13043  002020  2376               	addwfc	(??_programUID+1)& (0+255),f,b
 13044  002022  50F3               	movf	prodl,w,c
 13045  002024  0100               	movlb	0	; () banked
 13046  002026  2775               	addwf	??_programUID& (0+255),f,b
 13047  002028  50F4               	movf	prodh,w,c
 13048  00202A  0100               	movlb	0	; () banked
 13049  00202C  2376               	addwfc	(??_programUID+1)& (0+255),f,b
 13050  00202E  0E01               	movlw	1
 13051  002030  0100               	movlb	0	; () banked
 13052  002032  2575               	addwf	??_programUID& (0+255),w,b
 13053  002034  6ED9               	movwf	fsr2l,c
 13054  002036  0E00               	movlw	0
 13055  002038  0100               	movlb	0	; () banked
 13056  00203A  2176               	addwfc	(??_programUID+1)& (0+255),w,b
 13057  00203C  6EDA               	movwf	fsr2h,c
 13058  00203E  50DF               	movf	indf2,w,c
 13059  002040  0100               	movlb	0	; () banked
 13060  002042  6F7D               	movwf	(programUID@txPacket+2)& (0+255),b
 13061                           
 13062                           ; BSR set to: 0
 13063                           ;eddComms.c: 255: txPacket[3] = ABB_1.det_arrays.UIDs[window].UID[2];
 13064  002044  0100               	movlb	0	; () banked
 13065  002046  518A               	movf	programUID@window& (0+255),w,b
 13066  002048  0D05               	mullw	5
 13067  00204A  0EC0               	movlw	low _ABB_1
 13068  00204C  0100               	movlb	0	; () banked
 13069  00204E  6F75               	movwf	??_programUID& (0+255),b
 13070  002050  0E03               	movlw	high _ABB_1
 13071  002052  0100               	movlb	0	; () banked
 13072  002054  6F76               	movwf	(??_programUID+1)& (0+255),b
 13073  002056  0E04               	movlw	4
 13074  002058  0100               	movlb	0	; () banked
 13075  00205A  2775               	addwf	??_programUID& (0+255),f,b
 13076  00205C  0E00               	movlw	0
 13077  00205E  2376               	addwfc	(??_programUID+1)& (0+255),f,b
 13078  002060  50F3               	movf	prodl,w,c
 13079  002062  0100               	movlb	0	; () banked
 13080  002064  2775               	addwf	??_programUID& (0+255),f,b
 13081  002066  50F4               	movf	prodh,w,c
 13082  002068  0100               	movlb	0	; () banked
 13083  00206A  2376               	addwfc	(??_programUID+1)& (0+255),f,b
 13084  00206C  0E02               	movlw	2
 13085  00206E  0100               	movlb	0	; () banked
 13086  002070  2575               	addwf	??_programUID& (0+255),w,b
 13087  002072  6ED9               	movwf	fsr2l,c
 13088  002074  0E00               	movlw	0
 13089  002076  0100               	movlb	0	; () banked
 13090  002078  2176               	addwfc	(??_programUID+1)& (0+255),w,b
 13091  00207A  6EDA               	movwf	fsr2h,c
 13092  00207C  50DF               	movf	indf2,w,c
 13093  00207E  0100               	movlb	0	; () banked
 13094  002080  6F7E               	movwf	(programUID@txPacket+3)& (0+255),b
 13095                           
 13096                           ; BSR set to: 0
 13097                           ;eddComms.c: 256: txPacket[4] = ABB_1.det_arrays.UIDs[window].UID[3];
 13098  002082  0100               	movlb	0	; () banked
 13099  002084  518A               	movf	programUID@window& (0+255),w,b
 13100  002086  0D05               	mullw	5
 13101  002088  0EC0               	movlw	low _ABB_1
 13102  00208A  0100               	movlb	0	; () banked
 13103  00208C  6F75               	movwf	??_programUID& (0+255),b
 13104  00208E  0E03               	movlw	high _ABB_1
 13105  002090  0100               	movlb	0	; () banked
 13106  002092  6F76               	movwf	(??_programUID+1)& (0+255),b
 13107  002094  0E04               	movlw	4
 13108  002096  0100               	movlb	0	; () banked
 13109  002098  2775               	addwf	??_programUID& (0+255),f,b
 13110  00209A  0E00               	movlw	0
 13111  00209C  2376               	addwfc	(??_programUID+1)& (0+255),f,b
 13112  00209E  50F3               	movf	prodl,w,c
 13113  0020A0  0100               	movlb	0	; () banked
 13114  0020A2  2775               	addwf	??_programUID& (0+255),f,b
 13115  0020A4  50F4               	movf	prodh,w,c
 13116  0020A6  0100               	movlb	0	; () banked
 13117  0020A8  2376               	addwfc	(??_programUID+1)& (0+255),f,b
 13118  0020AA  0E03               	movlw	3
 13119  0020AC  0100               	movlb	0	; () banked
 13120  0020AE  2575               	addwf	??_programUID& (0+255),w,b
 13121  0020B0  6ED9               	movwf	fsr2l,c
 13122  0020B2  0E00               	movlw	0
 13123  0020B4  0100               	movlb	0	; () banked
 13124  0020B6  2176               	addwfc	(??_programUID+1)& (0+255),w,b
 13125  0020B8  6EDA               	movwf	fsr2h,c
 13126  0020BA  50DF               	movf	indf2,w,c
 13127  0020BC  0100               	movlb	0	; () banked
 13128  0020BE  6F7F               	movwf	(programUID@txPacket+4)& (0+255),b
 13129                           
 13130                           ; BSR set to: 0
 13131                           ;eddComms.c: 257: txPacket[5] = 0;
 13132  0020C0  0E00               	movlw	0
 13133  0020C2  0100               	movlb	0	; () banked
 13134  0020C4  6F80               	movwf	(programUID@txPacket+5)& (0+255),b
 13135                           
 13136                           ; BSR set to: 0
 13137                           ;eddComms.c: 258: txPacket[6] = window;
 13138  0020C6  C08A  F081         	movff	programUID@window,programUID@txPacket+6
 13139                           
 13140                           ; BSR set to: 0
 13141                           ;eddComms.c: 259: txPacket[7] = ABB_1.det_arrays.info[window].delay >> 8;
 13142  0020CA  0EF9               	movlw	249
 13143  0020CC  0100               	movlb	0	; () banked
 13144  0020CE  6F75               	movwf	??_programUID& (0+255),b
 13145  0020D0  0E01               	movlw	1
 13146  0020D2  0100               	movlb	0	; () banked
 13147  0020D4  6F76               	movwf	(??_programUID+1)& (0+255),b
 13148  0020D6  0100               	movlb	0	; () banked
 13149  0020D8  518A               	movf	programUID@window& (0+255),w,b
 13150  0020DA  0D04               	mullw	4
 13151  0020DC  0100               	movlb	0	; () banked
 13152  0020DE  5175               	movf	??_programUID& (0+255),w,b
 13153  0020E0  26F3               	addwf	prodl,f,c
 13154  0020E2  0100               	movlb	0	; () banked
 13155  0020E4  5176               	movf	(??_programUID+1)& (0+255),w,b
 13156  0020E6  22F4               	addwfc	prodh,f,c
 13157  0020E8  0EC0               	movlw	low _ABB_1
 13158  0020EA  0100               	movlb	0	; () banked
 13159  0020EC  6F77               	movwf	(??_programUID+2)& (0+255),b
 13160  0020EE  0E03               	movlw	high _ABB_1
 13161  0020F0  0100               	movlb	0	; () banked
 13162  0020F2  6F78               	movwf	(??_programUID+3)& (0+255),b
 13163  0020F4  0E04               	movlw	4
 13164  0020F6  0100               	movlb	0	; () banked
 13165  0020F8  2777               	addwf	(??_programUID+2)& (0+255),f,b
 13166  0020FA  0E00               	movlw	0
 13167  0020FC  2378               	addwfc	(??_programUID+3)& (0+255),f,b
 13168  0020FE  50F3               	movf	prodl,w,c
 13169  002100  0100               	movlb	0	; () banked
 13170  002102  2777               	addwf	(??_programUID+2)& (0+255),f,b
 13171  002104  50F4               	movf	prodh,w,c
 13172  002106  0100               	movlb	0	; () banked
 13173  002108  2378               	addwfc	(??_programUID+3)& (0+255),f,b
 13174  00210A  0E02               	movlw	2
 13175  00210C  0100               	movlb	0	; () banked
 13176  00210E  2577               	addwf	(??_programUID+2)& (0+255),w,b
 13177  002110  6ED9               	movwf	fsr2l,c
 13178  002112  0E00               	movlw	0
 13179  002114  0100               	movlb	0	; () banked
 13180  002116  2178               	addwfc	(??_programUID+3)& (0+255),w,b
 13181  002118  6EDA               	movwf	fsr2h,c
 13182  00211A  CFDE F079          	movff	postinc2,??_programUID+4
 13183  00211E  CFDD F07A          	movff	postdec2,??_programUID+5
 13184  002122  C07A  F079         	movff	??_programUID+5,??_programUID+4
 13185  002126  0100               	movlb	0	; () banked
 13186  002128  6B7A               	clrf	(??_programUID+5)& (0+255),b
 13187  00212A  0100               	movlb	0	; () banked
 13188  00212C  5179               	movf	(??_programUID+4)& (0+255),w,b
 13189  00212E  0100               	movlb	0	; () banked
 13190  002130  6F82               	movwf	(programUID@txPacket+7)& (0+255),b
 13191                           
 13192                           ; BSR set to: 0
 13193                           ;eddComms.c: 260: txPacket[8] = (unsigned char) ABB_1.det_arrays.info[window].delay;
 13194  002132  0EF9               	movlw	249
 13195  002134  0100               	movlb	0	; () banked
 13196  002136  6F75               	movwf	??_programUID& (0+255),b
 13197  002138  0E01               	movlw	1
 13198  00213A  0100               	movlb	0	; () banked
 13199  00213C  6F76               	movwf	(??_programUID+1)& (0+255),b
 13200  00213E  0100               	movlb	0	; () banked
 13201  002140  518A               	movf	programUID@window& (0+255),w,b
 13202  002142  0D04               	mullw	4
 13203  002144  0100               	movlb	0	; () banked
 13204  002146  5175               	movf	??_programUID& (0+255),w,b
 13205  002148  26F3               	addwf	prodl,f,c
 13206  00214A  0100               	movlb	0	; () banked
 13207  00214C  5176               	movf	(??_programUID+1)& (0+255),w,b
 13208  00214E  22F4               	addwfc	prodh,f,c
 13209  002150  0EC0               	movlw	low _ABB_1
 13210  002152  0100               	movlb	0	; () banked
 13211  002154  6F77               	movwf	(??_programUID+2)& (0+255),b
 13212  002156  0E03               	movlw	high _ABB_1
 13213  002158  0100               	movlb	0	; () banked
 13214  00215A  6F78               	movwf	(??_programUID+3)& (0+255),b
 13215  00215C  0E04               	movlw	4
 13216  00215E  0100               	movlb	0	; () banked
 13217  002160  2777               	addwf	(??_programUID+2)& (0+255),f,b
 13218  002162  0E00               	movlw	0
 13219  002164  2378               	addwfc	(??_programUID+3)& (0+255),f,b
 13220  002166  50F3               	movf	prodl,w,c
 13221  002168  0100               	movlb	0	; () banked
 13222  00216A  2777               	addwf	(??_programUID+2)& (0+255),f,b
 13223  00216C  50F4               	movf	prodh,w,c
 13224  00216E  0100               	movlb	0	; () banked
 13225  002170  2378               	addwfc	(??_programUID+3)& (0+255),f,b
 13226  002172  0E02               	movlw	2
 13227  002174  0100               	movlb	0	; () banked
 13228  002176  2577               	addwf	(??_programUID+2)& (0+255),w,b
 13229  002178  6ED9               	movwf	fsr2l,c
 13230  00217A  0E00               	movlw	0
 13231  00217C  0100               	movlb	0	; () banked
 13232  00217E  2178               	addwfc	(??_programUID+3)& (0+255),w,b
 13233  002180  6EDA               	movwf	fsr2h,c
 13234  002182  50DF               	movf	indf2,w,c
 13235  002184  0100               	movlb	0	; () banked
 13236  002186  6F83               	movwf	(programUID@txPacket+8)& (0+255),b
 13237  002188                     l13462:
 13238                           
 13239                           ; BSR set to: 0
 13240  002188  0E04               	movlw	4
 13241  00218A  0100               	movlb	0	; () banked
 13242  00218C  6F6A               	movwf	commandResponse@RxLength& (0+255),b
 13243  00218E  0E7B               	movlw	low programUID@txPacket
 13244  002190  0100               	movlb	0	; () banked
 13245  002192  6F6B               	movwf	commandResponse@data& (0+255),b
 13246  002194  0E00               	movlw	high programUID@txPacket
 13247  002196  0100               	movlb	0	; () banked
 13248  002198  6F6C               	movwf	(commandResponse@data+1)& (0+255),b
 13249  00219A  0E09               	movlw	9
 13250  00219C  EC96  F028         	call	_commandResponse
 13251  0021A0  0900               	iorlw	0
 13252  0021A2  A4D8               	btfss	status,2,c
 13253  0021A4  D00B               	goto	l13466
 13254  0021A6  0100               	movlb	0	; () banked
 13255  0021A8  2B87               	incf	programUID@attempts& (0+255),f,b
 13256  0021AA  0587               	decf	programUID@attempts& (0+255),w,b
 13257  0021AC  0100               	movlb	0	; () banked
 13258  0021AE  6F75               	movwf	??_programUID& (0+255),b
 13259  0021B0  0100               	movlb	0	; () banked
 13260  0021B2  51C9               	movf	_maxProgramAttempts& (0+255),w,b
 13261  0021B4  0100               	movlb	0	; () banked
 13262  0021B6  5D75               	subwf	??_programUID& (0+255),w,b
 13263  0021B8  A0D8               	btfss	status,0,c
 13264  0021BA  D7E6               	goto	l13462
 13265  0021BC                     l13466:
 13266                           
 13267                           ;eddComms.c: 262: if(attempts < maxProgramAttempts){
 13268  0021BC  0100               	movlb	0	; () banked
 13269  0021BE  51C9               	movf	_maxProgramAttempts& (0+255),w,b
 13270  0021C0  0100               	movlb	0	; () banked
 13271  0021C2  5D87               	subwf	programUID@attempts& (0+255),w,b
 13272  0021C4  B0D8               	btfsc	status,0,c
 13273  0021C6  D060               	goto	l13486
 13274                           
 13275                           ; BSR set to: 0
 13276                           ;eddComms.c: 263: levelOfSuccess++;
 13277  0021C8  0100               	movlb	0	; () banked
 13278  0021CA  2B86               	incf	programUID@levelOfSuccess& (0+255),f,b
 13279                           
 13280                           ; BSR set to: 0
 13281                           ;eddComms.c: 264: unsigned short delayCompare = (unsigned short) response[2] << 8;
 13282  0021CC  0100               	movlb	0	; () banked
 13283  0021CE  51E2               	movf	(_response+2)& (0+255),w,b
 13284  0021D0  0100               	movlb	0	; () banked
 13285  0021D2  6F85               	movwf	(programUID@delayCompare+1)& (0+255),b
 13286  0021D4  6B84               	clrf	programUID@delayCompare& (0+255),b
 13287                           
 13288                           ; BSR set to: 0
 13289                           ;eddComms.c: 265: delayCompare |= (unsigned short) response[3];
 13290  0021D6  0100               	movlb	0	; () banked
 13291  0021D8  51E3               	movf	(_response+3)& (0+255),w,b
 13292  0021DA  0100               	movlb	0	; () banked
 13293  0021DC  1384               	iorwf	programUID@delayCompare& (0+255),f,b
 13294                           
 13295                           ; BSR set to: 0
 13296                           ;eddComms.c: 266: unsigned short windowCompare = (unsigned short) response[0] << 8;
 13297  0021DE  0100               	movlb	0	; () banked
 13298  0021E0  51E0               	movf	_response& (0+255),w,b
 13299  0021E2  0100               	movlb	0	; () banked
 13300  0021E4  6F89               	movwf	(programUID@windowCompare+1)& (0+255),b
 13301  0021E6  6B88               	clrf	programUID@windowCompare& (0+255),b
 13302                           
 13303                           ; BSR set to: 0
 13304                           ;eddComms.c: 267: windowCompare |= (unsigned short) response[1];
 13305  0021E8  0100               	movlb	0	; () banked
 13306  0021EA  51E1               	movf	(_response+1)& (0+255),w,b
 13307  0021EC  0100               	movlb	0	; () banked
 13308  0021EE  1388               	iorwf	programUID@windowCompare& (0+255),f,b
 13309                           
 13310                           ; BSR set to: 0
 13311                           ;eddComms.c: 268: if (windowCompare){
 13312  0021F0  0100               	movlb	0	; () banked
 13313  0021F2  5188               	movf	programUID@windowCompare& (0+255),w,b
 13314  0021F4  0100               	movlb	0	; () banked
 13315  0021F6  1189               	iorwf	(programUID@windowCompare+1)& (0+255),w,b
 13316  0021F8  B4D8               	btfsc	status,2,c
 13317  0021FA  D046               	goto	l13486
 13318                           
 13319                           ; BSR set to: 0
 13320                           ;eddComms.c: 269: if(ABB_1.det_arrays.info[window].delay == delayCompare)
 13321  0021FC  0EF9               	movlw	249
 13322  0021FE  0100               	movlb	0	; () banked
 13323  002200  6F75               	movwf	??_programUID& (0+255),b
 13324  002202  0E01               	movlw	1
 13325  002204  0100               	movlb	0	; () banked
 13326  002206  6F76               	movwf	(??_programUID+1)& (0+255),b
 13327  002208  0100               	movlb	0	; () banked
 13328  00220A  518A               	movf	programUID@window& (0+255),w,b
 13329  00220C  0D04               	mullw	4
 13330  00220E  0100               	movlb	0	; () banked
 13331  002210  5175               	movf	??_programUID& (0+255),w,b
 13332  002212  26F3               	addwf	prodl,f,c
 13333  002214  0100               	movlb	0	; () banked
 13334  002216  5176               	movf	(??_programUID+1)& (0+255),w,b
 13335  002218  22F4               	addwfc	prodh,f,c
 13336  00221A  0EC0               	movlw	low _ABB_1
 13337  00221C  0100               	movlb	0	; () banked
 13338  00221E  6F77               	movwf	(??_programUID+2)& (0+255),b
 13339  002220  0E03               	movlw	high _ABB_1
 13340  002222  0100               	movlb	0	; () banked
 13341  002224  6F78               	movwf	(??_programUID+3)& (0+255),b
 13342  002226  0E04               	movlw	4
 13343  002228  0100               	movlb	0	; () banked
 13344  00222A  2777               	addwf	(??_programUID+2)& (0+255),f,b
 13345  00222C  0E00               	movlw	0
 13346  00222E  2378               	addwfc	(??_programUID+3)& (0+255),f,b
 13347  002230  50F3               	movf	prodl,w,c
 13348  002232  0100               	movlb	0	; () banked
 13349  002234  2777               	addwf	(??_programUID+2)& (0+255),f,b
 13350  002236  50F4               	movf	prodh,w,c
 13351  002238  0100               	movlb	0	; () banked
 13352  00223A  2378               	addwfc	(??_programUID+3)& (0+255),f,b
 13353  00223C  0E02               	movlw	2
 13354  00223E  0100               	movlb	0	; () banked
 13355  002240  2577               	addwf	(??_programUID+2)& (0+255),w,b
 13356  002242  6ED9               	movwf	fsr2l,c
 13357  002244  0E00               	movlw	0
 13358  002246  0100               	movlb	0	; () banked
 13359  002248  2178               	addwfc	(??_programUID+3)& (0+255),w,b
 13360  00224A  6EDA               	movwf	fsr2h,c
 13361  00224C  0100               	movlb	0	; () banked
 13362  00224E  5184               	movf	programUID@delayCompare& (0+255),w,b
 13363  002250  18DE               	xorwf	postinc2,w,c
 13364  002252  E108               	bnz	l1864
 13365  002254  0100               	movlb	0	; () banked
 13366  002256  5185               	movf	(programUID@delayCompare+1)& (0+255),w,b
 13367  002258  18DE               	xorwf	postinc2,w,c
 13368  00225A  A4D8               	btfss	status,2,c
 13369  00225C  D003               	goto	l1864
 13370                           
 13371                           ; BSR set to: 0
 13372                           ;eddComms.c: 270: levelOfSuccess += 2;
 13373  00225E  0E02               	movlw	2
 13374  002260  0100               	movlb	0	; () banked
 13375  002262  2786               	addwf	programUID@levelOfSuccess& (0+255),f,b
 13376  002264                     l1864:
 13377                           
 13378                           ; BSR set to: 0
 13379                           ;eddComms.c: 271: if(window == windowCompare)
 13380  002264  0100               	movlb	0	; () banked
 13381  002266  518A               	movf	programUID@window& (0+255),w,b
 13382  002268  0100               	movlb	0	; () banked
 13383  00226A  6F75               	movwf	??_programUID& (0+255),b
 13384  00226C  6B76               	clrf	(??_programUID+1)& (0+255),b
 13385  00226E  0100               	movlb	0	; () banked
 13386  002270  5188               	movf	programUID@windowCompare& (0+255),w,b
 13387  002272  0100               	movlb	0	; () banked
 13388  002274  1975               	xorwf	??_programUID& (0+255),w,b
 13389  002276  E108               	bnz	l13486
 13390  002278  0100               	movlb	0	; () banked
 13391  00227A  5189               	movf	(programUID@windowCompare+1)& (0+255),w,b
 13392  00227C  0100               	movlb	0	; () banked
 13393  00227E  1976               	xorwf	(??_programUID+1)& (0+255),w,b
 13394  002280  A4D8               	btfss	status,2,c
 13395  002282  D002               	goto	l13486
 13396                           
 13397                           ; BSR set to: 0
 13398                           ;eddComms.c: 272: levelOfSuccess++;
 13399  002284  0100               	movlb	0	; () banked
 13400  002286  2B86               	incf	programUID@levelOfSuccess& (0+255),f,b
 13401  002288                     l13486:
 13402                           
 13403                           ; BSR set to: 0
 13404                           ;eddComms.c: 273: }
 13405                           ;eddComms.c: 274: }
 13406                           ;eddComms.c: 275: return levelOfSuccess;
 13407  002288  0100               	movlb	0	; () banked
 13408  00228A  5186               	movf	programUID@levelOfSuccess& (0+255),w,b
 13409  00228C  0012               	return	
 13410  00228E                     __end_of_programUID:
 13411                           	opt stack 0
 13412                           tblptru	equ	0xFF8
 13413                           tblptrh	equ	0xFF7
 13414                           tblptrl	equ	0xFF6
 13415                           tablat	equ	0xFF5
 13416                           prodh	equ	0xFF4
 13417                           prodl	equ	0xFF3
 13418                           intcon	equ	0xFF2
 13419                           postinc0	equ	0xFEE
 13420                           wreg	equ	0xFE8
 13421                           indf1	equ	0xFE7
 13422                           postinc1	equ	0xFE6
 13423                           postdec1	equ	0xFE5
 13424                           fsr1h	equ	0xFE2
 13425                           fsr1l	equ	0xFE1
 13426                           indf2	equ	0xFDF
 13427                           postinc2	equ	0xFDE
 13428                           postdec2	equ	0xFDD
 13429                           fsr2h	equ	0xFDA
 13430                           fsr2l	equ	0xFD9
 13431                           status	equ	0xFD8
 13432                           
 13433 ;; *************** function _EDD_Calibrate *****************
 13434 ;; Defined at:
 13435 ;;		line 359 in file "eddComms.c"
 13436 ;; Parameters:    Size  Location     Type
 13437 ;;		None
 13438 ;; Auto vars:     Size  Location     Type
 13439 ;;  EDD_calibrat    1   10[BANK0 ] unsigned char 
 13440 ;; Return value:  Size  Location     Type
 13441 ;;                  1    wreg      void 
 13442 ;; Registers used:
 13443 ;;		wreg, status,2, status,0, cstack
 13444 ;; Tracked objects:
 13445 ;;		On entry : 0/0
 13446 ;;		On exit  : 0/0
 13447 ;;		Unchanged: 0/0
 13448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13450 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13452 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13453 ;;Total ram usage:        1 bytes
 13454 ;; Hardware stack levels used:    1
 13455 ;; Hardware stack levels required when called:   11
 13456 ;; This function calls:
 13457 ;;		_Delay_ms
 13458 ;;		_Set_Line_High
 13459 ;;		_Tx_Calibration_Pulses
 13460 ;;		_Tx_Word
 13461 ;; This function is called by:
 13462 ;;		_programUIDs
 13463 ;;		_fireUIDs
 13464 ;; This function uses a non-reentrant model
 13465 ;;
 13466                           
 13467                           	psect	text64
 13468  007206                     __ptext64:
 13469                           	opt stack 0
 13470  007206                     _EDD_Calibrate:
 13471                           	opt stack 16
 13472                           
 13473                           ;eddComms.c: 360: unsigned char EDD_calibration_command;
 13474                           ;eddComms.c: 361: EDD_calibration_command = 0b00001000;
 13475                           
 13476                           ; BSR set to: 0
 13477                           ;incstack = 0
 13478  007206  0E08               	movlw	8
 13479  007208  0100               	movlb	0	; () banked
 13480  00720A  6F6A               	movwf	EDD_Calibrate@EDD_calibration_command& (0+255),b
 13481                           
 13482                           ; BSR set to: 0
 13483                           ;eddComms.c: 363: Tx_Word(EDD_calibration_command);
 13484  00720C  0100               	movlb	0	; () banked
 13485  00720E  516A               	movf	EDD_Calibrate@EDD_calibration_command& (0+255),w,b
 13486  007210  EC7D  F032         	call	_Tx_Word
 13487                           
 13488                           ;eddComms.c: 364: Delay_ms(13);
 13489  007214  0E00               	movlw	0
 13490  007216  0100               	movlb	0	; () banked
 13491  007218  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
 13492  00721A  0E0D               	movlw	13
 13493  00721C  6F60               	movwf	Delay_ms@ms& (0+255),b
 13494  00721E  EC7B  F034         	call	_Delay_ms	;wreg free
 13495                           
 13496                           ;eddComms.c: 366: Tx_Calibration_Pulses();
 13497  007222  EC4D  F02E         	call	_Tx_Calibration_Pulses	;wreg free
 13498                           
 13499                           ;eddComms.c: 367: Set_Line_High();
 13500  007226  ECF8  F03D         	call	_Set_Line_High	;wreg free
 13501                           
 13502                           ;eddComms.c: 368: Delay_ms(3000);
 13503  00722A  0E0B               	movlw	11
 13504  00722C  0100               	movlb	0	; () banked
 13505  00722E  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
 13506  007230  0EB8               	movlw	184
 13507  007232  6F60               	movwf	Delay_ms@ms& (0+255),b
 13508  007234  EC7B  F034         	call	_Delay_ms	;wreg free
 13509  007238  0012               	return		;funcret
 13510  00723A                     __end_of_EDD_Calibrate:
 13511                           	opt stack 0
 13512                           tblptru	equ	0xFF8
 13513                           tblptrh	equ	0xFF7
 13514                           tblptrl	equ	0xFF6
 13515                           tablat	equ	0xFF5
 13516                           prodh	equ	0xFF4
 13517                           prodl	equ	0xFF3
 13518                           intcon	equ	0xFF2
 13519                           postinc0	equ	0xFEE
 13520                           wreg	equ	0xFE8
 13521                           indf1	equ	0xFE7
 13522                           postinc1	equ	0xFE6
 13523                           postdec1	equ	0xFE5
 13524                           fsr1h	equ	0xFE2
 13525                           fsr1l	equ	0xFE1
 13526                           indf2	equ	0xFDF
 13527                           postinc2	equ	0xFDE
 13528                           postdec2	equ	0xFDD
 13529                           fsr2h	equ	0xFDA
 13530                           fsr2l	equ	0xFD9
 13531                           status	equ	0xFD8
 13532                           
 13533 ;; *************** function _Tx_Calibration_Pulses *****************
 13534 ;; Defined at:
 13535 ;;		line 371 in file "eddComms.c"
 13536 ;; Parameters:    Size  Location     Type
 13537 ;;		None
 13538 ;; Auto vars:     Size  Location     Type
 13539 ;;  j               2    4[BANK0 ] int 
 13540 ;;  j               2    2[BANK0 ] int 
 13541 ;;  i               2    0[BANK0 ] int 
 13542 ;; Return value:  Size  Location     Type
 13543 ;;                  1    wreg      void 
 13544 ;; Registers used:
 13545 ;;		wreg, status,2, status,0, cstack
 13546 ;; Tracked objects:
 13547 ;;		On entry : 0/0
 13548 ;;		On exit  : 0/0
 13549 ;;		Unchanged: 0/0
 13550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13552 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13554 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13555 ;;Total ram usage:        6 bytes
 13556 ;; Hardware stack levels used:    1
 13557 ;; Hardware stack levels required when called:    9
 13558 ;; This function calls:
 13559 ;;		_Delay_100us
 13560 ;;		_Set_Line_High
 13561 ;;		_Set_Line_Low
 13562 ;; This function is called by:
 13563 ;;		_EDD_Calibrate
 13564 ;; This function uses a non-reentrant model
 13565 ;;
 13566                           
 13567                           	psect	text65
 13568  005C9A                     __ptext65:
 13569                           	opt stack 0
 13570  005C9A                     _Tx_Calibration_Pulses:
 13571                           	opt stack 17
 13572                           
 13573                           ;eddComms.c: 373: for (int i = 0; i < 10010; i++){
 13574                           
 13575                           ;incstack = 0
 13576  005C9A  0E00               	movlw	0
 13577  005C9C  0100               	movlb	0	; () banked
 13578  005C9E  6F61               	movwf	(Tx_Calibration_Pulses@i+1)& (0+255),b
 13579  005CA0  0E00               	movlw	0
 13580  005CA2  6F60               	movwf	Tx_Calibration_Pulses@i& (0+255),b
 13581  005CA4                     l13492:
 13582                           
 13583                           ; BSR set to: 0
 13584  005CA4  0100               	movlb	0	; () banked
 13585  005CA6  BF61               	btfsc	(Tx_Calibration_Pulses@i+1)& (0+255),7,b
 13586  005CA8  D008               	goto	l13496
 13587  005CAA  0E1A               	movlw	26
 13588  005CAC  0100               	movlb	0	; () banked
 13589  005CAE  5D60               	subwf	Tx_Calibration_Pulses@i& (0+255),w,b
 13590  005CB0  0E27               	movlw	39
 13591  005CB2  0100               	movlb	0	; () banked
 13592  005CB4  5961               	subwfb	(Tx_Calibration_Pulses@i+1)& (0+255),w,b
 13593  005CB6  B0D8               	btfsc	status,0,c
 13594  005CB8  0012               	return	
 13595  005CBA                     l13496:
 13596                           
 13597                           ; BSR set to: 0
 13598                           ;eddComms.c: 374: Set_Line_Low();
 13599  005CBA  ECF6  F03D         	call	_Set_Line_Low	;wreg free
 13600                           
 13601                           ;eddComms.c: 375: for (int j = 0; j < 10 - 2; j++){
 13602  005CBE  0E00               	movlw	0
 13603  005CC0  0100               	movlb	0	; () banked
 13604  005CC2  6F63               	movwf	(Tx_Calibration_Pulses@j+1)& (0+255),b
 13605  005CC4  0E00               	movlw	0
 13606  005CC6  6F62               	movwf	Tx_Calibration_Pulses@j& (0+255),b
 13607  005CC8                     l13500:
 13608                           
 13609                           ; BSR set to: 0
 13610  005CC8  0100               	movlb	0	; () banked
 13611  005CCA  BF63               	btfsc	(Tx_Calibration_Pulses@j+1)& (0+255),7,b
 13612  005CCC  D008               	goto	l13504
 13613  005CCE  0100               	movlb	0	; () banked
 13614  005CD0  5163               	movf	(Tx_Calibration_Pulses@j+1)& (0+255),w,b
 13615  005CD2  E10B               	bnz	l13510
 13616  005CD4  0E08               	movlw	8
 13617  005CD6  0100               	movlb	0	; () banked
 13618  005CD8  5D62               	subwf	Tx_Calibration_Pulses@j& (0+255),w,b
 13619  005CDA  B0D8               	btfsc	status,0,c
 13620  005CDC  D006               	goto	l13510
 13621  005CDE                     l13504:
 13622                           
 13623                           ; BSR set to: 0
 13624                           ;eddComms.c: 376: Delay_100us();
 13625  005CDE  EC7D  F03D         	call	_Delay_100us	;wreg free
 13626  005CE2  0100               	movlb	0	; () banked
 13627  005CE4  4B62               	infsnz	Tx_Calibration_Pulses@j& (0+255),f,b
 13628  005CE6  2B63               	incf	(Tx_Calibration_Pulses@j+1)& (0+255),f,b
 13629  005CE8  D7EF               	goto	l13500
 13630  005CEA                     l13510:
 13631                           
 13632                           ; BSR set to: 0
 13633                           ;eddComms.c: 377: }
 13634                           ;eddComms.c: 378: Set_Line_High();
 13635  005CEA  ECF8  F03D         	call	_Set_Line_High	;wreg free
 13636                           
 13637                           ;eddComms.c: 379: for (int j = 0; j < 2; j++){
 13638  005CEE  0E00               	movlw	0
 13639  005CF0  0100               	movlb	0	; () banked
 13640  005CF2  6F65               	movwf	(Tx_Calibration_Pulses@j_6087+1)& (0+255),b
 13641  005CF4  0E00               	movlw	0
 13642  005CF6  6F64               	movwf	Tx_Calibration_Pulses@j_6087& (0+255),b
 13643                           
 13644                           ; BSR set to: 0
 13645  005CF8  0100               	movlb	0	; () banked
 13646  005CFA  BF65               	btfsc	(Tx_Calibration_Pulses@j_6087+1)& (0+255),7,b
 13647  005CFC  D008               	goto	l13518
 13648  005CFE  0100               	movlb	0	; () banked
 13649  005D00  5165               	movf	(Tx_Calibration_Pulses@j_6087+1)& (0+255),w,b
 13650  005D02  E111               	bnz	l1918
 13651  005D04  0E02               	movlw	2
 13652  005D06  0100               	movlb	0	; () banked
 13653  005D08  5D64               	subwf	Tx_Calibration_Pulses@j_6087& (0+255),w,b
 13654  005D0A  B0D8               	btfsc	status,0,c
 13655  005D0C  D00C               	goto	l1918
 13656  005D0E                     l13518:
 13657                           
 13658                           ; BSR set to: 0
 13659                           ;eddComms.c: 380: Delay_100us();
 13660  005D0E  EC7D  F03D         	call	_Delay_100us	;wreg free
 13661  005D12  0100               	movlb	0	; () banked
 13662  005D14  4B64               	infsnz	Tx_Calibration_Pulses@j_6087& (0+255),f,b
 13663  005D16  2B65               	incf	(Tx_Calibration_Pulses@j_6087+1)& (0+255),f,b
 13664                           
 13665                           ; BSR set to: 0
 13666  005D18  0100               	movlb	0	; () banked
 13667  005D1A  BF65               	btfsc	(Tx_Calibration_Pulses@j_6087+1)& (0+255),7,b
 13668  005D1C  D7F8               	goto	l13518
 13669  005D1E  0100               	movlb	0	; () banked
 13670  005D20  5165               	movf	(Tx_Calibration_Pulses@j_6087+1)& (0+255),w,b
 13671  005D22  E101               	bnz	u9740
 13672  005D24  D7EF               	goto	L10
 13673  005D26                     u9740:
 13674  005D26                     l1918:
 13675                           
 13676                           ; BSR set to: 0
 13677  005D26  0004               	clrwdt		;# 
 13678  005D28  0100               	movlb	0	; () banked
 13679  005D2A  4B60               	infsnz	Tx_Calibration_Pulses@i& (0+255),f,b
 13680  005D2C  2B61               	incf	(Tx_Calibration_Pulses@i+1)& (0+255),f,b
 13681  005D2E  D7BA               	goto	l13492
 13682  005D30                     __end_of_Tx_Calibration_Pulses:
 13683                           	opt stack 0
 13684                           tblptru	equ	0xFF8
 13685                           tblptrh	equ	0xFF7
 13686                           tblptrl	equ	0xFF6
 13687                           tablat	equ	0xFF5
 13688                           prodh	equ	0xFF4
 13689                           prodl	equ	0xFF3
 13690                           intcon	equ	0xFF2
 13691                           postinc0	equ	0xFEE
 13692                           wreg	equ	0xFE8
 13693                           indf1	equ	0xFE7
 13694                           postinc1	equ	0xFE6
 13695                           postdec1	equ	0xFE5
 13696                           fsr1h	equ	0xFE2
 13697                           fsr1l	equ	0xFE1
 13698                           indf2	equ	0xFDF
 13699                           postinc2	equ	0xFDE
 13700                           postdec2	equ	0xFDD
 13701                           fsr2h	equ	0xFDA
 13702                           fsr2l	equ	0xFD9
 13703                           status	equ	0xFD8
 13704                           
 13705 ;; *************** function _checkForUnfiredEdds *****************
 13706 ;; Defined at:
 13707 ;;		line 87 in file "fire.c"
 13708 ;; Parameters:    Size  Location     Type
 13709 ;;		None
 13710 ;; Auto vars:     Size  Location     Type
 13711 ;;  i               2   34[BANK0 ] int 
 13712 ;; Return value:  Size  Location     Type
 13713 ;;                  1    wreg      void 
 13714 ;; Registers used:
 13715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13716 ;; Tracked objects:
 13717 ;;		On entry : 0/0
 13718 ;;		On exit  : 0/0
 13719 ;;		Unchanged: 0/0
 13720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13722 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13723 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13724 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13725 ;;Total ram usage:        8 bytes
 13726 ;; Hardware stack levels used:    1
 13727 ;; Hardware stack levels required when called:   13
 13728 ;; This function calls:
 13729 ;;		_Set_Line_High
 13730 ;;		_Set_Line_Low
 13731 ;;		__delay_ms
 13732 ;;		_checkLineForConnectedUIDs
 13733 ;; This function is called by:
 13734 ;;		_fire
 13735 ;;		_firePic
 13736 ;; This function uses a non-reentrant model
 13737 ;;
 13738                           
 13739                           	psect	text66
 13740  0024EC                     __ptext66:
 13741                           	opt stack 0
 13742  0024EC                     _checkForUnfiredEdds:
 13743                           	opt stack 15
 13744                           
 13745                           ; BSR set to: 0
 13746                           ;incstack = 0
 13747  0024EC  0004               	clrwdt		;# 
 13748                           
 13749                           ;fire.c: 89: Set_Line_Low();
 13750  0024EE  ECF6  F03D         	call	_Set_Line_Low	;wreg free
 13751                           
 13752                           ;fire.c: 90: WDTCON0bits.SEN = 0;
 13753  0024F2  010E               	movlb	14	; () banked
 13754  0024F4  913D               	bcf	61,0,b	;volatile
 13755                           
 13756                           ; BSR set to: 14
 13757                           ;fire.c: 91: _delay_ms(10000);
 13758  0024F6  0E27               	movlw	39
 13759  0024F8  0100               	movlb	0	; () banked
 13760  0024FA  6F62               	movwf	(__delay_ms@delay+1)& (0+255),b
 13761  0024FC  0E10               	movlw	16
 13762  0024FE  6F61               	movwf	__delay_ms@delay& (0+255),b
 13763  002500  EC02  F037         	call	__delay_ms	;wreg free
 13764                           
 13765                           ;fire.c: 92: WDTCON0bits.SEN = 1;
 13766  002504  010E               	movlb	14	; () banked
 13767  002506  813D               	bsf	61,0,b	;volatile
 13768                           
 13769                           ; BSR set to: 14
 13770                           ;fire.c: 93: Set_Line_High();
 13771  002508  ECF8  F03D         	call	_Set_Line_High	;wreg free
 13772                           
 13773                           ;fire.c: 94: _delay_ms(100);
 13774  00250C  0E00               	movlw	0
 13775  00250E  0100               	movlb	0	; () banked
 13776  002510  6F62               	movwf	(__delay_ms@delay+1)& (0+255),b
 13777  002512  0E64               	movlw	100
 13778  002514  6F61               	movwf	__delay_ms@delay& (0+255),b
 13779  002516  EC02  F037         	call	__delay_ms	;wreg free
 13780  00251A  0004               	clrwdt		;# 
 13781                           
 13782                           ;fire.c: 96: if(checkLineForConnectedUIDs())
 13783  00251C  EC86  F033         	call	_checkLineForConnectedUIDs	;wreg free
 13784  002520  0900               	iorlw	0
 13785  002522  B4D8               	btfsc	status,2,c
 13786  002524  D002               	goto	l15178
 13787                           
 13788                           ;fire.c: 97: FLAGS.fireSuccessFlag = 0;
 13789  002526  9039               	bcf	_FLAGS+2,0,c
 13790  002528  0012               	return	
 13791  00252A                     l15178:
 13792                           
 13793                           ;fire.c: 98: else{
 13794                           ;fire.c: 99: for(int i = 1; i <= ABB_1.dets_length; i++){
 13795  00252A  0E00               	movlw	0
 13796  00252C  0100               	movlb	0	; () banked
 13797  00252E  6F83               	movwf	(checkForUnfiredEdds@i+1)& (0+255),b
 13798  002530  0E01               	movlw	1
 13799  002532  6F82               	movwf	checkForUnfiredEdds@i& (0+255),b
 13800  002534  D0DE               	goto	l15190
 13801  002536                     l15180:
 13802                           
 13803                           ; BSR set to: 0
 13804                           ;fire.c: 100: if(ABB_1.det_arrays.info[i].data.connection_status){
 13805  002536  0EF9               	movlw	249
 13806  002538  0100               	movlb	0	; () banked
 13807  00253A  6F7C               	movwf	??_checkForUnfiredEdds& (0+255),b
 13808  00253C  0E01               	movlw	1
 13809  00253E  0100               	movlb	0	; () banked
 13810  002540  6F7D               	movwf	(??_checkForUnfiredEdds+1)& (0+255),b
 13811  002542  C082  F07E         	movff	checkForUnfiredEdds@i,??_checkForUnfiredEdds+2
 13812  002546  C083  F07F         	movff	checkForUnfiredEdds@i+1,??_checkForUnfiredEdds+3
 13813  00254A  0100               	movlb	0	; () banked
 13814  00254C  90D8               	bcf	status,0,c
 13815  00254E  377E               	rlcf	(??_checkForUnfiredEdds+2)& (0+255),f,b
 13816  002550  377F               	rlcf	(??_checkForUnfiredEdds+3)& (0+255),f,b
 13817  002552  0100               	movlb	0	; () banked
 13818  002554  90D8               	bcf	status,0,c
 13819  002556  377E               	rlcf	(??_checkForUnfiredEdds+2)& (0+255),f,b
 13820  002558  377F               	rlcf	(??_checkForUnfiredEdds+3)& (0+255),f,b
 13821  00255A  0100               	movlb	0	; () banked
 13822  00255C  517C               	movf	??_checkForUnfiredEdds& (0+255),w,b
 13823  00255E  0100               	movlb	0	; () banked
 13824  002560  277E               	addwf	(??_checkForUnfiredEdds+2)& (0+255),f,b
 13825  002562  0100               	movlb	0	; () banked
 13826  002564  517D               	movf	(??_checkForUnfiredEdds+1)& (0+255),w,b
 13827  002566  0100               	movlb	0	; () banked
 13828  002568  237F               	addwfc	(??_checkForUnfiredEdds+3)& (0+255),f,b
 13829  00256A  0EC0               	movlw	low _ABB_1
 13830  00256C  0100               	movlb	0	; () banked
 13831  00256E  6F80               	movwf	(??_checkForUnfiredEdds+4)& (0+255),b
 13832  002570  0E03               	movlw	high _ABB_1
 13833  002572  0100               	movlb	0	; () banked
 13834  002574  6F81               	movwf	(??_checkForUnfiredEdds+5)& (0+255),b
 13835  002576  0E04               	movlw	4
 13836  002578  0100               	movlb	0	; () banked
 13837  00257A  2780               	addwf	(??_checkForUnfiredEdds+4)& (0+255),f,b
 13838  00257C  0E00               	movlw	0
 13839  00257E  2381               	addwfc	(??_checkForUnfiredEdds+5)& (0+255),f,b
 13840  002580  0100               	movlb	0	; () banked
 13841  002582  517E               	movf	(??_checkForUnfiredEdds+2)& (0+255),w,b
 13842  002584  0100               	movlb	0	; () banked
 13843  002586  2780               	addwf	(??_checkForUnfiredEdds+4)& (0+255),f,b
 13844  002588  0100               	movlb	0	; () banked
 13845  00258A  517F               	movf	(??_checkForUnfiredEdds+3)& (0+255),w,b
 13846  00258C  0100               	movlb	0	; () banked
 13847  00258E  2381               	addwfc	(??_checkForUnfiredEdds+5)& (0+255),f,b
 13848  002590  0E01               	movlw	1
 13849  002592  0100               	movlb	0	; () banked
 13850  002594  2580               	addwf	(??_checkForUnfiredEdds+4)& (0+255),w,b
 13851  002596  6ED9               	movwf	fsr2l,c
 13852  002598  0E00               	movlw	0
 13853  00259A  0100               	movlb	0	; () banked
 13854  00259C  2181               	addwfc	(??_checkForUnfiredEdds+5)& (0+255),w,b
 13855  00259E  6EDA               	movwf	fsr2h,c
 13856  0025A0  A2DF               	btfss	indf2,1,c
 13857  0025A2  D06D               	goto	l15184
 13858                           
 13859                           ; BSR set to: 0
 13860                           ;fire.c: 101: ABB_1.det_arrays.info[i].data.fired = 1;
 13861  0025A4  0EF9               	movlw	249
 13862  0025A6  0100               	movlb	0	; () banked
 13863  0025A8  6F7C               	movwf	??_checkForUnfiredEdds& (0+255),b
 13864  0025AA  0E01               	movlw	1
 13865  0025AC  0100               	movlb	0	; () banked
 13866  0025AE  6F7D               	movwf	(??_checkForUnfiredEdds+1)& (0+255),b
 13867  0025B0  C082  F07E         	movff	checkForUnfiredEdds@i,??_checkForUnfiredEdds+2
 13868  0025B4  C083  F07F         	movff	checkForUnfiredEdds@i+1,??_checkForUnfiredEdds+3
 13869  0025B8  0100               	movlb	0	; () banked
 13870  0025BA  90D8               	bcf	status,0,c
 13871  0025BC  377E               	rlcf	(??_checkForUnfiredEdds+2)& (0+255),f,b
 13872  0025BE  377F               	rlcf	(??_checkForUnfiredEdds+3)& (0+255),f,b
 13873  0025C0  0100               	movlb	0	; () banked
 13874  0025C2  90D8               	bcf	status,0,c
 13875  0025C4  377E               	rlcf	(??_checkForUnfiredEdds+2)& (0+255),f,b
 13876  0025C6  377F               	rlcf	(??_checkForUnfiredEdds+3)& (0+255),f,b
 13877  0025C8  0100               	movlb	0	; () banked
 13878  0025CA  517C               	movf	??_checkForUnfiredEdds& (0+255),w,b
 13879  0025CC  0100               	movlb	0	; () banked
 13880  0025CE  277E               	addwf	(??_checkForUnfiredEdds+2)& (0+255),f,b
 13881  0025D0  0100               	movlb	0	; () banked
 13882  0025D2  517D               	movf	(??_checkForUnfiredEdds+1)& (0+255),w,b
 13883  0025D4  0100               	movlb	0	; () banked
 13884  0025D6  237F               	addwfc	(??_checkForUnfiredEdds+3)& (0+255),f,b
 13885  0025D8  0EC0               	movlw	low _ABB_1
 13886  0025DA  0100               	movlb	0	; () banked
 13887  0025DC  6F80               	movwf	(??_checkForUnfiredEdds+4)& (0+255),b
 13888  0025DE  0E03               	movlw	high _ABB_1
 13889  0025E0  0100               	movlb	0	; () banked
 13890  0025E2  6F81               	movwf	(??_checkForUnfiredEdds+5)& (0+255),b
 13891  0025E4  0E04               	movlw	4
 13892  0025E6  0100               	movlb	0	; () banked
 13893  0025E8  2780               	addwf	(??_checkForUnfiredEdds+4)& (0+255),f,b
 13894  0025EA  0E00               	movlw	0
 13895  0025EC  2381               	addwfc	(??_checkForUnfiredEdds+5)& (0+255),f,b
 13896  0025EE  0100               	movlb	0	; () banked
 13897  0025F0  517E               	movf	(??_checkForUnfiredEdds+2)& (0+255),w,b
 13898  0025F2  0100               	movlb	0	; () banked
 13899  0025F4  2780               	addwf	(??_checkForUnfiredEdds+4)& (0+255),f,b
 13900  0025F6  0100               	movlb	0	; () banked
 13901  0025F8  517F               	movf	(??_checkForUnfiredEdds+3)& (0+255),w,b
 13902  0025FA  0100               	movlb	0	; () banked
 13903  0025FC  2381               	addwfc	(??_checkForUnfiredEdds+5)& (0+255),f,b
 13904  0025FE  0E01               	movlw	1
 13905  002600  0100               	movlb	0	; () banked
 13906  002602  2580               	addwf	(??_checkForUnfiredEdds+4)& (0+255),w,b
 13907  002604  6ED9               	movwf	fsr2l,c
 13908  002606  0E00               	movlw	0
 13909  002608  0100               	movlb	0	; () banked
 13910  00260A  2181               	addwfc	(??_checkForUnfiredEdds+5)& (0+255),w,b
 13911  00260C  6EDA               	movwf	fsr2h,c
 13912  00260E  86DF               	bsf	indf2,3,c
 13913                           
 13914                           ;fire.c: 102: ABB_1.det_arrays.info[i].data.connection_status = 0;
 13915  002610  0EF9               	movlw	249
 13916  002612  0100               	movlb	0	; () banked
 13917  002614  6F7C               	movwf	??_checkForUnfiredEdds& (0+255),b
 13918  002616  0E01               	movlw	1
 13919  002618  0100               	movlb	0	; () banked
 13920  00261A  6F7D               	movwf	(??_checkForUnfiredEdds+1)& (0+255),b
 13921  00261C  C082  F07E         	movff	checkForUnfiredEdds@i,??_checkForUnfiredEdds+2
 13922  002620  C083  F07F         	movff	checkForUnfiredEdds@i+1,??_checkForUnfiredEdds+3
 13923  002624  0100               	movlb	0	; () banked
 13924  002626  90D8               	bcf	status,0,c
 13925  002628  377E               	rlcf	(??_checkForUnfiredEdds+2)& (0+255),f,b
 13926  00262A  377F               	rlcf	(??_checkForUnfiredEdds+3)& (0+255),f,b
 13927  00262C  0100               	movlb	0	; () banked
 13928  00262E  90D8               	bcf	status,0,c
 13929  002630  377E               	rlcf	(??_checkForUnfiredEdds+2)& (0+255),f,b
 13930  002632  377F               	rlcf	(??_checkForUnfiredEdds+3)& (0+255),f,b
 13931  002634  0100               	movlb	0	; () banked
 13932  002636  517C               	movf	??_checkForUnfiredEdds& (0+255),w,b
 13933  002638  0100               	movlb	0	; () banked
 13934  00263A  277E               	addwf	(??_checkForUnfiredEdds+2)& (0+255),f,b
 13935  00263C  0100               	movlb	0	; () banked
 13936  00263E  517D               	movf	(??_checkForUnfiredEdds+1)& (0+255),w,b
 13937  002640  0100               	movlb	0	; () banked
 13938  002642  237F               	addwfc	(??_checkForUnfiredEdds+3)& (0+255),f,b
 13939  002644  0EC0               	movlw	low _ABB_1
 13940  002646  0100               	movlb	0	; () banked
 13941  002648  6F80               	movwf	(??_checkForUnfiredEdds+4)& (0+255),b
 13942  00264A  0E03               	movlw	high _ABB_1
 13943  00264C  0100               	movlb	0	; () banked
 13944  00264E  6F81               	movwf	(??_checkForUnfiredEdds+5)& (0+255),b
 13945  002650  0E04               	movlw	4
 13946  002652  0100               	movlb	0	; () banked
 13947  002654  2780               	addwf	(??_checkForUnfiredEdds+4)& (0+255),f,b
 13948  002656  0E00               	movlw	0
 13949  002658  2381               	addwfc	(??_checkForUnfiredEdds+5)& (0+255),f,b
 13950  00265A  0100               	movlb	0	; () banked
 13951  00265C  517E               	movf	(??_checkForUnfiredEdds+2)& (0+255),w,b
 13952  00265E  0100               	movlb	0	; () banked
 13953  002660  2780               	addwf	(??_checkForUnfiredEdds+4)& (0+255),f,b
 13954  002662  0100               	movlb	0	; () banked
 13955  002664  517F               	movf	(??_checkForUnfiredEdds+3)& (0+255),w,b
 13956  002666  0100               	movlb	0	; () banked
 13957  002668  2381               	addwfc	(??_checkForUnfiredEdds+5)& (0+255),f,b
 13958  00266A  0E01               	movlw	1
 13959  00266C  0100               	movlb	0	; () banked
 13960  00266E  2580               	addwf	(??_checkForUnfiredEdds+4)& (0+255),w,b
 13961  002670  6ED9               	movwf	fsr2l,c
 13962  002672  0E00               	movlw	0
 13963  002674  0100               	movlb	0	; () banked
 13964  002676  2181               	addwfc	(??_checkForUnfiredEdds+5)& (0+255),w,b
 13965  002678  6EDA               	movwf	fsr2h,c
 13966  00267A  92DF               	bcf	indf2,1,c
 13967                           
 13968                           ;fire.c: 103: }
 13969  00267C  D037               	goto	l15188
 13970  00267E                     l15184:
 13971                           
 13972                           ; BSR set to: 0
 13973                           ;fire.c: 104: else{
 13974                           ;fire.c: 105: ABB_1.det_arrays.info[i].data.fired = 0;
 13975  00267E  0EF9               	movlw	249
 13976  002680  0100               	movlb	0	; () banked
 13977  002682  6F7C               	movwf	??_checkForUnfiredEdds& (0+255),b
 13978  002684  0E01               	movlw	1
 13979  002686  0100               	movlb	0	; () banked
 13980  002688  6F7D               	movwf	(??_checkForUnfiredEdds+1)& (0+255),b
 13981  00268A  C082  F07E         	movff	checkForUnfiredEdds@i,??_checkForUnfiredEdds+2
 13982  00268E  C083  F07F         	movff	checkForUnfiredEdds@i+1,??_checkForUnfiredEdds+3
 13983  002692  0100               	movlb	0	; () banked
 13984  002694  90D8               	bcf	status,0,c
 13985  002696  377E               	rlcf	(??_checkForUnfiredEdds+2)& (0+255),f,b
 13986  002698  377F               	rlcf	(??_checkForUnfiredEdds+3)& (0+255),f,b
 13987  00269A  0100               	movlb	0	; () banked
 13988  00269C  90D8               	bcf	status,0,c
 13989  00269E  377E               	rlcf	(??_checkForUnfiredEdds+2)& (0+255),f,b
 13990  0026A0  377F               	rlcf	(??_checkForUnfiredEdds+3)& (0+255),f,b
 13991  0026A2  0100               	movlb	0	; () banked
 13992  0026A4  517C               	movf	??_checkForUnfiredEdds& (0+255),w,b
 13993  0026A6  0100               	movlb	0	; () banked
 13994  0026A8  277E               	addwf	(??_checkForUnfiredEdds+2)& (0+255),f,b
 13995  0026AA  0100               	movlb	0	; () banked
 13996  0026AC  517D               	movf	(??_checkForUnfiredEdds+1)& (0+255),w,b
 13997  0026AE  0100               	movlb	0	; () banked
 13998  0026B0  237F               	addwfc	(??_checkForUnfiredEdds+3)& (0+255),f,b
 13999  0026B2  0EC0               	movlw	low _ABB_1
 14000  0026B4  0100               	movlb	0	; () banked
 14001  0026B6  6F80               	movwf	(??_checkForUnfiredEdds+4)& (0+255),b
 14002  0026B8  0E03               	movlw	high _ABB_1
 14003  0026BA  0100               	movlb	0	; () banked
 14004  0026BC  6F81               	movwf	(??_checkForUnfiredEdds+5)& (0+255),b
 14005  0026BE  0E04               	movlw	4
 14006  0026C0  0100               	movlb	0	; () banked
 14007  0026C2  2780               	addwf	(??_checkForUnfiredEdds+4)& (0+255),f,b
 14008  0026C4  0E00               	movlw	0
 14009  0026C6  2381               	addwfc	(??_checkForUnfiredEdds+5)& (0+255),f,b
 14010  0026C8  0100               	movlb	0	; () banked
 14011  0026CA  517E               	movf	(??_checkForUnfiredEdds+2)& (0+255),w,b
 14012  0026CC  0100               	movlb	0	; () banked
 14013  0026CE  2780               	addwf	(??_checkForUnfiredEdds+4)& (0+255),f,b
 14014  0026D0  0100               	movlb	0	; () banked
 14015  0026D2  517F               	movf	(??_checkForUnfiredEdds+3)& (0+255),w,b
 14016  0026D4  0100               	movlb	0	; () banked
 14017  0026D6  2381               	addwfc	(??_checkForUnfiredEdds+5)& (0+255),f,b
 14018  0026D8  0E01               	movlw	1
 14019  0026DA  0100               	movlb	0	; () banked
 14020  0026DC  2580               	addwf	(??_checkForUnfiredEdds+4)& (0+255),w,b
 14021  0026DE  6ED9               	movwf	fsr2l,c
 14022  0026E0  0E00               	movlw	0
 14023  0026E2  0100               	movlb	0	; () banked
 14024  0026E4  2181               	addwfc	(??_checkForUnfiredEdds+5)& (0+255),w,b
 14025  0026E6  6EDA               	movwf	fsr2h,c
 14026  0026E8  96DF               	bcf	indf2,3,c
 14027                           
 14028                           ; BSR set to: 0
 14029                           ;fire.c: 106: FLAGS.fireSuccessFlag = 0;
 14030  0026EA  9039               	bcf	_FLAGS+2,0,c
 14031  0026EC                     l15188:
 14032                           
 14033                           ; BSR set to: 0
 14034  0026EC  0100               	movlb	0	; () banked
 14035  0026EE  4B82               	infsnz	checkForUnfiredEdds@i& (0+255),f,b
 14036  0026F0  2B83               	incf	(checkForUnfiredEdds@i+1)& (0+255),f,b
 14037  0026F2                     l15190:
 14038                           
 14039                           ; BSR set to: 0
 14040  0026F2  EE23  F0C0         	lfsr	2,_ABB_1
 14041  0026F6  50DF               	movf	indf2,w,c
 14042  0026F8  0100               	movlb	0	; () banked
 14043  0026FA  6F7C               	movwf	??_checkForUnfiredEdds& (0+255),b
 14044  0026FC  6B7D               	clrf	(??_checkForUnfiredEdds+1)& (0+255),b
 14045  0026FE  0100               	movlb	0	; () banked
 14046  002700  5182               	movf	checkForUnfiredEdds@i& (0+255),w,b
 14047  002702  0100               	movlb	0	; () banked
 14048  002704  5D7C               	subwf	??_checkForUnfiredEdds& (0+255),w,b
 14049  002706  0100               	movlb	0	; () banked
 14050  002708  517D               	movf	(??_checkForUnfiredEdds+1)& (0+255),w,b
 14051  00270A  0A80               	xorlw	128
 14052  00270C  0100               	movlb	0	; () banked
 14053  00270E  6F7E               	movwf	(??_checkForUnfiredEdds+2)& (0+255),b
 14054  002710  0100               	movlb	0	; () banked
 14055  002712  5183               	movf	(checkForUnfiredEdds@i+1)& (0+255),w,b
 14056  002714  0A80               	xorlw	128
 14057  002716  0100               	movlb	0	; () banked
 14058  002718  597E               	subwfb	(??_checkForUnfiredEdds+2)& (0+255),w,b
 14059  00271A  A0D8               	btfss	status,0,c
 14060  00271C  0012               	return	
 14061  00271E  D70B               	goto	l15180
 14062  002720                     __end_of_checkForUnfiredEdds:
 14063                           	opt stack 0
 14064                           tblptru	equ	0xFF8
 14065                           tblptrh	equ	0xFF7
 14066                           tblptrl	equ	0xFF6
 14067                           tablat	equ	0xFF5
 14068                           prodh	equ	0xFF4
 14069                           prodl	equ	0xFF3
 14070                           intcon	equ	0xFF2
 14071                           postinc0	equ	0xFEE
 14072                           wreg	equ	0xFE8
 14073                           indf1	equ	0xFE7
 14074                           postinc1	equ	0xFE6
 14075                           postdec1	equ	0xFE5
 14076                           fsr1h	equ	0xFE2
 14077                           fsr1l	equ	0xFE1
 14078                           indf2	equ	0xFDF
 14079                           postinc2	equ	0xFDE
 14080                           postdec2	equ	0xFDD
 14081                           fsr2h	equ	0xFDA
 14082                           fsr2l	equ	0xFD9
 14083                           status	equ	0xFD8
 14084                           
 14085 ;; *************** function _checkLineForConnectedUIDs *****************
 14086 ;; Defined at:
 14087 ;;		line 343 in file "eddComms.c"
 14088 ;; Parameters:    Size  Location     Type
 14089 ;;		None
 14090 ;; Auto vars:     Size  Location     Type
 14091 ;;  txPacket        5   22[BANK0 ] unsigned char [5]
 14092 ;;  attempts        1   27[BANK0 ] unsigned char 
 14093 ;; Return value:  Size  Location     Type
 14094 ;;                  1    wreg      unsigned char 
 14095 ;; Registers used:
 14096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14097 ;; Tracked objects:
 14098 ;;		On entry : 0/0
 14099 ;;		On exit  : 0/0
 14100 ;;		Unchanged: 0/0
 14101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14103 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14104 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14105 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14106 ;;Total ram usage:        7 bytes
 14107 ;; Hardware stack levels used:    1
 14108 ;; Hardware stack levels required when called:   12
 14109 ;; This function calls:
 14110 ;;		_commandResponse
 14111 ;; This function is called by:
 14112 ;;		_programUIDs
 14113 ;;		_checkForUnfiredEdds
 14114 ;; This function uses a non-reentrant model
 14115 ;;
 14116                           
 14117                           	psect	text67
 14118  00670C                     __ptext67:
 14119                           	opt stack 0
 14120  00670C                     _checkLineForConnectedUIDs:
 14121                           	opt stack 15
 14122                           
 14123                           ;eddComms.c: 344: unsigned char attempts = 0;
 14124                           
 14125                           ;incstack = 0
 14126  00670C  0E00               	movlw	0
 14127  00670E  0100               	movlb	0	; () banked
 14128  006710  6F7B               	movwf	checkLineForConnectedUIDs@attempts& (0+255),b
 14129                           
 14130                           ;eddComms.c: 345: unsigned char txPacket[5];
 14131                           ;eddComms.c: 346: txPacket[0] = 0b00000011;
 14132  006712  0E03               	movlw	3
 14133  006714  0100               	movlb	0	; () banked
 14134  006716  6F76               	movwf	checkLineForConnectedUIDs@txPacket& (0+255),b
 14135                           
 14136                           ;eddComms.c: 347: txPacket[1] = 0;
 14137  006718  0E00               	movlw	0
 14138  00671A  0100               	movlb	0	; () banked
 14139  00671C  6F77               	movwf	(checkLineForConnectedUIDs@txPacket+1)& (0+255),b
 14140                           
 14141                           ;eddComms.c: 348: txPacket[2] = 0;
 14142  00671E  0E00               	movlw	0
 14143  006720  0100               	movlb	0	; () banked
 14144  006722  6F78               	movwf	(checkLineForConnectedUIDs@txPacket+2)& (0+255),b
 14145                           
 14146                           ;eddComms.c: 349: txPacket[3] = 0;
 14147  006724  0E00               	movlw	0
 14148  006726  0100               	movlb	0	; () banked
 14149  006728  6F79               	movwf	(checkLineForConnectedUIDs@txPacket+3)& (0+255),b
 14150                           
 14151                           ;eddComms.c: 350: txPacket[4] = 0;
 14152  00672A  0E00               	movlw	0
 14153  00672C  0100               	movlb	0	; () banked
 14154  00672E  6F7A               	movwf	(checkLineForConnectedUIDs@txPacket+4)& (0+255),b
 14155  006730                     l14144:
 14156                           
 14157                           ; BSR set to: 0
 14158  006730  0E04               	movlw	4
 14159  006732  0100               	movlb	0	; () banked
 14160  006734  6F6A               	movwf	commandResponse@RxLength& (0+255),b
 14161  006736  0E76               	movlw	low checkLineForConnectedUIDs@txPacket
 14162  006738  0100               	movlb	0	; () banked
 14163  00673A  6F6B               	movwf	commandResponse@data& (0+255),b
 14164  00673C  0E00               	movlw	high checkLineForConnectedUIDs@txPacket
 14165  00673E  0100               	movlb	0	; () banked
 14166  006740  6F6C               	movwf	(commandResponse@data+1)& (0+255),b
 14167  006742  0E05               	movlw	5
 14168  006744  EC96  F028         	call	_commandResponse
 14169  006748  0900               	iorlw	0
 14170  00674A  A4D8               	btfss	status,2,c
 14171  00674C  D009               	goto	l14148
 14172  00674E  0100               	movlb	0	; () banked
 14173  006750  2B7B               	incf	checkLineForConnectedUIDs@attempts& (0+255),f,b
 14174  006752  057B               	decf	checkLineForConnectedUIDs@attempts& (0+255),w,b
 14175  006754  0100               	movlb	0	; () banked
 14176  006756  6F75               	movwf	??_checkLineForConnectedUIDs& (0+255),b
 14177  006758  0E03               	movlw	3
 14178  00675A  0100               	movlb	0	; () banked
 14179  00675C  6575               	cpfsgt	??_checkLineForConnectedUIDs& (0+255),b
 14180  00675E  D7E8               	goto	l14144
 14181  006760                     l14148:
 14182                           
 14183                           ;eddComms.c: 352: if(attempts < 4){
 14184  006760  0E04               	movlw	4
 14185  006762  0100               	movlb	0	; () banked
 14186  006764  617B               	cpfslt	checkLineForConnectedUIDs@attempts& (0+255),b
 14187  006766  D002               	goto	l14154
 14188                           
 14189                           ; BSR set to: 0
 14190                           ;eddComms.c: 353: return 1;
 14191  006768  0E01               	movlw	1
 14192                           
 14193                           ; BSR set to: 0
 14194  00676A  0012               	return	
 14195  00676C                     l14154:
 14196                           
 14197                           ; BSR set to: 0
 14198                           ;eddComms.c: 354: }
 14199                           ;eddComms.c: 355: return 0;
 14200  00676C  0E00               	movlw	0
 14201  00676E  0012               	return	
 14202  006770                     __end_of_checkLineForConnectedUIDs:
 14203                           	opt stack 0
 14204                           tblptru	equ	0xFF8
 14205                           tblptrh	equ	0xFF7
 14206                           tblptrl	equ	0xFF6
 14207                           tablat	equ	0xFF5
 14208                           prodh	equ	0xFF4
 14209                           prodl	equ	0xFF3
 14210                           intcon	equ	0xFF2
 14211                           postinc0	equ	0xFEE
 14212                           wreg	equ	0xFE8
 14213                           indf1	equ	0xFE7
 14214                           postinc1	equ	0xFE6
 14215                           postdec1	equ	0xFE5
 14216                           fsr1h	equ	0xFE2
 14217                           fsr1l	equ	0xFE1
 14218                           indf2	equ	0xFDF
 14219                           postinc2	equ	0xFDE
 14220                           postdec2	equ	0xFDD
 14221                           fsr2h	equ	0xFDA
 14222                           fsr2l	equ	0xFD9
 14223                           status	equ	0xFD8
 14224                           
 14225 ;; *************** function _commandResponse *****************
 14226 ;; Defined at:
 14227 ;;		line 194 in file "eddComms.c"
 14228 ;; Parameters:    Size  Location     Type
 14229 ;;  TxLength        1    wreg     unsigned char 
 14230 ;;  RxLength        1   10[BANK0 ] unsigned char 
 14231 ;;  data            2   11[BANK0 ] PTR unsigned char 
 14232 ;;		 -> checkLineForConnectedUIDs@txPacket(5), selfCheckUID@txPacket(3), programUID@txPacket(9), readUID@txPacket(5), 
 14233 ;; Auto vars:     Size  Location     Type
 14234 ;;  TxLength        1   16[BANK0 ] unsigned char 
 14235 ;;  i               2   19[BANK0 ] int 
 14236 ;;  i               2   17[BANK0 ] int 
 14237 ;; Return value:  Size  Location     Type
 14238 ;;                  1    wreg      unsigned char 
 14239 ;; Registers used:
 14240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14241 ;; Tracked objects:
 14242 ;;		On entry : 0/0
 14243 ;;		On exit  : 0/0
 14244 ;;		Unchanged: 0/0
 14245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14246 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14247 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14248 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14249 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14250 ;;Total ram usage:       11 bytes
 14251 ;; Hardware stack levels used:    1
 14252 ;; Hardware stack levels required when called:   11
 14253 ;; This function calls:
 14254 ;;		_Delay_ms
 14255 ;;		_Tx_Word
 14256 ;;		_rxWordEDD
 14257 ;; This function is called by:
 14258 ;;		_readUID
 14259 ;;		_programUID
 14260 ;;		_selfCheckUID
 14261 ;;		_checkLineForConnectedUIDs
 14262 ;; This function uses a non-reentrant model
 14263 ;;
 14264                           
 14265                           	psect	text68
 14266  00512C                     __ptext68:
 14267                           	opt stack 0
 14268  00512C                     _commandResponse:
 14269                           	opt stack 15
 14270                           
 14271                           ; BSR set to: 0
 14272                           ;incstack = 0
 14273                           ;commandResponse@TxLength stored from wreg
 14274  00512C  0100               	movlb	0	; () banked
 14275  00512E  6F70               	movwf	commandResponse@TxLength& (0+255),b
 14276                           
 14277                           ;eddComms.c: 195: Delay_ms(50);
 14278  005130  0E00               	movlw	0
 14279  005132  0100               	movlb	0	; () banked
 14280  005134  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
 14281  005136  0E32               	movlw	50
 14282  005138  6F60               	movwf	Delay_ms@ms& (0+255),b
 14283  00513A  EC7B  F034         	call	_Delay_ms	;wreg free
 14284                           
 14285                           ;eddComms.c: 196: for(int i = 0; i < TxLength; i++){
 14286  00513E  0E00               	movlw	0
 14287  005140  0100               	movlb	0	; () banked
 14288  005142  6F72               	movwf	(commandResponse@i+1)& (0+255),b
 14289  005144  0E00               	movlw	0
 14290  005146  6F71               	movwf	commandResponse@i& (0+255),b
 14291  005148  D010               	goto	l13062
 14292  00514A                     l13058:
 14293                           
 14294                           ; BSR set to: 0
 14295                           ;eddComms.c: 197: Tx_Word(*(data + i));
 14296  00514A  0100               	movlb	0	; () banked
 14297  00514C  5171               	movf	commandResponse@i& (0+255),w,b
 14298  00514E  0100               	movlb	0	; () banked
 14299  005150  256B               	addwf	commandResponse@data& (0+255),w,b
 14300  005152  6ED9               	movwf	fsr2l,c
 14301  005154  0100               	movlb	0	; () banked
 14302  005156  5172               	movf	(commandResponse@i+1)& (0+255),w,b
 14303  005158  0100               	movlb	0	; () banked
 14304  00515A  216C               	addwfc	(commandResponse@data+1)& (0+255),w,b
 14305  00515C  6EDA               	movwf	fsr2h,c
 14306  00515E  50DF               	movf	indf2,w,c
 14307  005160  EC7D  F032         	call	_Tx_Word
 14308  005164  0100               	movlb	0	; () banked
 14309  005166  4B71               	infsnz	commandResponse@i& (0+255),f,b
 14310  005168  2B72               	incf	(commandResponse@i+1)& (0+255),f,b
 14311  00516A                     l13062:
 14312                           
 14313                           ; BSR set to: 0
 14314  00516A  0100               	movlb	0	; () banked
 14315  00516C  5170               	movf	commandResponse@TxLength& (0+255),w,b
 14316  00516E  0100               	movlb	0	; () banked
 14317  005170  6F6D               	movwf	??_commandResponse& (0+255),b
 14318  005172  6B6E               	clrf	(??_commandResponse+1)& (0+255),b
 14319  005174  0100               	movlb	0	; () banked
 14320  005176  516D               	movf	??_commandResponse& (0+255),w,b
 14321  005178  0100               	movlb	0	; () banked
 14322  00517A  5D71               	subwf	commandResponse@i& (0+255),w,b
 14323  00517C  0100               	movlb	0	; () banked
 14324  00517E  5172               	movf	(commandResponse@i+1)& (0+255),w,b
 14325  005180  0A80               	xorlw	128
 14326  005182  0100               	movlb	0	; () banked
 14327  005184  6F6F               	movwf	(??_commandResponse+2)& (0+255),b
 14328  005186  0100               	movlb	0	; () banked
 14329  005188  516E               	movf	(??_commandResponse+1)& (0+255),w,b
 14330  00518A  0A80               	xorlw	128
 14331  00518C  0100               	movlb	0	; () banked
 14332  00518E  596F               	subwfb	(??_commandResponse+2)& (0+255),w,b
 14333  005190  A0D8               	btfss	status,0,c
 14334  005192  D7DB               	goto	l13058
 14335                           
 14336                           ; BSR set to: 0
 14337                           ;eddComms.c: 198: }
 14338                           ;eddComms.c: 199: for(int i = 0; i < RxLength; i++){
 14339                           
 14340                           ; BSR set to: 0
 14341  005194  0E00               	movlw	0
 14342  005196  0100               	movlb	0	; () banked
 14343  005198  6F74               	movwf	(commandResponse@i_6055+1)& (0+255),b
 14344  00519A  0E00               	movlw	0
 14345  00519C  6F73               	movwf	commandResponse@i_6055& (0+255),b
 14346  00519E  D015               	goto	l13076
 14347  0051A0                     l13066:
 14348                           
 14349                           ; BSR set to: 0
 14350                           ;eddComms.c: 200: if(rxWordEDD())
 14351  0051A0  EC65  F01D         	call	_rxWordEDD	;wreg free
 14352  0051A4  0900               	iorlw	0
 14353  0051A6  B4D8               	btfsc	status,2,c
 14354  0051A8  D00B               	goto	l13070
 14355                           
 14356                           ;eddComms.c: 201: response[i] = byteRead;
 14357  0051AA  0EE0               	movlw	low _response
 14358  0051AC  0100               	movlb	0	; () banked
 14359  0051AE  2573               	addwf	commandResponse@i_6055& (0+255),w,b
 14360  0051B0  6ED9               	movwf	fsr2l,c
 14361  0051B2  0E00               	movlw	high _response
 14362  0051B4  0100               	movlb	0	; () banked
 14363  0051B6  2174               	addwfc	(commandResponse@i_6055+1)& (0+255),w,b
 14364  0051B8  6EDA               	movwf	fsr2h,c
 14365  0051BA  C0C4  FFDF         	movff	_byteRead,indf2
 14366  0051BE  D002               	goto	l13074
 14367  0051C0                     l13070:
 14368                           
 14369                           ;eddComms.c: 202: else
 14370                           ;eddComms.c: 203: return 0;
 14371  0051C0  0E00               	movlw	0
 14372  0051C2  0012               	return	
 14373  0051C4                     l13074:
 14374  0051C4  0100               	movlb	0	; () banked
 14375  0051C6  4B73               	infsnz	commandResponse@i_6055& (0+255),f,b
 14376  0051C8  2B74               	incf	(commandResponse@i_6055+1)& (0+255),f,b
 14377  0051CA                     l13076:
 14378                           
 14379                           ; BSR set to: 0
 14380  0051CA  0100               	movlb	0	; () banked
 14381  0051CC  516A               	movf	commandResponse@RxLength& (0+255),w,b
 14382  0051CE  0100               	movlb	0	; () banked
 14383  0051D0  6F6D               	movwf	??_commandResponse& (0+255),b
 14384  0051D2  6B6E               	clrf	(??_commandResponse+1)& (0+255),b
 14385  0051D4  0100               	movlb	0	; () banked
 14386  0051D6  516D               	movf	??_commandResponse& (0+255),w,b
 14387  0051D8  0100               	movlb	0	; () banked
 14388  0051DA  5D73               	subwf	commandResponse@i_6055& (0+255),w,b
 14389  0051DC  0100               	movlb	0	; () banked
 14390  0051DE  5174               	movf	(commandResponse@i_6055+1)& (0+255),w,b
 14391  0051E0  0A80               	xorlw	128
 14392  0051E2  0100               	movlb	0	; () banked
 14393  0051E4  6F6F               	movwf	(??_commandResponse+2)& (0+255),b
 14394  0051E6  0100               	movlb	0	; () banked
 14395  0051E8  516E               	movf	(??_commandResponse+1)& (0+255),w,b
 14396  0051EA  0A80               	xorlw	128
 14397  0051EC  0100               	movlb	0	; () banked
 14398  0051EE  596F               	subwfb	(??_commandResponse+2)& (0+255),w,b
 14399  0051F0  A0D8               	btfss	status,0,c
 14400  0051F2  D7D6               	goto	l13066
 14401                           
 14402                           ; BSR set to: 0
 14403                           ;eddComms.c: 204: }
 14404                           ;eddComms.c: 205: return 1;
 14405                           
 14406                           ; BSR set to: 0
 14407  0051F4  0E01               	movlw	1
 14408  0051F6  0012               	return	
 14409  0051F8                     __end_of_commandResponse:
 14410                           	opt stack 0
 14411                           tblptru	equ	0xFF8
 14412                           tblptrh	equ	0xFF7
 14413                           tblptrl	equ	0xFF6
 14414                           tablat	equ	0xFF5
 14415                           prodh	equ	0xFF4
 14416                           prodl	equ	0xFF3
 14417                           intcon	equ	0xFF2
 14418                           postinc0	equ	0xFEE
 14419                           wreg	equ	0xFE8
 14420                           indf1	equ	0xFE7
 14421                           postinc1	equ	0xFE6
 14422                           postdec1	equ	0xFE5
 14423                           fsr1h	equ	0xFE2
 14424                           fsr1l	equ	0xFE1
 14425                           indf2	equ	0xFDF
 14426                           postinc2	equ	0xFDE
 14427                           postdec2	equ	0xFDD
 14428                           fsr2h	equ	0xFDA
 14429                           fsr2l	equ	0xFD9
 14430                           status	equ	0xFD8
 14431                           
 14432 ;; *************** function _rxWordEDD *****************
 14433 ;; Defined at:
 14434 ;;		line 156 in file "eddComms.c"
 14435 ;; Parameters:    Size  Location     Type
 14436 ;;		None
 14437 ;; Auto vars:     Size  Location     Type
 14438 ;;		None
 14439 ;; Return value:  Size  Location     Type
 14440 ;;                  1    wreg      unsigned char 
 14441 ;; Registers used:
 14442 ;;		wreg, status,2, status,0, cstack
 14443 ;; Tracked objects:
 14444 ;;		On entry : 0/0
 14445 ;;		On exit  : 0/0
 14446 ;;		Unchanged: 0/0
 14447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14452 ;;Total ram usage:        0 bytes
 14453 ;; Hardware stack levels used:    1
 14454 ;; Hardware stack levels required when called:   10
 14455 ;; This function calls:
 14456 ;;		_Delay_ms
 14457 ;;		_detectFallingEdgeEDD
 14458 ;;		_detectRisingEdgeEDD
 14459 ;; This function is called by:
 14460 ;;		_commandResponse
 14461 ;; This function uses a non-reentrant model
 14462 ;;
 14463                           
 14464                           	psect	text69
 14465  003ACA                     __ptext69:
 14466                           	opt stack 0
 14467  003ACA                     _rxWordEDD:
 14468                           	opt stack 15
 14469                           
 14470                           ;eddComms.c: 157: watchCounter = 0;
 14471                           
 14472                           ;incstack = 0
 14473  003ACA  0E00               	movlw	0
 14474  003ACC  0100               	movlb	0	; () banked
 14475  003ACE  6FBD               	movwf	(_watchCounter+1)& (0+255),b
 14476  003AD0  0E00               	movlw	0
 14477  003AD2  6FBC               	movwf	_watchCounter& (0+255),b
 14478                           
 14479                           ; BSR set to: 0
 14480                           ;eddComms.c: 158: T8CONbits.T8ON = 1;
 14481  003AD4  010F               	movlb	15	; () banked
 14482  003AD6  8F2A               	bsf	42,7,b	;volatile
 14483                           
 14484                           ; BSR set to: 15
 14485                           ;eddComms.c: 159: Delay_ms(4);
 14486  003AD8  0E00               	movlw	0
 14487  003ADA  0100               	movlb	0	; () banked
 14488  003ADC  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
 14489  003ADE  0E04               	movlw	4
 14490  003AE0  6F60               	movwf	Delay_ms@ms& (0+255),b
 14491  003AE2  EC7B  F034         	call	_Delay_ms	;wreg free
 14492  003AE6                     l12940:
 14493  003AE6  0E05               	movlw	5
 14494  003AE8  EC3F  F036         	call	_detectRisingEdgeEDD
 14495  003AEC  0900               	iorlw	0
 14496  003AEE  A4D8               	btfss	status,2,c
 14497  003AF0  D008               	goto	l12944
 14498  003AF2  0100               	movlb	0	; () banked
 14499  003AF4  51BD               	movf	(_watchCounter+1)& (0+255),w,b
 14500  003AF6  E105               	bnz	l12944
 14501  003AF8  0EC8               	movlw	200
 14502  003AFA  0100               	movlb	0	; () banked
 14503  003AFC  5DBC               	subwf	_watchCounter& (0+255),w,b
 14504  003AFE  A0D8               	btfss	status,0,c
 14505  003B00  D7F2               	goto	l12940
 14506  003B02                     l12944:
 14507                           
 14508                           ;eddComms.c: 161: if(watchCounter >= 200){
 14509  003B02  0100               	movlb	0	; () banked
 14510  003B04  51BD               	movf	(_watchCounter+1)& (0+255),w,b
 14511  003B06  E105               	bnz	u9060
 14512  003B08  0EC8               	movlw	200
 14513  003B0A  0100               	movlb	0	; () banked
 14514  003B0C  5DBC               	subwf	_watchCounter& (0+255),w,b
 14515  003B0E  A0D8               	btfss	status,0,c
 14516  003B10  D004               	goto	l12952
 14517  003B12                     u9060:
 14518                           
 14519                           ; BSR set to: 0
 14520                           ;eddComms.c: 162: T8CONbits.T8ON = 0;
 14521  003B12  010F               	movlb	15	; () banked
 14522  003B14  9F2A               	bcf	42,7,b	;volatile
 14523                           
 14524                           ; BSR set to: 15
 14525                           ;eddComms.c: 163: return 0;
 14526  003B16  0E00               	movlw	0
 14527                           
 14528                           ; BSR set to: 15
 14529  003B18  0012               	return	
 14530  003B1A                     l12952:
 14531                           
 14532                           ;eddComms.c: 164: }
 14533                           ;eddComms.c: 165: watchCounter = 0;
 14534  003B1A  0E00               	movlw	0
 14535  003B1C  0100               	movlb	0	; () banked
 14536  003B1E  6FBD               	movwf	(_watchCounter+1)& (0+255),b
 14537  003B20  0E00               	movlw	0
 14538  003B22  6FBC               	movwf	_watchCounter& (0+255),b
 14539  003B24                     l12954:
 14540                           
 14541                           ; BSR set to: 0
 14542  003B24  0E05               	movlw	5
 14543  003B26  EC4B  F034         	call	_detectFallingEdgeEDD
 14544  003B2A  0900               	iorlw	0
 14545  003B2C  A4D8               	btfss	status,2,c
 14546  003B2E  D008               	goto	l12958
 14547  003B30  0100               	movlb	0	; () banked
 14548  003B32  51BD               	movf	(_watchCounter+1)& (0+255),w,b
 14549  003B34  E105               	bnz	l12958
 14550  003B36  0E64               	movlw	100
 14551  003B38  0100               	movlb	0	; () banked
 14552  003B3A  5DBC               	subwf	_watchCounter& (0+255),w,b
 14553  003B3C  A0D8               	btfss	status,0,c
 14554  003B3E  D7F2               	goto	l12954
 14555  003B40                     l12958:
 14556                           
 14557                           ;eddComms.c: 167: if(watchCounter >= 100){
 14558  003B40  0100               	movlb	0	; () banked
 14559  003B42  51BD               	movf	(_watchCounter+1)& (0+255),w,b
 14560  003B44  E105               	bnz	u9090
 14561  003B46  0E64               	movlw	100
 14562  003B48  0100               	movlb	0	; () banked
 14563  003B4A  5DBC               	subwf	_watchCounter& (0+255),w,b
 14564  003B4C  A0D8               	btfss	status,0,c
 14565  003B4E  D004               	goto	l12966
 14566  003B50                     u9090:
 14567                           
 14568                           ; BSR set to: 0
 14569                           ;eddComms.c: 168: T8CONbits.T8ON = 0;
 14570  003B50  010F               	movlb	15	; () banked
 14571  003B52  9F2A               	bcf	42,7,b	;volatile
 14572                           
 14573                           ; BSR set to: 15
 14574                           ;eddComms.c: 169: return 0;
 14575  003B54  0E00               	movlw	0
 14576                           
 14577                           ; BSR set to: 15
 14578  003B56  0012               	return	
 14579  003B58                     l12966:
 14580                           
 14581                           ;eddComms.c: 170: }
 14582                           ;eddComms.c: 171: watchCounter = 0;
 14583  003B58  0E00               	movlw	0
 14584  003B5A  0100               	movlb	0	; () banked
 14585  003B5C  6FBD               	movwf	(_watchCounter+1)& (0+255),b
 14586  003B5E  0E00               	movlw	0
 14587  003B60  6FBC               	movwf	_watchCounter& (0+255),b
 14588                           
 14589                           ;eddComms.c: 172: period = 0;
 14590  003B62  0E00               	movlw	0
 14591  003B64  0100               	movlb	0	; () banked
 14592  003B66  6FC6               	movwf	_period& (0+255),b	;volatile
 14593                           
 14594                           ;eddComms.c: 173: eddState = 0;
 14595  003B68  0E00               	movlw	0
 14596  003B6A  0100               	movlb	0	; () banked
 14597  003B6C  6FB9               	movwf	(_eddState+1)& (0+255),b	;volatile
 14598  003B6E  0E00               	movlw	0
 14599  003B70  6FB8               	movwf	_eddState& (0+255),b	;volatile
 14600                           
 14601                           ;eddComms.c: 174: readFlag = 1;
 14602  003B72  0E00               	movlw	0
 14603  003B74  0100               	movlb	0	; () banked
 14604  003B76  6FB7               	movwf	(_readFlag+1)& (0+255),b	;volatile
 14605  003B78  0E01               	movlw	1
 14606  003B7A  6FB6               	movwf	_readFlag& (0+255),b	;volatile
 14607                           
 14608                           ;eddComms.c: 175: halfBits = 0;
 14609  003B7C  0E00               	movlw	0
 14610  003B7E  0100               	movlb	0	; () banked
 14611  003B80  6FC5               	movwf	_halfBits& (0+255),b
 14612                           
 14613                           ;eddComms.c: 176: bitCounter = 0;
 14614  003B82  0E00               	movlw	0
 14615  003B84  0100               	movlb	0	; () banked
 14616  003B86  6FC3               	movwf	_bitCounter& (0+255),b	;volatile
 14617                           
 14618                           ;eddComms.c: 177: while(readFlag){
 14619  003B88  D02D               	goto	l12984
 14620  003B8A                     l12968:
 14621                           
 14622                           ; BSR set to: 0
 14623  003B8A  0E05               	movlw	5
 14624  003B8C  EC3F  F036         	call	_detectRisingEdgeEDD
 14625  003B90  0900               	iorlw	0
 14626  003B92  A4D8               	btfss	status,2,c
 14627  003B94  D008               	goto	l12972
 14628  003B96  0100               	movlb	0	; () banked
 14629  003B98  51BD               	movf	(_watchCounter+1)& (0+255),w,b
 14630  003B9A  E105               	bnz	l12972
 14631  003B9C  0E32               	movlw	50
 14632  003B9E  0100               	movlb	0	; () banked
 14633  003BA0  5DBC               	subwf	_watchCounter& (0+255),w,b
 14634  003BA2  A0D8               	btfss	status,0,c
 14635  003BA4  D7F2               	goto	l12968
 14636  003BA6                     l12972:
 14637                           
 14638                           ;eddComms.c: 179: period = 0;
 14639  003BA6  0E00               	movlw	0
 14640  003BA8  0100               	movlb	0	; () banked
 14641  003BAA  6FC6               	movwf	_period& (0+255),b	;volatile
 14642                           
 14643                           ; BSR set to: 0
 14644                           ;eddComms.c: 180: if(!readFlag)
 14645  003BAC  0100               	movlb	0	; () banked
 14646  003BAE  51B6               	movf	_readFlag& (0+255),w,b	;volatile
 14647  003BB0  0100               	movlb	0	; () banked
 14648  003BB2  11B7               	iorwf	(_readFlag+1)& (0+255),w,b	;volatile
 14649  003BB4  B4D8               	btfsc	status,2,c
 14650  003BB6  D01C               	goto	l12986
 14651  003BB8                     l12978:
 14652                           
 14653                           ; BSR set to: 0
 14654  003BB8  0E05               	movlw	5
 14655  003BBA  EC4B  F034         	call	_detectFallingEdgeEDD
 14656  003BBE  0900               	iorlw	0
 14657  003BC0  A4D8               	btfss	status,2,c
 14658  003BC2  D008               	goto	l12982
 14659  003BC4  0100               	movlb	0	; () banked
 14660  003BC6  51BD               	movf	(_watchCounter+1)& (0+255),w,b
 14661  003BC8  E105               	bnz	l12982
 14662  003BCA  0E32               	movlw	50
 14663  003BCC  0100               	movlb	0	; () banked
 14664  003BCE  5DBC               	subwf	_watchCounter& (0+255),w,b
 14665  003BD0  A0D8               	btfss	status,0,c
 14666  003BD2  D7F2               	goto	l12978
 14667  003BD4                     l12982:
 14668                           
 14669                           ;eddComms.c: 183: watchCounter = 0;
 14670  003BD4  0E00               	movlw	0
 14671  003BD6  0100               	movlb	0	; () banked
 14672  003BD8  6FBD               	movwf	(_watchCounter+1)& (0+255),b
 14673  003BDA  0E00               	movlw	0
 14674  003BDC  6FBC               	movwf	_watchCounter& (0+255),b
 14675                           
 14676                           ;eddComms.c: 184: period = 0;
 14677  003BDE  0E00               	movlw	0
 14678  003BE0  0100               	movlb	0	; () banked
 14679  003BE2  6FC6               	movwf	_period& (0+255),b	;volatile
 14680  003BE4                     l12984:
 14681                           
 14682                           ; BSR set to: 0
 14683  003BE4  0100               	movlb	0	; () banked
 14684  003BE6  51B6               	movf	_readFlag& (0+255),w,b	;volatile
 14685  003BE8  0100               	movlb	0	; () banked
 14686  003BEA  11B7               	iorwf	(_readFlag+1)& (0+255),w,b	;volatile
 14687  003BEC  A4D8               	btfss	status,2,c
 14688  003BEE  D7CD               	goto	l12968
 14689  003BF0                     l12986:
 14690                           
 14691                           ; BSR set to: 0
 14692                           ;eddComms.c: 185: }
 14693                           ;eddComms.c: 186: readFlag = 0;
 14694  003BF0  0E00               	movlw	0
 14695  003BF2  0100               	movlb	0	; () banked
 14696  003BF4  6FB7               	movwf	(_readFlag+1)& (0+255),b	;volatile
 14697  003BF6  0E00               	movlw	0
 14698  003BF8  6FB6               	movwf	_readFlag& (0+255),b	;volatile
 14699                           
 14700                           ; BSR set to: 0
 14701                           ;eddComms.c: 187: T8CONbits.T8ON = 0;
 14702  003BFA  010F               	movlb	15	; () banked
 14703  003BFC  9F2A               	bcf	42,7,b	;volatile
 14704                           
 14705                           ; BSR set to: 15
 14706                           ;eddComms.c: 188: Delay_ms(3);
 14707  003BFE  0E00               	movlw	0
 14708  003C00  0100               	movlb	0	; () banked
 14709  003C02  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
 14710  003C04  0E03               	movlw	3
 14711  003C06  6F60               	movwf	Delay_ms@ms& (0+255),b
 14712  003C08  EC7B  F034         	call	_Delay_ms	;wreg free
 14713                           
 14714                           ;eddComms.c: 189: return 1;
 14715  003C0C  0E01               	movlw	1
 14716  003C0E  0012               	return	
 14717  003C10                     __end_of_rxWordEDD:
 14718                           	opt stack 0
 14719                           tblptru	equ	0xFF8
 14720                           tblptrh	equ	0xFF7
 14721                           tblptrl	equ	0xFF6
 14722                           tablat	equ	0xFF5
 14723                           prodh	equ	0xFF4
 14724                           prodl	equ	0xFF3
 14725                           intcon	equ	0xFF2
 14726                           postinc0	equ	0xFEE
 14727                           wreg	equ	0xFE8
 14728                           indf1	equ	0xFE7
 14729                           postinc1	equ	0xFE6
 14730                           postdec1	equ	0xFE5
 14731                           fsr1h	equ	0xFE2
 14732                           fsr1l	equ	0xFE1
 14733                           indf2	equ	0xFDF
 14734                           postinc2	equ	0xFDE
 14735                           postdec2	equ	0xFDD
 14736                           fsr2h	equ	0xFDA
 14737                           fsr2l	equ	0xFD9
 14738                           status	equ	0xFD8
 14739                           
 14740 ;; *************** function _detectRisingEdgeEDD *****************
 14741 ;; Defined at:
 14742 ;;		line 424 in file "eddComms.c"
 14743 ;; Parameters:    Size  Location     Type
 14744 ;;  change          1    wreg     unsigned char 
 14745 ;; Auto vars:     Size  Location     Type
 14746 ;;  change          1    4[BANK0 ] unsigned char 
 14747 ;;  currentADC      2    5[BANK0 ] volatile unsigned short 
 14748 ;; Return value:  Size  Location     Type
 14749 ;;                  1    wreg      unsigned char 
 14750 ;; Registers used:
 14751 ;;		wreg, status,2, status,0, cstack
 14752 ;; Tracked objects:
 14753 ;;		On entry : 0/0
 14754 ;;		On exit  : 0/0
 14755 ;;		Unchanged: 0/0
 14756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14758 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14759 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14760 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14761 ;;Total ram usage:        5 bytes
 14762 ;; Hardware stack levels used:    1
 14763 ;; Hardware stack levels required when called:    9
 14764 ;; This function calls:
 14765 ;;		_readEddADC
 14766 ;; This function is called by:
 14767 ;;		_rxWordEDD
 14768 ;; This function uses a non-reentrant model
 14769 ;;
 14770                           
 14771                           	psect	text70
 14772  006C7E                     __ptext70:
 14773                           	opt stack 0
 14774  006C7E                     _detectRisingEdgeEDD:
 14775                           	opt stack 15
 14776                           
 14777                           ;incstack = 0
 14778                           ;detectRisingEdgeEDD@change stored from wreg
 14779  006C7E  0100               	movlb	0	; () banked
 14780  006C80  6F64               	movwf	detectRisingEdgeEDD@change& (0+255),b
 14781                           
 14782                           ;eddComms.c: 425: volatile unsigned short currentADC;
 14783                           ;eddComms.c: 426: currentADC = readEddADC();
 14784  006C82  ECAD  F03A         	call	_readEddADC	;wreg free
 14785  006C86  C060  F065         	movff	?_readEddADC,detectRisingEdgeEDD@currentADC	;volatile
 14786  006C8A  C061  F066         	movff	?_readEddADC+1,detectRisingEdgeEDD@currentADC+1	;volatile
 14787                           
 14788                           ;eddComms.c: 427: if(previousADC + change < currentADC){
 14789  006C8E  0100               	movlb	0	; () banked
 14790  006C90  5164               	movf	detectRisingEdgeEDD@change& (0+255),w,b
 14791  006C92  0100               	movlb	0	; () banked
 14792  006C94  25BA               	addwf	_previousADC& (0+255),w,b
 14793  006C96  0100               	movlb	0	; () banked
 14794  006C98  6F62               	movwf	??_detectRisingEdgeEDD& (0+255),b
 14795  006C9A  0E00               	movlw	0
 14796  006C9C  0100               	movlb	0	; () banked
 14797  006C9E  21BB               	addwfc	(_previousADC+1)& (0+255),w,b
 14798  006CA0  0100               	movlb	0	; () banked
 14799  006CA2  6F63               	movwf	(??_detectRisingEdgeEDD+1)& (0+255),b
 14800  006CA4  0100               	movlb	0	; () banked
 14801  006CA6  5165               	movf	detectRisingEdgeEDD@currentADC& (0+255),w,b	;volatile
 14802  006CA8  0100               	movlb	0	; () banked
 14803  006CAA  5D62               	subwf	??_detectRisingEdgeEDD& (0+255),w,b
 14804  006CAC  0100               	movlb	0	; () banked
 14805  006CAE  5166               	movf	(detectRisingEdgeEDD@currentADC+1)& (0+255),w,b	;volatile
 14806  006CB0  0100               	movlb	0	; () banked
 14807  006CB2  5963               	subwfb	(??_detectRisingEdgeEDD+1)& (0+255),w,b
 14808  006CB4  B0D8               	btfsc	status,0,c
 14809  006CB6  D006               	goto	l1931
 14810                           
 14811                           ; BSR set to: 0
 14812                           ;eddComms.c: 428: previousADC = currentADC;
 14813  006CB8  C065  F0BA         	movff	detectRisingEdgeEDD@currentADC,_previousADC	;volatile
 14814  006CBC  C066  F0BB         	movff	detectRisingEdgeEDD@currentADC+1,_previousADC+1	;volatile
 14815                           
 14816                           ; BSR set to: 0
 14817                           ;eddComms.c: 429: return 1;
 14818  006CC0  0E01               	movlw	1
 14819                           
 14820                           ; BSR set to: 0
 14821                           ;eddComms.c: 430: }
 14822                           
 14823                           ; BSR set to: 0
 14824  006CC2  0012               	return	
 14825  006CC4                     l1931:
 14826                           
 14827                           ; BSR set to: 0
 14828                           ;eddComms.c: 431: else{
 14829                           ;eddComms.c: 432: previousADC = currentADC;
 14830  006CC4  C065  F0BA         	movff	detectRisingEdgeEDD@currentADC,_previousADC	;volatile
 14831  006CC8  C066  F0BB         	movff	detectRisingEdgeEDD@currentADC+1,_previousADC+1	;volatile
 14832                           
 14833                           ; BSR set to: 0
 14834                           ;eddComms.c: 433: return 0;
 14835  006CCC  0E00               	movlw	0
 14836                           
 14837                           ; BSR set to: 0
 14838  006CCE  0012               	return	
 14839  006CD0                     __end_of_detectRisingEdgeEDD:
 14840                           	opt stack 0
 14841                           tblptru	equ	0xFF8
 14842                           tblptrh	equ	0xFF7
 14843                           tblptrl	equ	0xFF6
 14844                           tablat	equ	0xFF5
 14845                           prodh	equ	0xFF4
 14846                           prodl	equ	0xFF3
 14847                           intcon	equ	0xFF2
 14848                           postinc0	equ	0xFEE
 14849                           wreg	equ	0xFE8
 14850                           indf1	equ	0xFE7
 14851                           postinc1	equ	0xFE6
 14852                           postdec1	equ	0xFE5
 14853                           fsr1h	equ	0xFE2
 14854                           fsr1l	equ	0xFE1
 14855                           indf2	equ	0xFDF
 14856                           postinc2	equ	0xFDE
 14857                           postdec2	equ	0xFDD
 14858                           fsr2h	equ	0xFDA
 14859                           fsr2l	equ	0xFD9
 14860                           status	equ	0xFD8
 14861                           
 14862 ;; *************** function _detectFallingEdgeEDD *****************
 14863 ;; Defined at:
 14864 ;;		line 437 in file "eddComms.c"
 14865 ;; Parameters:    Size  Location     Type
 14866 ;;  change          1    wreg     unsigned char 
 14867 ;; Auto vars:     Size  Location     Type
 14868 ;;  change          1    4[BANK0 ] unsigned char 
 14869 ;;  currentADC      2    5[BANK0 ] volatile unsigned short 
 14870 ;; Return value:  Size  Location     Type
 14871 ;;                  1    wreg      unsigned char 
 14872 ;; Registers used:
 14873 ;;		wreg, status,2, status,0, cstack
 14874 ;; Tracked objects:
 14875 ;;		On entry : 0/0
 14876 ;;		On exit  : 0/0
 14877 ;;		Unchanged: 0/0
 14878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14880 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14881 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14882 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14883 ;;Total ram usage:        5 bytes
 14884 ;; Hardware stack levels used:    1
 14885 ;; Hardware stack levels required when called:    9
 14886 ;; This function calls:
 14887 ;;		_readEddADC
 14888 ;; This function is called by:
 14889 ;;		_rxWordEDD
 14890 ;; This function uses a non-reentrant model
 14891 ;;
 14892                           
 14893                           	psect	text71
 14894  006896                     __ptext71:
 14895                           	opt stack 0
 14896  006896                     _detectFallingEdgeEDD:
 14897                           	opt stack 15
 14898                           
 14899                           ; BSR set to: 0
 14900                           ;incstack = 0
 14901                           ;detectFallingEdgeEDD@change stored from wreg
 14902  006896  0100               	movlb	0	; () banked
 14903  006898  6F64               	movwf	detectFallingEdgeEDD@change& (0+255),b
 14904                           
 14905                           ;eddComms.c: 438: volatile unsigned short currentADC;
 14906                           ;eddComms.c: 439: currentADC = readEddADC();
 14907  00689A  ECAD  F03A         	call	_readEddADC	;wreg free
 14908  00689E  C060  F065         	movff	?_readEddADC,detectFallingEdgeEDD@currentADC	;volatile
 14909  0068A2  C061  F066         	movff	?_readEddADC+1,detectFallingEdgeEDD@currentADC+1	;volatile
 14910                           
 14911                           ;eddComms.c: 440: if(previousADC - change > currentADC){
 14912  0068A6  0100               	movlb	0	; () banked
 14913  0068A8  5164               	movf	detectFallingEdgeEDD@change& (0+255),w,b
 14914  0068AA  0100               	movlb	0	; () banked
 14915  0068AC  6F62               	movwf	??_detectFallingEdgeEDD& (0+255),b
 14916  0068AE  6B63               	clrf	(??_detectFallingEdgeEDD+1)& (0+255),b
 14917  0068B0  0100               	movlb	0	; () banked
 14918  0068B2  1F62               	comf	??_detectFallingEdgeEDD& (0+255),f,b
 14919  0068B4  1F63               	comf	(??_detectFallingEdgeEDD+1)& (0+255),f,b
 14920  0068B6  4B62               	infsnz	??_detectFallingEdgeEDD& (0+255),f,b
 14921  0068B8  2B63               	incf	(??_detectFallingEdgeEDD+1)& (0+255),f,b
 14922  0068BA  0100               	movlb	0	; () banked
 14923  0068BC  51BA               	movf	_previousADC& (0+255),w,b
 14924  0068BE  0100               	movlb	0	; () banked
 14925  0068C0  2762               	addwf	??_detectFallingEdgeEDD& (0+255),f,b
 14926  0068C2  0100               	movlb	0	; () banked
 14927  0068C4  51BB               	movf	(_previousADC+1)& (0+255),w,b
 14928  0068C6  0100               	movlb	0	; () banked
 14929  0068C8  2363               	addwfc	(??_detectFallingEdgeEDD+1)& (0+255),f,b
 14930  0068CA  0100               	movlb	0	; () banked
 14931  0068CC  5162               	movf	??_detectFallingEdgeEDD& (0+255),w,b
 14932  0068CE  0100               	movlb	0	; () banked
 14933  0068D0  5D65               	subwf	detectFallingEdgeEDD@currentADC& (0+255),w,b	;volatile
 14934  0068D2  0100               	movlb	0	; () banked
 14935  0068D4  5163               	movf	(??_detectFallingEdgeEDD+1)& (0+255),w,b
 14936  0068D6  0100               	movlb	0	; () banked
 14937  0068D8  5966               	subwfb	(detectFallingEdgeEDD@currentADC+1)& (0+255),w,b	;volatile
 14938  0068DA  B0D8               	btfsc	status,0,c
 14939  0068DC  D006               	goto	l1936
 14940                           
 14941                           ; BSR set to: 0
 14942                           ;eddComms.c: 441: previousADC = currentADC;
 14943  0068DE  C065  F0BA         	movff	detectFallingEdgeEDD@currentADC,_previousADC	;volatile
 14944  0068E2  C066  F0BB         	movff	detectFallingEdgeEDD@currentADC+1,_previousADC+1	;volatile
 14945                           
 14946                           ; BSR set to: 0
 14947                           ;eddComms.c: 442: return 1;
 14948  0068E6  0E01               	movlw	1
 14949                           
 14950                           ; BSR set to: 0
 14951                           ;eddComms.c: 443: }
 14952                           
 14953                           ; BSR set to: 0
 14954  0068E8  0012               	return	
 14955  0068EA                     l1936:
 14956                           
 14957                           ; BSR set to: 0
 14958                           ;eddComms.c: 444: else{
 14959                           ;eddComms.c: 445: previousADC = currentADC;
 14960  0068EA  C065  F0BA         	movff	detectFallingEdgeEDD@currentADC,_previousADC	;volatile
 14961  0068EE  C066  F0BB         	movff	detectFallingEdgeEDD@currentADC+1,_previousADC+1	;volatile
 14962                           
 14963                           ; BSR set to: 0
 14964                           ;eddComms.c: 446: return 0;
 14965  0068F2  0E00               	movlw	0
 14966                           
 14967                           ; BSR set to: 0
 14968  0068F4  0012               	return	
 14969  0068F6                     __end_of_detectFallingEdgeEDD:
 14970                           	opt stack 0
 14971                           tblptru	equ	0xFF8
 14972                           tblptrh	equ	0xFF7
 14973                           tblptrl	equ	0xFF6
 14974                           tablat	equ	0xFF5
 14975                           prodh	equ	0xFF4
 14976                           prodl	equ	0xFF3
 14977                           intcon	equ	0xFF2
 14978                           postinc0	equ	0xFEE
 14979                           wreg	equ	0xFE8
 14980                           indf1	equ	0xFE7
 14981                           postinc1	equ	0xFE6
 14982                           postdec1	equ	0xFE5
 14983                           fsr1h	equ	0xFE2
 14984                           fsr1l	equ	0xFE1
 14985                           indf2	equ	0xFDF
 14986                           postinc2	equ	0xFDE
 14987                           postdec2	equ	0xFDD
 14988                           fsr2h	equ	0xFDA
 14989                           fsr2l	equ	0xFD9
 14990                           status	equ	0xFD8
 14991                           
 14992 ;; *************** function _readEddADC *****************
 14993 ;; Defined at:
 14994 ;;		line 451 in file "eddComms.c"
 14995 ;; Parameters:    Size  Location     Type
 14996 ;;		None
 14997 ;; Auto vars:     Size  Location     Type
 14998 ;;		None
 14999 ;; Return value:  Size  Location     Type
 15000 ;;                  2    0[BANK0 ] unsigned short 
 15001 ;; Registers used:
 15002 ;;		wreg, status,2
 15003 ;; Tracked objects:
 15004 ;;		On entry : 0/0
 15005 ;;		On exit  : 0/0
 15006 ;;		Unchanged: 0/0
 15007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15008 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15011 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15012 ;;Total ram usage:        2 bytes
 15013 ;; Hardware stack levels used:    1
 15014 ;; Hardware stack levels required when called:    8
 15015 ;; This function calls:
 15016 ;;		Nothing
 15017 ;; This function is called by:
 15018 ;;		_detectRisingEdgeEDD
 15019 ;;		_detectFallingEdgeEDD
 15020 ;; This function uses a non-reentrant model
 15021 ;;
 15022                           
 15023                           	psect	text72
 15024  00755A                     __ptext72:
 15025                           	opt stack 0
 15026  00755A                     _readEddADC:
 15027                           	opt stack 15
 15028                           
 15029                           ;eddComms.c: 452: ADRES = 0;
 15030                           
 15031                           ; BSR set to: 0
 15032                           ;incstack = 0
 15033  00755A  0E00               	movlw	0
 15034  00755C  6E64               	movwf	3940,c	;volatile
 15035  00755E  0E00               	movlw	0
 15036  007560  6E63               	movwf	3939,c	;volatile
 15037                           
 15038                           ;eddComms.c: 453: ADCON0bits.ADGO = 1;
 15039  007562  8060               	bsf	3936,0,c	;volatile
 15040                           
 15041                           ;eddComms.c: 454: __nop();
 15042  007564  F000               	nop	
 15043                           
 15044                           ;eddComms.c: 455: __nop();
 15045  007566  F000               	nop	
 15046                           
 15047                           ;eddComms.c: 456: __nop();
 15048  007568  F000               	nop	
 15049                           
 15050                           ;eddComms.c: 457: __nop();
 15051  00756A  F000               	nop	
 15052                           
 15053                           ;eddComms.c: 458: __nop();
 15054  00756C  F000               	nop	
 15055                           
 15056                           ;eddComms.c: 459: __nop();
 15057  00756E  F000               	nop	
 15058                           
 15059                           ;eddComms.c: 460: __nop();
 15060  007570  F000               	nop	
 15061                           
 15062                           ;eddComms.c: 461: __nop();
 15063  007572  F000               	nop	
 15064                           
 15065                           ;eddComms.c: 462: __nop();
 15066  007574  F000               	nop	
 15067  007576                     l1941:
 15068  007576  B060               	btfsc	3936,0,c	;volatile
 15069  007578  D7FE               	goto	l1941
 15070                           
 15071                           ;eddComms.c: 464: return ADRES;
 15072  00757A  CF63 F060          	movff	3939,?_readEddADC	;volatile
 15073  00757E  CF64 F061          	movff	3940,?_readEddADC+1	;volatile
 15074  007582  0012               	return		;funcret
 15075  007584                     __end_of_readEddADC:
 15076                           	opt stack 0
 15077                           tblptru	equ	0xFF8
 15078                           tblptrh	equ	0xFF7
 15079                           tblptrl	equ	0xFF6
 15080                           tablat	equ	0xFF5
 15081                           prodh	equ	0xFF4
 15082                           prodl	equ	0xFF3
 15083                           intcon	equ	0xFF2
 15084                           postinc0	equ	0xFEE
 15085                           wreg	equ	0xFE8
 15086                           indf1	equ	0xFE7
 15087                           postinc1	equ	0xFE6
 15088                           postdec1	equ	0xFE5
 15089                           fsr1h	equ	0xFE2
 15090                           fsr1l	equ	0xFE1
 15091                           indf2	equ	0xFDF
 15092                           postinc2	equ	0xFDE
 15093                           postdec2	equ	0xFDD
 15094                           fsr2h	equ	0xFDA
 15095                           fsr2l	equ	0xFD9
 15096                           status	equ	0xFD8
 15097                           
 15098 ;; *************** function __delay_ms *****************
 15099 ;; Defined at:
 15100 ;;		line 139 in file "peripherals.c"
 15101 ;; Parameters:    Size  Location     Type
 15102 ;;  delay           2    1[BANK0 ] unsigned int 
 15103 ;; Auto vars:     Size  Location     Type
 15104 ;;  i               2    3[BANK0 ] int 
 15105 ;; Return value:  Size  Location     Type
 15106 ;;                  1    wreg      void 
 15107 ;; Registers used:
 15108 ;;		wreg, status,2, status,0, cstack
 15109 ;; Tracked objects:
 15110 ;;		On entry : 0/0
 15111 ;;		On exit  : 0/0
 15112 ;;		Unchanged: 0/0
 15113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15114 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15115 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15117 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15118 ;;Total ram usage:        4 bytes
 15119 ;; Hardware stack levels used:    1
 15120 ;; Hardware stack levels required when called:    9
 15121 ;; This function calls:
 15122 ;;		__delay_us
 15123 ;; This function is called by:
 15124 ;;		_WriteConfigST7540
 15125 ;;		_prepareForProgramming
 15126 ;;		_programUIDs
 15127 ;;		_fire
 15128 ;;		_checkForUnfiredEdds
 15129 ;;		_sleep
 15130 ;;		_mainsSleep
 15131 ;;		_mainsWake
 15132 ;;		_firePic
 15133 ;; This function uses a non-reentrant model
 15134 ;;
 15135                           
 15136                           	psect	text73
 15137  006E04                     __ptext73:
 15138                           	opt stack 0
 15139  006E04                     __delay_ms:
 15140                           	opt stack 17
 15141                           
 15142                           ;peripherals.c: 140: while(delay-- > 0){
 15143                           
 15144                           ;incstack = 0
 15145  006E04  D017               	goto	l13026
 15146  006E06                     l13014:
 15147                           
 15148                           ;peripherals.c: 141: for (int i = 0; i < 10; i ++){
 15149  006E06  0E00               	movlw	0
 15150  006E08  0100               	movlb	0	; () banked
 15151  006E0A  6F64               	movwf	(__delay_ms@i+1)& (0+255),b
 15152  006E0C  0E00               	movlw	0
 15153  006E0E  6F63               	movwf	__delay_ms@i& (0+255),b
 15154  006E10                     l13016:
 15155                           
 15156                           ; BSR set to: 0
 15157  006E10  0100               	movlb	0	; () banked
 15158  006E12  BF64               	btfsc	(__delay_ms@i+1)& (0+255),7,b
 15159  006E14  D008               	goto	l13020
 15160  006E16  0100               	movlb	0	; () banked
 15161  006E18  5164               	movf	(__delay_ms@i+1)& (0+255),w,b
 15162  006E1A  E10C               	bnz	l13026
 15163  006E1C  0E0A               	movlw	10
 15164  006E1E  0100               	movlb	0	; () banked
 15165  006E20  5D63               	subwf	__delay_ms@i& (0+255),w,b
 15166  006E22  B0D8               	btfsc	status,0,c
 15167  006E24  D007               	goto	l13026
 15168  006E26                     l13020:
 15169                           
 15170                           ; BSR set to: 0
 15171                           ;peripherals.c: 142: _delay_us(100);
 15172  006E26  0E64               	movlw	100
 15173  006E28  EC37  F03B         	call	__delay_us
 15174  006E2C  0100               	movlb	0	; () banked
 15175  006E2E  4B63               	infsnz	__delay_ms@i& (0+255),f,b
 15176  006E30  2B64               	incf	(__delay_ms@i+1)& (0+255),f,b
 15177  006E32  D7EE               	goto	l13016
 15178  006E34                     l13026:
 15179  006E34  0100               	movlb	0	; () banked
 15180  006E36  0761               	decf	__delay_ms@delay& (0+255),f,b
 15181  006E38  A0D8               	btfss	status,0,c
 15182  006E3A  0762               	decf	(__delay_ms@delay+1)& (0+255),f,b
 15183  006E3C  0100               	movlb	0	; () banked
 15184  006E3E  2961               	incf	__delay_ms@delay& (0+255),w,b
 15185  006E40  E1E2               	bnz	l13014
 15186  006E42  0100               	movlb	0	; () banked
 15187  006E44  2962               	incf	(__delay_ms@delay+1)& (0+255),w,b
 15188  006E46  B4D8               	btfsc	status,2,c
 15189  006E48  0012               	return	
 15190  006E4A  D7DD               	goto	l13014
 15191  006E4C                     __end_of__delay_ms:
 15192                           	opt stack 0
 15193                           tblptru	equ	0xFF8
 15194                           tblptrh	equ	0xFF7
 15195                           tblptrl	equ	0xFF6
 15196                           tablat	equ	0xFF5
 15197                           prodh	equ	0xFF4
 15198                           prodl	equ	0xFF3
 15199                           intcon	equ	0xFF2
 15200                           postinc0	equ	0xFEE
 15201                           wreg	equ	0xFE8
 15202                           indf1	equ	0xFE7
 15203                           postinc1	equ	0xFE6
 15204                           postdec1	equ	0xFE5
 15205                           fsr1h	equ	0xFE2
 15206                           fsr1l	equ	0xFE1
 15207                           indf2	equ	0xFDF
 15208                           postinc2	equ	0xFDE
 15209                           postdec2	equ	0xFDD
 15210                           fsr2h	equ	0xFDA
 15211                           fsr2l	equ	0xFD9
 15212                           status	equ	0xFD8
 15213                           
 15214 ;; *************** function _Set_Line_Low *****************
 15215 ;; Defined at:
 15216 ;;		line 113 in file "eddComms.c"
 15217 ;; Parameters:    Size  Location     Type
 15218 ;;		None
 15219 ;; Auto vars:     Size  Location     Type
 15220 ;;		None
 15221 ;; Return value:  Size  Location     Type
 15222 ;;                  1    wreg      void 
 15223 ;; Registers used:
 15224 ;;		None
 15225 ;; Tracked objects:
 15226 ;;		On entry : 0/0
 15227 ;;		On exit  : 0/0
 15228 ;;		Unchanged: 0/0
 15229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15234 ;;Total ram usage:        0 bytes
 15235 ;; Hardware stack levels used:    1
 15236 ;; Hardware stack levels required when called:    8
 15237 ;; This function calls:
 15238 ;;		Nothing
 15239 ;; This function is called by:
 15240 ;;		_Tx_Calibration_Pulses
 15241 ;;		_returnFromProgramming
 15242 ;;		_checkForUnfiredEdds
 15243 ;;		_sleep
 15244 ;;		_mainsSleep
 15245 ;; This function uses a non-reentrant model
 15246 ;;
 15247                           
 15248                           	psect	text74
 15249  007BEC                     __ptext74:
 15250                           	opt stack 0
 15251  007BEC                     _Set_Line_Low:
 15252                           	opt stack 20
 15253                           
 15254                           ;eddComms.c: 114: LATEbits.LATE6 = 0;
 15255                           
 15256                           ; BSR set to: 0
 15257                           ;incstack = 0
 15258  007BEC  9C7D               	bcf	3965,6,c	;volatile
 15259  007BEE  0012               	return		;funcret
 15260  007BF0                     __end_of_Set_Line_Low:
 15261                           	opt stack 0
 15262                           tblptru	equ	0xFF8
 15263                           tblptrh	equ	0xFF7
 15264                           tblptrl	equ	0xFF6
 15265                           tablat	equ	0xFF5
 15266                           prodh	equ	0xFF4
 15267                           prodl	equ	0xFF3
 15268                           intcon	equ	0xFF2
 15269                           postinc0	equ	0xFEE
 15270                           wreg	equ	0xFE8
 15271                           indf1	equ	0xFE7
 15272                           postinc1	equ	0xFE6
 15273                           postdec1	equ	0xFE5
 15274                           fsr1h	equ	0xFE2
 15275                           fsr1l	equ	0xFE1
 15276                           indf2	equ	0xFDF
 15277                           postinc2	equ	0xFDE
 15278                           postdec2	equ	0xFDD
 15279                           fsr2h	equ	0xFDA
 15280                           fsr2l	equ	0xFD9
 15281                           status	equ	0xFD8
 15282                           
 15283 ;; *************** function _EDD_Init_Comms *****************
 15284 ;; Defined at:
 15285 ;;		line 87 in file "eddComms.c"
 15286 ;; Parameters:    Size  Location     Type
 15287 ;;		None
 15288 ;; Auto vars:     Size  Location     Type
 15289 ;;		None
 15290 ;; Return value:  Size  Location     Type
 15291 ;;                  1    wreg      void 
 15292 ;; Registers used:
 15293 ;;		wreg, status,2, cstack
 15294 ;; Tracked objects:
 15295 ;;		On entry : 0/0
 15296 ;;		On exit  : 0/0
 15297 ;;		Unchanged: 0/0
 15298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15303 ;;Total ram usage:        0 bytes
 15304 ;; Hardware stack levels used:    1
 15305 ;; Hardware stack levels required when called:    9
 15306 ;; This function calls:
 15307 ;;		_Set_Line_High
 15308 ;;		_initialiseEddADC
 15309 ;; This function is called by:
 15310 ;;		_programInitialise
 15311 ;;		_fire
 15312 ;; This function uses a non-reentrant model
 15313 ;;
 15314                           
 15315                           	psect	text75
 15316  0079FC                     __ptext75:
 15317                           	opt stack 0
 15318  0079FC                     _EDD_Init_Comms:
 15319                           	opt stack 18
 15320                           
 15321                           ;eddComms.c: 88: initialiseEddADC();
 15322                           
 15323                           ;incstack = 0
 15324  0079FC  ECD6  F03A         	call	_initialiseEddADC	;wreg free
 15325                           
 15326                           ;eddComms.c: 90: FLAGS.us100 = 0;
 15327  007A00  9037               	bcf	_FLAGS,0,c
 15328                           
 15329                           ;eddComms.c: 91: FLAGS.us500 = 0;
 15330  007A02  9437               	bcf	_FLAGS,2,c
 15331                           
 15332                           ;eddComms.c: 92: tx = 0;
 15333  007A04  0E00               	movlw	0
 15334  007A06  6E3D               	movwf	_tx+1,c	;volatile
 15335  007A08  0E00               	movlw	0
 15336  007A0A  6E3C               	movwf	_tx,c	;volatile
 15337                           
 15338                           ;eddComms.c: 94: Set_Line_High();
 15339  007A0C  ECF8  F03D         	call	_Set_Line_High	;wreg free
 15340  007A10  0012               	return		;funcret
 15341  007A12                     __end_of_EDD_Init_Comms:
 15342                           	opt stack 0
 15343                           tblptru	equ	0xFF8
 15344                           tblptrh	equ	0xFF7
 15345                           tblptrl	equ	0xFF6
 15346                           tablat	equ	0xFF5
 15347                           prodh	equ	0xFF4
 15348                           prodl	equ	0xFF3
 15349                           intcon	equ	0xFF2
 15350                           postinc0	equ	0xFEE
 15351                           wreg	equ	0xFE8
 15352                           indf1	equ	0xFE7
 15353                           postinc1	equ	0xFE6
 15354                           postdec1	equ	0xFE5
 15355                           fsr1h	equ	0xFE2
 15356                           fsr1l	equ	0xFE1
 15357                           indf2	equ	0xFDF
 15358                           postinc2	equ	0xFDE
 15359                           postdec2	equ	0xFDD
 15360                           fsr2h	equ	0xFDA
 15361                           fsr2l	equ	0xFD9
 15362                           status	equ	0xFD8
 15363                           
 15364 ;; *************** function _initialiseEddADC *****************
 15365 ;; Defined at:
 15366 ;;		line 97 in file "eddComms.c"
 15367 ;; Parameters:    Size  Location     Type
 15368 ;;		None
 15369 ;; Auto vars:     Size  Location     Type
 15370 ;;		None
 15371 ;; Return value:  Size  Location     Type
 15372 ;;                  1    wreg      void 
 15373 ;; Registers used:
 15374 ;;		wreg, status,2
 15375 ;; Tracked objects:
 15376 ;;		On entry : 0/0
 15377 ;;		On exit  : 0/0
 15378 ;;		Unchanged: 0/0
 15379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15384 ;;Total ram usage:        0 bytes
 15385 ;; Hardware stack levels used:    1
 15386 ;; Hardware stack levels required when called:    8
 15387 ;; This function calls:
 15388 ;;		Nothing
 15389 ;; This function is called by:
 15390 ;;		_EDD_Init_Comms
 15391 ;; This function uses a non-reentrant model
 15392 ;;
 15393                           
 15394                           	psect	text76
 15395  0075AC                     __ptext76:
 15396                           	opt stack 0
 15397  0075AC                     _initialiseEddADC:
 15398                           	opt stack 18
 15399                           
 15400                           ;eddComms.c: 98: FVRCON = 0b00000010;
 15401                           
 15402                           ;incstack = 0
 15403  0075AC  0E02               	movlw	2
 15404  0075AE  010E               	movlb	14	; () banked
 15405  0075B0  6FC4               	movwf	196,b	;volatile
 15406                           
 15407                           ; BSR set to: 14
 15408                           ;eddComms.c: 99: FVRCONbits.FVREN = 1;
 15409  0075B2  010E               	movlb	14	; () banked
 15410  0075B4  8FC4               	bsf	196,7,b	;volatile
 15411                           
 15412                           ;eddComms.c: 101: ADCON1 = 0b11110000;
 15413  0075B6  0EF0               	movlw	240
 15414  0075B8  010F               	movlb	15	; () banked
 15415  0075BA  6F59               	movwf	89,b	;volatile
 15416                           
 15417                           ;eddComms.c: 102: ADPCH = 0b00100111;
 15418  0075BC  0E27               	movlw	39
 15419  0075BE  010F               	movlb	15	; () banked
 15420  0075C0  6F5F               	movwf	95,b	;volatile
 15421                           
 15422                           ;eddComms.c: 103: ADCLK = 0b00111111;
 15423  0075C2  0E3F               	movlw	63
 15424  0075C4  010F               	movlb	15	; () banked
 15425  0075C6  6F57               	movwf	87,b	;volatile
 15426                           
 15427                           ;eddComms.c: 104: ADREF = 0b00000011;
 15428  0075C8  0E03               	movlw	3
 15429  0075CA  010F               	movlb	15	; () banked
 15430  0075CC  6F58               	movwf	88,b	;volatile
 15431                           
 15432                           ; BSR set to: 15
 15433                           ;eddComms.c: 105: ADCON0bits.ADFM = 1;
 15434  0075CE  8460               	bsf	3936,2,c	;volatile
 15435                           
 15436                           ; BSR set to: 15
 15437                           ;eddComms.c: 106: ADCON0bits.ADON = 1;
 15438  0075D0  8E60               	bsf	3936,7,c	;volatile
 15439                           
 15440                           ; BSR set to: 15
 15441  0075D2  0012               	return		;funcret
 15442  0075D4                     __end_of_initialiseEddADC:
 15443                           	opt stack 0
 15444                           tblptru	equ	0xFF8
 15445                           tblptrh	equ	0xFF7
 15446                           tblptrl	equ	0xFF6
 15447                           tablat	equ	0xFF5
 15448                           prodh	equ	0xFF4
 15449                           prodl	equ	0xFF3
 15450                           intcon	equ	0xFF2
 15451                           postinc0	equ	0xFEE
 15452                           wreg	equ	0xFE8
 15453                           indf1	equ	0xFE7
 15454                           postinc1	equ	0xFE6
 15455                           postdec1	equ	0xFE5
 15456                           fsr1h	equ	0xFE2
 15457                           fsr1l	equ	0xFE1
 15458                           indf2	equ	0xFDF
 15459                           postinc2	equ	0xFDE
 15460                           postdec2	equ	0xFDD
 15461                           fsr2h	equ	0xFDA
 15462                           fsr2l	equ	0xFD9
 15463                           status	equ	0xFD8
 15464                           
 15465 ;; *************** function _EDD_Energy_Store *****************
 15466 ;; Defined at:
 15467 ;;		line 387 in file "eddComms.c"
 15468 ;; Parameters:    Size  Location     Type
 15469 ;;		None
 15470 ;; Auto vars:     Size  Location     Type
 15471 ;;  EDD_energy_s    1   10[BANK0 ] unsigned char 
 15472 ;; Return value:  Size  Location     Type
 15473 ;;                  1    wreg      void 
 15474 ;; Registers used:
 15475 ;;		wreg, status,2, status,0, cstack
 15476 ;; Tracked objects:
 15477 ;;		On entry : 0/0
 15478 ;;		On exit  : 0/0
 15479 ;;		Unchanged: 0/0
 15480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15482 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15484 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15485 ;;Total ram usage:        1 bytes
 15486 ;; Hardware stack levels used:    1
 15487 ;; Hardware stack levels required when called:   11
 15488 ;; This function calls:
 15489 ;;		_Delay_ms
 15490 ;;		_Tx_Word
 15491 ;; This function is called by:
 15492 ;;		_fire
 15493 ;;		_firePic
 15494 ;; This function uses a non-reentrant model
 15495 ;;
 15496                           
 15497                           	psect	text77
 15498  006F1A                     __ptext77:
 15499                           	opt stack 0
 15500  006F1A                     _EDD_Energy_Store:
 15501                           	opt stack 17
 15502                           
 15503                           ;eddComms.c: 388: unsigned char EDD_energy_store_command;
 15504                           ;eddComms.c: 389: EDD_energy_store_command = 0b00001110;
 15505                           
 15506                           ; BSR set to: 15
 15507                           ;incstack = 0
 15508  006F1A  0E0E               	movlw	14
 15509  006F1C  0100               	movlb	0	; () banked
 15510  006F1E  6F6A               	movwf	EDD_Energy_Store@EDD_energy_store_command& (0+255),b
 15511                           
 15512                           ; BSR set to: 0
 15513                           ;eddComms.c: 391: Tx_Word(EDD_energy_store_command);
 15514  006F20  0100               	movlb	0	; () banked
 15515  006F22  516A               	movf	EDD_Energy_Store@EDD_energy_store_command& (0+255),w,b
 15516  006F24  EC7D  F032         	call	_Tx_Word
 15517                           
 15518                           ;eddComms.c: 392: Delay_ms(13);
 15519  006F28  0E00               	movlw	0
 15520  006F2A  0100               	movlb	0	; () banked
 15521  006F2C  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
 15522  006F2E  0E0D               	movlw	13
 15523  006F30  6F60               	movwf	Delay_ms@ms& (0+255),b
 15524  006F32  EC7B  F034         	call	_Delay_ms	;wreg free
 15525                           
 15526                           ;eddComms.c: 393: Tx_Word(EDD_energy_store_command);
 15527  006F36  0100               	movlb	0	; () banked
 15528  006F38  516A               	movf	EDD_Energy_Store@EDD_energy_store_command& (0+255),w,b
 15529  006F3A  EC7D  F032         	call	_Tx_Word
 15530                           
 15531                           ;eddComms.c: 394: Delay_ms(13);
 15532  006F3E  0E00               	movlw	0
 15533  006F40  0100               	movlb	0	; () banked
 15534  006F42  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
 15535  006F44  0E0D               	movlw	13
 15536  006F46  6F60               	movwf	Delay_ms@ms& (0+255),b
 15537  006F48  EC7B  F034         	call	_Delay_ms	;wreg free
 15538                           
 15539                           ;eddComms.c: 395: Delay_ms(10000);
 15540  006F4C  0E27               	movlw	39
 15541  006F4E  0100               	movlb	0	; () banked
 15542  006F50  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
 15543  006F52  0E10               	movlw	16
 15544  006F54  6F60               	movwf	Delay_ms@ms& (0+255),b
 15545  006F56  EC7B  F034         	call	_Delay_ms	;wreg free
 15546  006F5A  0012               	return		;funcret
 15547  006F5C                     __end_of_EDD_Energy_Store:
 15548                           	opt stack 0
 15549                           tblptru	equ	0xFF8
 15550                           tblptrh	equ	0xFF7
 15551                           tblptrl	equ	0xFF6
 15552                           tablat	equ	0xFF5
 15553                           prodh	equ	0xFF4
 15554                           prodl	equ	0xFF3
 15555                           intcon	equ	0xFF2
 15556                           postinc0	equ	0xFEE
 15557                           wreg	equ	0xFE8
 15558                           indf1	equ	0xFE7
 15559                           postinc1	equ	0xFE6
 15560                           postdec1	equ	0xFE5
 15561                           fsr1h	equ	0xFE2
 15562                           fsr1l	equ	0xFE1
 15563                           indf2	equ	0xFDF
 15564                           postinc2	equ	0xFDE
 15565                           postdec2	equ	0xFDD
 15566                           fsr2h	equ	0xFDA
 15567                           fsr2l	equ	0xFD9
 15568                           status	equ	0xFD8
 15569                           
 15570 ;; *************** function _EDD_Blast *****************
 15571 ;; Defined at:
 15572 ;;		line 398 in file "eddComms.c"
 15573 ;; Parameters:    Size  Location     Type
 15574 ;;		None
 15575 ;; Auto vars:     Size  Location     Type
 15576 ;;  EDD_blast_co    1   10[BANK0 ] unsigned char 
 15577 ;; Return value:  Size  Location     Type
 15578 ;;                  1    wreg      void 
 15579 ;; Registers used:
 15580 ;;		wreg, status,2, status,0, cstack
 15581 ;; Tracked objects:
 15582 ;;		On entry : 0/0
 15583 ;;		On exit  : 0/0
 15584 ;;		Unchanged: 0/0
 15585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15587 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15589 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15590 ;;Total ram usage:        1 bytes
 15591 ;; Hardware stack levels used:    1
 15592 ;; Hardware stack levels required when called:   11
 15593 ;; This function calls:
 15594 ;;		_Delay_ms
 15595 ;;		_Tx_Word
 15596 ;; This function is called by:
 15597 ;;		_fire
 15598 ;; This function uses a non-reentrant model
 15599 ;;
 15600                           
 15601                           	psect	text78
 15602  00663E                     __ptext78:
 15603                           	opt stack 0
 15604  00663E                     _EDD_Blast:
 15605                           	opt stack 17
 15606                           
 15607                           ;eddComms.c: 399: unsigned char EDD_blast_command;
 15608                           ;eddComms.c: 400: EDD_blast_command = 0b00001111;
 15609                           
 15610                           ;incstack = 0
 15611  00663E  0E0F               	movlw	15
 15612  006640  0100               	movlb	0	; () banked
 15613  006642  6F6A               	movwf	EDD_Blast@EDD_blast_command& (0+255),b
 15614                           
 15615                           ; BSR set to: 0
 15616                           ;eddComms.c: 402: Tx_Word(EDD_blast_command);
 15617  006644  0100               	movlb	0	; () banked
 15618  006646  516A               	movf	EDD_Blast@EDD_blast_command& (0+255),w,b
 15619  006648  EC7D  F032         	call	_Tx_Word
 15620                           
 15621                           ;eddComms.c: 403: Delay_ms(13);
 15622  00664C  0E00               	movlw	0
 15623  00664E  0100               	movlb	0	; () banked
 15624  006650  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
 15625  006652  0E0D               	movlw	13
 15626  006654  6F60               	movwf	Delay_ms@ms& (0+255),b
 15627  006656  EC7B  F034         	call	_Delay_ms	;wreg free
 15628                           
 15629                           ;eddComms.c: 404: Tx_Word(EDD_blast_command);
 15630  00665A  0100               	movlb	0	; () banked
 15631  00665C  516A               	movf	EDD_Blast@EDD_blast_command& (0+255),w,b
 15632  00665E  EC7D  F032         	call	_Tx_Word
 15633                           
 15634                           ;eddComms.c: 405: Delay_ms(13);
 15635  006662  0E00               	movlw	0
 15636  006664  0100               	movlb	0	; () banked
 15637  006666  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
 15638  006668  0E0D               	movlw	13
 15639  00666A  6F60               	movwf	Delay_ms@ms& (0+255),b
 15640  00666C  EC7B  F034         	call	_Delay_ms	;wreg free
 15641                           
 15642                           ;eddComms.c: 406: Tx_Word(EDD_blast_command);
 15643  006670  0100               	movlb	0	; () banked
 15644  006672  516A               	movf	EDD_Blast@EDD_blast_command& (0+255),w,b
 15645  006674  EC7D  F032         	call	_Tx_Word
 15646                           
 15647                           ;eddComms.c: 407: Delay_ms(13);
 15648  006678  0E00               	movlw	0
 15649  00667A  0100               	movlb	0	; () banked
 15650  00667C  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
 15651  00667E  0E0D               	movlw	13
 15652  006680  6F60               	movwf	Delay_ms@ms& (0+255),b
 15653  006682  EC7B  F034         	call	_Delay_ms	;wreg free
 15654                           
 15655                           ;eddComms.c: 408: Tx_Word(EDD_blast_command);
 15656  006686  0100               	movlb	0	; () banked
 15657  006688  516A               	movf	EDD_Blast@EDD_blast_command& (0+255),w,b
 15658  00668A  EC7D  F032         	call	_Tx_Word
 15659                           
 15660                           ;eddComms.c: 409: Delay_ms(13);
 15661  00668E  0E00               	movlw	0
 15662  006690  0100               	movlb	0	; () banked
 15663  006692  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
 15664  006694  0E0D               	movlw	13
 15665  006696  6F60               	movwf	Delay_ms@ms& (0+255),b
 15666  006698  EC7B  F034         	call	_Delay_ms	;wreg free
 15667                           
 15668                           ;eddComms.c: 410: Tx_Word(EDD_blast_command);
 15669  00669C  0100               	movlb	0	; () banked
 15670  00669E  516A               	movf	EDD_Blast@EDD_blast_command& (0+255),w,b
 15671  0066A0  EC7D  F032         	call	_Tx_Word
 15672  0066A4  0012               	return		;funcret
 15673  0066A6                     __end_of_EDD_Blast:
 15674                           	opt stack 0
 15675                           tblptru	equ	0xFF8
 15676                           tblptrh	equ	0xFF7
 15677                           tblptrl	equ	0xFF6
 15678                           tablat	equ	0xFF5
 15679                           prodh	equ	0xFF4
 15680                           prodl	equ	0xFF3
 15681                           intcon	equ	0xFF2
 15682                           postinc0	equ	0xFEE
 15683                           wreg	equ	0xFE8
 15684                           indf1	equ	0xFE7
 15685                           postinc1	equ	0xFE6
 15686                           postdec1	equ	0xFE5
 15687                           fsr1h	equ	0xFE2
 15688                           fsr1l	equ	0xFE1
 15689                           indf2	equ	0xFDF
 15690                           postinc2	equ	0xFDE
 15691                           postdec2	equ	0xFDD
 15692                           fsr2h	equ	0xFDA
 15693                           fsr2l	equ	0xFD9
 15694                           status	equ	0xFD8
 15695                           
 15696 ;; *************** function _Tx_Word *****************
 15697 ;; Defined at:
 15698 ;;		line 135 in file "eddComms.c"
 15699 ;; Parameters:    Size  Location     Type
 15700 ;;  byte            1    wreg     unsigned char 
 15701 ;; Auto vars:     Size  Location     Type
 15702 ;;  byte            1    9[BANK0 ] unsigned char 
 15703 ;;  bit_pos         2    7[BANK0 ] int 
 15704 ;; Return value:  Size  Location     Type
 15705 ;;                  1    wreg      void 
 15706 ;; Registers used:
 15707 ;;		wreg, status,2, status,0, cstack
 15708 ;; Tracked objects:
 15709 ;;		On entry : 0/0
 15710 ;;		On exit  : 0/0
 15711 ;;		Unchanged: 0/0
 15712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15714 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15716 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15717 ;;Total ram usage:        3 bytes
 15718 ;; Hardware stack levels used:    1
 15719 ;; Hardware stack levels required when called:   10
 15720 ;; This function calls:
 15721 ;;		_Delay_500us
 15722 ;;		_Delay_ms
 15723 ;;		_Set_Line_High
 15724 ;;		_Tx_0
 15725 ;;		_Tx_1
 15726 ;; This function is called by:
 15727 ;;		_commandResponse
 15728 ;;		_EDD_Calibrate
 15729 ;;		_EDD_Energy_Store
 15730 ;;		_EDD_Blast
 15731 ;;		_EDD_Discharge
 15732 ;; This function uses a non-reentrant model
 15733 ;;
 15734                           
 15735                           	psect	text79
 15736  0064FA                     __ptext79:
 15737                           	opt stack 0
 15738  0064FA                     _Tx_Word:
 15739                           	opt stack 15
 15740                           
 15741                           ;incstack = 0
 15742                           ;Tx_Word@byte stored from wreg
 15743  0064FA  0100               	movlb	0	; () banked
 15744  0064FC  6F69               	movwf	Tx_Word@byte& (0+255),b
 15745                           
 15746                           ;eddComms.c: 136: int bit_pos = 0;
 15747  0064FE  0E00               	movlw	0
 15748  006500  0100               	movlb	0	; () banked
 15749  006502  6F68               	movwf	(Tx_Word@bit_pos+1)& (0+255),b
 15750  006504  0E00               	movlw	0
 15751  006506  6F67               	movwf	Tx_Word@bit_pos& (0+255),b
 15752                           
 15753                           ; BSR set to: 0
 15754                           ;eddComms.c: 137: Delay_ms(13);
 15755  006508  0E00               	movlw	0
 15756  00650A  0100               	movlb	0	; () banked
 15757  00650C  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
 15758  00650E  0E0D               	movlw	13
 15759  006510  6F60               	movwf	Delay_ms@ms& (0+255),b
 15760  006512  EC7B  F034         	call	_Delay_ms	;wreg free
 15761                           
 15762                           ;eddComms.c: 138: T4CONbits.T4ON = 1;
 15763  006516  8EB7               	bsf	4023,7,c	;volatile
 15764                           
 15765                           ;eddComms.c: 139: Tx_0();
 15766  006518  EC76  F03C         	call	_Tx_0	;wreg free
 15767                           
 15768                           ;eddComms.c: 140: while (bit_pos < 8){
 15769  00651C  D010               	goto	l12926
 15770  00651E                     l1790:
 15771                           
 15772                           ; BSR set to: 0
 15773                           ;eddComms.c: 141: if (byte & 0b10000000)
 15774  00651E  0100               	movlb	0	; () banked
 15775  006520  AF69               	btfss	Tx_Word@byte& (0+255),7,b
 15776  006522  D003               	goto	l12920
 15777                           
 15778                           ; BSR set to: 0
 15779                           ;eddComms.c: 142: Tx_1();
 15780  006524  EC69  F03C         	call	_Tx_1	;wreg free
 15781  006528  D002               	goto	l12922
 15782  00652A                     l12920:
 15783                           
 15784                           ;eddComms.c: 143: else
 15785                           ;eddComms.c: 144: Tx_0();
 15786  00652A  EC76  F03C         	call	_Tx_0	;wreg free
 15787  00652E                     l12922:
 15788                           
 15789                           ;eddComms.c: 145: byte = byte << 1;
 15790  00652E  0100               	movlb	0	; () banked
 15791  006530  5169               	movf	Tx_Word@byte& (0+255),w,b
 15792  006532  2569               	addwf	Tx_Word@byte& (0+255),w,b
 15793  006534  0100               	movlb	0	; () banked
 15794  006536  6F69               	movwf	Tx_Word@byte& (0+255),b
 15795                           
 15796                           ; BSR set to: 0
 15797                           ;eddComms.c: 146: bit_pos++;
 15798  006538  0100               	movlb	0	; () banked
 15799  00653A  4B67               	infsnz	Tx_Word@bit_pos& (0+255),f,b
 15800  00653C  2B68               	incf	(Tx_Word@bit_pos+1)& (0+255),f,b
 15801  00653E                     l12926:
 15802  00653E  0100               	movlb	0	; () banked
 15803  006540  BF68               	btfsc	(Tx_Word@bit_pos+1)& (0+255),7,b
 15804  006542  D7ED               	goto	l1790
 15805  006544  0100               	movlb	0	; () banked
 15806  006546  5168               	movf	(Tx_Word@bit_pos+1)& (0+255),w,b
 15807  006548  E105               	bnz	l12928
 15808  00654A  0E08               	movlw	8
 15809  00654C  0100               	movlb	0	; () banked
 15810  00654E  5D67               	subwf	Tx_Word@bit_pos& (0+255),w,b
 15811  006550  A0D8               	btfss	status,0,c
 15812  006552  D7E5               	goto	l1790
 15813  006554                     l12928:
 15814                           
 15815                           ; BSR set to: 0
 15816                           ;eddComms.c: 147: }
 15817                           ;eddComms.c: 148: tx = 1;
 15818  006554  0E00               	movlw	0
 15819  006556  6E3D               	movwf	_tx+1,c	;volatile
 15820  006558  0E01               	movlw	1
 15821  00655A  6E3C               	movwf	_tx,c	;volatile
 15822                           
 15823                           ; BSR set to: 0
 15824                           ;eddComms.c: 149: Delay_500us();
 15825  00655C  ECA3  F03D         	call	_Delay_500us	;wreg free
 15826                           
 15827                           ;eddComms.c: 150: Set_Line_High();
 15828  006560  ECF8  F03D         	call	_Set_Line_High	;wreg free
 15829                           
 15830                           ;eddComms.c: 151: T4CONbits.T4ON = 0;
 15831  006564  9EB7               	bcf	4023,7,c	;volatile
 15832  006566  0012               	return		;funcret
 15833  006568                     __end_of_Tx_Word:
 15834                           	opt stack 0
 15835                           tblptru	equ	0xFF8
 15836                           tblptrh	equ	0xFF7
 15837                           tblptrl	equ	0xFF6
 15838                           tablat	equ	0xFF5
 15839                           prodh	equ	0xFF4
 15840                           prodl	equ	0xFF3
 15841                           intcon	equ	0xFF2
 15842                           postinc0	equ	0xFEE
 15843                           wreg	equ	0xFE8
 15844                           indf1	equ	0xFE7
 15845                           postinc1	equ	0xFE6
 15846                           postdec1	equ	0xFE5
 15847                           fsr1h	equ	0xFE2
 15848                           fsr1l	equ	0xFE1
 15849                           indf2	equ	0xFDF
 15850                           postinc2	equ	0xFDE
 15851                           postdec2	equ	0xFDD
 15852                           fsr2h	equ	0xFDA
 15853                           fsr2l	equ	0xFD9
 15854                           status	equ	0xFD8
 15855                           
 15856 ;; *************** function _Tx_1 *****************
 15857 ;; Defined at:
 15858 ;;		line 118 in file "eddComms.c"
 15859 ;; Parameters:    Size  Location     Type
 15860 ;;		None
 15861 ;; Auto vars:     Size  Location     Type
 15862 ;;		None
 15863 ;; Return value:  Size  Location     Type
 15864 ;;                  1    wreg      void 
 15865 ;; Registers used:
 15866 ;;		wreg, status,2, cstack
 15867 ;; Tracked objects:
 15868 ;;		On entry : 0/0
 15869 ;;		On exit  : 0/0
 15870 ;;		Unchanged: 0/0
 15871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15876 ;;Total ram usage:        0 bytes
 15877 ;; Hardware stack levels used:    1
 15878 ;; Hardware stack levels required when called:    9
 15879 ;; This function calls:
 15880 ;;		_Delay_500us
 15881 ;;		_Delay_500us_X
 15882 ;; This function is called by:
 15883 ;;		_Tx_Word
 15884 ;; This function uses a non-reentrant model
 15885 ;;
 15886                           
 15887                           	psect	text80
 15888  0078D2                     __ptext80:
 15889                           	opt stack 0
 15890  0078D2                     _Tx_1:
 15891                           	opt stack 15
 15892                           
 15893                           ;eddComms.c: 119: tx = 1;
 15894                           
 15895                           ;incstack = 0
 15896  0078D2  0E00               	movlw	0
 15897  0078D4  6E3D               	movwf	_tx+1,c	;volatile
 15898  0078D6  0E01               	movlw	1
 15899  0078D8  6E3C               	movwf	_tx,c	;volatile
 15900                           
 15901                           ;eddComms.c: 120: Delay_500us_X();
 15902  0078DA  EC9D  F03D         	call	_Delay_500us_X	;wreg free
 15903                           
 15904                           ;eddComms.c: 121: tx = 0;
 15905  0078DE  0E00               	movlw	0
 15906  0078E0  6E3D               	movwf	_tx+1,c	;volatile
 15907  0078E2  0E00               	movlw	0
 15908  0078E4  6E3C               	movwf	_tx,c	;volatile
 15909                           
 15910                           ;eddComms.c: 122: Delay_500us();
 15911  0078E6  ECA3  F03D         	call	_Delay_500us	;wreg free
 15912  0078EA  0012               	return		;funcret
 15913  0078EC                     __end_of_Tx_1:
 15914                           	opt stack 0
 15915                           tblptru	equ	0xFF8
 15916                           tblptrh	equ	0xFF7
 15917                           tblptrl	equ	0xFF6
 15918                           tablat	equ	0xFF5
 15919                           prodh	equ	0xFF4
 15920                           prodl	equ	0xFF3
 15921                           intcon	equ	0xFF2
 15922                           postinc0	equ	0xFEE
 15923                           wreg	equ	0xFE8
 15924                           indf1	equ	0xFE7
 15925                           postinc1	equ	0xFE6
 15926                           postdec1	equ	0xFE5
 15927                           fsr1h	equ	0xFE2
 15928                           fsr1l	equ	0xFE1
 15929                           indf2	equ	0xFDF
 15930                           postinc2	equ	0xFDE
 15931                           postdec2	equ	0xFDD
 15932                           fsr2h	equ	0xFDA
 15933                           fsr2l	equ	0xFD9
 15934                           status	equ	0xFD8
 15935                           
 15936 ;; *************** function _Tx_0 *****************
 15937 ;; Defined at:
 15938 ;;		line 126 in file "eddComms.c"
 15939 ;; Parameters:    Size  Location     Type
 15940 ;;		None
 15941 ;; Auto vars:     Size  Location     Type
 15942 ;;		None
 15943 ;; Return value:  Size  Location     Type
 15944 ;;                  1    wreg      void 
 15945 ;; Registers used:
 15946 ;;		wreg, status,2, cstack
 15947 ;; Tracked objects:
 15948 ;;		On entry : 0/0
 15949 ;;		On exit  : 0/0
 15950 ;;		Unchanged: 0/0
 15951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15956 ;;Total ram usage:        0 bytes
 15957 ;; Hardware stack levels used:    1
 15958 ;; Hardware stack levels required when called:    9
 15959 ;; This function calls:
 15960 ;;		_Delay_500us
 15961 ;;		_Delay_500us_X
 15962 ;; This function is called by:
 15963 ;;		_Tx_Word
 15964 ;; This function uses a non-reentrant model
 15965 ;;
 15966                           
 15967                           	psect	text81
 15968  0078EC                     __ptext81:
 15969                           	opt stack 0
 15970  0078EC                     _Tx_0:
 15971                           	opt stack 15
 15972                           
 15973                           ;eddComms.c: 127: tx = 0;
 15974                           
 15975                           ;incstack = 0
 15976  0078EC  0E00               	movlw	0
 15977  0078EE  6E3D               	movwf	_tx+1,c	;volatile
 15978  0078F0  0E00               	movlw	0
 15979  0078F2  6E3C               	movwf	_tx,c	;volatile
 15980                           
 15981                           ;eddComms.c: 128: Delay_500us_X();
 15982  0078F4  EC9D  F03D         	call	_Delay_500us_X	;wreg free
 15983                           
 15984                           ;eddComms.c: 129: tx = 1;
 15985  0078F8  0E00               	movlw	0
 15986  0078FA  6E3D               	movwf	_tx+1,c	;volatile
 15987  0078FC  0E01               	movlw	1
 15988  0078FE  6E3C               	movwf	_tx,c	;volatile
 15989                           
 15990                           ;eddComms.c: 130: Delay_500us();
 15991  007900  ECA3  F03D         	call	_Delay_500us	;wreg free
 15992  007904  0012               	return		;funcret
 15993  007906                     __end_of_Tx_0:
 15994                           	opt stack 0
 15995                           tblptru	equ	0xFF8
 15996                           tblptrh	equ	0xFF7
 15997                           tblptrl	equ	0xFF6
 15998                           tablat	equ	0xFF5
 15999                           prodh	equ	0xFF4
 16000                           prodl	equ	0xFF3
 16001                           intcon	equ	0xFF2
 16002                           postinc0	equ	0xFEE
 16003                           wreg	equ	0xFE8
 16004                           indf1	equ	0xFE7
 16005                           postinc1	equ	0xFE6
 16006                           postdec1	equ	0xFE5
 16007                           fsr1h	equ	0xFE2
 16008                           fsr1l	equ	0xFE1
 16009                           indf2	equ	0xFDF
 16010                           postinc2	equ	0xFDE
 16011                           postdec2	equ	0xFDD
 16012                           fsr2h	equ	0xFDA
 16013                           fsr2l	equ	0xFD9
 16014                           status	equ	0xFD8
 16015                           
 16016 ;; *************** function _Delay_500us_X *****************
 16017 ;; Defined at:
 16018 ;;		line 110 in file "peripherals.c"
 16019 ;; Parameters:    Size  Location     Type
 16020 ;;		None
 16021 ;; Auto vars:     Size  Location     Type
 16022 ;;		None
 16023 ;; Return value:  Size  Location     Type
 16024 ;;                  1    wreg      void 
 16025 ;; Registers used:
 16026 ;;		wreg, status,2
 16027 ;; Tracked objects:
 16028 ;;		On entry : 0/0
 16029 ;;		On exit  : 0/0
 16030 ;;		Unchanged: 0/0
 16031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16036 ;;Total ram usage:        0 bytes
 16037 ;; Hardware stack levels used:    1
 16038 ;; Hardware stack levels required when called:    8
 16039 ;; This function calls:
 16040 ;;		Nothing
 16041 ;; This function is called by:
 16042 ;;		_Tx_1
 16043 ;;		_Tx_0
 16044 ;; This function uses a non-reentrant model
 16045 ;;
 16046                           
 16047                           	psect	text82
 16048  007B3A                     __ptext82:
 16049                           	opt stack 0
 16050  007B3A                     _Delay_500us_X:
 16051                           	opt stack 15
 16052                           
 16053                           ;peripherals.c: 111: PR4=169;
 16054                           
 16055                           ;incstack = 0
 16056  007B3A  0EA9               	movlw	169
 16057  007B3C  6EB6               	movwf	4022,c	;volatile
 16058  007B3E                     l323:
 16059  007B3E  A437               	btfss	_FLAGS,2,c
 16060  007B40  D7FE               	goto	l323
 16061                           
 16062                           ;peripherals.c: 113: FLAGS.us500 = 0;
 16063  007B42  9437               	bcf	_FLAGS,2,c
 16064  007B44  0012               	return		;funcret
 16065  007B46                     __end_of_Delay_500us_X:
 16066                           	opt stack 0
 16067                           tblptru	equ	0xFF8
 16068                           tblptrh	equ	0xFF7
 16069                           tblptrl	equ	0xFF6
 16070                           tablat	equ	0xFF5
 16071                           prodh	equ	0xFF4
 16072                           prodl	equ	0xFF3
 16073                           intcon	equ	0xFF2
 16074                           postinc0	equ	0xFEE
 16075                           wreg	equ	0xFE8
 16076                           indf1	equ	0xFE7
 16077                           postinc1	equ	0xFE6
 16078                           postdec1	equ	0xFE5
 16079                           fsr1h	equ	0xFE2
 16080                           fsr1l	equ	0xFE1
 16081                           indf2	equ	0xFDF
 16082                           postinc2	equ	0xFDE
 16083                           postdec2	equ	0xFDD
 16084                           fsr2h	equ	0xFDA
 16085                           fsr2l	equ	0xFD9
 16086                           status	equ	0xFD8
 16087                           
 16088 ;; *************** function _Delay_500us *****************
 16089 ;; Defined at:
 16090 ;;		line 104 in file "peripherals.c"
 16091 ;; Parameters:    Size  Location     Type
 16092 ;;		None
 16093 ;; Auto vars:     Size  Location     Type
 16094 ;;		None
 16095 ;; Return value:  Size  Location     Type
 16096 ;;                  1    wreg      void 
 16097 ;; Registers used:
 16098 ;;		wreg, status,2
 16099 ;; Tracked objects:
 16100 ;;		On entry : 0/0
 16101 ;;		On exit  : 0/0
 16102 ;;		Unchanged: 0/0
 16103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16108 ;;Total ram usage:        0 bytes
 16109 ;; Hardware stack levels used:    1
 16110 ;; Hardware stack levels required when called:    8
 16111 ;; This function calls:
 16112 ;;		Nothing
 16113 ;; This function is called by:
 16114 ;;		_Tx_1
 16115 ;;		_Tx_0
 16116 ;;		_Tx_Word
 16117 ;; This function uses a non-reentrant model
 16118 ;;
 16119                           
 16120                           	psect	text83
 16121  007B46                     __ptext83:
 16122                           	opt stack 0
 16123  007B46                     _Delay_500us:
 16124                           	opt stack 15
 16125                           
 16126                           ;peripherals.c: 105: PR4=230;
 16127                           
 16128                           ;incstack = 0
 16129  007B46  0EE6               	movlw	230
 16130  007B48  6EB6               	movwf	4022,c	;volatile
 16131  007B4A                     l317:
 16132  007B4A  A437               	btfss	_FLAGS,2,c
 16133  007B4C  D7FE               	goto	l317
 16134                           
 16135                           ;peripherals.c: 107: FLAGS.us500 = 0;
 16136  007B4E  9437               	bcf	_FLAGS,2,c
 16137  007B50  0012               	return		;funcret
 16138  007B52                     __end_of_Delay_500us:
 16139                           	opt stack 0
 16140                           tblptru	equ	0xFF8
 16141                           tblptrh	equ	0xFF7
 16142                           tblptrl	equ	0xFF6
 16143                           tablat	equ	0xFF5
 16144                           prodh	equ	0xFF4
 16145                           prodl	equ	0xFF3
 16146                           intcon	equ	0xFF2
 16147                           postinc0	equ	0xFEE
 16148                           wreg	equ	0xFE8
 16149                           indf1	equ	0xFE7
 16150                           postinc1	equ	0xFE6
 16151                           postdec1	equ	0xFE5
 16152                           fsr1h	equ	0xFE2
 16153                           fsr1l	equ	0xFE1
 16154                           indf2	equ	0xFDF
 16155                           postinc2	equ	0xFDE
 16156                           postdec2	equ	0xFDD
 16157                           fsr2h	equ	0xFDA
 16158                           fsr2l	equ	0xFD9
 16159                           status	equ	0xFD8
 16160                           
 16161 ;; *************** function _Set_Line_High *****************
 16162 ;; Defined at:
 16163 ;;		line 109 in file "eddComms.c"
 16164 ;; Parameters:    Size  Location     Type
 16165 ;;		None
 16166 ;; Auto vars:     Size  Location     Type
 16167 ;;		None
 16168 ;; Return value:  Size  Location     Type
 16169 ;;                  1    wreg      void 
 16170 ;; Registers used:
 16171 ;;		None
 16172 ;; Tracked objects:
 16173 ;;		On entry : 0/0
 16174 ;;		On exit  : 0/0
 16175 ;;		Unchanged: 0/0
 16176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16181 ;;Total ram usage:        0 bytes
 16182 ;; Hardware stack levels used:    1
 16183 ;; Hardware stack levels required when called:    8
 16184 ;; This function calls:
 16185 ;;		Nothing
 16186 ;; This function is called by:
 16187 ;;		_EDD_Init_Comms
 16188 ;;		_Tx_Word
 16189 ;;		_EDD_Calibrate
 16190 ;;		_Tx_Calibration_Pulses
 16191 ;;		_prepareForProgramming
 16192 ;;		_checkForUnfiredEdds
 16193 ;; This function uses a non-reentrant model
 16194 ;;
 16195                           
 16196                           	psect	text84
 16197  007BF0                     __ptext84:
 16198                           	opt stack 0
 16199  007BF0                     _Set_Line_High:
 16200                           	opt stack 16
 16201                           
 16202                           ;eddComms.c: 110: LATEbits.LATE6 = 1;
 16203                           
 16204                           ;incstack = 0
 16205  007BF0  8C7D               	bsf	3965,6,c	;volatile
 16206  007BF2  0012               	return		;funcret
 16207  007BF4                     __end_of_Set_Line_High:
 16208                           	opt stack 0
 16209                           tblptru	equ	0xFF8
 16210                           tblptrh	equ	0xFF7
 16211                           tblptrl	equ	0xFF6
 16212                           tablat	equ	0xFF5
 16213                           prodh	equ	0xFF4
 16214                           prodl	equ	0xFF3
 16215                           intcon	equ	0xFF2
 16216                           postinc0	equ	0xFEE
 16217                           wreg	equ	0xFE8
 16218                           indf1	equ	0xFE7
 16219                           postinc1	equ	0xFE6
 16220                           postdec1	equ	0xFE5
 16221                           fsr1h	equ	0xFE2
 16222                           fsr1l	equ	0xFE1
 16223                           indf2	equ	0xFDF
 16224                           postinc2	equ	0xFDE
 16225                           postdec2	equ	0xFDD
 16226                           fsr2h	equ	0xFDA
 16227                           fsr2l	equ	0xFD9
 16228                           status	equ	0xFD8
 16229                           
 16230 ;; *************** function _Delay_ms *****************
 16231 ;; Defined at:
 16232 ;;		line 94 in file "peripherals.c"
 16233 ;; Parameters:    Size  Location     Type
 16234 ;;  ms              2    0[BANK0 ] int 
 16235 ;; Auto vars:     Size  Location     Type
 16236 ;;  j               2    5[BANK0 ] int 
 16237 ;;  i               2    3[BANK0 ] int 
 16238 ;; Return value:  Size  Location     Type
 16239 ;;                  1    wreg      void 
 16240 ;; Registers used:
 16241 ;;		wreg, status,2, status,0, cstack
 16242 ;; Tracked objects:
 16243 ;;		On entry : 0/0
 16244 ;;		On exit  : 0/0
 16245 ;;		Unchanged: 0/0
 16246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16247 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16248 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16249 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16250 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16251 ;;Total ram usage:        7 bytes
 16252 ;; Hardware stack levels used:    1
 16253 ;; Hardware stack levels required when called:    9
 16254 ;; This function calls:
 16255 ;;		_Delay_100us
 16256 ;; This function is called by:
 16257 ;;		_Tx_Word
 16258 ;;		_rxWordEDD
 16259 ;;		_commandResponse
 16260 ;;		_EDD_Calibrate
 16261 ;;		_EDD_Energy_Store
 16262 ;;		_EDD_Blast
 16263 ;;		_EDD_Discharge
 16264 ;; This function uses a non-reentrant model
 16265 ;;
 16266                           
 16267                           	psect	text85
 16268  0068F6                     __ptext85:
 16269                           	opt stack 0
 16270  0068F6                     _Delay_ms:
 16271                           	opt stack 15
 16272                           
 16273                           ;peripherals.c: 96: for (int i = 0; i < ms; i++){
 16274                           
 16275                           ;incstack = 0
 16276  0068F6  0E00               	movlw	0
 16277  0068F8  0100               	movlb	0	; () banked
 16278  0068FA  6F64               	movwf	(Delay_ms@i+1)& (0+255),b
 16279  0068FC  0E00               	movlw	0
 16280  0068FE  6F63               	movwf	Delay_ms@i& (0+255),b
 16281  006900  D019               	goto	l12786
 16282  006902                     l12772:
 16283                           
 16284                           ; BSR set to: 0
 16285                           ;peripherals.c: 97: for(int j = 0; j < 10; j++){
 16286  006902  0E00               	movlw	0
 16287  006904  0100               	movlb	0	; () banked
 16288  006906  6F66               	movwf	(Delay_ms@j+1)& (0+255),b
 16289  006908  0E00               	movlw	0
 16290  00690A  6F65               	movwf	Delay_ms@j& (0+255),b
 16291  00690C                     l12774:
 16292                           
 16293                           ; BSR set to: 0
 16294  00690C  0100               	movlb	0	; () banked
 16295  00690E  BF66               	btfsc	(Delay_ms@j+1)& (0+255),7,b
 16296  006910  D008               	goto	l12778
 16297  006912  0100               	movlb	0	; () banked
 16298  006914  5166               	movf	(Delay_ms@j+1)& (0+255),w,b
 16299  006916  E10B               	bnz	l12784
 16300  006918  0E0A               	movlw	10
 16301  00691A  0100               	movlb	0	; () banked
 16302  00691C  5D65               	subwf	Delay_ms@j& (0+255),w,b
 16303  00691E  B0D8               	btfsc	status,0,c
 16304  006920  D006               	goto	l12784
 16305  006922                     l12778:
 16306                           
 16307                           ; BSR set to: 0
 16308                           ;peripherals.c: 98: Delay_100us();
 16309  006922  EC7D  F03D         	call	_Delay_100us	;wreg free
 16310  006926  0100               	movlb	0	; () banked
 16311  006928  4B65               	infsnz	Delay_ms@j& (0+255),f,b
 16312  00692A  2B66               	incf	(Delay_ms@j+1)& (0+255),f,b
 16313  00692C  D7EF               	goto	l12774
 16314  00692E                     l12784:
 16315                           
 16316                           ; BSR set to: 0
 16317  00692E  0100               	movlb	0	; () banked
 16318  006930  4B63               	infsnz	Delay_ms@i& (0+255),f,b
 16319  006932  2B64               	incf	(Delay_ms@i+1)& (0+255),f,b
 16320  006934                     l12786:
 16321                           
 16322                           ; BSR set to: 0
 16323  006934  0100               	movlb	0	; () banked
 16324  006936  5160               	movf	Delay_ms@ms& (0+255),w,b
 16325  006938  0100               	movlb	0	; () banked
 16326  00693A  5D63               	subwf	Delay_ms@i& (0+255),w,b
 16327  00693C  0100               	movlb	0	; () banked
 16328  00693E  5164               	movf	(Delay_ms@i+1)& (0+255),w,b
 16329  006940  0A80               	xorlw	128
 16330  006942  0100               	movlb	0	; () banked
 16331  006944  6F62               	movwf	??_Delay_ms& (0+255),b
 16332  006946  0100               	movlb	0	; () banked
 16333  006948  5161               	movf	(Delay_ms@ms+1)& (0+255),w,b
 16334  00694A  0A80               	xorlw	128
 16335  00694C  0100               	movlb	0	; () banked
 16336  00694E  5962               	subwfb	??_Delay_ms& (0+255),w,b
 16337  006950  B0D8               	btfsc	status,0,c
 16338  006952  0012               	return	
 16339  006954  D7D6               	goto	l12772
 16340  006956                     __end_of_Delay_ms:
 16341                           	opt stack 0
 16342                           tblptru	equ	0xFF8
 16343                           tblptrh	equ	0xFF7
 16344                           tblptrl	equ	0xFF6
 16345                           tablat	equ	0xFF5
 16346                           prodh	equ	0xFF4
 16347                           prodl	equ	0xFF3
 16348                           intcon	equ	0xFF2
 16349                           postinc0	equ	0xFEE
 16350                           wreg	equ	0xFE8
 16351                           indf1	equ	0xFE7
 16352                           postinc1	equ	0xFE6
 16353                           postdec1	equ	0xFE5
 16354                           fsr1h	equ	0xFE2
 16355                           fsr1l	equ	0xFE1
 16356                           indf2	equ	0xFDF
 16357                           postinc2	equ	0xFDE
 16358                           postdec2	equ	0xFDD
 16359                           fsr2h	equ	0xFDA
 16360                           fsr2l	equ	0xFD9
 16361                           status	equ	0xFD8
 16362                           
 16363 ;; *************** function _Delay_100us *****************
 16364 ;; Defined at:
 16365 ;;		line 117 in file "peripherals.c"
 16366 ;; Parameters:    Size  Location     Type
 16367 ;;		None
 16368 ;; Auto vars:     Size  Location     Type
 16369 ;;		None
 16370 ;; Return value:  Size  Location     Type
 16371 ;;                  1    wreg      void 
 16372 ;; Registers used:
 16373 ;;		None
 16374 ;; Tracked objects:
 16375 ;;		On entry : 0/0
 16376 ;;		On exit  : 0/0
 16377 ;;		Unchanged: 0/0
 16378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16383 ;;Total ram usage:        0 bytes
 16384 ;; Hardware stack levels used:    1
 16385 ;; Hardware stack levels required when called:    8
 16386 ;; This function calls:
 16387 ;;		Nothing
 16388 ;; This function is called by:
 16389 ;;		_Delay_ms
 16390 ;;		_Tx_Calibration_Pulses
 16391 ;; This function uses a non-reentrant model
 16392 ;;
 16393                           
 16394                           	psect	text86
 16395  007AFA                     __ptext86:
 16396                           	opt stack 0
 16397  007AFA                     _Delay_100us:
 16398                           	opt stack 15
 16399                           
 16400                           ;peripherals.c: 118: T2CONbits.T2ON = 1;
 16401                           
 16402                           ; BSR set to: 0
 16403                           ;incstack = 0
 16404  007AFA  8EBD               	bsf	4029,7,c	;volatile
 16405                           
 16406                           ;peripherals.c: 119: PIE5bits.TMR8IE = 1;
 16407  007AFC  010E               	movlb	14	; () banked
 16408  007AFE  8F2E               	bsf	46,7,b	;volatile
 16409  007B00                     l329:
 16410  007B00  A037               	btfss	_FLAGS,0,c
 16411  007B02  D7FE               	goto	l329
 16412                           
 16413                           ;peripherals.c: 121: FLAGS.us100 = 0;
 16414  007B04  9037               	bcf	_FLAGS,0,c
 16415  007B06  0012               	return		;funcret
 16416  007B08                     __end_of_Delay_100us:
 16417                           	opt stack 0
 16418                           tblptru	equ	0xFF8
 16419                           tblptrh	equ	0xFF7
 16420                           tblptrl	equ	0xFF6
 16421                           tablat	equ	0xFF5
 16422                           prodh	equ	0xFF4
 16423                           prodl	equ	0xFF3
 16424                           intcon	equ	0xFF2
 16425                           postinc0	equ	0xFEE
 16426                           wreg	equ	0xFE8
 16427                           indf1	equ	0xFE7
 16428                           postinc1	equ	0xFE6
 16429                           postdec1	equ	0xFE5
 16430                           fsr1h	equ	0xFE2
 16431                           fsr1l	equ	0xFE1
 16432                           indf2	equ	0xFDF
 16433                           postinc2	equ	0xFDE
 16434                           postdec2	equ	0xFDD
 16435                           fsr2h	equ	0xFDA
 16436                           fsr2l	equ	0xFD9
 16437                           status	equ	0xFD8
 16438                           
 16439 ;; *************** function _disengageRelay *****************
 16440 ;; Defined at:
 16441 ;;		line 219 in file "shaftTest.c"
 16442 ;; Parameters:    Size  Location     Type
 16443 ;;		None
 16444 ;; Auto vars:     Size  Location     Type
 16445 ;;		None
 16446 ;; Return value:  Size  Location     Type
 16447 ;;                  1    wreg      void 
 16448 ;; Registers used:
 16449 ;;		None
 16450 ;; Tracked objects:
 16451 ;;		On entry : 0/0
 16452 ;;		On exit  : 0/0
 16453 ;;		Unchanged: 0/0
 16454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16459 ;;Total ram usage:        0 bytes
 16460 ;; Hardware stack levels used:    1
 16461 ;; Hardware stack levels required when called:    8
 16462 ;; This function calls:
 16463 ;;		Nothing
 16464 ;; This function is called by:
 16465 ;;		_device
 16466 ;; This function uses a non-reentrant model
 16467 ;;
 16468                           
 16469                           	psect	text87
 16470  007BF4                     __ptext87:
 16471                           	opt stack 0
 16472  007BF4                     _disengageRelay:
 16473                           	opt stack 21
 16474                           
 16475                           ;shaftTest.c: 220: LATAbits.LATA1 = 0;
 16476                           
 16477                           ;incstack = 0
 16478  007BF4  9279               	bcf	3961,1,c	;volatile
 16479  007BF6  0012               	return		;funcret
 16480  007BF8                     __end_of_disengageRelay:
 16481                           	opt stack 0
 16482                           tblptru	equ	0xFF8
 16483                           tblptrh	equ	0xFF7
 16484                           tblptrl	equ	0xFF6
 16485                           tablat	equ	0xFF5
 16486                           prodh	equ	0xFF4
 16487                           prodl	equ	0xFF3
 16488                           intcon	equ	0xFF2
 16489                           postinc0	equ	0xFEE
 16490                           wreg	equ	0xFE8
 16491                           indf1	equ	0xFE7
 16492                           postinc1	equ	0xFE6
 16493                           postdec1	equ	0xFE5
 16494                           fsr1h	equ	0xFE2
 16495                           fsr1l	equ	0xFE1
 16496                           indf2	equ	0xFDF
 16497                           postinc2	equ	0xFDE
 16498                           postdec2	equ	0xFDD
 16499                           fsr2h	equ	0xFDA
 16500                           fsr2l	equ	0xFD9
 16501                           status	equ	0xFD8
 16502                           
 16503 ;; *************** function _currentStateHandler *****************
 16504 ;; Defined at:
 16505 ;;		line 45 in file "currentStateHandler.c"
 16506 ;; Parameters:    Size  Location     Type
 16507 ;;		None
 16508 ;; Auto vars:     Size  Location     Type
 16509 ;;  i               2    0[BANK1 ] int 
 16510 ;; Return value:  Size  Location     Type
 16511 ;;                  1    wreg      void 
 16512 ;; Registers used:
 16513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16514 ;; Tracked objects:
 16515 ;;		On entry : 0/0
 16516 ;;		On exit  : 0/0
 16517 ;;		Unchanged: 0/0
 16518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16520 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16521 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16522 ;;      Totals:         0       3       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16523 ;;Total ram usage:        5 bytes
 16524 ;; Hardware stack levels used:    1
 16525 ;; Hardware stack levels required when called:   14
 16526 ;; This function calls:
 16527 ;;		_bluetooth
 16528 ;;		_bluetoothStateHandler
 16529 ;;		_incomingCommands
 16530 ;;		_incomingCommandsStateHandler
 16531 ;;		_led
 16532 ;;		_ledStateHandler
 16533 ;;		_outgoingMessages
 16534 ;;		_outgoingMessagesStateHandler
 16535 ;;		_readKeyCable
 16536 ;;		_readKeyCableStateHandler
 16537 ;;		_readSupply
 16538 ;;		_readSupplyStateHandler
 16539 ;;		_shaftTest
 16540 ;;		_shaftTestStateHandler
 16541 ;; This function is called by:
 16542 ;;		_device
 16543 ;; This function uses a non-reentrant model
 16544 ;;
 16545                           
 16546                           	psect	text88
 16547  0030B4                     __ptext88:
 16548                           	opt stack 0
 16549  0030B4                     _currentStateHandler:
 16550                           	opt stack 15
 16551                           
 16552                           ;currentStateHandler.c: 47: switch(state.device){
 16553                           
 16554                           ;incstack = 0
 16555  0030B4  D046               	goto	l15336
 16556  0030B6                     l15292:
 16557                           
 16558                           ;currentStateHandler.c: 52: readKeyCable();
 16559  0030B6  ECAD  F02D         	call	_readKeyCable	;wreg free
 16560                           
 16561                           ;currentStateHandler.c: 53: readKeyCableStateHandler();
 16562  0030BA  ECAD  F02C         	call	_readKeyCableStateHandler	;wreg free
 16563                           
 16564                           ;currentStateHandler.c: 54: state.readKeyCable.flag = 0;
 16565  0030BE  0E00               	movlw	0
 16566  0030C0  0101               	movlb	1	; () banked
 16567  0030C2  6FBF               	movwf	(_state+24)& (0+255),b
 16568  0030C4  0E00               	movlw	0
 16569  0030C6  6FBE               	movwf	(_state+23)& (0+255),b
 16570                           
 16571                           ;currentStateHandler.c: 55: break;
 16572  0030C8  D056               	goto	l15338
 16573  0030CA                     l15298:
 16574                           
 16575                           ; BSR set to: 1
 16576                           ;currentStateHandler.c: 58: readSupply();
 16577  0030CA  EC2D  F028         	call	_readSupply	;wreg free
 16578                           
 16579                           ;currentStateHandler.c: 59: readSupplyStateHandler();
 16580  0030CE  EC6F  F022         	call	_readSupplyStateHandler	;wreg free
 16581                           
 16582                           ;currentStateHandler.c: 60: state.readSupply.flag = 0;
 16583  0030D2  0E00               	movlw	0
 16584  0030D4  0101               	movlb	1	; () banked
 16585  0030D6  6FC6               	movwf	(_state+31)& (0+255),b
 16586  0030D8  0E00               	movlw	0
 16587  0030DA  6FC5               	movwf	(_state+30)& (0+255),b
 16588                           
 16589                           ;currentStateHandler.c: 61: break;
 16590  0030DC  D04C               	goto	l15338
 16591  0030DE                     l15304:
 16592                           
 16593                           ; BSR set to: 1
 16594                           ;currentStateHandler.c: 64: outgoingMessages();
 16595  0030DE  ECB8  F033         	call	_outgoingMessages	;wreg free
 16596                           
 16597                           ;currentStateHandler.c: 65: outgoingMessagesStateHandler();
 16598  0030E2  ECDF  F030         	call	_outgoingMessagesStateHandler	;wreg free
 16599                           
 16600                           ;currentStateHandler.c: 66: state.outgoingMessages.flag = 0;
 16601  0030E6  0E00               	movlw	0
 16602  0030E8  0101               	movlb	1	; () banked
 16603  0030EA  6FCD               	movwf	(_state+38)& (0+255),b
 16604  0030EC  0E00               	movlw	0
 16605  0030EE  6FCC               	movwf	(_state+37)& (0+255),b
 16606                           
 16607                           ;currentStateHandler.c: 67: break;
 16608  0030F0  D042               	goto	l15338
 16609  0030F2                     l15310:
 16610                           
 16611                           ; BSR set to: 1
 16612                           ;currentStateHandler.c: 70: led();
 16613  0030F2  ECBC  F01C         	call	_led	;wreg free
 16614                           
 16615                           ;currentStateHandler.c: 71: ledStateHandler();
 16616  0030F6  ECA1  F015         	call	_ledStateHandler	;wreg free
 16617                           
 16618                           ;currentStateHandler.c: 72: state.led.flag = 0;
 16619  0030FA  0E00               	movlw	0
 16620  0030FC  0101               	movlb	1	; () banked
 16621  0030FE  6FB8               	movwf	(_state+17)& (0+255),b
 16622  003100  0E00               	movlw	0
 16623  003102  6FB7               	movwf	(_state+16)& (0+255),b
 16624                           
 16625                           ;currentStateHandler.c: 73: break;
 16626  003104  D038               	goto	l15338
 16627  003106                     l15316:
 16628                           
 16629                           ; BSR set to: 1
 16630                           ;currentStateHandler.c: 76: incomingCommands();
 16631  003106  ECAB  F034         	call	_incomingCommands	;wreg free
 16632                           
 16633                           ;currentStateHandler.c: 77: incomingCommandsStateHandler();
 16634  00310A  ECEA  F033         	call	_incomingCommandsStateHandler	;wreg free
 16635                           
 16636                           ;currentStateHandler.c: 78: state.incomingCommands.flag = 0;
 16637  00310E  0E00               	movlw	0
 16638  003110  0101               	movlb	1	; () banked
 16639  003112  6FD4               	movwf	(_state+45)& (0+255),b
 16640  003114  0E00               	movlw	0
 16641  003116  6FD3               	movwf	(_state+44)& (0+255),b
 16642                           
 16643                           ;currentStateHandler.c: 79: break;
 16644  003118  D02E               	goto	l15338
 16645  00311A                     l15322:
 16646                           
 16647                           ; BSR set to: 1
 16648                           ;currentStateHandler.c: 82: shaftTest();
 16649  00311A  ECC4  F027         	call	_shaftTest	;wreg free
 16650                           
 16651                           ;currentStateHandler.c: 83: shaftTestStateHandler();
 16652  00311E  EC45  F02B         	call	_shaftTestStateHandler	;wreg free
 16653                           
 16654                           ;currentStateHandler.c: 84: state.shaftTest.flag = 0;
 16655  003122  0E00               	movlw	0
 16656  003124  0101               	movlb	1	; () banked
 16657  003126  6FDB               	movwf	(_state+52)& (0+255),b
 16658  003128  0E00               	movlw	0
 16659  00312A  6FDA               	movwf	(_state+51)& (0+255),b
 16660                           
 16661                           ;currentStateHandler.c: 85: break;
 16662  00312C  D024               	goto	l15338
 16663  00312E                     l15328:
 16664                           
 16665                           ; BSR set to: 1
 16666                           ;currentStateHandler.c: 88: bluetooth();
 16667  00312E  EC9E  F01A         	call	_bluetooth	;wreg free
 16668                           
 16669                           ;currentStateHandler.c: 89: bluetoothStateHandler();
 16670  003132  ECE8  F022         	call	_bluetoothStateHandler	;wreg free
 16671                           
 16672                           ;currentStateHandler.c: 90: state.bluetooth.flag = 0;
 16673  003136  0E00               	movlw	0
 16674  003138  0101               	movlb	1	; () banked
 16675  00313A  6FE2               	movwf	(_state+59)& (0+255),b
 16676  00313C  0E00               	movlw	0
 16677  00313E  6FE1               	movwf	(_state+58)& (0+255),b
 16678                           
 16679                           ; BSR set to: 1
 16680                           ;currentStateHandler.c: 95: }
 16681                           
 16682                           ; BSR set to: 1
 16683                           ;currentStateHandler.c: 94: break;
 16684                           
 16685                           ;currentStateHandler.c: 93: default :
 16686                           
 16687                           ;currentStateHandler.c: 91: break;
 16688  003140  D01A               	goto	l15338
 16689  003142                     l15336:
 16690  003142  0101               	movlb	1	; () banked
 16691  003144  51B2               	movf	(_state+11)& (0+255),w,b
 16692                           
 16693                           ; Switch size 1, requested type "space"
 16694                           ; Number of cases is 8, Range of values is 0 to 13
 16695                           ; switch strategies available:
 16696                           ; Name         Instructions Cycles
 16697                           ; simple_byte           25    13 (average)
 16698                           ;	Chosen strategy is simple_byte
 16699  003146  0A00               	xorlw	0	; case 0
 16700  003148  B4D8               	btfsc	status,2,c
 16701  00314A  D015               	goto	l15338
 16702  00314C  0A01               	xorlw	1	; case 1
 16703  00314E  B4D8               	btfsc	status,2,c
 16704  003150  D7B2               	goto	l15292
 16705  003152  0A02               	xorlw	2	; case 3
 16706  003154  B4D8               	btfsc	status,2,c
 16707  003156  D7D7               	goto	l15316
 16708  003158  0A07               	xorlw	7	; case 4
 16709  00315A  B4D8               	btfsc	status,2,c
 16710  00315C  D7CA               	goto	l15310
 16711  00315E  0A01               	xorlw	1	; case 5
 16712  003160  B4D8               	btfsc	status,2,c
 16713  003162  D7BD               	goto	l15304
 16714  003164  0A0C               	xorlw	12	; case 9
 16715  003166  B4D8               	btfsc	status,2,c
 16716  003168  D7B0               	goto	l15298
 16717  00316A  0A02               	xorlw	2	; case 11
 16718  00316C  B4D8               	btfsc	status,2,c
 16719  00316E  D7D5               	goto	l15322
 16720  003170  0A06               	xorlw	6	; case 13
 16721  003172  B4D8               	btfsc	status,2,c
 16722  003174  D7DC               	goto	l15328
 16723  003176                     l15338:
 16724                           
 16725                           ;currentStateHandler.c: 96: if(state.queuePointer > 0){
 16726  003176  0101               	movlb	1	; () banked
 16727  003178  51B1               	movf	(_state+10)& (0+255),w,b
 16728  00317A  B4D8               	btfsc	status,2,c
 16729  00317C  D04B               	goto	l15356
 16730                           
 16731                           ; BSR set to: 1
 16732  00317E  0004               	clrwdt		;# 
 16733                           
 16734                           ;currentStateHandler.c: 98: state.queuePointer--;
 16735  003180  0101               	movlb	1	; () banked
 16736  003182  07B1               	decf	(_state+10)& (0+255),f,b
 16737                           
 16738                           ; BSR set to: 1
 16739                           ;currentStateHandler.c: 99: state.device = state.stateQueue[0];
 16740  003184  C1A7  F1B2         	movff	_state,_state+11
 16741                           
 16742                           ; BSR set to: 1
 16743                           ;currentStateHandler.c: 100: for(int i = 0; i < state.queuePointer; i++){
 16744  003188  0E00               	movlw	0
 16745  00318A  0101               	movlb	1	; () banked
 16746  00318C  6FFB               	movwf	(currentStateHandler@i+1)& (0+255),b
 16747  00318E  0E00               	movlw	0
 16748  003190  6FFA               	movwf	currentStateHandler@i& (0+255),b
 16749  003192  D01F               	goto	l15352
 16750  003194                     l15348:
 16751                           
 16752                           ;currentStateHandler.c: 101: state.stateQueue[i] = state.stateQueue[i + 1];
 16753  003194  0E01               	movlw	1
 16754  003196  0101               	movlb	1	; () banked
 16755  003198  25FA               	addwf	currentStateHandler@i& (0+255),w,b
 16756  00319A  0100               	movlb	0	; () banked
 16757  00319C  6FA0               	movwf	??_currentStateHandler& (0+255),b
 16758  00319E  0E00               	movlw	0
 16759  0031A0  0101               	movlb	1	; () banked
 16760  0031A2  21FB               	addwfc	(currentStateHandler@i+1)& (0+255),w,b
 16761  0031A4  0100               	movlb	0	; () banked
 16762  0031A6  6FA1               	movwf	(??_currentStateHandler+1)& (0+255),b
 16763  0031A8  0EA7               	movlw	low _state
 16764  0031AA  0100               	movlb	0	; () banked
 16765  0031AC  25A0               	addwf	??_currentStateHandler& (0+255),w,b
 16766  0031AE  6ED9               	movwf	fsr2l,c
 16767  0031B0  0E01               	movlw	high _state
 16768  0031B2  0100               	movlb	0	; () banked
 16769  0031B4  21A1               	addwfc	(??_currentStateHandler+1)& (0+255),w,b
 16770  0031B6  6EDA               	movwf	fsr2h,c
 16771  0031B8  0EA7               	movlw	low _state
 16772  0031BA  0101               	movlb	1	; () banked
 16773  0031BC  25FA               	addwf	currentStateHandler@i& (0+255),w,b
 16774  0031BE  6EE1               	movwf	fsr1l,c
 16775  0031C0  0E01               	movlw	high _state
 16776  0031C2  0101               	movlb	1	; () banked
 16777  0031C4  21FB               	addwfc	(currentStateHandler@i+1)& (0+255),w,b
 16778  0031C6  6EE2               	movwf	fsr1h,c
 16779  0031C8  CFDF FFE7          	movff	indf2,indf1
 16780                           
 16781                           ; BSR set to: 1
 16782  0031CC  0101               	movlb	1	; () banked
 16783  0031CE  4BFA               	infsnz	currentStateHandler@i& (0+255),f,b
 16784  0031D0  2BFB               	incf	(currentStateHandler@i+1)& (0+255),f,b
 16785  0031D2                     l15352:
 16786                           
 16787                           ; BSR set to: 1
 16788  0031D2  0101               	movlb	1	; () banked
 16789  0031D4  51B1               	movf	(_state+10)& (0+255),w,b
 16790  0031D6  0100               	movlb	0	; () banked
 16791  0031D8  6FA0               	movwf	??_currentStateHandler& (0+255),b
 16792  0031DA  6BA1               	clrf	(??_currentStateHandler+1)& (0+255),b
 16793  0031DC  0100               	movlb	0	; () banked
 16794  0031DE  51A0               	movf	??_currentStateHandler& (0+255),w,b
 16795  0031E0  0101               	movlb	1	; () banked
 16796  0031E2  5DFA               	subwf	currentStateHandler@i& (0+255),w,b
 16797  0031E4  0101               	movlb	1	; () banked
 16798  0031E6  51FB               	movf	(currentStateHandler@i+1)& (0+255),w,b
 16799  0031E8  0A80               	xorlw	128
 16800  0031EA  0100               	movlb	0	; () banked
 16801  0031EC  6FA2               	movwf	(??_currentStateHandler+2)& (0+255),b
 16802  0031EE  0100               	movlb	0	; () banked
 16803  0031F0  51A1               	movf	(??_currentStateHandler+1)& (0+255),w,b
 16804  0031F2  0A80               	xorlw	128
 16805  0031F4  0100               	movlb	0	; () banked
 16806  0031F6  59A2               	subwfb	(??_currentStateHandler+2)& (0+255),w,b
 16807  0031F8  A0D8               	btfss	status,0,c
 16808  0031FA  D7CC               	goto	l15348
 16809                           
 16810                           ; BSR set to: 0
 16811                           ;currentStateHandler.c: 102: }
 16812                           ;currentStateHandler.c: 103: state.stateQueue[state.queuePointer] = 0;
 16813                           
 16814                           ; BSR set to: 0
 16815  0031FC  0101               	movlb	1	; () banked
 16816  0031FE  51B1               	movf	(_state+10)& (0+255),w,b
 16817  003200  0D01               	mullw	1
 16818  003202  0EA7               	movlw	low _state
 16819  003204  24F3               	addwf	prodl,w,c
 16820  003206  6ED9               	movwf	fsr2l,c
 16821  003208  0E01               	movlw	high _state
 16822  00320A  20F4               	addwfc	prodh,w,c
 16823  00320C  6EDA               	movwf	fsr2h,c
 16824  00320E  0E00               	movlw	0
 16825  003210  6EDF               	movwf	indf2,c
 16826                           
 16827                           ;currentStateHandler.c: 104: }
 16828  003212  0012               	return	
 16829  003214                     l15356:
 16830                           
 16831                           ; BSR set to: 1
 16832                           ;currentStateHandler.c: 105: else{
 16833                           ;currentStateHandler.c: 106: state.device = 0;
 16834  003214  0E00               	movlw	0
 16835  003216  0101               	movlb	1	; () banked
 16836  003218  6FB2               	movwf	(_state+11)& (0+255),b
 16837                           
 16838                           ;currentStateHandler.c: 107: state.outgoingMessages.flag = 0;
 16839  00321A  0E00               	movlw	0
 16840  00321C  0101               	movlb	1	; () banked
 16841  00321E  6FCD               	movwf	(_state+38)& (0+255),b
 16842  003220  0E00               	movlw	0
 16843  003222  6FCC               	movwf	(_state+37)& (0+255),b
 16844                           
 16845                           ;currentStateHandler.c: 108: state.bluetooth.flag = 0;
 16846  003224  0E00               	movlw	0
 16847  003226  0101               	movlb	1	; () banked
 16848  003228  6FE2               	movwf	(_state+59)& (0+255),b
 16849  00322A  0E00               	movlw	0
 16850  00322C  6FE1               	movwf	(_state+58)& (0+255),b
 16851                           
 16852                           ;currentStateHandler.c: 109: state.incomingCommands.flag = 0;
 16853  00322E  0E00               	movlw	0
 16854  003230  0101               	movlb	1	; () banked
 16855  003232  6FD4               	movwf	(_state+45)& (0+255),b
 16856  003234  0E00               	movlw	0
 16857  003236  6FD3               	movwf	(_state+44)& (0+255),b
 16858                           
 16859                           ;currentStateHandler.c: 110: state.readKeyCable.flag = 0;
 16860  003238  0E00               	movlw	0
 16861  00323A  0101               	movlb	1	; () banked
 16862  00323C  6FBF               	movwf	(_state+24)& (0+255),b
 16863  00323E  0E00               	movlw	0
 16864  003240  6FBE               	movwf	(_state+23)& (0+255),b
 16865                           
 16866                           ;currentStateHandler.c: 111: state.readSupply.flag = 0;
 16867  003242  0E00               	movlw	0
 16868  003244  0101               	movlb	1	; () banked
 16869  003246  6FC6               	movwf	(_state+31)& (0+255),b
 16870  003248  0E00               	movlw	0
 16871  00324A  6FC5               	movwf	(_state+30)& (0+255),b
 16872                           
 16873                           ;currentStateHandler.c: 112: state.shaftTest.flag = 0;
 16874  00324C  0E00               	movlw	0
 16875  00324E  0101               	movlb	1	; () banked
 16876  003250  6FDB               	movwf	(_state+52)& (0+255),b
 16877  003252  0E00               	movlw	0
 16878  003254  6FDA               	movwf	(_state+51)& (0+255),b
 16879  003256  0012               	return	
 16880  003258                     __end_of_currentStateHandler:
 16881                           	opt stack 0
 16882                           tblptru	equ	0xFF8
 16883                           tblptrh	equ	0xFF7
 16884                           tblptrl	equ	0xFF6
 16885                           tablat	equ	0xFF5
 16886                           prodh	equ	0xFF4
 16887                           prodl	equ	0xFF3
 16888                           intcon	equ	0xFF2
 16889                           postinc0	equ	0xFEE
 16890                           wreg	equ	0xFE8
 16891                           indf1	equ	0xFE7
 16892                           postinc1	equ	0xFE6
 16893                           postdec1	equ	0xFE5
 16894                           fsr1h	equ	0xFE2
 16895                           fsr1l	equ	0xFE1
 16896                           indf2	equ	0xFDF
 16897                           postinc2	equ	0xFDE
 16898                           postdec2	equ	0xFDD
 16899                           fsr2h	equ	0xFDA
 16900                           fsr2l	equ	0xFD9
 16901                           status	equ	0xFD8
 16902                           
 16903 ;; *************** function _shaftTestStateHandler *****************
 16904 ;; Defined at:
 16905 ;;		line 100 in file "shaftTest.c"
 16906 ;; Parameters:    Size  Location     Type
 16907 ;;		None
 16908 ;; Auto vars:     Size  Location     Type
 16909 ;;		None
 16910 ;; Return value:  Size  Location     Type
 16911 ;;                  1    wreg      void 
 16912 ;; Registers used:
 16913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16914 ;; Tracked objects:
 16915 ;;		On entry : 0/0
 16916 ;;		On exit  : 0/0
 16917 ;;		Unchanged: 0/0
 16918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16923 ;;Total ram usage:        0 bytes
 16924 ;; Hardware stack levels used:    1
 16925 ;; Hardware stack levels required when called:   11
 16926 ;; This function calls:
 16927 ;;		_readCableADC
 16928 ;;		_readEarthADC
 16929 ;; This function is called by:
 16930 ;;		_currentStateHandler
 16931 ;; This function uses a non-reentrant model
 16932 ;;
 16933                           
 16934                           	psect	text89
 16935  00568A                     __ptext89:
 16936                           	opt stack 0
 16937  00568A                     _shaftTestStateHandler:
 16938                           	opt stack 17
 16939                           
 16940                           ;shaftTest.c: 101: switch(state.shaftTest.current){
 16941                           
 16942                           ; BSR set to: 1
 16943                           ;incstack = 0
 16944  00568A  D044               	goto	l14886
 16945  00568C                     l14856:
 16946                           
 16947                           ;shaftTest.c: 103: state.shaftTest.next = 9;
 16948  00568C  0E09               	movlw	9
 16949  00568E  0101               	movlb	1	; () banked
 16950  005690  6FD7               	movwf	(_state+48)& (0+255),b
 16951                           
 16952                           ;shaftTest.c: 104: break;
 16953  005692  0012               	return	
 16954  005694                     l14858:
 16955                           
 16956                           ; BSR set to: 1
 16957                           ;shaftTest.c: 107: if(!ABB_1.info.statusBits.voltage)
 16958  005694  EE23  F0C1         	lfsr	2,_ABB_1+1
 16959  005698  BADF               	btfsc	indf2,5,c
 16960  00569A  D004               	goto	l14862
 16961                           
 16962                           ; BSR set to: 1
 16963                           ;shaftTest.c: 108: state.shaftTest.next = 13;
 16964  00569C  0E0D               	movlw	13
 16965  00569E  0101               	movlb	1	; () banked
 16966  0056A0  6FD7               	movwf	(_state+48)& (0+255),b
 16967  0056A2  0012               	return	
 16968  0056A4                     l14862:
 16969                           
 16970                           ; BSR set to: 1
 16971                           ;shaftTest.c: 109: else
 16972                           ;shaftTest.c: 110: state.shaftTest.next = 14;
 16973  0056A4  0E0E               	movlw	14
 16974  0056A6  0101               	movlb	1	; () banked
 16975  0056A8  6FD7               	movwf	(_state+48)& (0+255),b
 16976                           
 16977                           ; BSR set to: 1
 16978                           ;shaftTest.c: 111: break;
 16979  0056AA  0012               	return	
 16980  0056AC                     l14864:
 16981                           
 16982                           ; BSR set to: 1
 16983                           ;shaftTest.c: 114: state.shaftTest.next = 14;
 16984  0056AC  0E0E               	movlw	14
 16985  0056AE  0101               	movlb	1	; () banked
 16986  0056B0  6FD7               	movwf	(_state+48)& (0+255),b
 16987                           
 16988                           ;shaftTest.c: 115: break;
 16989  0056B2  0012               	return	
 16990  0056B4                     l14866:
 16991                           
 16992                           ; BSR set to: 1
 16993                           ;shaftTest.c: 118: state.shaftTest.next = 2;
 16994  0056B4  0E02               	movlw	2
 16995  0056B6  0101               	movlb	1	; () banked
 16996  0056B8  6FD7               	movwf	(_state+48)& (0+255),b
 16997                           
 16998                           ;shaftTest.c: 119: break;
 16999  0056BA  0012               	return	
 17000  0056BC                     l14868:
 17001                           
 17002                           ; BSR set to: 1
 17003                           ;shaftTest.c: 122: if(readCableADC() > 0x01F0)
 17004  0056BC  ECD0  F023         	call	_readCableADC	;wreg free
 17005  0056C0  0EF1               	movlw	241
 17006  0056C2  0100               	movlb	0	; () banked
 17007  0056C4  5D82               	subwf	?_readCableADC& (0+255),w,b
 17008  0056C6  0E01               	movlw	1
 17009  0056C8  0100               	movlb	0	; () banked
 17010  0056CA  5983               	subwfb	(?_readCableADC+1)& (0+255),w,b
 17011  0056CC  A0D8               	btfss	status,0,c
 17012  0056CE  D004               	goto	l14872
 17013                           
 17014                           ; BSR set to: 0
 17015                           ;shaftTest.c: 123: state.shaftTest.next = 4;
 17016  0056D0  0E04               	movlw	4
 17017  0056D2  0101               	movlb	1	; () banked
 17018  0056D4  6FD7               	movwf	(_state+48)& (0+255),b
 17019  0056D6  0012               	return	
 17020  0056D8                     l14872:
 17021                           
 17022                           ;shaftTest.c: 124: else
 17023                           ;shaftTest.c: 125: state.shaftTest.next = 12;
 17024  0056D8  0E0C               	movlw	12
 17025  0056DA  0101               	movlb	1	; () banked
 17026  0056DC  6FD7               	movwf	(_state+48)& (0+255),b
 17027                           
 17028                           ; BSR set to: 1
 17029                           ;shaftTest.c: 126: break;
 17030  0056DE  0012               	return	
 17031  0056E0                     l14874:
 17032                           
 17033                           ; BSR set to: 1
 17034                           ;shaftTest.c: 129: state.shaftTest.next = 5;
 17035  0056E0  0E05               	movlw	5
 17036  0056E2  0101               	movlb	1	; () banked
 17037  0056E4  6FD7               	movwf	(_state+48)& (0+255),b
 17038                           
 17039                           ;shaftTest.c: 130: break;
 17040  0056E6  0012               	return	
 17041  0056E8                     l14876:
 17042                           
 17043                           ; BSR set to: 1
 17044                           ;shaftTest.c: 133: if(readEarthADC() > 742)
 17045  0056E8  EC5D  F023         	call	_readEarthADC	;wreg free
 17046  0056EC  0EE7               	movlw	231
 17047  0056EE  0100               	movlb	0	; () banked
 17048  0056F0  5D82               	subwf	?_readEarthADC& (0+255),w,b
 17049  0056F2  0E02               	movlw	2
 17050  0056F4  0100               	movlb	0	; () banked
 17051  0056F6  5983               	subwfb	(?_readEarthADC+1)& (0+255),w,b
 17052  0056F8  A0D8               	btfss	status,0,c
 17053  0056FA  D004               	goto	l14880
 17054                           
 17055                           ; BSR set to: 0
 17056                           ;shaftTest.c: 134: state.shaftTest.next = 8;
 17057  0056FC  0E08               	movlw	8
 17058  0056FE  0101               	movlb	1	; () banked
 17059  005700  6FD7               	movwf	(_state+48)& (0+255),b
 17060  005702  0012               	return	
 17061  005704                     l14880:
 17062                           
 17063                           ;shaftTest.c: 135: else
 17064                           ;shaftTest.c: 136: state.shaftTest.next = 10;
 17065  005704  0E0A               	movlw	10
 17066  005706  0101               	movlb	1	; () banked
 17067  005708  6FD7               	movwf	(_state+48)& (0+255),b
 17068                           
 17069                           ; BSR set to: 1
 17070                           ;shaftTest.c: 137: break;
 17071  00570A  0012               	return	
 17072  00570C                     l14882:
 17073                           
 17074                           ; BSR set to: 1
 17075                           ;shaftTest.c: 140: state.shaftTest.next = 1;
 17076  00570C  0E01               	movlw	1
 17077  00570E  0101               	movlb	1	; () banked
 17078  005710  6FD7               	movwf	(_state+48)& (0+255),b
 17079                           
 17080                           ; BSR set to: 1
 17081                           ;shaftTest.c: 142: }
 17082                           
 17083                           ;shaftTest.c: 141: break;
 17084  005712  0012               	return	
 17085  005714                     l14886:
 17086  005714  0101               	movlb	1	; () banked
 17087  005716  51D6               	movf	(_state+47)& (0+255),w,b
 17088                           
 17089                           ; Switch size 1, requested type "space"
 17090                           ; Number of cases is 7, Range of values is 1 to 14
 17091                           ; switch strategies available:
 17092                           ; Name         Instructions Cycles
 17093                           ; simple_byte           22    12 (average)
 17094                           ;	Chosen strategy is simple_byte
 17095  005718  0A01               	xorlw	1	; case 1
 17096  00571A  B4D8               	btfsc	status,2,c
 17097  00571C  D7B7               	goto	l14856
 17098  00571E  0A03               	xorlw	3	; case 2
 17099  005720  B4D8               	btfsc	status,2,c
 17100  005722  D7CC               	goto	l14868
 17101  005724  0A07               	xorlw	7	; case 5
 17102  005726  B4D8               	btfsc	status,2,c
 17103  005728  D7DF               	goto	l14876
 17104  00572A  0A0C               	xorlw	12	; case 9
 17105  00572C  B4D8               	btfsc	status,2,c
 17106  00572E  D7B2               	goto	l14858
 17107  005730  0A05               	xorlw	5	; case 12
 17108  005732  B4D8               	btfsc	status,2,c
 17109  005734  D7D5               	goto	l14874
 17110  005736  0A01               	xorlw	1	; case 13
 17111  005738  B4D8               	btfsc	status,2,c
 17112  00573A  D7B8               	goto	l14864
 17113  00573C  0A03               	xorlw	3	; case 14
 17114  00573E  B4D8               	btfsc	status,2,c
 17115  005740  D7B9               	goto	l14866
 17116  005742  D7E4               	goto	l14882
 17117  005744                     __end_of_shaftTestStateHandler:
 17118                           	opt stack 0
 17119                           tblptru	equ	0xFF8
 17120                           tblptrh	equ	0xFF7
 17121                           tblptrl	equ	0xFF6
 17122                           tablat	equ	0xFF5
 17123                           prodh	equ	0xFF4
 17124                           prodl	equ	0xFF3
 17125                           intcon	equ	0xFF2
 17126                           postinc0	equ	0xFEE
 17127                           wreg	equ	0xFE8
 17128                           indf1	equ	0xFE7
 17129                           postinc1	equ	0xFE6
 17130                           postdec1	equ	0xFE5
 17131                           fsr1h	equ	0xFE2
 17132                           fsr1l	equ	0xFE1
 17133                           indf2	equ	0xFDF
 17134                           postinc2	equ	0xFDE
 17135                           postdec2	equ	0xFDD
 17136                           fsr2h	equ	0xFDA
 17137                           fsr2l	equ	0xFD9
 17138                           status	equ	0xFD8
 17139                           
 17140 ;; *************** function _readEarthADC *****************
 17141 ;; Defined at:
 17142 ;;		line 183 in file "shaftTest.c"
 17143 ;; Parameters:    Size  Location     Type
 17144 ;;		None
 17145 ;; Auto vars:     Size  Location     Type
 17146 ;;  ADCStore       10   38[BANK0 ] unsigned short [5]
 17147 ;;  i               2   50[BANK0 ] int 
 17148 ;;  currentVaria    2   48[BANK0 ] unsigned short 
 17149 ;; Return value:  Size  Location     Type
 17150 ;;                  2   34[BANK0 ] unsigned short 
 17151 ;; Registers used:
 17152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17153 ;; Tracked objects:
 17154 ;;		On entry : 0/0
 17155 ;;		On exit  : 0/0
 17156 ;;		Unchanged: 0/0
 17157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17158 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17159 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17160 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17161 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17162 ;;Total ram usage:       18 bytes
 17163 ;; Hardware stack levels used:    1
 17164 ;; Hardware stack levels required when called:   10
 17165 ;; This function calls:
 17166 ;;		__delay_us
 17167 ;;		_readEarthADCSetup
 17168 ;;		_variance
 17169 ;; This function is called by:
 17170 ;;		_shaftTestStateHandler
 17171 ;; This function uses a non-reentrant model
 17172 ;;
 17173                           
 17174                           	psect	text90
 17175  0046BA                     __ptext90:
 17176                           	opt stack 0
 17177  0046BA                     _readEarthADC:
 17178                           	opt stack 17
 17179                           
 17180                           ;shaftTest.c: 184: unsigned short ADCStore[5];
 17181                           ;shaftTest.c: 185: unsigned short currentVariance = 1000;
 17182                           
 17183                           ; BSR set to: 1
 17184                           ;incstack = 0
 17185  0046BA  0E03               	movlw	3
 17186  0046BC  0100               	movlb	0	; () banked
 17187  0046BE  6F91               	movwf	(readEarthADC@currentVariance+1)& (0+255),b
 17188  0046C0  0EE8               	movlw	232
 17189  0046C2  6F90               	movwf	readEarthADC@currentVariance& (0+255),b
 17190                           
 17191                           ; BSR set to: 0
 17192                           ;shaftTest.c: 186: int i;
 17193                           ;shaftTest.c: 187: readEarthADCSetup();
 17194  0046C4  ECCC  F039         	call	_readEarthADCSetup	;wreg free
 17195                           
 17196                           ;shaftTest.c: 188: _delay_us(20);
 17197  0046C8  0E14               	movlw	20
 17198  0046CA  EC37  F03B         	call	__delay_us
 17199                           
 17200                           ;shaftTest.c: 189: ADRES = 0;
 17201  0046CE  0E00               	movlw	0
 17202  0046D0  6E64               	movwf	3940,c	;volatile
 17203  0046D2  0E00               	movlw	0
 17204  0046D4  6E63               	movwf	3939,c	;volatile
 17205                           
 17206                           ;shaftTest.c: 190: while(currentVariance > 100){
 17207  0046D6  D054               	goto	l14214
 17208  0046D8                     l2403:
 17209                           
 17210                           ; BSR set to: 0
 17211                           ;shaftTest.c: 191: ADCON0bits.ADGO = 1;
 17212  0046D8  8060               	bsf	3936,0,c	;volatile
 17213  0046DA                     l2404:
 17214  0046DA  B060               	btfsc	3936,0,c	;volatile
 17215  0046DC  D7FE               	goto	l2404
 17216                           
 17217                           ;shaftTest.c: 193: for(i = 0; i < 5 - 1; i++){
 17218  0046DE  0E00               	movlw	0
 17219  0046E0  0100               	movlb	0	; () banked
 17220  0046E2  6F93               	movwf	(readEarthADC@i+1)& (0+255),b
 17221  0046E4  0E00               	movlw	0
 17222  0046E6  6F92               	movwf	readEarthADC@i& (0+255),b
 17223                           
 17224                           ; BSR set to: 0
 17225  0046E8  0100               	movlb	0	; () banked
 17226  0046EA  BF93               	btfsc	(readEarthADC@i+1)& (0+255),7,b
 17227  0046EC  D008               	goto	l14206
 17228  0046EE  0100               	movlb	0	; () banked
 17229  0046F0  5193               	movf	(readEarthADC@i+1)& (0+255),w,b
 17230  0046F2  E133               	bnz	l2408
 17231  0046F4  0E04               	movlw	4
 17232  0046F6  0100               	movlb	0	; () banked
 17233  0046F8  5D92               	subwf	readEarthADC@i& (0+255),w,b
 17234  0046FA  B0D8               	btfsc	status,0,c
 17235  0046FC  D02E               	goto	l2408
 17236  0046FE                     l14206:
 17237                           
 17238                           ; BSR set to: 0
 17239                           ;shaftTest.c: 194: ADCStore[i + 1] = ADCStore[i];
 17240  0046FE  90D8               	bcf	status,0,c
 17241  004700  0100               	movlb	0	; () banked
 17242  004702  3592               	rlcf	readEarthADC@i& (0+255),w,b
 17243  004704  6ED9               	movwf	fsr2l,c
 17244  004706  0100               	movlb	0	; () banked
 17245  004708  3593               	rlcf	(readEarthADC@i+1)& (0+255),w,b
 17246  00470A  6EDA               	movwf	fsr2h,c
 17247  00470C  0E86               	movlw	low readEarthADC@ADCStore
 17248  00470E  26D9               	addwf	fsr2l,f,c
 17249  004710  0E00               	movlw	high readEarthADC@ADCStore
 17250  004712  22DA               	addwfc	fsr2h,f,c
 17251  004714  C092  F084         	movff	readEarthADC@i,??_readEarthADC
 17252  004718  C093  F085         	movff	readEarthADC@i+1,??_readEarthADC+1
 17253  00471C  90D8               	bcf	status,0,c
 17254  00471E  0100               	movlb	0	; () banked
 17255  004720  3784               	rlcf	??_readEarthADC& (0+255),f,b
 17256  004722  3785               	rlcf	(??_readEarthADC+1)& (0+255),f,b
 17257  004724  0E02               	movlw	2
 17258  004726  0100               	movlb	0	; () banked
 17259  004728  2784               	addwf	??_readEarthADC& (0+255),f,b
 17260  00472A  0E00               	movlw	0
 17261  00472C  2385               	addwfc	(??_readEarthADC+1)& (0+255),f,b
 17262  00472E  0E86               	movlw	low readEarthADC@ADCStore
 17263  004730  0100               	movlb	0	; () banked
 17264  004732  2584               	addwf	??_readEarthADC& (0+255),w,b
 17265  004734  6EE1               	movwf	fsr1l,c
 17266  004736  0E00               	movlw	high readEarthADC@ADCStore
 17267  004738  0100               	movlb	0	; () banked
 17268  00473A  2185               	addwfc	(??_readEarthADC+1)& (0+255),w,b
 17269  00473C  6EE2               	movwf	fsr1h,c
 17270  00473E  CFDE FFE6          	movff	postinc2,postinc1
 17271  004742  CFDD FFE5          	movff	postdec2,postdec1
 17272                           
 17273                           ; BSR set to: 0
 17274  004746  0100               	movlb	0	; () banked
 17275  004748  4B92               	infsnz	readEarthADC@i& (0+255),f,b
 17276  00474A  2B93               	incf	(readEarthADC@i+1)& (0+255),f,b
 17277                           
 17278                           ; BSR set to: 0
 17279  00474C  0100               	movlb	0	; () banked
 17280  00474E  BF93               	btfsc	(readEarthADC@i+1)& (0+255),7,b
 17281  004750  D7D6               	goto	l14206
 17282  004752  0100               	movlb	0	; () banked
 17283  004754  5193               	movf	(readEarthADC@i+1)& (0+255),w,b
 17284  004756  E101               	bnz	u10460
 17285  004758  D7CD               	goto	L11
 17286  00475A                     u10460:
 17287  00475A                     l2408:
 17288                           
 17289                           ; BSR set to: 0
 17290                           ;shaftTest.c: 195: }
 17291                           ;shaftTest.c: 196: ADCStore[0] = ADRES;
 17292  00475A  CF63 F086          	movff	3939,readEarthADC@ADCStore	;volatile
 17293  00475E  CF64 F087          	movff	3940,readEarthADC@ADCStore+1	;volatile
 17294                           
 17295                           ; BSR set to: 0
 17296                           ;shaftTest.c: 197: currentVariance = variance(ADCStore, 5);
 17297  004762  0E86               	movlw	low readEarthADC@ADCStore
 17298  004764  0100               	movlb	0	; () banked
 17299  004766  6F6D               	movwf	variance@values& (0+255),b
 17300  004768  0E00               	movlw	high readEarthADC@ADCStore
 17301  00476A  0100               	movlb	0	; () banked
 17302  00476C  6F6E               	movwf	(variance@values+1)& (0+255),b
 17303  00476E  0E05               	movlw	5
 17304  004770  0100               	movlb	0	; () banked
 17305  004772  6F6F               	movwf	variance@sampleSize& (0+255),b
 17306  004774  EC90  F013         	call	_variance	;wreg free
 17307  004778  C06D  F090         	movff	?_variance,readEarthADC@currentVariance
 17308  00477C  C06E  F091         	movff	?_variance+1,readEarthADC@currentVariance+1
 17309  004780                     l14214:
 17310  004780  0100               	movlb	0	; () banked
 17311  004782  5191               	movf	(readEarthADC@currentVariance+1)& (0+255),w,b
 17312  004784  E1A9               	bnz	l2403
 17313  004786  0E65               	movlw	101
 17314  004788  0100               	movlb	0	; () banked
 17315  00478A  5D90               	subwf	readEarthADC@currentVariance& (0+255),w,b
 17316  00478C  B0D8               	btfsc	status,0,c
 17317  00478E  D7A4               	goto	l2403
 17318                           
 17319                           ; BSR set to: 0
 17320                           ;shaftTest.c: 198: }
 17321                           ;shaftTest.c: 199: ADCON0bits.ADON = 0;
 17322  004790  9E60               	bcf	3936,7,c	;volatile
 17323                           
 17324                           ;shaftTest.c: 200: FVRCONbits.FVREN = 0;
 17325  004792  010E               	movlb	14	; () banked
 17326  004794  9FC4               	bcf	196,7,b	;volatile
 17327                           
 17328                           ;shaftTest.c: 202: return ADRES;
 17329  004796  CF63 F082          	movff	3939,?_readEarthADC	;volatile
 17330  00479A  CF64 F083          	movff	3940,?_readEarthADC+1	;volatile
 17331                           
 17332                           ; BSR set to: 14
 17333  00479E  0012               	return		;funcret
 17334  0047A0                     __end_of_readEarthADC:
 17335                           	opt stack 0
 17336                           tblptru	equ	0xFF8
 17337                           tblptrh	equ	0xFF7
 17338                           tblptrl	equ	0xFF6
 17339                           tablat	equ	0xFF5
 17340                           prodh	equ	0xFF4
 17341                           prodl	equ	0xFF3
 17342                           intcon	equ	0xFF2
 17343                           postinc0	equ	0xFEE
 17344                           wreg	equ	0xFE8
 17345                           indf1	equ	0xFE7
 17346                           postinc1	equ	0xFE6
 17347                           postdec1	equ	0xFE5
 17348                           fsr1h	equ	0xFE2
 17349                           fsr1l	equ	0xFE1
 17350                           indf2	equ	0xFDF
 17351                           postinc2	equ	0xFDE
 17352                           postdec2	equ	0xFDD
 17353                           fsr2h	equ	0xFDA
 17354                           fsr2l	equ	0xFD9
 17355                           status	equ	0xFD8
 17356                           
 17357 ;; *************** function _readEarthADCSetup *****************
 17358 ;; Defined at:
 17359 ;;		line 170 in file "shaftTest.c"
 17360 ;; Parameters:    Size  Location     Type
 17361 ;;		None
 17362 ;; Auto vars:     Size  Location     Type
 17363 ;;		None
 17364 ;; Return value:  Size  Location     Type
 17365 ;;                  1    wreg      void 
 17366 ;; Registers used:
 17367 ;;		wreg, status,2, status,0, cstack
 17368 ;; Tracked objects:
 17369 ;;		On entry : 0/0
 17370 ;;		On exit  : 0/0
 17371 ;;		Unchanged: 0/0
 17372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17377 ;;Total ram usage:        0 bytes
 17378 ;; Hardware stack levels used:    1
 17379 ;; Hardware stack levels required when called:    9
 17380 ;; This function calls:
 17381 ;;		__delay_us
 17382 ;; This function is called by:
 17383 ;;		_readEarthADC
 17384 ;; This function uses a non-reentrant model
 17385 ;;
 17386                           
 17387                           	psect	text91
 17388  007398                     __ptext91:
 17389                           	opt stack 0
 17390  007398                     _readEarthADCSetup:
 17391                           	opt stack 17
 17392                           
 17393                           ;shaftTest.c: 171: FVRCON = 0b00000010;
 17394                           
 17395                           ; BSR set to: 14
 17396                           ;incstack = 0
 17397  007398  0E02               	movlw	2
 17398  00739A  010E               	movlb	14	; () banked
 17399  00739C  6FC4               	movwf	196,b	;volatile
 17400                           
 17401                           ; BSR set to: 14
 17402                           ;shaftTest.c: 172: FVRCONbits.FVREN = 1;
 17403  00739E  010E               	movlb	14	; () banked
 17404  0073A0  8FC4               	bsf	196,7,b	;volatile
 17405                           
 17406                           ; BSR set to: 14
 17407                           ;shaftTest.c: 173: _delay_us(20);
 17408  0073A2  0E14               	movlw	20
 17409  0073A4  EC37  F03B         	call	__delay_us
 17410                           
 17411                           ;shaftTest.c: 175: ADCON1 = 0b01110000;
 17412  0073A8  0E70               	movlw	112
 17413  0073AA  010F               	movlb	15	; () banked
 17414  0073AC  6F59               	movwf	89,b	;volatile
 17415                           
 17416                           ; BSR set to: 15
 17417                           ;shaftTest.c: 176: ADPCH = 0b00101001;
 17418  0073AE  0E29               	movlw	41
 17419  0073B0  010F               	movlb	15	; () banked
 17420  0073B2  6F5F               	movwf	95,b	;volatile
 17421                           
 17422                           ; BSR set to: 15
 17423                           ;shaftTest.c: 177: ADCLK = 0b00111111;
 17424  0073B4  0E3F               	movlw	63
 17425  0073B6  010F               	movlb	15	; () banked
 17426  0073B8  6F57               	movwf	87,b	;volatile
 17427                           
 17428                           ; BSR set to: 15
 17429                           ;shaftTest.c: 178: ADREF = 0b00000011;
 17430  0073BA  0E03               	movlw	3
 17431  0073BC  010F               	movlb	15	; () banked
 17432  0073BE  6F58               	movwf	88,b	;volatile
 17433                           
 17434                           ; BSR set to: 15
 17435                           ;shaftTest.c: 179: ADCON0bits.ADFM = 1;
 17436  0073C0  8460               	bsf	3936,2,c	;volatile
 17437                           
 17438                           ; BSR set to: 15
 17439                           ;shaftTest.c: 180: ADCON0bits.ADON = 1;
 17440  0073C2  8E60               	bsf	3936,7,c	;volatile
 17441                           
 17442                           ; BSR set to: 15
 17443  0073C4  0012               	return		;funcret
 17444  0073C6                     __end_of_readEarthADCSetup:
 17445                           	opt stack 0
 17446                           tblptru	equ	0xFF8
 17447                           tblptrh	equ	0xFF7
 17448                           tblptrl	equ	0xFF6
 17449                           tablat	equ	0xFF5
 17450                           prodh	equ	0xFF4
 17451                           prodl	equ	0xFF3
 17452                           intcon	equ	0xFF2
 17453                           postinc0	equ	0xFEE
 17454                           wreg	equ	0xFE8
 17455                           indf1	equ	0xFE7
 17456                           postinc1	equ	0xFE6
 17457                           postdec1	equ	0xFE5
 17458                           fsr1h	equ	0xFE2
 17459                           fsr1l	equ	0xFE1
 17460                           indf2	equ	0xFDF
 17461                           postinc2	equ	0xFDE
 17462                           postdec2	equ	0xFDD
 17463                           fsr2h	equ	0xFDA
 17464                           fsr2l	equ	0xFD9
 17465                           status	equ	0xFD8
 17466                           
 17467 ;; *************** function _readCableADC *****************
 17468 ;; Defined at:
 17469 ;;		line 147 in file "shaftTest.c"
 17470 ;; Parameters:    Size  Location     Type
 17471 ;;		None
 17472 ;; Auto vars:     Size  Location     Type
 17473 ;;  ADCStore       10   38[BANK0 ] unsigned short [5]
 17474 ;;  i               2   50[BANK0 ] int 
 17475 ;;  currentVaria    2   48[BANK0 ] unsigned short 
 17476 ;; Return value:  Size  Location     Type
 17477 ;;                  2   34[BANK0 ] unsigned short 
 17478 ;; Registers used:
 17479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17480 ;; Tracked objects:
 17481 ;;		On entry : 0/0
 17482 ;;		On exit  : 0/0
 17483 ;;		Unchanged: 0/0
 17484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17485 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17486 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17487 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17488 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17489 ;;Total ram usage:       18 bytes
 17490 ;; Hardware stack levels used:    1
 17491 ;; Hardware stack levels required when called:   10
 17492 ;; This function calls:
 17493 ;;		__delay_us
 17494 ;;		_readCableADCSetup
 17495 ;;		_variance
 17496 ;; This function is called by:
 17497 ;;		_shaftTestStateHandler
 17498 ;; This function uses a non-reentrant model
 17499 ;;
 17500                           
 17501                           	psect	text92
 17502  0047A0                     __ptext92:
 17503                           	opt stack 0
 17504  0047A0                     _readCableADC:
 17505                           	opt stack 17
 17506                           
 17507                           ;shaftTest.c: 148: unsigned short ADCStore[5];
 17508                           ;shaftTest.c: 149: unsigned short currentVariance = 1000;
 17509                           
 17510                           ; BSR set to: 15
 17511                           ;incstack = 0
 17512  0047A0  0E03               	movlw	3
 17513  0047A2  0100               	movlb	0	; () banked
 17514  0047A4  6F91               	movwf	(readCableADC@currentVariance+1)& (0+255),b
 17515  0047A6  0EE8               	movlw	232
 17516  0047A8  6F90               	movwf	readCableADC@currentVariance& (0+255),b
 17517                           
 17518                           ; BSR set to: 0
 17519                           ;shaftTest.c: 150: int i;
 17520                           ;shaftTest.c: 151: readCableADCSetup();
 17521  0047AA  ECE3  F039         	call	_readCableADCSetup	;wreg free
 17522                           
 17523                           ;shaftTest.c: 152: _delay_us(20);
 17524  0047AE  0E14               	movlw	20
 17525  0047B0  EC37  F03B         	call	__delay_us
 17526                           
 17527                           ;shaftTest.c: 153: ADRES = 0;
 17528  0047B4  0E00               	movlw	0
 17529  0047B6  6E64               	movwf	3940,c	;volatile
 17530  0047B8  0E00               	movlw	0
 17531  0047BA  6E63               	movwf	3939,c	;volatile
 17532                           
 17533                           ;shaftTest.c: 154: while(currentVariance > 100){
 17534  0047BC  D054               	goto	l14192
 17535  0047BE                     l2389:
 17536                           
 17537                           ; BSR set to: 0
 17538                           ;shaftTest.c: 155: ADCON0bits.ADGO = 1;
 17539  0047BE  8060               	bsf	3936,0,c	;volatile
 17540  0047C0                     l2390:
 17541  0047C0  B060               	btfsc	3936,0,c	;volatile
 17542  0047C2  D7FE               	goto	l2390
 17543                           
 17544                           ;shaftTest.c: 157: for(i = 0; i < 5 - 1; i++){
 17545  0047C4  0E00               	movlw	0
 17546  0047C6  0100               	movlb	0	; () banked
 17547  0047C8  6F93               	movwf	(readCableADC@i+1)& (0+255),b
 17548  0047CA  0E00               	movlw	0
 17549  0047CC  6F92               	movwf	readCableADC@i& (0+255),b
 17550                           
 17551                           ; BSR set to: 0
 17552  0047CE  0100               	movlb	0	; () banked
 17553  0047D0  BF93               	btfsc	(readCableADC@i+1)& (0+255),7,b
 17554  0047D2  D008               	goto	l14184
 17555  0047D4  0100               	movlb	0	; () banked
 17556  0047D6  5193               	movf	(readCableADC@i+1)& (0+255),w,b
 17557  0047D8  E133               	bnz	l2394
 17558  0047DA  0E04               	movlw	4
 17559  0047DC  0100               	movlb	0	; () banked
 17560  0047DE  5D92               	subwf	readCableADC@i& (0+255),w,b
 17561  0047E0  B0D8               	btfsc	status,0,c
 17562  0047E2  D02E               	goto	l2394
 17563  0047E4                     l14184:
 17564                           
 17565                           ; BSR set to: 0
 17566                           ;shaftTest.c: 158: ADCStore[i + 1] = ADCStore[i];
 17567  0047E4  90D8               	bcf	status,0,c
 17568  0047E6  0100               	movlb	0	; () banked
 17569  0047E8  3592               	rlcf	readCableADC@i& (0+255),w,b
 17570  0047EA  6ED9               	movwf	fsr2l,c
 17571  0047EC  0100               	movlb	0	; () banked
 17572  0047EE  3593               	rlcf	(readCableADC@i+1)& (0+255),w,b
 17573  0047F0  6EDA               	movwf	fsr2h,c
 17574  0047F2  0E86               	movlw	low readCableADC@ADCStore
 17575  0047F4  26D9               	addwf	fsr2l,f,c
 17576  0047F6  0E00               	movlw	high readCableADC@ADCStore
 17577  0047F8  22DA               	addwfc	fsr2h,f,c
 17578  0047FA  C092  F084         	movff	readCableADC@i,??_readCableADC
 17579  0047FE  C093  F085         	movff	readCableADC@i+1,??_readCableADC+1
 17580  004802  90D8               	bcf	status,0,c
 17581  004804  0100               	movlb	0	; () banked
 17582  004806  3784               	rlcf	??_readCableADC& (0+255),f,b
 17583  004808  3785               	rlcf	(??_readCableADC+1)& (0+255),f,b
 17584  00480A  0E02               	movlw	2
 17585  00480C  0100               	movlb	0	; () banked
 17586  00480E  2784               	addwf	??_readCableADC& (0+255),f,b
 17587  004810  0E00               	movlw	0
 17588  004812  2385               	addwfc	(??_readCableADC+1)& (0+255),f,b
 17589  004814  0E86               	movlw	low readCableADC@ADCStore
 17590  004816  0100               	movlb	0	; () banked
 17591  004818  2584               	addwf	??_readCableADC& (0+255),w,b
 17592  00481A  6EE1               	movwf	fsr1l,c
 17593  00481C  0E00               	movlw	high readCableADC@ADCStore
 17594  00481E  0100               	movlb	0	; () banked
 17595  004820  2185               	addwfc	(??_readCableADC+1)& (0+255),w,b
 17596  004822  6EE2               	movwf	fsr1h,c
 17597  004824  CFDE FFE6          	movff	postinc2,postinc1
 17598  004828  CFDD FFE5          	movff	postdec2,postdec1
 17599                           
 17600                           ; BSR set to: 0
 17601  00482C  0100               	movlb	0	; () banked
 17602  00482E  4B92               	infsnz	readCableADC@i& (0+255),f,b
 17603  004830  2B93               	incf	(readCableADC@i+1)& (0+255),f,b
 17604                           
 17605                           ; BSR set to: 0
 17606  004832  0100               	movlb	0	; () banked
 17607  004834  BF93               	btfsc	(readCableADC@i+1)& (0+255),7,b
 17608  004836  D7D6               	goto	l14184
 17609  004838  0100               	movlb	0	; () banked
 17610  00483A  5193               	movf	(readCableADC@i+1)& (0+255),w,b
 17611  00483C  E101               	bnz	u10420
 17612  00483E  D7CD               	goto	L12
 17613  004840                     u10420:
 17614  004840                     l2394:
 17615                           
 17616                           ; BSR set to: 0
 17617                           ;shaftTest.c: 159: }
 17618                           ;shaftTest.c: 160: ADCStore[0] = ADRES;
 17619  004840  CF63 F086          	movff	3939,readCableADC@ADCStore	;volatile
 17620  004844  CF64 F087          	movff	3940,readCableADC@ADCStore+1	;volatile
 17621                           
 17622                           ; BSR set to: 0
 17623                           ;shaftTest.c: 161: currentVariance = variance(ADCStore, 5);
 17624  004848  0E86               	movlw	low readCableADC@ADCStore
 17625  00484A  0100               	movlb	0	; () banked
 17626  00484C  6F6D               	movwf	variance@values& (0+255),b
 17627  00484E  0E00               	movlw	high readCableADC@ADCStore
 17628  004850  0100               	movlb	0	; () banked
 17629  004852  6F6E               	movwf	(variance@values+1)& (0+255),b
 17630  004854  0E05               	movlw	5
 17631  004856  0100               	movlb	0	; () banked
 17632  004858  6F6F               	movwf	variance@sampleSize& (0+255),b
 17633  00485A  EC90  F013         	call	_variance	;wreg free
 17634  00485E  C06D  F090         	movff	?_variance,readCableADC@currentVariance
 17635  004862  C06E  F091         	movff	?_variance+1,readCableADC@currentVariance+1
 17636  004866                     l14192:
 17637  004866  0100               	movlb	0	; () banked
 17638  004868  5191               	movf	(readCableADC@currentVariance+1)& (0+255),w,b
 17639  00486A  E1A9               	bnz	l2389
 17640  00486C  0E65               	movlw	101
 17641  00486E  0100               	movlb	0	; () banked
 17642  004870  5D90               	subwf	readCableADC@currentVariance& (0+255),w,b
 17643  004872  B0D8               	btfsc	status,0,c
 17644  004874  D7A4               	goto	l2389
 17645                           
 17646                           ; BSR set to: 0
 17647                           ;shaftTest.c: 162: }
 17648                           ;shaftTest.c: 163: ADCON0bits.ADON = 0;
 17649  004876  9E60               	bcf	3936,7,c	;volatile
 17650                           
 17651                           ;shaftTest.c: 164: FVRCONbits.FVREN = 0;
 17652  004878  010E               	movlb	14	; () banked
 17653  00487A  9FC4               	bcf	196,7,b	;volatile
 17654                           
 17655                           ;shaftTest.c: 166: return ADRES;
 17656  00487C  CF63 F082          	movff	3939,?_readCableADC	;volatile
 17657  004880  CF64 F083          	movff	3940,?_readCableADC+1	;volatile
 17658                           
 17659                           ; BSR set to: 14
 17660  004884  0012               	return		;funcret
 17661  004886                     __end_of_readCableADC:
 17662                           	opt stack 0
 17663                           tblptru	equ	0xFF8
 17664                           tblptrh	equ	0xFF7
 17665                           tblptrl	equ	0xFF6
 17666                           tablat	equ	0xFF5
 17667                           prodh	equ	0xFF4
 17668                           prodl	equ	0xFF3
 17669                           intcon	equ	0xFF2
 17670                           postinc0	equ	0xFEE
 17671                           wreg	equ	0xFE8
 17672                           indf1	equ	0xFE7
 17673                           postinc1	equ	0xFE6
 17674                           postdec1	equ	0xFE5
 17675                           fsr1h	equ	0xFE2
 17676                           fsr1l	equ	0xFE1
 17677                           indf2	equ	0xFDF
 17678                           postinc2	equ	0xFDE
 17679                           postdec2	equ	0xFDD
 17680                           fsr2h	equ	0xFDA
 17681                           fsr2l	equ	0xFD9
 17682                           status	equ	0xFD8
 17683                           
 17684 ;; *************** function _readCableADCSetup *****************
 17685 ;; Defined at:
 17686 ;;		line 206 in file "shaftTest.c"
 17687 ;; Parameters:    Size  Location     Type
 17688 ;;		None
 17689 ;; Auto vars:     Size  Location     Type
 17690 ;;		None
 17691 ;; Return value:  Size  Location     Type
 17692 ;;                  1    wreg      void 
 17693 ;; Registers used:
 17694 ;;		wreg, status,2, status,0, cstack
 17695 ;; Tracked objects:
 17696 ;;		On entry : 0/0
 17697 ;;		On exit  : 0/0
 17698 ;;		Unchanged: 0/0
 17699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17704 ;;Total ram usage:        0 bytes
 17705 ;; Hardware stack levels used:    1
 17706 ;; Hardware stack levels required when called:    9
 17707 ;; This function calls:
 17708 ;;		__delay_us
 17709 ;; This function is called by:
 17710 ;;		_readCableADC
 17711 ;; This function uses a non-reentrant model
 17712 ;;
 17713                           
 17714                           	psect	text93
 17715  0073C6                     __ptext93:
 17716                           	opt stack 0
 17717  0073C6                     _readCableADCSetup:
 17718                           	opt stack 17
 17719                           
 17720                           ;shaftTest.c: 207: FVRCON = 0b00000010;
 17721                           
 17722                           ; BSR set to: 14
 17723                           ;incstack = 0
 17724  0073C6  0E02               	movlw	2
 17725  0073C8  010E               	movlb	14	; () banked
 17726  0073CA  6FC4               	movwf	196,b	;volatile
 17727                           
 17728                           ; BSR set to: 14
 17729                           ;shaftTest.c: 208: FVRCONbits.FVREN = 1;
 17730  0073CC  010E               	movlb	14	; () banked
 17731  0073CE  8FC4               	bsf	196,7,b	;volatile
 17732                           
 17733                           ; BSR set to: 14
 17734                           ;shaftTest.c: 209: _delay_us(20);
 17735  0073D0  0E14               	movlw	20
 17736  0073D2  EC37  F03B         	call	__delay_us
 17737                           
 17738                           ;shaftTest.c: 211: ADCON1 = 0b01110000;
 17739  0073D6  0E70               	movlw	112
 17740  0073D8  010F               	movlb	15	; () banked
 17741  0073DA  6F59               	movwf	89,b	;volatile
 17742                           
 17743                           ; BSR set to: 15
 17744                           ;shaftTest.c: 212: ADPCH = 0b00110011;
 17745  0073DC  0E33               	movlw	51
 17746  0073DE  010F               	movlb	15	; () banked
 17747  0073E0  6F5F               	movwf	95,b	;volatile
 17748                           
 17749                           ; BSR set to: 15
 17750                           ;shaftTest.c: 213: ADCLK = 0b00111111;
 17751  0073E2  0E3F               	movlw	63
 17752  0073E4  010F               	movlb	15	; () banked
 17753  0073E6  6F57               	movwf	87,b	;volatile
 17754                           
 17755                           ; BSR set to: 15
 17756                           ;shaftTest.c: 214: ADREF = 0b00000011;
 17757  0073E8  0E03               	movlw	3
 17758  0073EA  010F               	movlb	15	; () banked
 17759  0073EC  6F58               	movwf	88,b	;volatile
 17760                           
 17761                           ; BSR set to: 15
 17762                           ;shaftTest.c: 215: ADCON0bits.ADFM = 1;
 17763  0073EE  8460               	bsf	3936,2,c	;volatile
 17764                           
 17765                           ; BSR set to: 15
 17766                           ;shaftTest.c: 216: ADCON0bits.ADON = 1;
 17767  0073F0  8E60               	bsf	3936,7,c	;volatile
 17768                           
 17769                           ; BSR set to: 15
 17770  0073F2  0012               	return		;funcret
 17771  0073F4                     __end_of_readCableADCSetup:
 17772                           	opt stack 0
 17773                           tblptru	equ	0xFF8
 17774                           tblptrh	equ	0xFF7
 17775                           tblptrl	equ	0xFF6
 17776                           tablat	equ	0xFF5
 17777                           prodh	equ	0xFF4
 17778                           prodl	equ	0xFF3
 17779                           intcon	equ	0xFF2
 17780                           postinc0	equ	0xFEE
 17781                           wreg	equ	0xFE8
 17782                           indf1	equ	0xFE7
 17783                           postinc1	equ	0xFE6
 17784                           postdec1	equ	0xFE5
 17785                           fsr1h	equ	0xFE2
 17786                           fsr1l	equ	0xFE1
 17787                           indf2	equ	0xFDF
 17788                           postinc2	equ	0xFDE
 17789                           postdec2	equ	0xFDD
 17790                           fsr2h	equ	0xFDA
 17791                           fsr2l	equ	0xFD9
 17792                           status	equ	0xFD8
 17793                           
 17794 ;; *************** function _shaftTest *****************
 17795 ;; Defined at:
 17796 ;;		line 44 in file "shaftTest.c"
 17797 ;; Parameters:    Size  Location     Type
 17798 ;;		None
 17799 ;; Auto vars:     Size  Location     Type
 17800 ;;		None
 17801 ;; Return value:  Size  Location     Type
 17802 ;;                  1    wreg      void 
 17803 ;; Registers used:
 17804 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17805 ;; Tracked objects:
 17806 ;;		On entry : 0/0
 17807 ;;		On exit  : 0/0
 17808 ;;		Unchanged: 0/0
 17809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17814 ;;Total ram usage:        0 bytes
 17815 ;; Hardware stack levels used:    1
 17816 ;; Hardware stack levels required when called:    8
 17817 ;; This function calls:
 17818 ;;		Nothing
 17819 ;; This function is called by:
 17820 ;;		_currentStateHandler
 17821 ;; This function uses a non-reentrant model
 17822 ;;
 17823                           
 17824                           	psect	text94
 17825  004F88                     __ptext94:
 17826                           	opt stack 0
 17827  004F88                     _shaftTest:
 17828                           	opt stack 20
 17829                           
 17830                           ;shaftTest.c: 45: switch (state.shaftTest.current){
 17831                           
 17832                           ; BSR set to: 15
 17833                           ;incstack = 0
 17834  004F88  D050               	goto	l14852
 17835  004F8A                     l2357:
 17836                           
 17837                           ; BSR set to: 1
 17838                           ;shaftTest.c: 47: LATAbits.LATA1 = 1;
 17839  004F8A  8279               	bsf	3961,1,c	;volatile
 17840                           
 17841                           ; BSR set to: 1
 17842                           ;shaftTest.c: 48: state.shaftTest.counter = 100;
 17843  004F8C  0E00               	movlw	0
 17844  004F8E  0101               	movlb	1	; () banked
 17845  004F90  6FD9               	movwf	(_state+50)& (0+255),b
 17846  004F92  0E64               	movlw	100
 17847  004F94  6FD8               	movwf	(_state+49)& (0+255),b
 17848                           
 17849                           ;shaftTest.c: 49: break;
 17850  004F96  0012               	return	
 17851  004F98                     l14808:
 17852                           
 17853                           ; BSR set to: 1
 17854                           ;shaftTest.c: 52: state.shaftTest.counter = 10000;
 17855  004F98  0E27               	movlw	39
 17856  004F9A  0101               	movlb	1	; () banked
 17857  004F9C  6FD9               	movwf	(_state+50)& (0+255),b
 17858  004F9E  0E10               	movlw	16
 17859  004FA0  6FD8               	movwf	(_state+49)& (0+255),b
 17860                           
 17861                           ;shaftTest.c: 53: break;
 17862  004FA2  0012               	return	
 17863  004FA4                     l2360:
 17864                           
 17865                           ; BSR set to: 1
 17866                           ;shaftTest.c: 56: LATHbits.LATH3 = 1;
 17867  004FA4  8680               	bsf	3968,3,c	;volatile
 17868                           
 17869                           ; BSR set to: 1
 17870                           ;shaftTest.c: 57: state.shaftTest.counter = 100;
 17871  004FA6  0E00               	movlw	0
 17872  004FA8  0101               	movlb	1	; () banked
 17873  004FAA  6FD9               	movwf	(_state+50)& (0+255),b
 17874  004FAC  0E64               	movlw	100
 17875  004FAE  6FD8               	movwf	(_state+49)& (0+255),b
 17876                           
 17877                           ;shaftTest.c: 58: break;
 17878  004FB0  0012               	return	
 17879  004FB2                     l2361:
 17880                           
 17881                           ; BSR set to: 1
 17882                           ;shaftTest.c: 61: LATAbits.LATA1 = 1;
 17883  004FB2  8279               	bsf	3961,1,c	;volatile
 17884                           
 17885                           ;shaftTest.c: 62: LATHbits.LATH3 = 0;
 17886  004FB4  9680               	bcf	3968,3,c	;volatile
 17887                           
 17888                           ; BSR set to: 1
 17889                           ;shaftTest.c: 63: state.shaftTest.counter = 4000;
 17890  004FB6  0E0F               	movlw	15
 17891  004FB8  0101               	movlb	1	; () banked
 17892  004FBA  6FD9               	movwf	(_state+50)& (0+255),b
 17893  004FBC  0EA0               	movlw	160
 17894  004FBE  6FD8               	movwf	(_state+49)& (0+255),b
 17895                           
 17896                           ; BSR set to: 1
 17897                           ;shaftTest.c: 64: ABB_1.info.statusBits.shaftFault = 1;
 17898  004FC0  EE23  F0C1         	lfsr	2,_ABB_1+1
 17899  004FC4  88DF               	bsf	indf2,4,c
 17900                           
 17901                           ; BSR set to: 1
 17902                           ;shaftTest.c: 65: ABB_1.info.statusBits.earth_leakage = 0;
 17903  004FC6  EE23  F0C1         	lfsr	2,_ABB_1+1
 17904  004FCA  94DF               	bcf	indf2,2,c
 17905                           
 17906                           ; BSR set to: 1
 17907                           ;shaftTest.c: 66: FLAGS.shaftComplete = 1;
 17908  004FCC  8C38               	bsf	_FLAGS+1,6,c
 17909                           
 17910                           ;shaftTest.c: 67: break;
 17911  004FCE  0012               	return	
 17912  004FD0                     l14820:
 17913                           
 17914                           ; BSR set to: 1
 17915                           ;shaftTest.c: 70: state.shaftTest.counter = 100;
 17916  004FD0  0E00               	movlw	0
 17917  004FD2  0101               	movlb	1	; () banked
 17918  004FD4  6FD9               	movwf	(_state+50)& (0+255),b
 17919  004FD6  0E64               	movlw	100
 17920  004FD8  6FD8               	movwf	(_state+49)& (0+255),b
 17921                           
 17922                           ; BSR set to: 1
 17923                           ;shaftTest.c: 71: LATHbits.LATH3 = 0;
 17924  004FDA  9680               	bcf	3968,3,c	;volatile
 17925                           
 17926                           ; BSR set to: 1
 17927                           ;shaftTest.c: 72: LATGbits.LATG2 = 1;
 17928  004FDC  847F               	bsf	3967,2,c	;volatile
 17929                           
 17930                           ;shaftTest.c: 73: break;
 17931  004FDE  0012               	return	
 17932  004FE0                     l2363:
 17933                           
 17934                           ; BSR set to: 1
 17935                           ;shaftTest.c: 76: LATGbits.LATG2 = 0;
 17936  004FE0  947F               	bcf	3967,2,c	;volatile
 17937                           
 17938                           ; BSR set to: 1
 17939                           ;shaftTest.c: 77: state.shaftTest.counter = 4000;
 17940  004FE2  0E0F               	movlw	15
 17941  004FE4  0101               	movlb	1	; () banked
 17942  004FE6  6FD9               	movwf	(_state+50)& (0+255),b
 17943  004FE8  0EA0               	movlw	160
 17944  004FEA  6FD8               	movwf	(_state+49)& (0+255),b
 17945                           
 17946                           ; BSR set to: 1
 17947                           ;shaftTest.c: 78: ABB_1.info.statusBits.shaftFault = 0;
 17948  004FEC  EE23  F0C1         	lfsr	2,_ABB_1+1
 17949  004FF0  98DF               	bcf	indf2,4,c
 17950                           
 17951                           ; BSR set to: 1
 17952                           ;shaftTest.c: 79: ABB_1.info.statusBits.earth_leakage = 1;
 17953  004FF2  EE23  F0C1         	lfsr	2,_ABB_1+1
 17954  004FF6  84DF               	bsf	indf2,2,c
 17955                           
 17956                           ; BSR set to: 1
 17957                           ;shaftTest.c: 80: FLAGS.shaftComplete = 1;
 17958  004FF8  8C38               	bsf	_FLAGS+1,6,c
 17959                           
 17960                           ;shaftTest.c: 81: break;
 17961  004FFA  0012               	return	
 17962  004FFC                     l14834:
 17963                           
 17964                           ; BSR set to: 1
 17965                           ;shaftTest.c: 84: state.shaftTest.counter = 4000;
 17966  004FFC  0E0F               	movlw	15
 17967  004FFE  0101               	movlb	1	; () banked
 17968  005000  6FD9               	movwf	(_state+50)& (0+255),b
 17969  005002  0EA0               	movlw	160
 17970  005004  6FD8               	movwf	(_state+49)& (0+255),b
 17971                           
 17972                           ; BSR set to: 1
 17973                           ;shaftTest.c: 85: ABB_1.info.statusBits.shaftFault = 0;
 17974  005006  EE23  F0C1         	lfsr	2,_ABB_1+1
 17975  00500A  98DF               	bcf	indf2,4,c
 17976                           
 17977                           ; BSR set to: 1
 17978                           ;shaftTest.c: 86: ABB_1.info.statusBits.earth_leakage = 0;
 17979  00500C  EE23  F0C1         	lfsr	2,_ABB_1+1
 17980  005010  94DF               	bcf	indf2,2,c
 17981                           
 17982                           ; BSR set to: 1
 17983                           ;shaftTest.c: 87: LATGbits.LATG2 = 0;
 17984  005012  947F               	bcf	3967,2,c	;volatile
 17985                           
 17986                           ; BSR set to: 1
 17987                           ;shaftTest.c: 88: LATAbits.LATA1 = 0;
 17988  005014  9279               	bcf	3961,1,c	;volatile
 17989                           
 17990                           ; BSR set to: 1
 17991                           ;shaftTest.c: 89: LATHbits.LATH3 = 0;
 17992  005016  9680               	bcf	3968,3,c	;volatile
 17993                           
 17994                           ; BSR set to: 1
 17995                           ;shaftTest.c: 90: FLAGS.shaftComplete = 1;
 17996  005018  8C38               	bsf	_FLAGS+1,6,c
 17997                           
 17998                           ; BSR set to: 1
 17999                           ;shaftTest.c: 91: FLAGS.shaftCheck = 0;
 18000  00501A  9A38               	bcf	_FLAGS+1,5,c
 18001                           
 18002                           ;shaftTest.c: 92: break;
 18003  00501C  0012               	return	
 18004  00501E                     l14850:
 18005                           
 18006                           ; BSR set to: 1
 18007                           ;shaftTest.c: 95: state.shaftTest.counter = 1;
 18008  00501E  0E00               	movlw	0
 18009  005020  0101               	movlb	1	; () banked
 18010  005022  6FD9               	movwf	(_state+50)& (0+255),b
 18011  005024  0E01               	movlw	1
 18012  005026  6FD8               	movwf	(_state+49)& (0+255),b
 18013                           
 18014                           ;shaftTest.c: 97: }
 18015  005028  0012               	return	
 18016  00502A                     l14852:
 18017  00502A  0101               	movlb	1	; () banked
 18018  00502C  51D6               	movf	(_state+47)& (0+255),w,b
 18019                           
 18020                           ; Switch size 1, requested type "space"
 18021                           ; Number of cases is 7, Range of values is 1 to 14
 18022                           ; switch strategies available:
 18023                           ; Name         Instructions Cycles
 18024                           ; simple_byte           22    12 (average)
 18025                           ;	Chosen strategy is simple_byte
 18026  00502E  0A01               	xorlw	1	; case 1
 18027  005030  B4D8               	btfsc	status,2,c
 18028  005032  D7AB               	goto	l2357
 18029  005034  0A05               	xorlw	5	; case 4
 18030  005036  B4D8               	btfsc	status,2,c
 18031  005038  D7BC               	goto	l2361
 18032  00503A  0A0C               	xorlw	12	; case 8
 18033  00503C  B4D8               	btfsc	status,2,c
 18034  00503E  D7D0               	goto	l2363
 18035  005040  0A02               	xorlw	2	; case 10
 18036  005042  B4D8               	btfsc	status,2,c
 18037  005044  D7DB               	goto	l14834
 18038  005046  0A06               	xorlw	6	; case 12
 18039  005048  B4D8               	btfsc	status,2,c
 18040  00504A  D7C2               	goto	l14820
 18041  00504C  0A01               	xorlw	1	; case 13
 18042  00504E  B4D8               	btfsc	status,2,c
 18043  005050  D7A3               	goto	l14808
 18044  005052  0A03               	xorlw	3	; case 14
 18045  005054  B4D8               	btfsc	status,2,c
 18046  005056  D7A6               	goto	l2360
 18047  005058  D7E2               	goto	l14850
 18048  00505A                     __end_of_shaftTest:
 18049                           	opt stack 0
 18050                           tblptru	equ	0xFF8
 18051                           tblptrh	equ	0xFF7
 18052                           tblptrl	equ	0xFF6
 18053                           tablat	equ	0xFF5
 18054                           prodh	equ	0xFF4
 18055                           prodl	equ	0xFF3
 18056                           intcon	equ	0xFF2
 18057                           postinc0	equ	0xFEE
 18058                           wreg	equ	0xFE8
 18059                           indf1	equ	0xFE7
 18060                           postinc1	equ	0xFE6
 18061                           postdec1	equ	0xFE5
 18062                           fsr1h	equ	0xFE2
 18063                           fsr1l	equ	0xFE1
 18064                           indf2	equ	0xFDF
 18065                           postinc2	equ	0xFDE
 18066                           postdec2	equ	0xFDD
 18067                           fsr2h	equ	0xFDA
 18068                           fsr2l	equ	0xFD9
 18069                           status	equ	0xFD8
 18070                           
 18071 ;; *************** function _readSupplyStateHandler *****************
 18072 ;; Defined at:
 18073 ;;		line 78 in file "readSupply.c"
 18074 ;; Parameters:    Size  Location     Type
 18075 ;;		None
 18076 ;; Auto vars:     Size  Location     Type
 18077 ;;  batteryVolta    2   52[BANK0 ] unsigned short 
 18078 ;; Return value:  Size  Location     Type
 18079 ;;                  1    wreg      void 
 18080 ;; Registers used:
 18081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18082 ;; Tracked objects:
 18083 ;;		On entry : 0/0
 18084 ;;		On exit  : 0/0
 18085 ;;		Unchanged: 0/0
 18086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18088 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18090 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18091 ;;Total ram usage:        2 bytes
 18092 ;; Hardware stack levels used:    1
 18093 ;; Hardware stack levels required when called:   11
 18094 ;; This function calls:
 18095 ;;		_readBatteryADC
 18096 ;;		_readMainsInterval
 18097 ;; This function is called by:
 18098 ;;		_currentStateHandler
 18099 ;; This function uses a non-reentrant model
 18100 ;;
 18101                           
 18102                           	psect	text95
 18103  0044DE                     __ptext95:
 18104                           	opt stack 0
 18105  0044DE                     _readSupplyStateHandler:
 18106                           	opt stack 17
 18107                           
 18108                           ;readSupply.c: 79: unsigned short batteryVoltage;
 18109                           ;readSupply.c: 80: switch(state.readSupply.current){
 18110                           
 18111                           ; BSR set to: 1
 18112                           ;incstack = 0
 18113  0044DE  D06F               	goto	l14560
 18114  0044E0                     l14514:
 18115                           
 18116                           ;readSupply.c: 82: if(readMainsInterval())
 18117  0044E0  EC1D  F039         	call	_readMainsInterval	;wreg free
 18118  0044E4  0900               	iorlw	0
 18119  0044E6  B4D8               	btfsc	status,2,c
 18120  0044E8  D004               	goto	l14518
 18121                           
 18122                           ;readSupply.c: 83: state.readSupply.next = 2;
 18123  0044EA  0E02               	movlw	2
 18124  0044EC  0101               	movlb	1	; () banked
 18125  0044EE  6FC2               	movwf	(_state+27)& (0+255),b
 18126  0044F0  0012               	return	
 18127  0044F2                     l14518:
 18128                           
 18129                           ;readSupply.c: 84: else
 18130                           ;readSupply.c: 85: state.readSupply.next = 3;
 18131  0044F2  0E03               	movlw	3
 18132  0044F4  0101               	movlb	1	; () banked
 18133  0044F6  6FC2               	movwf	(_state+27)& (0+255),b
 18134                           
 18135                           ; BSR set to: 1
 18136                           ;readSupply.c: 86: break;
 18137  0044F8  0012               	return	
 18138  0044FA                     l14520:
 18139                           
 18140                           ; BSR set to: 1
 18141                           ;readSupply.c: 89: batteryVoltage = readBatteryADC();
 18142  0044FA  EC43  F024         	call	_readBatteryADC	;wreg free
 18143  0044FE  C082  F094         	movff	?_readBatteryADC,readSupplyStateHandler@batteryVoltage
 18144  004502  C083  F095         	movff	?_readBatteryADC+1,readSupplyStateHandler@batteryVoltage+1
 18145                           
 18146                           ;readSupply.c: 90: if(ABB_1.info.statusBits.lowBat2){
 18147  004506  EE23  F0C1         	lfsr	2,_ABB_1+1
 18148  00450A  AEDF               	btfss	indf2,7,c
 18149  00450C  D01C               	goto	l14534
 18150                           
 18151                           ;readSupply.c: 91: if(batteryVoltage <= 0 + 30)
 18152  00450E  0100               	movlb	0	; () banked
 18153  004510  5195               	movf	(readSupplyStateHandler@batteryVoltage+1)& (0+255),w,b
 18154  004512  E109               	bnz	l14528
 18155  004514  0E1F               	movlw	31
 18156  004516  0100               	movlb	0	; () banked
 18157  004518  5D94               	subwf	readSupplyStateHandler@batteryVoltage& (0+255),w,b
 18158  00451A  B0D8               	btfsc	status,0,c
 18159  00451C  D004               	goto	l14528
 18160                           
 18161                           ; BSR set to: 0
 18162                           ;readSupply.c: 92: state.readSupply.next = 5;
 18163  00451E  0E05               	movlw	5
 18164  004520  0101               	movlb	1	; () banked
 18165  004522  6FC2               	movwf	(_state+27)& (0+255),b
 18166  004524  0012               	return	
 18167  004526                     l14528:
 18168                           
 18169                           ;readSupply.c: 93: else if(batteryVoltage <= 804)
 18170  004526  0E25               	movlw	37
 18171  004528  0100               	movlb	0	; () banked
 18172  00452A  5D94               	subwf	readSupplyStateHandler@batteryVoltage& (0+255),w,b
 18173  00452C  0E03               	movlw	3
 18174  00452E  0100               	movlb	0	; () banked
 18175  004530  5995               	subwfb	(readSupplyStateHandler@batteryVoltage+1)& (0+255),w,b
 18176  004532  B0D8               	btfsc	status,0,c
 18177  004534  D004               	goto	l14532
 18178                           
 18179                           ; BSR set to: 0
 18180                           ;readSupply.c: 94: state.readSupply.next = 4;
 18181  004536  0E04               	movlw	4
 18182  004538  0101               	movlb	1	; () banked
 18183  00453A  6FC2               	movwf	(_state+27)& (0+255),b
 18184  00453C  0012               	return	
 18185  00453E                     l14532:
 18186                           
 18187                           ;readSupply.c: 95: else
 18188                           ;readSupply.c: 96: state.readSupply.next = 6;
 18189  00453E  0E06               	movlw	6
 18190  004540  0101               	movlb	1	; () banked
 18191  004542  6FC2               	movwf	(_state+27)& (0+255),b
 18192                           
 18193                           ; BSR set to: 1
 18194                           ;readSupply.c: 97: }
 18195                           
 18196                           ; BSR set to: 1
 18197  004544  0012               	return	
 18198  004546                     l14534:
 18199                           
 18200                           ;readSupply.c: 98: else if(ABB_1.info.statusBits.lowBat){
 18201  004546  EE23  F0C1         	lfsr	2,_ABB_1+1
 18202  00454A  ACDF               	btfss	indf2,6,c
 18203  00454C  D01A               	goto	l14546
 18204                           
 18205                           ;readSupply.c: 99: if(batteryVoltage <= 0)
 18206  00454E  0100               	movlb	0	; () banked
 18207  004550  5194               	movf	readSupplyStateHandler@batteryVoltage& (0+255),w,b
 18208  004552  0100               	movlb	0	; () banked
 18209  004554  1195               	iorwf	(readSupplyStateHandler@batteryVoltage+1)& (0+255),w,b
 18210  004556  A4D8               	btfss	status,2,c
 18211  004558  D004               	goto	l14540
 18212                           
 18213                           ; BSR set to: 0
 18214                           ;readSupply.c: 100: state.readSupply.next = 5;
 18215  00455A  0E05               	movlw	5
 18216  00455C  0101               	movlb	1	; () banked
 18217  00455E  6FC2               	movwf	(_state+27)& (0+255),b
 18218  004560  0012               	return	
 18219  004562                     l14540:
 18220                           
 18221                           ;readSupply.c: 101: else if(batteryVoltage <= 804 + 30)
 18222  004562  0E43               	movlw	67
 18223  004564  0100               	movlb	0	; () banked
 18224  004566  5D94               	subwf	readSupplyStateHandler@batteryVoltage& (0+255),w,b
 18225  004568  0E03               	movlw	3
 18226  00456A  0100               	movlb	0	; () banked
 18227  00456C  5995               	subwfb	(readSupplyStateHandler@batteryVoltage+1)& (0+255),w,b
 18228  00456E  B0D8               	btfsc	status,0,c
 18229  004570  D004               	goto	l14544
 18230                           
 18231                           ; BSR set to: 0
 18232                           ;readSupply.c: 102: state.readSupply.next = 4;
 18233  004572  0E04               	movlw	4
 18234  004574  0101               	movlb	1	; () banked
 18235  004576  6FC2               	movwf	(_state+27)& (0+255),b
 18236  004578  0012               	return	
 18237  00457A                     l14544:
 18238                           
 18239                           ;readSupply.c: 103: else
 18240                           ;readSupply.c: 104: state.readSupply.next = 6;
 18241  00457A  0E06               	movlw	6
 18242  00457C  0101               	movlb	1	; () banked
 18243  00457E  6FC2               	movwf	(_state+27)& (0+255),b
 18244                           
 18245                           ; BSR set to: 1
 18246                           ;readSupply.c: 105: }
 18247                           
 18248                           ; BSR set to: 1
 18249  004580  0012               	return	
 18250  004582                     l14546:
 18251                           
 18252                           ;readSupply.c: 106: else{
 18253                           ;readSupply.c: 107: if(batteryVoltage <= 0)
 18254  004582  0100               	movlb	0	; () banked
 18255  004584  5194               	movf	readSupplyStateHandler@batteryVoltage& (0+255),w,b
 18256  004586  0100               	movlb	0	; () banked
 18257  004588  1195               	iorwf	(readSupplyStateHandler@batteryVoltage+1)& (0+255),w,b
 18258  00458A  A4D8               	btfss	status,2,c
 18259  00458C  D004               	goto	l14550
 18260                           
 18261                           ; BSR set to: 0
 18262                           ;readSupply.c: 108: state.readSupply.next = 5;
 18263  00458E  0E05               	movlw	5
 18264  004590  0101               	movlb	1	; () banked
 18265  004592  6FC2               	movwf	(_state+27)& (0+255),b
 18266  004594  0012               	return	
 18267  004596                     l14550:
 18268                           
 18269                           ;readSupply.c: 109: else if(batteryVoltage <= 804)
 18270  004596  0E25               	movlw	37
 18271  004598  0100               	movlb	0	; () banked
 18272  00459A  5D94               	subwf	readSupplyStateHandler@batteryVoltage& (0+255),w,b
 18273  00459C  0E03               	movlw	3
 18274  00459E  0100               	movlb	0	; () banked
 18275  0045A0  5995               	subwfb	(readSupplyStateHandler@batteryVoltage+1)& (0+255),w,b
 18276  0045A2  B0D8               	btfsc	status,0,c
 18277  0045A4  D004               	goto	l14554
 18278                           
 18279                           ; BSR set to: 0
 18280                           ;readSupply.c: 110: state.readSupply.next = 4;
 18281  0045A6  0E04               	movlw	4
 18282  0045A8  0101               	movlb	1	; () banked
 18283  0045AA  6FC2               	movwf	(_state+27)& (0+255),b
 18284  0045AC  0012               	return	
 18285  0045AE                     l14554:
 18286                           
 18287                           ;readSupply.c: 111: else
 18288                           ;readSupply.c: 112: state.readSupply.next = 6;
 18289  0045AE  0E06               	movlw	6
 18290  0045B0  0101               	movlb	1	; () banked
 18291  0045B2  6FC2               	movwf	(_state+27)& (0+255),b
 18292                           
 18293                           ; BSR set to: 1
 18294                           ;readSupply.c: 113: }
 18295                           ;readSupply.c: 114: break;
 18296                           
 18297                           ; BSR set to: 1
 18298                           
 18299                           ; BSR set to: 1
 18300                           
 18301                           ; BSR set to: 1
 18302  0045B4  0012               	return	
 18303  0045B6                     l14556:
 18304                           
 18305                           ; BSR set to: 1
 18306                           ;readSupply.c: 117: state.readSupply.next = 1;
 18307  0045B6  0E01               	movlw	1
 18308  0045B8  0101               	movlb	1	; () banked
 18309  0045BA  6FC2               	movwf	(_state+27)& (0+255),b
 18310                           
 18311                           ; BSR set to: 1
 18312                           ;readSupply.c: 119: }
 18313                           
 18314                           ;readSupply.c: 118: break;
 18315  0045BC  0012               	return	
 18316  0045BE                     l14560:
 18317  0045BE  0101               	movlb	1	; () banked
 18318  0045C0  51C1               	movf	(_state+26)& (0+255),w,b
 18319                           
 18320                           ; Switch size 1, requested type "space"
 18321                           ; Number of cases is 2, Range of values is 1 to 3
 18322                           ; switch strategies available:
 18323                           ; Name         Instructions Cycles
 18324                           ; simple_byte            7     4 (average)
 18325                           ;	Chosen strategy is simple_byte
 18326  0045C2  0A01               	xorlw	1	; case 1
 18327  0045C4  B4D8               	btfsc	status,2,c
 18328  0045C6  D78C               	goto	l14514
 18329  0045C8  0A02               	xorlw	2	; case 3
 18330  0045CA  B4D8               	btfsc	status,2,c
 18331  0045CC  D796               	goto	l14520
 18332  0045CE  D7F3               	goto	l14556
 18333  0045D0                     __end_of_readSupplyStateHandler:
 18334                           	opt stack 0
 18335                           tblptru	equ	0xFF8
 18336                           tblptrh	equ	0xFF7
 18337                           tblptrl	equ	0xFF6
 18338                           tablat	equ	0xFF5
 18339                           prodh	equ	0xFF4
 18340                           prodl	equ	0xFF3
 18341                           intcon	equ	0xFF2
 18342                           postinc0	equ	0xFEE
 18343                           wreg	equ	0xFE8
 18344                           indf1	equ	0xFE7
 18345                           postinc1	equ	0xFE6
 18346                           postdec1	equ	0xFE5
 18347                           fsr1h	equ	0xFE2
 18348                           fsr1l	equ	0xFE1
 18349                           indf2	equ	0xFDF
 18350                           postinc2	equ	0xFDE
 18351                           postdec2	equ	0xFDD
 18352                           fsr2h	equ	0xFDA
 18353                           fsr2l	equ	0xFD9
 18354                           status	equ	0xFD8
 18355                           
 18356 ;; *************** function _readMainsInterval *****************
 18357 ;; Defined at:
 18358 ;;		line 159 in file "readSupply.c"
 18359 ;; Parameters:    Size  Location     Type
 18360 ;;		None
 18361 ;; Auto vars:     Size  Location     Type
 18362 ;;  i               2    0[BANK0 ] int 
 18363 ;; Return value:  Size  Location     Type
 18364 ;;                  1    wreg      unsigned char 
 18365 ;; Registers used:
 18366 ;;		wreg, status,2, status,0
 18367 ;; Tracked objects:
 18368 ;;		On entry : 0/0
 18369 ;;		On exit  : 0/0
 18370 ;;		Unchanged: 0/0
 18371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18373 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18375 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18376 ;;Total ram usage:        2 bytes
 18377 ;; Hardware stack levels used:    1
 18378 ;; Hardware stack levels required when called:    8
 18379 ;; This function calls:
 18380 ;;		Nothing
 18381 ;; This function is called by:
 18382 ;;		_readSupplyStateHandler
 18383 ;; This function uses a non-reentrant model
 18384 ;;
 18385                           
 18386                           	psect	text96
 18387  00723A                     __ptext96:
 18388                           	opt stack 0
 18389  00723A                     _readMainsInterval:
 18390                           	opt stack 19
 18391                           
 18392                           ;readSupply.c: 160: int i = 0;
 18393                           
 18394                           ; BSR set to: 1
 18395                           ;incstack = 0
 18396  00723A  0E00               	movlw	0
 18397  00723C  0100               	movlb	0	; () banked
 18398  00723E  6F61               	movwf	(readMainsInterval@i+1)& (0+255),b
 18399  007240  0E00               	movlw	0
 18400  007242  6F60               	movwf	readMainsInterval@i& (0+255),b
 18401                           
 18402                           ;readSupply.c: 161: while(i < 1000){
 18403  007244  D007               	goto	l13896
 18404  007246                     l1090:
 18405                           
 18406                           ; BSR set to: 0
 18407                           ;readSupply.c: 162: if(PORTHbits.RH2)
 18408  007246  A490               	btfss	3984,2,c	;volatile
 18409  007248  D002               	goto	l13894
 18410                           
 18411                           ; BSR set to: 0
 18412                           ;readSupply.c: 163: return 1;
 18413  00724A  0E01               	movlw	1
 18414                           
 18415                           ; BSR set to: 0
 18416  00724C  0012               	return	
 18417  00724E                     l13894:
 18418                           
 18419                           ; BSR set to: 0
 18420                           ;readSupply.c: 164: i++;
 18421  00724E  0100               	movlb	0	; () banked
 18422  007250  4B60               	infsnz	readMainsInterval@i& (0+255),f,b
 18423  007252  2B61               	incf	(readMainsInterval@i+1)& (0+255),f,b
 18424  007254                     l13896:
 18425                           
 18426                           ; BSR set to: 0
 18427  007254  0100               	movlb	0	; () banked
 18428  007256  BF61               	btfsc	(readMainsInterval@i+1)& (0+255),7,b
 18429  007258  D7F6               	goto	l1090
 18430  00725A  0EE8               	movlw	232
 18431  00725C  0100               	movlb	0	; () banked
 18432  00725E  5D60               	subwf	readMainsInterval@i& (0+255),w,b
 18433  007260  0E03               	movlw	3
 18434  007262  0100               	movlb	0	; () banked
 18435  007264  5961               	subwfb	(readMainsInterval@i+1)& (0+255),w,b
 18436  007266  A0D8               	btfss	status,0,c
 18437  007268  D7EE               	goto	l1090
 18438                           
 18439                           ; BSR set to: 0
 18440                           ;readSupply.c: 165: }
 18441                           ;readSupply.c: 166: return 0;
 18442                           
 18443                           ; BSR set to: 0
 18444  00726A  0E00               	movlw	0
 18445  00726C  0012               	return	
 18446  00726E                     __end_of_readMainsInterval:
 18447                           	opt stack 0
 18448                           tblptru	equ	0xFF8
 18449                           tblptrh	equ	0xFF7
 18450                           tblptrl	equ	0xFF6
 18451                           tablat	equ	0xFF5
 18452                           prodh	equ	0xFF4
 18453                           prodl	equ	0xFF3
 18454                           intcon	equ	0xFF2
 18455                           postinc0	equ	0xFEE
 18456                           wreg	equ	0xFE8
 18457                           indf1	equ	0xFE7
 18458                           postinc1	equ	0xFE6
 18459                           postdec1	equ	0xFE5
 18460                           fsr1h	equ	0xFE2
 18461                           fsr1l	equ	0xFE1
 18462                           indf2	equ	0xFDF
 18463                           postinc2	equ	0xFDE
 18464                           postdec2	equ	0xFDD
 18465                           fsr2h	equ	0xFDA
 18466                           fsr2l	equ	0xFD9
 18467                           status	equ	0xFD8
 18468                           
 18469 ;; *************** function _readBatteryADC *****************
 18470 ;; Defined at:
 18471 ;;		line 124 in file "readSupply.c"
 18472 ;; Parameters:    Size  Location     Type
 18473 ;;		None
 18474 ;; Auto vars:     Size  Location     Type
 18475 ;;  ADCStore       10   38[BANK0 ] unsigned short [5]
 18476 ;;  i               2   50[BANK0 ] int 
 18477 ;;  currentVaria    2   48[BANK0 ] unsigned short 
 18478 ;; Return value:  Size  Location     Type
 18479 ;;                  2   34[BANK0 ] unsigned short 
 18480 ;; Registers used:
 18481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18482 ;; Tracked objects:
 18483 ;;		On entry : 0/0
 18484 ;;		On exit  : 0/0
 18485 ;;		Unchanged: 0/0
 18486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18487 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18488 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18489 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18490 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18491 ;;Total ram usage:       18 bytes
 18492 ;; Hardware stack levels used:    1
 18493 ;; Hardware stack levels required when called:   10
 18494 ;; This function calls:
 18495 ;;		__delay_us
 18496 ;;		_readBatteryADCSetup
 18497 ;;		_variance
 18498 ;; This function is called by:
 18499 ;;		_readSupplyStateHandler
 18500 ;; This function uses a non-reentrant model
 18501 ;;
 18502                           
 18503                           	psect	text97
 18504  004886                     __ptext97:
 18505                           	opt stack 0
 18506  004886                     _readBatteryADC:
 18507                           	opt stack 17
 18508                           
 18509                           ;readSupply.c: 125: unsigned short ADCStore[5];
 18510                           ;readSupply.c: 126: unsigned short currentVariance = 1000;
 18511                           
 18512                           ; BSR set to: 0
 18513                           ;incstack = 0
 18514  004886  0E03               	movlw	3
 18515  004888  0100               	movlb	0	; () banked
 18516  00488A  6F91               	movwf	(readBatteryADC@currentVariance+1)& (0+255),b
 18517  00488C  0EE8               	movlw	232
 18518  00488E  6F90               	movwf	readBatteryADC@currentVariance& (0+255),b
 18519                           
 18520                           ; BSR set to: 0
 18521                           ;readSupply.c: 127: int i;
 18522                           ;readSupply.c: 128: readBatteryADCSetup();
 18523  004890  ECFA  F039         	call	_readBatteryADCSetup	;wreg free
 18524                           
 18525                           ;readSupply.c: 129: _delay_us(20);
 18526  004894  0E14               	movlw	20
 18527  004896  EC37  F03B         	call	__delay_us
 18528                           
 18529                           ;readSupply.c: 130: ADRES = 0;
 18530  00489A  0E00               	movlw	0
 18531  00489C  6E64               	movwf	3940,c	;volatile
 18532  00489E  0E00               	movlw	0
 18533  0048A0  6E63               	movwf	3939,c	;volatile
 18534                           
 18535                           ;readSupply.c: 131: while(currentVariance > 100){
 18536  0048A2  D054               	goto	l13922
 18537  0048A4                     l1076:
 18538                           
 18539                           ; BSR set to: 0
 18540                           ;readSupply.c: 132: ADCON0bits.ADGO = 1;
 18541  0048A4  8060               	bsf	3936,0,c	;volatile
 18542  0048A6                     l1077:
 18543  0048A6  B060               	btfsc	3936,0,c	;volatile
 18544  0048A8  D7FE               	goto	l1077
 18545                           
 18546                           ;readSupply.c: 134: for(i = 0; i < 5 - 1; i++){
 18547  0048AA  0E00               	movlw	0
 18548  0048AC  0100               	movlb	0	; () banked
 18549  0048AE  6F93               	movwf	(readBatteryADC@i+1)& (0+255),b
 18550  0048B0  0E00               	movlw	0
 18551  0048B2  6F92               	movwf	readBatteryADC@i& (0+255),b
 18552                           
 18553                           ; BSR set to: 0
 18554  0048B4  0100               	movlb	0	; () banked
 18555  0048B6  BF93               	btfsc	(readBatteryADC@i+1)& (0+255),7,b
 18556  0048B8  D008               	goto	l13914
 18557  0048BA  0100               	movlb	0	; () banked
 18558  0048BC  5193               	movf	(readBatteryADC@i+1)& (0+255),w,b
 18559  0048BE  E133               	bnz	l1081
 18560  0048C0  0E04               	movlw	4
 18561  0048C2  0100               	movlb	0	; () banked
 18562  0048C4  5D92               	subwf	readBatteryADC@i& (0+255),w,b
 18563  0048C6  B0D8               	btfsc	status,0,c
 18564  0048C8  D02E               	goto	l1081
 18565  0048CA                     l13914:
 18566                           
 18567                           ; BSR set to: 0
 18568                           ;readSupply.c: 135: ADCStore[i + 1] = ADCStore[i];
 18569  0048CA  90D8               	bcf	status,0,c
 18570  0048CC  0100               	movlb	0	; () banked
 18571  0048CE  3592               	rlcf	readBatteryADC@i& (0+255),w,b
 18572  0048D0  6ED9               	movwf	fsr2l,c
 18573  0048D2  0100               	movlb	0	; () banked
 18574  0048D4  3593               	rlcf	(readBatteryADC@i+1)& (0+255),w,b
 18575  0048D6  6EDA               	movwf	fsr2h,c
 18576  0048D8  0E86               	movlw	low readBatteryADC@ADCStore
 18577  0048DA  26D9               	addwf	fsr2l,f,c
 18578  0048DC  0E00               	movlw	high readBatteryADC@ADCStore
 18579  0048DE  22DA               	addwfc	fsr2h,f,c
 18580  0048E0  C092  F084         	movff	readBatteryADC@i,??_readBatteryADC
 18581  0048E4  C093  F085         	movff	readBatteryADC@i+1,??_readBatteryADC+1
 18582  0048E8  90D8               	bcf	status,0,c
 18583  0048EA  0100               	movlb	0	; () banked
 18584  0048EC  3784               	rlcf	??_readBatteryADC& (0+255),f,b
 18585  0048EE  3785               	rlcf	(??_readBatteryADC+1)& (0+255),f,b
 18586  0048F0  0E02               	movlw	2
 18587  0048F2  0100               	movlb	0	; () banked
 18588  0048F4  2784               	addwf	??_readBatteryADC& (0+255),f,b
 18589  0048F6  0E00               	movlw	0
 18590  0048F8  2385               	addwfc	(??_readBatteryADC+1)& (0+255),f,b
 18591  0048FA  0E86               	movlw	low readBatteryADC@ADCStore
 18592  0048FC  0100               	movlb	0	; () banked
 18593  0048FE  2584               	addwf	??_readBatteryADC& (0+255),w,b
 18594  004900  6EE1               	movwf	fsr1l,c
 18595  004902  0E00               	movlw	high readBatteryADC@ADCStore
 18596  004904  0100               	movlb	0	; () banked
 18597  004906  2185               	addwfc	(??_readBatteryADC+1)& (0+255),w,b
 18598  004908  6EE2               	movwf	fsr1h,c
 18599  00490A  CFDE FFE6          	movff	postinc2,postinc1
 18600  00490E  CFDD FFE5          	movff	postdec2,postdec1
 18601                           
 18602                           ; BSR set to: 0
 18603  004912  0100               	movlb	0	; () banked
 18604  004914  4B92               	infsnz	readBatteryADC@i& (0+255),f,b
 18605  004916  2B93               	incf	(readBatteryADC@i+1)& (0+255),f,b
 18606                           
 18607                           ; BSR set to: 0
 18608  004918  0100               	movlb	0	; () banked
 18609  00491A  BF93               	btfsc	(readBatteryADC@i+1)& (0+255),7,b
 18610  00491C  D7D6               	goto	l13914
 18611  00491E  0100               	movlb	0	; () banked
 18612  004920  5193               	movf	(readBatteryADC@i+1)& (0+255),w,b
 18613  004922  E101               	bnz	u10050
 18614  004924  D7CD               	goto	L13
 18615  004926                     u10050:
 18616  004926                     l1081:
 18617                           
 18618                           ; BSR set to: 0
 18619                           ;readSupply.c: 136: }
 18620                           ;readSupply.c: 137: ADCStore[0] = ADRES;
 18621  004926  CF63 F086          	movff	3939,readBatteryADC@ADCStore	;volatile
 18622  00492A  CF64 F087          	movff	3940,readBatteryADC@ADCStore+1	;volatile
 18623                           
 18624                           ; BSR set to: 0
 18625                           ;readSupply.c: 138: currentVariance = variance(ADCStore, 5);
 18626  00492E  0E86               	movlw	low readBatteryADC@ADCStore
 18627  004930  0100               	movlb	0	; () banked
 18628  004932  6F6D               	movwf	variance@values& (0+255),b
 18629  004934  0E00               	movlw	high readBatteryADC@ADCStore
 18630  004936  0100               	movlb	0	; () banked
 18631  004938  6F6E               	movwf	(variance@values+1)& (0+255),b
 18632  00493A  0E05               	movlw	5
 18633  00493C  0100               	movlb	0	; () banked
 18634  00493E  6F6F               	movwf	variance@sampleSize& (0+255),b
 18635  004940  EC90  F013         	call	_variance	;wreg free
 18636  004944  C06D  F090         	movff	?_variance,readBatteryADC@currentVariance
 18637  004948  C06E  F091         	movff	?_variance+1,readBatteryADC@currentVariance+1
 18638  00494C                     l13922:
 18639  00494C  0100               	movlb	0	; () banked
 18640  00494E  5191               	movf	(readBatteryADC@currentVariance+1)& (0+255),w,b
 18641  004950  E1A9               	bnz	l1076
 18642  004952  0E65               	movlw	101
 18643  004954  0100               	movlb	0	; () banked
 18644  004956  5D90               	subwf	readBatteryADC@currentVariance& (0+255),w,b
 18645  004958  B0D8               	btfsc	status,0,c
 18646  00495A  D7A4               	goto	l1076
 18647                           
 18648                           ; BSR set to: 0
 18649                           ;readSupply.c: 139: }
 18650                           ;readSupply.c: 140: ADCON0bits.ADON = 0;
 18651  00495C  9E60               	bcf	3936,7,c	;volatile
 18652                           
 18653                           ;readSupply.c: 141: FVRCONbits.FVREN = 0;
 18654  00495E  010E               	movlb	14	; () banked
 18655  004960  9FC4               	bcf	196,7,b	;volatile
 18656                           
 18657                           ;readSupply.c: 143: return ADRES;
 18658  004962  CF63 F082          	movff	3939,?_readBatteryADC	;volatile
 18659  004966  CF64 F083          	movff	3940,?_readBatteryADC+1	;volatile
 18660                           
 18661                           ; BSR set to: 14
 18662  00496A  0012               	return		;funcret
 18663  00496C                     __end_of_readBatteryADC:
 18664                           	opt stack 0
 18665                           tblptru	equ	0xFF8
 18666                           tblptrh	equ	0xFF7
 18667                           tblptrl	equ	0xFF6
 18668                           tablat	equ	0xFF5
 18669                           prodh	equ	0xFF4
 18670                           prodl	equ	0xFF3
 18671                           intcon	equ	0xFF2
 18672                           postinc0	equ	0xFEE
 18673                           wreg	equ	0xFE8
 18674                           indf1	equ	0xFE7
 18675                           postinc1	equ	0xFE6
 18676                           postdec1	equ	0xFE5
 18677                           fsr1h	equ	0xFE2
 18678                           fsr1l	equ	0xFE1
 18679                           indf2	equ	0xFDF
 18680                           postinc2	equ	0xFDE
 18681                           postdec2	equ	0xFDD
 18682                           fsr2h	equ	0xFDA
 18683                           fsr2l	equ	0xFD9
 18684                           status	equ	0xFD8
 18685                           
 18686 ;; *************** function _readBatteryADCSetup *****************
 18687 ;; Defined at:
 18688 ;;		line 146 in file "readSupply.c"
 18689 ;; Parameters:    Size  Location     Type
 18690 ;;		None
 18691 ;; Auto vars:     Size  Location     Type
 18692 ;;		None
 18693 ;; Return value:  Size  Location     Type
 18694 ;;                  1    wreg      void 
 18695 ;; Registers used:
 18696 ;;		wreg, status,2, status,0, cstack
 18697 ;; Tracked objects:
 18698 ;;		On entry : 0/0
 18699 ;;		On exit  : 0/0
 18700 ;;		Unchanged: 0/0
 18701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18706 ;;Total ram usage:        0 bytes
 18707 ;; Hardware stack levels used:    1
 18708 ;; Hardware stack levels required when called:    9
 18709 ;; This function calls:
 18710 ;;		__delay_us
 18711 ;; This function is called by:
 18712 ;;		_readBatteryADC
 18713 ;; This function uses a non-reentrant model
 18714 ;;
 18715                           
 18716                           	psect	text98
 18717  0073F4                     __ptext98:
 18718                           	opt stack 0
 18719  0073F4                     _readBatteryADCSetup:
 18720                           	opt stack 17
 18721                           
 18722                           ;readSupply.c: 147: FVRCON = 0b00000010;
 18723                           
 18724                           ; BSR set to: 14
 18725                           ;incstack = 0
 18726  0073F4  0E02               	movlw	2
 18727  0073F6  010E               	movlb	14	; () banked
 18728  0073F8  6FC4               	movwf	196,b	;volatile
 18729                           
 18730                           ; BSR set to: 14
 18731                           ;readSupply.c: 148: FVRCONbits.FVREN = 1;
 18732  0073FA  010E               	movlb	14	; () banked
 18733  0073FC  8FC4               	bsf	196,7,b	;volatile
 18734                           
 18735                           ; BSR set to: 14
 18736                           ;readSupply.c: 149: _delay_us(20);
 18737  0073FE  0E14               	movlw	20
 18738  007400  EC37  F03B         	call	__delay_us
 18739                           
 18740                           ;readSupply.c: 151: ADCON1 = 0b01110000;
 18741  007404  0E70               	movlw	112
 18742  007406  010F               	movlb	15	; () banked
 18743  007408  6F59               	movwf	89,b	;volatile
 18744                           
 18745                           ; BSR set to: 15
 18746                           ;readSupply.c: 152: ADPCH = 0b00101010;
 18747  00740A  0E2A               	movlw	42
 18748  00740C  010F               	movlb	15	; () banked
 18749  00740E  6F5F               	movwf	95,b	;volatile
 18750                           
 18751                           ; BSR set to: 15
 18752                           ;readSupply.c: 153: ADCLK = 0b00111111;
 18753  007410  0E3F               	movlw	63
 18754  007412  010F               	movlb	15	; () banked
 18755  007414  6F57               	movwf	87,b	;volatile
 18756                           
 18757                           ; BSR set to: 15
 18758                           ;readSupply.c: 154: ADREF = 0b00000011;
 18759  007416  0E03               	movlw	3
 18760  007418  010F               	movlb	15	; () banked
 18761  00741A  6F58               	movwf	88,b	;volatile
 18762                           
 18763                           ; BSR set to: 15
 18764                           ;readSupply.c: 155: ADCON0bits.ADFM = 1;
 18765  00741C  8460               	bsf	3936,2,c	;volatile
 18766                           
 18767                           ; BSR set to: 15
 18768                           ;readSupply.c: 156: ADCON0bits.ADON = 1;
 18769  00741E  8E60               	bsf	3936,7,c	;volatile
 18770                           
 18771                           ; BSR set to: 15
 18772  007420  0012               	return		;funcret
 18773  007422                     __end_of_readBatteryADCSetup:
 18774                           	opt stack 0
 18775                           tblptru	equ	0xFF8
 18776                           tblptrh	equ	0xFF7
 18777                           tblptrl	equ	0xFF6
 18778                           tablat	equ	0xFF5
 18779                           prodh	equ	0xFF4
 18780                           prodl	equ	0xFF3
 18781                           intcon	equ	0xFF2
 18782                           postinc0	equ	0xFEE
 18783                           wreg	equ	0xFE8
 18784                           indf1	equ	0xFE7
 18785                           postinc1	equ	0xFE6
 18786                           postdec1	equ	0xFE5
 18787                           fsr1h	equ	0xFE2
 18788                           fsr1l	equ	0xFE1
 18789                           indf2	equ	0xFDF
 18790                           postinc2	equ	0xFDE
 18791                           postdec2	equ	0xFDD
 18792                           fsr2h	equ	0xFDA
 18793                           fsr2l	equ	0xFD9
 18794                           status	equ	0xFD8
 18795                           
 18796 ;; *************** function _readSupply *****************
 18797 ;; Defined at:
 18798 ;;		line 30 in file "readSupply.c"
 18799 ;; Parameters:    Size  Location     Type
 18800 ;;		None
 18801 ;; Auto vars:     Size  Location     Type
 18802 ;;		None
 18803 ;; Return value:  Size  Location     Type
 18804 ;;                  1    wreg      void 
 18805 ;; Registers used:
 18806 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18807 ;; Tracked objects:
 18808 ;;		On entry : 0/0
 18809 ;;		On exit  : 0/0
 18810 ;;		Unchanged: 0/0
 18811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18816 ;;Total ram usage:        0 bytes
 18817 ;; Hardware stack levels used:    1
 18818 ;; Hardware stack levels required when called:    8
 18819 ;; This function calls:
 18820 ;;		Nothing
 18821 ;; This function is called by:
 18822 ;;		_currentStateHandler
 18823 ;; This function uses a non-reentrant model
 18824 ;;
 18825                           
 18826                           	psect	text99
 18827  00505A                     __ptext99:
 18828                           	opt stack 0
 18829  00505A                     _readSupply:
 18830                           	opt stack 20
 18831                           
 18832                           ;readSupply.c: 31: switch (state.readSupply.current){
 18833                           
 18834                           ; BSR set to: 15
 18835                           ;incstack = 0
 18836  00505A  D056               	goto	l14510
 18837  00505C                     l14462:
 18838                           
 18839                           ;readSupply.c: 33: state.readSupply.counter = 50 - 1;
 18840  00505C  0E00               	movlw	0
 18841  00505E  0101               	movlb	1	; () banked
 18842  005060  6FC4               	movwf	(_state+29)& (0+255),b
 18843  005062  0E31               	movlw	49
 18844  005064  6FC3               	movwf	(_state+28)& (0+255),b
 18845                           
 18846                           ; BSR set to: 1
 18847                           ;readSupply.c: 34: ABB_1.info.statusBits.mains = 1;
 18848  005066  EE23  F0C1         	lfsr	2,_ABB_1+1
 18849  00506A  86DF               	bsf	indf2,3,c
 18850                           
 18851                           ; BSR set to: 1
 18852                           ;readSupply.c: 35: ABB_1.info.statusBits.lowBat = 0;
 18853  00506C  EE23  F0C1         	lfsr	2,_ABB_1+1
 18854  005070  9CDF               	bcf	indf2,6,c
 18855                           
 18856                           ; BSR set to: 1
 18857                           ;readSupply.c: 36: ABB_1.info.statusBits.lowBat2 = 0;
 18858  005072  EE23  F0C1         	lfsr	2,_ABB_1+1
 18859  005076  9EDF               	bcf	indf2,7,c
 18860                           
 18861                           ; BSR set to: 1
 18862                           ;readSupply.c: 37: testCounter = 0;
 18863  005078  0E00               	movlw	0
 18864  00507A  0100               	movlb	0	; () banked
 18865  00507C  6FC7               	movwf	_testCounter& (0+255),b
 18866                           
 18867                           ;readSupply.c: 38: break;
 18868  00507E  0012               	return	
 18869  005080                     l14472:
 18870                           
 18871                           ;readSupply.c: 41: state.readSupply.counter = 1;
 18872  005080  0E00               	movlw	0
 18873  005082  0101               	movlb	1	; () banked
 18874  005084  6FC4               	movwf	(_state+29)& (0+255),b
 18875  005086  0E01               	movlw	1
 18876  005088  6FC3               	movwf	(_state+28)& (0+255),b
 18877                           
 18878                           ; BSR set to: 1
 18879                           ;readSupply.c: 42: testCounter ++;
 18880  00508A  0100               	movlb	0	; () banked
 18881  00508C  2BC7               	incf	_testCounter& (0+255),f,b
 18882                           
 18883                           ;readSupply.c: 43: break;
 18884  00508E  0012               	return	
 18885  005090                     l14476:
 18886                           
 18887                           ;readSupply.c: 46: state.readSupply.counter = 50 - 2;
 18888  005090  0E00               	movlw	0
 18889  005092  0101               	movlb	1	; () banked
 18890  005094  6FC4               	movwf	(_state+29)& (0+255),b
 18891  005096  0E30               	movlw	48
 18892  005098  6FC3               	movwf	(_state+28)& (0+255),b
 18893                           
 18894                           ; BSR set to: 1
 18895                           ;readSupply.c: 47: ABB_1.info.statusBits.mains = 0;
 18896  00509A  EE23  F0C1         	lfsr	2,_ABB_1+1
 18897  00509E  96DF               	bcf	indf2,3,c
 18898                           
 18899                           ; BSR set to: 1
 18900                           ;readSupply.c: 48: ABB_1.info.statusBits.lowBat = 1;
 18901  0050A0  EE23  F0C1         	lfsr	2,_ABB_1+1
 18902  0050A4  8CDF               	bsf	indf2,6,c
 18903                           
 18904                           ; BSR set to: 1
 18905                           ;readSupply.c: 49: ABB_1.info.statusBits.lowBat2 = 0;
 18906  0050A6  EE23  F0C1         	lfsr	2,_ABB_1+1
 18907  0050AA  9EDF               	bcf	indf2,7,c
 18908                           
 18909                           ; BSR set to: 1
 18910                           ;readSupply.c: 50: testCounter = 0;
 18911  0050AC  0E00               	movlw	0
 18912  0050AE  0100               	movlb	0	; () banked
 18913  0050B0  6FC7               	movwf	_testCounter& (0+255),b
 18914                           
 18915                           ;readSupply.c: 51: break;
 18916  0050B2  0012               	return	
 18917  0050B4                     l14486:
 18918                           
 18919                           ;readSupply.c: 54: state.readSupply.counter = 50 - 2;
 18920  0050B4  0E00               	movlw	0
 18921  0050B6  0101               	movlb	1	; () banked
 18922  0050B8  6FC4               	movwf	(_state+29)& (0+255),b
 18923  0050BA  0E30               	movlw	48
 18924  0050BC  6FC3               	movwf	(_state+28)& (0+255),b
 18925                           
 18926                           ; BSR set to: 1
 18927                           ;readSupply.c: 55: ABB_1.info.statusBits.mains = 0;
 18928  0050BE  EE23  F0C1         	lfsr	2,_ABB_1+1
 18929  0050C2  96DF               	bcf	indf2,3,c
 18930                           
 18931                           ; BSR set to: 1
 18932                           ;readSupply.c: 56: ABB_1.info.statusBits.lowBat = 1;
 18933  0050C4  EE23  F0C1         	lfsr	2,_ABB_1+1
 18934  0050C8  8CDF               	bsf	indf2,6,c
 18935                           
 18936                           ; BSR set to: 1
 18937                           ;readSupply.c: 57: ABB_1.info.statusBits.lowBat2 = 1;
 18938  0050CA  EE23  F0C1         	lfsr	2,_ABB_1+1
 18939  0050CE  8EDF               	bsf	indf2,7,c
 18940                           
 18941                           ; BSR set to: 1
 18942                           ;readSupply.c: 58: testCounter = 0;
 18943  0050D0  0E00               	movlw	0
 18944  0050D2  0100               	movlb	0	; () banked
 18945  0050D4  6FC7               	movwf	_testCounter& (0+255),b
 18946                           
 18947                           ;readSupply.c: 59: break;
 18948  0050D6  0012               	return	
 18949  0050D8                     l14496:
 18950                           
 18951                           ;readSupply.c: 62: state.readSupply.counter = 50 - 2;
 18952  0050D8  0E00               	movlw	0
 18953  0050DA  0101               	movlb	1	; () banked
 18954  0050DC  6FC4               	movwf	(_state+29)& (0+255),b
 18955  0050DE  0E30               	movlw	48
 18956  0050E0  6FC3               	movwf	(_state+28)& (0+255),b
 18957                           
 18958                           ; BSR set to: 1
 18959                           ;readSupply.c: 63: ABB_1.info.statusBits.mains = 0;
 18960  0050E2  EE23  F0C1         	lfsr	2,_ABB_1+1
 18961  0050E6  96DF               	bcf	indf2,3,c
 18962                           
 18963                           ; BSR set to: 1
 18964                           ;readSupply.c: 64: ABB_1.info.statusBits.lowBat = 0;
 18965  0050E8  EE23  F0C1         	lfsr	2,_ABB_1+1
 18966  0050EC  9CDF               	bcf	indf2,6,c
 18967                           
 18968                           ; BSR set to: 1
 18969                           ;readSupply.c: 65: ABB_1.info.statusBits.lowBat2 = 0;
 18970  0050EE  EE23  F0C1         	lfsr	2,_ABB_1+1
 18971  0050F2  9EDF               	bcf	indf2,7,c
 18972                           
 18973                           ; BSR set to: 1
 18974                           ;readSupply.c: 66: testCounter = 0;
 18975  0050F4  0E00               	movlw	0
 18976  0050F6  0100               	movlb	0	; () banked
 18977  0050F8  6FC7               	movwf	_testCounter& (0+255),b
 18978                           
 18979                           ;readSupply.c: 67: break;
 18980  0050FA  0012               	return	
 18981  0050FC                     l14506:
 18982                           
 18983                           ;readSupply.c: 70: state.readSupply.counter = 1;
 18984  0050FC  0E00               	movlw	0
 18985  0050FE  0101               	movlb	1	; () banked
 18986  005100  6FC4               	movwf	(_state+29)& (0+255),b
 18987  005102  0E01               	movlw	1
 18988  005104  6FC3               	movwf	(_state+28)& (0+255),b
 18989                           
 18990                           ; BSR set to: 1
 18991                           ;readSupply.c: 73: }
 18992                           
 18993                           ;readSupply.c: 71: break;
 18994  005106  0012               	return	
 18995  005108                     l14510:
 18996  005108  0101               	movlb	1	; () banked
 18997  00510A  51C1               	movf	(_state+26)& (0+255),w,b
 18998                           
 18999                           ; Switch size 1, requested type "space"
 19000                           ; Number of cases is 5, Range of values is 2 to 6
 19001                           ; switch strategies available:
 19002                           ; Name         Instructions Cycles
 19003                           ; simple_byte           16     9 (average)
 19004                           ;	Chosen strategy is simple_byte
 19005  00510C  0A02               	xorlw	2	; case 2
 19006  00510E  B4D8               	btfsc	status,2,c
 19007  005110  D7A5               	goto	l14462
 19008  005112  0A01               	xorlw	1	; case 3
 19009  005114  B4D8               	btfsc	status,2,c
 19010  005116  D7B4               	goto	l14472
 19011  005118  0A07               	xorlw	7	; case 4
 19012  00511A  B4D8               	btfsc	status,2,c
 19013  00511C  D7B9               	goto	l14476
 19014  00511E  0A01               	xorlw	1	; case 5
 19015  005120  B4D8               	btfsc	status,2,c
 19016  005122  D7C8               	goto	l14486
 19017  005124  0A03               	xorlw	3	; case 6
 19018  005126  B4D8               	btfsc	status,2,c
 19019  005128  D7D7               	goto	l14496
 19020  00512A  D7E8               	goto	l14506
 19021  00512C                     __end_of_readSupply:
 19022                           	opt stack 0
 19023                           tblptru	equ	0xFF8
 19024                           tblptrh	equ	0xFF7
 19025                           tblptrl	equ	0xFF6
 19026                           tablat	equ	0xFF5
 19027                           prodh	equ	0xFF4
 19028                           prodl	equ	0xFF3
 19029                           intcon	equ	0xFF2
 19030                           postinc0	equ	0xFEE
 19031                           wreg	equ	0xFE8
 19032                           indf1	equ	0xFE7
 19033                           postinc1	equ	0xFE6
 19034                           postdec1	equ	0xFE5
 19035                           fsr1h	equ	0xFE2
 19036                           fsr1l	equ	0xFE1
 19037                           indf2	equ	0xFDF
 19038                           postinc2	equ	0xFDE
 19039                           postdec2	equ	0xFDD
 19040                           fsr2h	equ	0xFDA
 19041                           fsr2l	equ	0xFD9
 19042                           status	equ	0xFD8
 19043                           
 19044 ;; *************** function _readKeyCableStateHandler *****************
 19045 ;; Defined at:
 19046 ;;		line 74 in file "readKeyCable.c"
 19047 ;; Parameters:    Size  Location     Type
 19048 ;;		None
 19049 ;; Auto vars:     Size  Location     Type
 19050 ;;		None
 19051 ;; Return value:  Size  Location     Type
 19052 ;;                  1    wreg      void 
 19053 ;; Registers used:
 19054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19055 ;; Tracked objects:
 19056 ;;		On entry : 0/0
 19057 ;;		On exit  : 0/0
 19058 ;;		Unchanged: 0/0
 19059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19064 ;;Total ram usage:        0 bytes
 19065 ;; Hardware stack levels used:    1
 19066 ;; Hardware stack levels required when called:   11
 19067 ;; This function calls:
 19068 ;;		_readEDDADC
 19069 ;;		_readS1StateADC
 19070 ;; This function is called by:
 19071 ;;		_currentStateHandler
 19072 ;; This function uses a non-reentrant model
 19073 ;;
 19074                           
 19075                           	psect	text100
 19076  00595A                     __ptext100:
 19077                           	opt stack 0
 19078  00595A                     _readKeyCableStateHandler:
 19079                           	opt stack 17
 19080                           
 19081                           ;readKeyCable.c: 75: switch(state.readKeyCable.current){
 19082                           
 19083                           ;incstack = 0
 19084  00595A  D044               	goto	l14458
 19085  00595C                     l14430:
 19086                           
 19087                           ;readKeyCable.c: 77: state.readKeyCable.next = 2;
 19088  00595C  0E02               	movlw	2
 19089  00595E  0101               	movlb	1	; () banked
 19090  005960  6FBB               	movwf	(_state+20)& (0+255),b
 19091                           
 19092                           ;readKeyCable.c: 78: break;
 19093  005962  0012               	return	
 19094  005964                     l14432:
 19095                           
 19096                           ; BSR set to: 1
 19097                           ;readKeyCable.c: 81: if(readEDDADC() > 0x05A){
 19098  005964  EC29  F025         	call	_readEDDADC	;wreg free
 19099  005968  0100               	movlb	0	; () banked
 19100  00596A  5183               	movf	(?_readEDDADC+1)& (0+255),w,b
 19101  00596C  E105               	bnz	u10650
 19102  00596E  0E5B               	movlw	91
 19103  005970  0100               	movlb	0	; () banked
 19104  005972  5D82               	subwf	?_readEDDADC& (0+255),w,b
 19105  005974  A0D8               	btfss	status,0,c
 19106  005976  D00C               	goto	l14440
 19107  005978                     u10650:
 19108                           
 19109                           ; BSR set to: 0
 19110                           ;readKeyCable.c: 82: if(testCounter > 5)
 19111  005978  0E05               	movlw	5
 19112  00597A  0100               	movlb	0	; () banked
 19113  00597C  65C7               	cpfsgt	_testCounter& (0+255),b
 19114  00597E  D004               	goto	l14438
 19115                           
 19116                           ; BSR set to: 0
 19117                           ;readKeyCable.c: 83: state.readKeyCable.next = 3;
 19118  005980  0E03               	movlw	3
 19119  005982  0101               	movlb	1	; () banked
 19120  005984  6FBB               	movwf	(_state+20)& (0+255),b
 19121  005986  0012               	return	
 19122  005988                     l14438:
 19123                           
 19124                           ;readKeyCable.c: 84: else
 19125                           ;readKeyCable.c: 85: state.readKeyCable.next = 2;
 19126  005988  0E02               	movlw	2
 19127  00598A  0101               	movlb	1	; () banked
 19128  00598C  6FBB               	movwf	(_state+20)& (0+255),b
 19129                           
 19130                           ; BSR set to: 1
 19131                           ;readKeyCable.c: 86: }
 19132  00598E  0012               	return	
 19133  005990                     l14440:
 19134                           
 19135                           ;readKeyCable.c: 87: else
 19136                           ;readKeyCable.c: 88: state.readKeyCable.next = 4;
 19137  005990  0E04               	movlw	4
 19138  005992  0101               	movlb	1	; () banked
 19139  005994  6FBB               	movwf	(_state+20)& (0+255),b
 19140                           
 19141                           ; BSR set to: 1
 19142                           ;readKeyCable.c: 89: break;
 19143  005996  0012               	return	
 19144  005998                     l14442:
 19145                           
 19146                           ; BSR set to: 1
 19147                           ;readKeyCable.c: 92: state.readKeyCable.next = 5;
 19148  005998  0E05               	movlw	5
 19149  00599A  0101               	movlb	1	; () banked
 19150  00599C  6FBB               	movwf	(_state+20)& (0+255),b
 19151                           
 19152                           ;readKeyCable.c: 93: break;
 19153  00599E  0012               	return	
 19154  0059A0                     l14444:
 19155                           
 19156                           ; BSR set to: 1
 19157                           ;readKeyCable.c: 96: state.readKeyCable.next = 5;
 19158  0059A0  0E05               	movlw	5
 19159  0059A2  0101               	movlb	1	; () banked
 19160  0059A4  6FBB               	movwf	(_state+20)& (0+255),b
 19161                           
 19162                           ;readKeyCable.c: 97: break;
 19163  0059A6  0012               	return	
 19164  0059A8                     l14446:
 19165                           
 19166                           ; BSR set to: 1
 19167                           ;readKeyCable.c: 100: if(readS1StateADC() > 0x010){
 19168  0059A8  ECB6  F024         	call	_readS1StateADC	;wreg free
 19169  0059AC  0100               	movlb	0	; () banked
 19170  0059AE  5183               	movf	(?_readS1StateADC+1)& (0+255),w,b
 19171  0059B0  E105               	bnz	u10670
 19172  0059B2  0E11               	movlw	17
 19173  0059B4  0100               	movlb	0	; () banked
 19174  0059B6  5D82               	subwf	?_readS1StateADC& (0+255),w,b
 19175  0059B8  A0D8               	btfss	status,0,c
 19176  0059BA  D00C               	goto	l14454
 19177  0059BC                     u10670:
 19178                           
 19179                           ; BSR set to: 0
 19180                           ;readKeyCable.c: 101: if(testCounter > 5){
 19181  0059BC  0E05               	movlw	5
 19182  0059BE  0100               	movlb	0	; () banked
 19183  0059C0  65C7               	cpfsgt	_testCounter& (0+255),b
 19184  0059C2  D004               	goto	l14452
 19185                           
 19186                           ; BSR set to: 0
 19187                           ;readKeyCable.c: 102: state.readKeyCable.next = 6;
 19188  0059C4  0E06               	movlw	6
 19189  0059C6  0101               	movlb	1	; () banked
 19190  0059C8  6FBB               	movwf	(_state+20)& (0+255),b
 19191                           
 19192                           ;readKeyCable.c: 103: }
 19193  0059CA  0012               	return	
 19194  0059CC                     l14452:
 19195                           
 19196                           ;readKeyCable.c: 104: else
 19197                           ;readKeyCable.c: 105: state.readKeyCable.next = 5;
 19198  0059CC  0E05               	movlw	5
 19199  0059CE  0101               	movlb	1	; () banked
 19200  0059D0  6FBB               	movwf	(_state+20)& (0+255),b
 19201                           
 19202                           ; BSR set to: 1
 19203                           ;readKeyCable.c: 106: }
 19204  0059D2  0012               	return	
 19205  0059D4                     l14454:
 19206                           
 19207                           ;readKeyCable.c: 107: else
 19208                           ;readKeyCable.c: 108: state.readKeyCable.next = 7;
 19209  0059D4  0E07               	movlw	7
 19210  0059D6  0101               	movlb	1	; () banked
 19211  0059D8  6FBB               	movwf	(_state+20)& (0+255),b
 19212                           
 19213                           ; BSR set to: 1
 19214                           ;readKeyCable.c: 109: break;
 19215  0059DA  0012               	return	
 19216  0059DC                     l14456:
 19217                           
 19218                           ; BSR set to: 1
 19219                           ;readKeyCable.c: 112: state.readKeyCable.next = 1;
 19220  0059DC  0E01               	movlw	1
 19221  0059DE  0101               	movlb	1	; () banked
 19222  0059E0  6FBB               	movwf	(_state+20)& (0+255),b
 19223                           
 19224                           ;readKeyCable.c: 113: }
 19225  0059E2  0012               	return	
 19226  0059E4                     l14458:
 19227  0059E4  0101               	movlb	1	; () banked
 19228  0059E6  51BA               	movf	(_state+19)& (0+255),w,b
 19229                           
 19230                           ; Switch size 1, requested type "space"
 19231                           ; Number of cases is 5, Range of values is 1 to 5
 19232                           ; switch strategies available:
 19233                           ; Name         Instructions Cycles
 19234                           ; simple_byte           16     9 (average)
 19235                           ;	Chosen strategy is simple_byte
 19236  0059E8  0A01               	xorlw	1	; case 1
 19237  0059EA  B4D8               	btfsc	status,2,c
 19238  0059EC  D7B7               	goto	l14430
 19239  0059EE  0A03               	xorlw	3	; case 2
 19240  0059F0  B4D8               	btfsc	status,2,c
 19241  0059F2  D7B8               	goto	l14432
 19242  0059F4  0A01               	xorlw	1	; case 3
 19243  0059F6  B4D8               	btfsc	status,2,c
 19244  0059F8  D7CF               	goto	l14442
 19245  0059FA  0A07               	xorlw	7	; case 4
 19246  0059FC  B4D8               	btfsc	status,2,c
 19247  0059FE  D7D0               	goto	l14444
 19248  005A00  0A01               	xorlw	1	; case 5
 19249  005A02  B4D8               	btfsc	status,2,c
 19250  005A04  D7D1               	goto	l14446
 19251  005A06  D7EA               	goto	l14456
 19252  005A08                     __end_of_readKeyCableStateHandler:
 19253                           	opt stack 0
 19254                           tblptru	equ	0xFF8
 19255                           tblptrh	equ	0xFF7
 19256                           tblptrl	equ	0xFF6
 19257                           tablat	equ	0xFF5
 19258                           prodh	equ	0xFF4
 19259                           prodl	equ	0xFF3
 19260                           intcon	equ	0xFF2
 19261                           postinc0	equ	0xFEE
 19262                           wreg	equ	0xFE8
 19263                           indf1	equ	0xFE7
 19264                           postinc1	equ	0xFE6
 19265                           postdec1	equ	0xFE5
 19266                           fsr1h	equ	0xFE2
 19267                           fsr1l	equ	0xFE1
 19268                           indf2	equ	0xFDF
 19269                           postinc2	equ	0xFDE
 19270                           postdec2	equ	0xFDD
 19271                           fsr2h	equ	0xFDA
 19272                           fsr2l	equ	0xFD9
 19273                           status	equ	0xFD8
 19274                           
 19275 ;; *************** function _readS1StateADC *****************
 19276 ;; Defined at:
 19277 ;;		line 119 in file "readKeyCable.c"
 19278 ;; Parameters:    Size  Location     Type
 19279 ;;		None
 19280 ;; Auto vars:     Size  Location     Type
 19281 ;;  ADCStore       10   38[BANK0 ] unsigned short [5]
 19282 ;;  i               2   50[BANK0 ] int 
 19283 ;;  currentVaria    2   48[BANK0 ] unsigned short 
 19284 ;; Return value:  Size  Location     Type
 19285 ;;                  2   34[BANK0 ] unsigned short 
 19286 ;; Registers used:
 19287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19288 ;; Tracked objects:
 19289 ;;		On entry : 0/0
 19290 ;;		On exit  : 0/0
 19291 ;;		Unchanged: 0/0
 19292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19293 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19294 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19295 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19296 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19297 ;;Total ram usage:       18 bytes
 19298 ;; Hardware stack levels used:    1
 19299 ;; Hardware stack levels required when called:   10
 19300 ;; This function calls:
 19301 ;;		__delay_us
 19302 ;;		_readS1StateADCSetup
 19303 ;;		_variance
 19304 ;; This function is called by:
 19305 ;;		_readKeyCableStateHandler
 19306 ;; This function uses a non-reentrant model
 19307 ;;
 19308                           
 19309                           	psect	text101
 19310  00496C                     __ptext101:
 19311                           	opt stack 0
 19312  00496C                     _readS1StateADC:
 19313                           	opt stack 17
 19314                           
 19315                           ;readKeyCable.c: 120: unsigned short ADCStore[5];
 19316                           ;readKeyCable.c: 121: unsigned short currentVariance = 1000;
 19317                           
 19318                           ; BSR set to: 1
 19319                           ;incstack = 0
 19320  00496C  0E03               	movlw	3
 19321  00496E  0100               	movlb	0	; () banked
 19322  004970  6F91               	movwf	(readS1StateADC@currentVariance+1)& (0+255),b
 19323  004972  0EE8               	movlw	232
 19324  004974  6F90               	movwf	readS1StateADC@currentVariance& (0+255),b
 19325                           
 19326                           ; BSR set to: 0
 19327                           ;readKeyCable.c: 122: int i;
 19328                           ;readKeyCable.c: 123: readS1StateADCSetup();
 19329  004976  EC11  F03A         	call	_readS1StateADCSetup	;wreg free
 19330                           
 19331                           ;readKeyCable.c: 124: _delay_us(40);
 19332  00497A  0E28               	movlw	40
 19333  00497C  EC37  F03B         	call	__delay_us
 19334                           
 19335                           ;readKeyCable.c: 125: ADRES = 0;
 19336  004980  0E00               	movlw	0
 19337  004982  6E64               	movwf	3940,c	;volatile
 19338  004984  0E00               	movlw	0
 19339  004986  6E63               	movwf	3939,c	;volatile
 19340                           
 19341                           ;readKeyCable.c: 126: while(currentVariance > 100){
 19342  004988  D054               	goto	l13978
 19343  00498A                     l1628:
 19344                           
 19345                           ; BSR set to: 0
 19346                           ;readKeyCable.c: 127: ADCON0bits.ADGO = 1;
 19347  00498A  8060               	bsf	3936,0,c	;volatile
 19348  00498C                     l1629:
 19349  00498C  B060               	btfsc	3936,0,c	;volatile
 19350  00498E  D7FE               	goto	l1629
 19351                           
 19352                           ;readKeyCable.c: 129: for(i = 0; i < 5 - 1; i++){
 19353  004990  0E00               	movlw	0
 19354  004992  0100               	movlb	0	; () banked
 19355  004994  6F93               	movwf	(readS1StateADC@i+1)& (0+255),b
 19356  004996  0E00               	movlw	0
 19357  004998  6F92               	movwf	readS1StateADC@i& (0+255),b
 19358                           
 19359                           ; BSR set to: 0
 19360  00499A  0100               	movlb	0	; () banked
 19361  00499C  BF93               	btfsc	(readS1StateADC@i+1)& (0+255),7,b
 19362  00499E  D008               	goto	l13970
 19363  0049A0  0100               	movlb	0	; () banked
 19364  0049A2  5193               	movf	(readS1StateADC@i+1)& (0+255),w,b
 19365  0049A4  E133               	bnz	l1633
 19366  0049A6  0E04               	movlw	4
 19367  0049A8  0100               	movlb	0	; () banked
 19368  0049AA  5D92               	subwf	readS1StateADC@i& (0+255),w,b
 19369  0049AC  B0D8               	btfsc	status,0,c
 19370  0049AE  D02E               	goto	l1633
 19371  0049B0                     l13970:
 19372                           
 19373                           ; BSR set to: 0
 19374                           ;readKeyCable.c: 130: ADCStore[i + 1] = ADCStore[i];
 19375  0049B0  90D8               	bcf	status,0,c
 19376  0049B2  0100               	movlb	0	; () banked
 19377  0049B4  3592               	rlcf	readS1StateADC@i& (0+255),w,b
 19378  0049B6  6ED9               	movwf	fsr2l,c
 19379  0049B8  0100               	movlb	0	; () banked
 19380  0049BA  3593               	rlcf	(readS1StateADC@i+1)& (0+255),w,b
 19381  0049BC  6EDA               	movwf	fsr2h,c
 19382  0049BE  0E86               	movlw	low readS1StateADC@ADCStore
 19383  0049C0  26D9               	addwf	fsr2l,f,c
 19384  0049C2  0E00               	movlw	high readS1StateADC@ADCStore
 19385  0049C4  22DA               	addwfc	fsr2h,f,c
 19386  0049C6  C092  F084         	movff	readS1StateADC@i,??_readS1StateADC
 19387  0049CA  C093  F085         	movff	readS1StateADC@i+1,??_readS1StateADC+1
 19388  0049CE  90D8               	bcf	status,0,c
 19389  0049D0  0100               	movlb	0	; () banked
 19390  0049D2  3784               	rlcf	??_readS1StateADC& (0+255),f,b
 19391  0049D4  3785               	rlcf	(??_readS1StateADC+1)& (0+255),f,b
 19392  0049D6  0E02               	movlw	2
 19393  0049D8  0100               	movlb	0	; () banked
 19394  0049DA  2784               	addwf	??_readS1StateADC& (0+255),f,b
 19395  0049DC  0E00               	movlw	0
 19396  0049DE  2385               	addwfc	(??_readS1StateADC+1)& (0+255),f,b
 19397  0049E0  0E86               	movlw	low readS1StateADC@ADCStore
 19398  0049E2  0100               	movlb	0	; () banked
 19399  0049E4  2584               	addwf	??_readS1StateADC& (0+255),w,b
 19400  0049E6  6EE1               	movwf	fsr1l,c
 19401  0049E8  0E00               	movlw	high readS1StateADC@ADCStore
 19402  0049EA  0100               	movlb	0	; () banked
 19403  0049EC  2185               	addwfc	(??_readS1StateADC+1)& (0+255),w,b
 19404  0049EE  6EE2               	movwf	fsr1h,c
 19405  0049F0  CFDE FFE6          	movff	postinc2,postinc1
 19406  0049F4  CFDD FFE5          	movff	postdec2,postdec1
 19407                           
 19408                           ; BSR set to: 0
 19409  0049F8  0100               	movlb	0	; () banked
 19410  0049FA  4B92               	infsnz	readS1StateADC@i& (0+255),f,b
 19411  0049FC  2B93               	incf	(readS1StateADC@i+1)& (0+255),f,b
 19412                           
 19413                           ; BSR set to: 0
 19414  0049FE  0100               	movlb	0	; () banked
 19415  004A00  BF93               	btfsc	(readS1StateADC@i+1)& (0+255),7,b
 19416  004A02  D7D6               	goto	l13970
 19417  004A04  0100               	movlb	0	; () banked
 19418  004A06  5193               	movf	(readS1StateADC@i+1)& (0+255),w,b
 19419  004A08  E101               	bnz	u10140
 19420  004A0A  D7CD               	goto	L14
 19421  004A0C                     u10140:
 19422  004A0C                     l1633:
 19423                           
 19424                           ; BSR set to: 0
 19425                           ;readKeyCable.c: 131: }
 19426                           ;readKeyCable.c: 132: ADCStore[0] = ADRES;
 19427  004A0C  CF63 F086          	movff	3939,readS1StateADC@ADCStore	;volatile
 19428  004A10  CF64 F087          	movff	3940,readS1StateADC@ADCStore+1	;volatile
 19429                           
 19430                           ; BSR set to: 0
 19431                           ;readKeyCable.c: 133: currentVariance = variance(ADCStore, 5);
 19432  004A14  0E86               	movlw	low readS1StateADC@ADCStore
 19433  004A16  0100               	movlb	0	; () banked
 19434  004A18  6F6D               	movwf	variance@values& (0+255),b
 19435  004A1A  0E00               	movlw	high readS1StateADC@ADCStore
 19436  004A1C  0100               	movlb	0	; () banked
 19437  004A1E  6F6E               	movwf	(variance@values+1)& (0+255),b
 19438  004A20  0E05               	movlw	5
 19439  004A22  0100               	movlb	0	; () banked
 19440  004A24  6F6F               	movwf	variance@sampleSize& (0+255),b
 19441  004A26  EC90  F013         	call	_variance	;wreg free
 19442  004A2A  C06D  F090         	movff	?_variance,readS1StateADC@currentVariance
 19443  004A2E  C06E  F091         	movff	?_variance+1,readS1StateADC@currentVariance+1
 19444  004A32                     l13978:
 19445  004A32  0100               	movlb	0	; () banked
 19446  004A34  5191               	movf	(readS1StateADC@currentVariance+1)& (0+255),w,b
 19447  004A36  E1A9               	bnz	l1628
 19448  004A38  0E65               	movlw	101
 19449  004A3A  0100               	movlb	0	; () banked
 19450  004A3C  5D90               	subwf	readS1StateADC@currentVariance& (0+255),w,b
 19451  004A3E  B0D8               	btfsc	status,0,c
 19452  004A40  D7A4               	goto	l1628
 19453                           
 19454                           ; BSR set to: 0
 19455                           ;readKeyCable.c: 134: }
 19456                           ;readKeyCable.c: 135: ADCON0bits.ADON = 0;
 19457  004A42  9E60               	bcf	3936,7,c	;volatile
 19458                           
 19459                           ;readKeyCable.c: 136: FVRCONbits.FVREN = 0;
 19460  004A44  010E               	movlb	14	; () banked
 19461  004A46  9FC4               	bcf	196,7,b	;volatile
 19462                           
 19463                           ;readKeyCable.c: 138: return ADRES;
 19464  004A48  CF63 F082          	movff	3939,?_readS1StateADC	;volatile
 19465  004A4C  CF64 F083          	movff	3940,?_readS1StateADC+1	;volatile
 19466                           
 19467                           ; BSR set to: 14
 19468  004A50  0012               	return		;funcret
 19469  004A52                     __end_of_readS1StateADC:
 19470                           	opt stack 0
 19471                           tblptru	equ	0xFF8
 19472                           tblptrh	equ	0xFF7
 19473                           tblptrl	equ	0xFF6
 19474                           tablat	equ	0xFF5
 19475                           prodh	equ	0xFF4
 19476                           prodl	equ	0xFF3
 19477                           intcon	equ	0xFF2
 19478                           postinc0	equ	0xFEE
 19479                           wreg	equ	0xFE8
 19480                           indf1	equ	0xFE7
 19481                           postinc1	equ	0xFE6
 19482                           postdec1	equ	0xFE5
 19483                           fsr1h	equ	0xFE2
 19484                           fsr1l	equ	0xFE1
 19485                           indf2	equ	0xFDF
 19486                           postinc2	equ	0xFDE
 19487                           postdec2	equ	0xFDD
 19488                           fsr2h	equ	0xFDA
 19489                           fsr2l	equ	0xFD9
 19490                           status	equ	0xFD8
 19491                           
 19492 ;; *************** function _readS1StateADCSetup *****************
 19493 ;; Defined at:
 19494 ;;		line 176 in file "readKeyCable.c"
 19495 ;; Parameters:    Size  Location     Type
 19496 ;;		None
 19497 ;; Auto vars:     Size  Location     Type
 19498 ;;		None
 19499 ;; Return value:  Size  Location     Type
 19500 ;;                  1    wreg      void 
 19501 ;; Registers used:
 19502 ;;		wreg, status,2, status,0, cstack
 19503 ;; Tracked objects:
 19504 ;;		On entry : 0/0
 19505 ;;		On exit  : 0/0
 19506 ;;		Unchanged: 0/0
 19507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19512 ;;Total ram usage:        0 bytes
 19513 ;; Hardware stack levels used:    1
 19514 ;; Hardware stack levels required when called:    9
 19515 ;; This function calls:
 19516 ;;		__delay_us
 19517 ;; This function is called by:
 19518 ;;		_readS1StateADC
 19519 ;; This function uses a non-reentrant model
 19520 ;;
 19521                           
 19522                           	psect	text102
 19523  007422                     __ptext102:
 19524                           	opt stack 0
 19525  007422                     _readS1StateADCSetup:
 19526                           	opt stack 17
 19527                           
 19528                           ;readKeyCable.c: 177: FVRCON = 0b00000010;
 19529                           
 19530                           ; BSR set to: 14
 19531                           ;incstack = 0
 19532  007422  0E02               	movlw	2
 19533  007424  010E               	movlb	14	; () banked
 19534  007426  6FC4               	movwf	196,b	;volatile
 19535                           
 19536                           ; BSR set to: 14
 19537                           ;readKeyCable.c: 178: FVRCONbits.FVREN = 1;
 19538  007428  010E               	movlb	14	; () banked
 19539  00742A  8FC4               	bsf	196,7,b	;volatile
 19540                           
 19541                           ; BSR set to: 14
 19542                           ;readKeyCable.c: 179: _delay_us(40);
 19543  00742C  0E28               	movlw	40
 19544  00742E  EC37  F03B         	call	__delay_us
 19545                           
 19546                           ;readKeyCable.c: 181: ADCON1 = 0b01110000;
 19547  007432  0E70               	movlw	112
 19548  007434  010F               	movlb	15	; () banked
 19549  007436  6F59               	movwf	89,b	;volatile
 19550                           
 19551                           ; BSR set to: 15
 19552                           ;readKeyCable.c: 182: ADPCH = 0b00000011;
 19553  007438  0E03               	movlw	3
 19554  00743A  010F               	movlb	15	; () banked
 19555  00743C  6F5F               	movwf	95,b	;volatile
 19556                           
 19557                           ; BSR set to: 15
 19558                           ;readKeyCable.c: 183: ADCLK = 0b00111111;
 19559  00743E  0E3F               	movlw	63
 19560  007440  010F               	movlb	15	; () banked
 19561  007442  6F57               	movwf	87,b	;volatile
 19562                           
 19563                           ; BSR set to: 15
 19564                           ;readKeyCable.c: 184: ADREF = 0b00000011;
 19565  007444  0E03               	movlw	3
 19566  007446  010F               	movlb	15	; () banked
 19567  007448  6F58               	movwf	88,b	;volatile
 19568                           
 19569                           ; BSR set to: 15
 19570                           ;readKeyCable.c: 185: ADCON0bits.ADFM = 1;
 19571  00744A  8460               	bsf	3936,2,c	;volatile
 19572                           
 19573                           ; BSR set to: 15
 19574                           ;readKeyCable.c: 186: ADCON0bits.ADON = 1;
 19575  00744C  8E60               	bsf	3936,7,c	;volatile
 19576                           
 19577                           ; BSR set to: 15
 19578  00744E  0012               	return		;funcret
 19579  007450                     __end_of_readS1StateADCSetup:
 19580                           	opt stack 0
 19581                           tblptru	equ	0xFF8
 19582                           tblptrh	equ	0xFF7
 19583                           tblptrl	equ	0xFF6
 19584                           tablat	equ	0xFF5
 19585                           prodh	equ	0xFF4
 19586                           prodl	equ	0xFF3
 19587                           intcon	equ	0xFF2
 19588                           postinc0	equ	0xFEE
 19589                           wreg	equ	0xFE8
 19590                           indf1	equ	0xFE7
 19591                           postinc1	equ	0xFE6
 19592                           postdec1	equ	0xFE5
 19593                           fsr1h	equ	0xFE2
 19594                           fsr1l	equ	0xFE1
 19595                           indf2	equ	0xFDF
 19596                           postinc2	equ	0xFDE
 19597                           postdec2	equ	0xFDD
 19598                           fsr2h	equ	0xFDA
 19599                           fsr2l	equ	0xFD9
 19600                           status	equ	0xFD8
 19601                           
 19602 ;; *************** function _readEDDADC *****************
 19603 ;; Defined at:
 19604 ;;		line 141 in file "readKeyCable.c"
 19605 ;; Parameters:    Size  Location     Type
 19606 ;;		None
 19607 ;; Auto vars:     Size  Location     Type
 19608 ;;  ADCStore       10   38[BANK0 ] unsigned short [5]
 19609 ;;  i               2   50[BANK0 ] int 
 19610 ;;  currentVaria    2   48[BANK0 ] unsigned short 
 19611 ;; Return value:  Size  Location     Type
 19612 ;;                  2   34[BANK0 ] unsigned short 
 19613 ;; Registers used:
 19614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19615 ;; Tracked objects:
 19616 ;;		On entry : 0/0
 19617 ;;		On exit  : 0/0
 19618 ;;		Unchanged: 0/0
 19619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19620 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19621 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19622 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19623 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19624 ;;Total ram usage:       18 bytes
 19625 ;; Hardware stack levels used:    1
 19626 ;; Hardware stack levels required when called:   10
 19627 ;; This function calls:
 19628 ;;		__delay_us
 19629 ;;		_readEDDADCSetup
 19630 ;;		_variance
 19631 ;; This function is called by:
 19632 ;;		_readKeyCableStateHandler
 19633 ;; This function uses a non-reentrant model
 19634 ;;
 19635                           
 19636                           	psect	text103
 19637  004A52                     __ptext103:
 19638                           	opt stack 0
 19639  004A52                     _readEDDADC:
 19640                           	opt stack 17
 19641                           
 19642                           ;readKeyCable.c: 142: unsigned short ADCStore[5];
 19643                           ;readKeyCable.c: 143: unsigned short currentVariance = 1000;
 19644                           
 19645                           ; BSR set to: 15
 19646                           ;incstack = 0
 19647  004A52  0E03               	movlw	3
 19648  004A54  0100               	movlb	0	; () banked
 19649  004A56  6F91               	movwf	(readEDDADC@currentVariance+1)& (0+255),b
 19650  004A58  0EE8               	movlw	232
 19651  004A5A  6F90               	movwf	readEDDADC@currentVariance& (0+255),b
 19652                           
 19653                           ; BSR set to: 0
 19654                           ;readKeyCable.c: 144: int i;
 19655                           ;readKeyCable.c: 145: readEDDADCSetup();
 19656  004A5C  EC28  F03A         	call	_readEDDADCSetup	;wreg free
 19657                           
 19658                           ;readKeyCable.c: 146: _delay_us(40);
 19659  004A60  0E28               	movlw	40
 19660  004A62  EC37  F03B         	call	__delay_us
 19661                           
 19662                           ;readKeyCable.c: 147: ADRES = 0;
 19663  004A66  0E00               	movlw	0
 19664  004A68  6E64               	movwf	3940,c	;volatile
 19665  004A6A  0E00               	movlw	0
 19666  004A6C  6E63               	movwf	3939,c	;volatile
 19667                           
 19668                           ;readKeyCable.c: 148: while(currentVariance > 100){
 19669  004A6E  D054               	goto	l13956
 19670  004A70                     l1639:
 19671                           
 19672                           ; BSR set to: 0
 19673                           ;readKeyCable.c: 149: ADCON0bits.ADGO = 1;
 19674  004A70  8060               	bsf	3936,0,c	;volatile
 19675  004A72                     l1640:
 19676  004A72  B060               	btfsc	3936,0,c	;volatile
 19677  004A74  D7FE               	goto	l1640
 19678                           
 19679                           ;readKeyCable.c: 151: for(i = 0; i < 5 - 1; i++){
 19680  004A76  0E00               	movlw	0
 19681  004A78  0100               	movlb	0	; () banked
 19682  004A7A  6F93               	movwf	(readEDDADC@i+1)& (0+255),b
 19683  004A7C  0E00               	movlw	0
 19684  004A7E  6F92               	movwf	readEDDADC@i& (0+255),b
 19685                           
 19686                           ; BSR set to: 0
 19687  004A80  0100               	movlb	0	; () banked
 19688  004A82  BF93               	btfsc	(readEDDADC@i+1)& (0+255),7,b
 19689  004A84  D008               	goto	l13948
 19690  004A86  0100               	movlb	0	; () banked
 19691  004A88  5193               	movf	(readEDDADC@i+1)& (0+255),w,b
 19692  004A8A  E133               	bnz	l1644
 19693  004A8C  0E04               	movlw	4
 19694  004A8E  0100               	movlb	0	; () banked
 19695  004A90  5D92               	subwf	readEDDADC@i& (0+255),w,b
 19696  004A92  B0D8               	btfsc	status,0,c
 19697  004A94  D02E               	goto	l1644
 19698  004A96                     l13948:
 19699                           
 19700                           ; BSR set to: 0
 19701                           ;readKeyCable.c: 152: ADCStore[i + 1] = ADCStore[i];
 19702  004A96  90D8               	bcf	status,0,c
 19703  004A98  0100               	movlb	0	; () banked
 19704  004A9A  3592               	rlcf	readEDDADC@i& (0+255),w,b
 19705  004A9C  6ED9               	movwf	fsr2l,c
 19706  004A9E  0100               	movlb	0	; () banked
 19707  004AA0  3593               	rlcf	(readEDDADC@i+1)& (0+255),w,b
 19708  004AA2  6EDA               	movwf	fsr2h,c
 19709  004AA4  0E86               	movlw	low readEDDADC@ADCStore
 19710  004AA6  26D9               	addwf	fsr2l,f,c
 19711  004AA8  0E00               	movlw	high readEDDADC@ADCStore
 19712  004AAA  22DA               	addwfc	fsr2h,f,c
 19713  004AAC  C092  F084         	movff	readEDDADC@i,??_readEDDADC
 19714  004AB0  C093  F085         	movff	readEDDADC@i+1,??_readEDDADC+1
 19715  004AB4  90D8               	bcf	status,0,c
 19716  004AB6  0100               	movlb	0	; () banked
 19717  004AB8  3784               	rlcf	??_readEDDADC& (0+255),f,b
 19718  004ABA  3785               	rlcf	(??_readEDDADC+1)& (0+255),f,b
 19719  004ABC  0E02               	movlw	2
 19720  004ABE  0100               	movlb	0	; () banked
 19721  004AC0  2784               	addwf	??_readEDDADC& (0+255),f,b
 19722  004AC2  0E00               	movlw	0
 19723  004AC4  2385               	addwfc	(??_readEDDADC+1)& (0+255),f,b
 19724  004AC6  0E86               	movlw	low readEDDADC@ADCStore
 19725  004AC8  0100               	movlb	0	; () banked
 19726  004ACA  2584               	addwf	??_readEDDADC& (0+255),w,b
 19727  004ACC  6EE1               	movwf	fsr1l,c
 19728  004ACE  0E00               	movlw	high readEDDADC@ADCStore
 19729  004AD0  0100               	movlb	0	; () banked
 19730  004AD2  2185               	addwfc	(??_readEDDADC+1)& (0+255),w,b
 19731  004AD4  6EE2               	movwf	fsr1h,c
 19732  004AD6  CFDE FFE6          	movff	postinc2,postinc1
 19733  004ADA  CFDD FFE5          	movff	postdec2,postdec1
 19734                           
 19735                           ; BSR set to: 0
 19736  004ADE  0100               	movlb	0	; () banked
 19737  004AE0  4B92               	infsnz	readEDDADC@i& (0+255),f,b
 19738  004AE2  2B93               	incf	(readEDDADC@i+1)& (0+255),f,b
 19739                           
 19740                           ; BSR set to: 0
 19741  004AE4  0100               	movlb	0	; () banked
 19742  004AE6  BF93               	btfsc	(readEDDADC@i+1)& (0+255),7,b
 19743  004AE8  D7D6               	goto	l13948
 19744  004AEA  0100               	movlb	0	; () banked
 19745  004AEC  5193               	movf	(readEDDADC@i+1)& (0+255),w,b
 19746  004AEE  E101               	bnz	u10100
 19747  004AF0  D7CD               	goto	L15
 19748  004AF2                     u10100:
 19749  004AF2                     l1644:
 19750                           
 19751                           ; BSR set to: 0
 19752                           ;readKeyCable.c: 153: }
 19753                           ;readKeyCable.c: 154: ADCStore[0] = ADRES;
 19754  004AF2  CF63 F086          	movff	3939,readEDDADC@ADCStore	;volatile
 19755  004AF6  CF64 F087          	movff	3940,readEDDADC@ADCStore+1	;volatile
 19756                           
 19757                           ; BSR set to: 0
 19758                           ;readKeyCable.c: 155: currentVariance = variance(ADCStore, 5);
 19759  004AFA  0E86               	movlw	low readEDDADC@ADCStore
 19760  004AFC  0100               	movlb	0	; () banked
 19761  004AFE  6F6D               	movwf	variance@values& (0+255),b
 19762  004B00  0E00               	movlw	high readEDDADC@ADCStore
 19763  004B02  0100               	movlb	0	; () banked
 19764  004B04  6F6E               	movwf	(variance@values+1)& (0+255),b
 19765  004B06  0E05               	movlw	5
 19766  004B08  0100               	movlb	0	; () banked
 19767  004B0A  6F6F               	movwf	variance@sampleSize& (0+255),b
 19768  004B0C  EC90  F013         	call	_variance	;wreg free
 19769  004B10  C06D  F090         	movff	?_variance,readEDDADC@currentVariance
 19770  004B14  C06E  F091         	movff	?_variance+1,readEDDADC@currentVariance+1
 19771  004B18                     l13956:
 19772  004B18  0100               	movlb	0	; () banked
 19773  004B1A  5191               	movf	(readEDDADC@currentVariance+1)& (0+255),w,b
 19774  004B1C  E1A9               	bnz	l1639
 19775  004B1E  0E65               	movlw	101
 19776  004B20  0100               	movlb	0	; () banked
 19777  004B22  5D90               	subwf	readEDDADC@currentVariance& (0+255),w,b
 19778  004B24  B0D8               	btfsc	status,0,c
 19779  004B26  D7A4               	goto	l1639
 19780                           
 19781                           ; BSR set to: 0
 19782                           ;readKeyCable.c: 156: }
 19783                           ;readKeyCable.c: 157: ADCON0bits.ADON = 0;
 19784  004B28  9E60               	bcf	3936,7,c	;volatile
 19785                           
 19786                           ;readKeyCable.c: 158: FVRCONbits.FVREN = 0;
 19787  004B2A  010E               	movlb	14	; () banked
 19788  004B2C  9FC4               	bcf	196,7,b	;volatile
 19789                           
 19790                           ;readKeyCable.c: 160: return ADRES;
 19791  004B2E  CF63 F082          	movff	3939,?_readEDDADC	;volatile
 19792  004B32  CF64 F083          	movff	3940,?_readEDDADC+1	;volatile
 19793                           
 19794                           ; BSR set to: 14
 19795  004B36  0012               	return		;funcret
 19796  004B38                     __end_of_readEDDADC:
 19797                           	opt stack 0
 19798                           tblptru	equ	0xFF8
 19799                           tblptrh	equ	0xFF7
 19800                           tblptrl	equ	0xFF6
 19801                           tablat	equ	0xFF5
 19802                           prodh	equ	0xFF4
 19803                           prodl	equ	0xFF3
 19804                           intcon	equ	0xFF2
 19805                           postinc0	equ	0xFEE
 19806                           wreg	equ	0xFE8
 19807                           indf1	equ	0xFE7
 19808                           postinc1	equ	0xFE6
 19809                           postdec1	equ	0xFE5
 19810                           fsr1h	equ	0xFE2
 19811                           fsr1l	equ	0xFE1
 19812                           indf2	equ	0xFDF
 19813                           postinc2	equ	0xFDE
 19814                           postdec2	equ	0xFDD
 19815                           fsr2h	equ	0xFDA
 19816                           fsr2l	equ	0xFD9
 19817                           status	equ	0xFD8
 19818                           
 19819 ;; *************** function _variance *****************
 19820 ;; Defined at:
 19821 ;;		line 173 in file "peripherals.c"
 19822 ;; Parameters:    Size  Location     Type
 19823 ;;  values          2   13[BANK0 ] PTR unsigned short 
 19824 ;;		 -> readEarthADC@ADCStore(10), readCableADC@ADCStore(10), readEDDADC@ADCStore(10), readS1StateADC@ADCStore(10), 
 19825 ;;		 -> readBatteryADC@ADCStore(10), 
 19826 ;;  sampleSize      1   15[BANK0 ] unsigned char 
 19827 ;; Auto vars:     Size  Location     Type
 19828 ;;  i               2   32[BANK0 ] int 
 19829 ;;  i               2   26[BANK0 ] int 
 19830 ;;  sum             4   28[BANK0 ] unsigned long 
 19831 ;;  mean            2   24[BANK0 ] unsigned short 
 19832 ;; Return value:  Size  Location     Type
 19833 ;;                  2   13[BANK0 ] unsigned short 
 19834 ;; Registers used:
 19835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19836 ;; Tracked objects:
 19837 ;;		On entry : 0/0
 19838 ;;		On exit  : 0/0
 19839 ;;		Unchanged: 0/0
 19840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19841 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19842 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19843 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19844 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19845 ;;Total ram usage:       21 bytes
 19846 ;; Hardware stack levels used:    1
 19847 ;; Hardware stack levels required when called:    9
 19848 ;; This function calls:
 19849 ;;		___lldiv
 19850 ;;		___wmul
 19851 ;; This function is called by:
 19852 ;;		_readBatteryADC
 19853 ;;		_readS1StateADC
 19854 ;;		_readEDDADC
 19855 ;;		_readCableADC
 19856 ;;		_readEarthADC
 19857 ;; This function uses a non-reentrant model
 19858 ;;
 19859                           
 19860                           	psect	text104
 19861  002720                     __ptext104:
 19862                           	opt stack 0
 19863  002720                     _variance:
 19864                           	opt stack 17
 19865                           
 19866                           ;peripherals.c: 174: unsigned long sum = 0;
 19867                           
 19868                           ; BSR set to: 14
 19869                           ;incstack = 0
 19870  002720  0E00               	movlw	0
 19871  002722  0100               	movlb	0	; () banked
 19872  002724  6F7C               	movwf	variance@sum& (0+255),b
 19873  002726  0E00               	movlw	0
 19874  002728  6F7D               	movwf	(variance@sum+1)& (0+255),b
 19875  00272A  0E00               	movlw	0
 19876  00272C  6F7E               	movwf	(variance@sum+2)& (0+255),b
 19877  00272E  0E00               	movlw	0
 19878  002730  6F7F               	movwf	(variance@sum+3)& (0+255),b
 19879                           
 19880                           ;peripherals.c: 175: unsigned short mean = 0;
 19881  002732  0E00               	movlw	0
 19882  002734  0100               	movlb	0	; () banked
 19883  002736  6F79               	movwf	(variance@mean+1)& (0+255),b
 19884  002738  0E00               	movlw	0
 19885  00273A  6F78               	movwf	variance@mean& (0+255),b
 19886                           
 19887                           ;peripherals.c: 177: for (int i = 0; i < sampleSize; i++){
 19888  00273C  0E00               	movlw	0
 19889  00273E  0100               	movlb	0	; () banked
 19890  002740  6F7B               	movwf	(variance@i+1)& (0+255),b
 19891  002742  0E00               	movlw	0
 19892  002744  6F7A               	movwf	variance@i& (0+255),b
 19893  002746  D022               	goto	l13168
 19894  002748                     l13164:
 19895                           
 19896                           ; BSR set to: 0
 19897                           ;peripherals.c: 178: sum += values[i];
 19898  002748  90D8               	bcf	status,0,c
 19899  00274A  0100               	movlb	0	; () banked
 19900  00274C  357A               	rlcf	variance@i& (0+255),w,b
 19901  00274E  6ED9               	movwf	fsr2l,c
 19902  002750  0100               	movlb	0	; () banked
 19903  002752  357B               	rlcf	(variance@i+1)& (0+255),w,b
 19904  002754  6EDA               	movwf	fsr2h,c
 19905  002756  0100               	movlb	0	; () banked
 19906  002758  516D               	movf	variance@values& (0+255),w,b
 19907  00275A  26D9               	addwf	fsr2l,f,c
 19908  00275C  0100               	movlb	0	; () banked
 19909  00275E  516E               	movf	(variance@values+1)& (0+255),w,b
 19910  002760  22DA               	addwfc	fsr2h,f,c
 19911  002762  CFDE F070          	movff	postinc2,??_variance
 19912  002766  CFDD F071          	movff	postdec2,??_variance+1
 19913  00276A  0100               	movlb	0	; () banked
 19914  00276C  5170               	movf	??_variance& (0+255),w,b
 19915  00276E  0100               	movlb	0	; () banked
 19916  002770  277C               	addwf	variance@sum& (0+255),f,b
 19917  002772  0100               	movlb	0	; () banked
 19918  002774  5171               	movf	(??_variance+1)& (0+255),w,b
 19919  002776  0100               	movlb	0	; () banked
 19920  002778  237D               	addwfc	(variance@sum+1)& (0+255),f,b
 19921  00277A  0E00               	movlw	0
 19922  00277C  0100               	movlb	0	; () banked
 19923  00277E  237E               	addwfc	(variance@sum+2)& (0+255),f,b
 19924  002780  0E00               	movlw	0
 19925  002782  0100               	movlb	0	; () banked
 19926  002784  237F               	addwfc	(variance@sum+3)& (0+255),f,b
 19927                           
 19928                           ; BSR set to: 0
 19929  002786  0100               	movlb	0	; () banked
 19930  002788  4B7A               	infsnz	variance@i& (0+255),f,b
 19931  00278A  2B7B               	incf	(variance@i+1)& (0+255),f,b
 19932  00278C                     l13168:
 19933                           
 19934                           ; BSR set to: 0
 19935  00278C  0100               	movlb	0	; () banked
 19936  00278E  516F               	movf	variance@sampleSize& (0+255),w,b
 19937  002790  0100               	movlb	0	; () banked
 19938  002792  6F70               	movwf	??_variance& (0+255),b
 19939  002794  6B71               	clrf	(??_variance+1)& (0+255),b
 19940  002796  0100               	movlb	0	; () banked
 19941  002798  5170               	movf	??_variance& (0+255),w,b
 19942  00279A  0100               	movlb	0	; () banked
 19943  00279C  5D7A               	subwf	variance@i& (0+255),w,b
 19944  00279E  0100               	movlb	0	; () banked
 19945  0027A0  517B               	movf	(variance@i+1)& (0+255),w,b
 19946  0027A2  0A80               	xorlw	128
 19947  0027A4  0100               	movlb	0	; () banked
 19948  0027A6  6F72               	movwf	(??_variance+2)& (0+255),b
 19949  0027A8  0100               	movlb	0	; () banked
 19950  0027AA  5171               	movf	(??_variance+1)& (0+255),w,b
 19951  0027AC  0A80               	xorlw	128
 19952  0027AE  0100               	movlb	0	; () banked
 19953  0027B0  5972               	subwfb	(??_variance+2)& (0+255),w,b
 19954  0027B2  A0D8               	btfss	status,0,c
 19955  0027B4  D7C9               	goto	l13164
 19956                           
 19957                           ; BSR set to: 0
 19958                           ;peripherals.c: 179: }
 19959                           ;peripherals.c: 180: mean = sum/sampleSize;
 19960                           
 19961                           ; BSR set to: 0
 19962  0027B6  C07C  F060         	movff	variance@sum,___lldiv@dividend
 19963  0027BA  C07D  F061         	movff	variance@sum+1,___lldiv@dividend+1
 19964  0027BE  C07E  F062         	movff	variance@sum+2,___lldiv@dividend+2
 19965  0027C2  C07F  F063         	movff	variance@sum+3,___lldiv@dividend+3
 19966  0027C6  0100               	movlb	0	; () banked
 19967  0027C8  516F               	movf	variance@sampleSize& (0+255),w,b
 19968  0027CA  0100               	movlb	0	; () banked
 19969  0027CC  6F64               	movwf	___lldiv@divisor& (0+255),b
 19970  0027CE  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
 19971  0027D0  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 19972  0027D2  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 19973  0027D4  ECE7  F02A         	call	___lldiv	;wreg free
 19974  0027D8  C060  F078         	movff	?___lldiv,variance@mean
 19975  0027DC  C061  F079         	movff	?___lldiv+1,variance@mean+1
 19976                           
 19977                           ;peripherals.c: 181: sum = 0;
 19978  0027E0  0E00               	movlw	0
 19979  0027E2  0100               	movlb	0	; () banked
 19980  0027E4  6F7C               	movwf	variance@sum& (0+255),b
 19981  0027E6  0E00               	movlw	0
 19982  0027E8  6F7D               	movwf	(variance@sum+1)& (0+255),b
 19983  0027EA  0E00               	movlw	0
 19984  0027EC  6F7E               	movwf	(variance@sum+2)& (0+255),b
 19985  0027EE  0E00               	movlw	0
 19986  0027F0  6F7F               	movwf	(variance@sum+3)& (0+255),b
 19987                           
 19988                           ; BSR set to: 0
 19989                           ;peripherals.c: 183: for (int i = 0; i < sampleSize; i++){
 19990  0027F2  0E00               	movlw	0
 19991  0027F4  0100               	movlb	0	; () banked
 19992  0027F6  6F81               	movwf	(variance@i_1220+1)& (0+255),b
 19993  0027F8  0E00               	movlw	0
 19994  0027FA  6F80               	movwf	variance@i_1220& (0+255),b
 19995  0027FC  D05F               	goto	l13180
 19996  0027FE                     l13176:
 19997                           
 19998                           ; BSR set to: 0
 19999                           ;peripherals.c: 184: sum += (values[i] - mean)*(values[i] - mean);
 20000  0027FE  90D8               	bcf	status,0,c
 20001  002800  0100               	movlb	0	; () banked
 20002  002802  3580               	rlcf	variance@i_1220& (0+255),w,b
 20003  002804  6ED9               	movwf	fsr2l,c
 20004  002806  0100               	movlb	0	; () banked
 20005  002808  3581               	rlcf	(variance@i_1220+1)& (0+255),w,b
 20006  00280A  6EDA               	movwf	fsr2h,c
 20007  00280C  0100               	movlb	0	; () banked
 20008  00280E  516D               	movf	variance@values& (0+255),w,b
 20009  002810  26D9               	addwf	fsr2l,f,c
 20010  002812  0100               	movlb	0	; () banked
 20011  002814  516E               	movf	(variance@values+1)& (0+255),w,b
 20012  002816  22DA               	addwfc	fsr2h,f,c
 20013  002818  CFDE F070          	movff	postinc2,??_variance
 20014  00281C  CFDD F071          	movff	postdec2,??_variance+1
 20015  002820  C078  F072         	movff	variance@mean,??_variance+2
 20016  002824  C079  F073         	movff	variance@mean+1,??_variance+3
 20017  002828  0100               	movlb	0	; () banked
 20018  00282A  1F72               	comf	(??_variance+2)& (0+255),f,b
 20019  00282C  1F73               	comf	(??_variance+3)& (0+255),f,b
 20020  00282E  4B72               	infsnz	(??_variance+2)& (0+255),f,b
 20021  002830  2B73               	incf	(??_variance+3)& (0+255),f,b
 20022  002832  0100               	movlb	0	; () banked
 20023  002834  5170               	movf	??_variance& (0+255),w,b
 20024  002836  0100               	movlb	0	; () banked
 20025  002838  2572               	addwf	(??_variance+2)& (0+255),w,b
 20026  00283A  0100               	movlb	0	; () banked
 20027  00283C  6F60               	movwf	___wmul@multiplier& (0+255),b
 20028  00283E  0100               	movlb	0	; () banked
 20029  002840  5171               	movf	(??_variance+1)& (0+255),w,b
 20030  002842  0100               	movlb	0	; () banked
 20031  002844  2173               	addwfc	(??_variance+3)& (0+255),w,b
 20032  002846  0100               	movlb	0	; () banked
 20033  002848  6F61               	movwf	(___wmul@multiplier+1)& (0+255),b
 20034  00284A  90D8               	bcf	status,0,c
 20035  00284C  0100               	movlb	0	; () banked
 20036  00284E  3580               	rlcf	variance@i_1220& (0+255),w,b
 20037  002850  6ED9               	movwf	fsr2l,c
 20038  002852  0100               	movlb	0	; () banked
 20039  002854  3581               	rlcf	(variance@i_1220+1)& (0+255),w,b
 20040  002856  6EDA               	movwf	fsr2h,c
 20041  002858  0100               	movlb	0	; () banked
 20042  00285A  516D               	movf	variance@values& (0+255),w,b
 20043  00285C  26D9               	addwf	fsr2l,f,c
 20044  00285E  0100               	movlb	0	; () banked
 20045  002860  516E               	movf	(variance@values+1)& (0+255),w,b
 20046  002862  22DA               	addwfc	fsr2h,f,c
 20047  002864  CFDE F074          	movff	postinc2,??_variance+4
 20048  002868  CFDD F075          	movff	postdec2,??_variance+5
 20049  00286C  C078  F076         	movff	variance@mean,??_variance+6
 20050  002870  C079  F077         	movff	variance@mean+1,??_variance+7
 20051  002874  0100               	movlb	0	; () banked
 20052  002876  1F76               	comf	(??_variance+6)& (0+255),f,b
 20053  002878  1F77               	comf	(??_variance+7)& (0+255),f,b
 20054  00287A  4B76               	infsnz	(??_variance+6)& (0+255),f,b
 20055  00287C  2B77               	incf	(??_variance+7)& (0+255),f,b
 20056  00287E  0100               	movlb	0	; () banked
 20057  002880  5174               	movf	(??_variance+4)& (0+255),w,b
 20058  002882  0100               	movlb	0	; () banked
 20059  002884  2576               	addwf	(??_variance+6)& (0+255),w,b
 20060  002886  0100               	movlb	0	; () banked
 20061  002888  6F62               	movwf	___wmul@multiplicand& (0+255),b
 20062  00288A  0100               	movlb	0	; () banked
 20063  00288C  5175               	movf	(??_variance+5)& (0+255),w,b
 20064  00288E  0100               	movlb	0	; () banked
 20065  002890  2177               	addwfc	(??_variance+7)& (0+255),w,b
 20066  002892  0100               	movlb	0	; () banked
 20067  002894  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20068  002896  ECB3  F038         	call	___wmul	;wreg free
 20069  00289A  0100               	movlb	0	; () banked
 20070  00289C  5160               	movf	?___wmul& (0+255),w,b
 20071  00289E  0100               	movlb	0	; () banked
 20072  0028A0  277C               	addwf	variance@sum& (0+255),f,b
 20073  0028A2  0100               	movlb	0	; () banked
 20074  0028A4  5161               	movf	(?___wmul+1)& (0+255),w,b
 20075  0028A6  0100               	movlb	0	; () banked
 20076  0028A8  237D               	addwfc	(variance@sum+1)& (0+255),f,b
 20077  0028AA  0E00               	movlw	0
 20078  0028AC  0100               	movlb	0	; () banked
 20079  0028AE  237E               	addwfc	(variance@sum+2)& (0+255),f,b
 20080  0028B0  0E00               	movlw	0
 20081  0028B2  0100               	movlb	0	; () banked
 20082  0028B4  237F               	addwfc	(variance@sum+3)& (0+255),f,b
 20083                           
 20084                           ; BSR set to: 0
 20085  0028B6  0100               	movlb	0	; () banked
 20086  0028B8  4B80               	infsnz	variance@i_1220& (0+255),f,b
 20087  0028BA  2B81               	incf	(variance@i_1220+1)& (0+255),f,b
 20088  0028BC                     l13180:
 20089                           
 20090                           ; BSR set to: 0
 20091  0028BC  0100               	movlb	0	; () banked
 20092  0028BE  516F               	movf	variance@sampleSize& (0+255),w,b
 20093  0028C0  0100               	movlb	0	; () banked
 20094  0028C2  6F70               	movwf	??_variance& (0+255),b
 20095  0028C4  6B71               	clrf	(??_variance+1)& (0+255),b
 20096  0028C6  0100               	movlb	0	; () banked
 20097  0028C8  5170               	movf	??_variance& (0+255),w,b
 20098  0028CA  0100               	movlb	0	; () banked
 20099  0028CC  5D80               	subwf	variance@i_1220& (0+255),w,b
 20100  0028CE  0100               	movlb	0	; () banked
 20101  0028D0  5181               	movf	(variance@i_1220+1)& (0+255),w,b
 20102  0028D2  0A80               	xorlw	128
 20103  0028D4  0100               	movlb	0	; () banked
 20104  0028D6  6F72               	movwf	(??_variance+2)& (0+255),b
 20105  0028D8  0100               	movlb	0	; () banked
 20106  0028DA  5171               	movf	(??_variance+1)& (0+255),w,b
 20107  0028DC  0A80               	xorlw	128
 20108  0028DE  0100               	movlb	0	; () banked
 20109  0028E0  5972               	subwfb	(??_variance+2)& (0+255),w,b
 20110  0028E2  A0D8               	btfss	status,0,c
 20111  0028E4  D78C               	goto	l13176
 20112                           
 20113                           ; BSR set to: 0
 20114                           ;peripherals.c: 185: }
 20115                           ;peripherals.c: 186: return sum /(sampleSize -1);
 20116                           
 20117                           ; BSR set to: 0
 20118  0028E6  C07C  F060         	movff	variance@sum,___lldiv@dividend
 20119  0028EA  C07D  F061         	movff	variance@sum+1,___lldiv@dividend+1
 20120  0028EE  C07E  F062         	movff	variance@sum+2,___lldiv@dividend+2
 20121  0028F2  C07F  F063         	movff	variance@sum+3,___lldiv@dividend+3
 20122  0028F6  0EFF               	movlw	255
 20123  0028F8  0100               	movlb	0	; () banked
 20124  0028FA  6F70               	movwf	??_variance& (0+255),b
 20125  0028FC  0EFF               	movlw	255
 20126  0028FE  0100               	movlb	0	; () banked
 20127  002900  6F71               	movwf	(??_variance+1)& (0+255),b
 20128  002902  0100               	movlb	0	; () banked
 20129  002904  516F               	movf	variance@sampleSize& (0+255),w,b
 20130  002906  0100               	movlb	0	; () banked
 20131  002908  6F72               	movwf	(??_variance+2)& (0+255),b
 20132  00290A  6B73               	clrf	(??_variance+3)& (0+255),b
 20133  00290C  0100               	movlb	0	; () banked
 20134  00290E  5170               	movf	??_variance& (0+255),w,b
 20135  002910  0100               	movlb	0	; () banked
 20136  002912  2772               	addwf	(??_variance+2)& (0+255),f,b
 20137  002914  0100               	movlb	0	; () banked
 20138  002916  5171               	movf	(??_variance+1)& (0+255),w,b
 20139  002918  0100               	movlb	0	; () banked
 20140  00291A  2373               	addwfc	(??_variance+3)& (0+255),f,b
 20141  00291C  C072  F064         	movff	??_variance+2,___lldiv@divisor
 20142  002920  C073  F065         	movff	??_variance+3,___lldiv@divisor+1
 20143  002924  0100               	movlb	0	; () banked
 20144  002926  0E00               	movlw	0
 20145  002928  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 20146  00292A  0EFF               	movlw	-1
 20147  00292C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 20148  00292E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 20149  002930  ECE7  F02A         	call	___lldiv	;wreg free
 20150  002934  C060  F06D         	movff	?___lldiv,?_variance
 20151  002938  C061  F06E         	movff	?___lldiv+1,?_variance+1
 20152  00293C  0012               	return	
 20153  00293E                     __end_of_variance:
 20154                           	opt stack 0
 20155                           tblptru	equ	0xFF8
 20156                           tblptrh	equ	0xFF7
 20157                           tblptrl	equ	0xFF6
 20158                           tablat	equ	0xFF5
 20159                           prodh	equ	0xFF4
 20160                           prodl	equ	0xFF3
 20161                           intcon	equ	0xFF2
 20162                           postinc0	equ	0xFEE
 20163                           wreg	equ	0xFE8
 20164                           indf1	equ	0xFE7
 20165                           postinc1	equ	0xFE6
 20166                           postdec1	equ	0xFE5
 20167                           fsr1h	equ	0xFE2
 20168                           fsr1l	equ	0xFE1
 20169                           indf2	equ	0xFDF
 20170                           postinc2	equ	0xFDE
 20171                           postdec2	equ	0xFDD
 20172                           fsr2h	equ	0xFDA
 20173                           fsr2l	equ	0xFD9
 20174                           status	equ	0xFD8
 20175                           
 20176 ;; *************** function ___lldiv *****************
 20177 ;; Defined at:
 20178 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
 20179 ;; Parameters:    Size  Location     Type
 20180 ;;  dividend        4    0[BANK0 ] unsigned long 
 20181 ;;  divisor         4    4[BANK0 ] unsigned long 
 20182 ;; Auto vars:     Size  Location     Type
 20183 ;;  quotient        4    8[BANK0 ] unsigned long 
 20184 ;;  counter         1   12[BANK0 ] unsigned char 
 20185 ;; Return value:  Size  Location     Type
 20186 ;;                  4    0[BANK0 ] unsigned long 
 20187 ;; Registers used:
 20188 ;;		wreg, status,2, status,0
 20189 ;; Tracked objects:
 20190 ;;		On entry : 0/0
 20191 ;;		On exit  : 0/0
 20192 ;;		Unchanged: 0/0
 20193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20194 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20195 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20197 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20198 ;;Total ram usage:       13 bytes
 20199 ;; Hardware stack levels used:    1
 20200 ;; Hardware stack levels required when called:    8
 20201 ;; This function calls:
 20202 ;;		Nothing
 20203 ;; This function is called by:
 20204 ;;		_variance
 20205 ;; This function uses a non-reentrant model
 20206 ;;
 20207                           
 20208                           	psect	text105
 20209  0055CE                     __ptext105:
 20210                           	opt stack 0
 20211  0055CE                     ___lldiv:
 20212                           	opt stack 17
 20213                           
 20214                           ;incstack = 0
 20215  0055CE  0E00               	movlw	0
 20216  0055D0  0100               	movlb	0	; () banked
 20217  0055D2  6F68               	movwf	___lldiv@quotient& (0+255),b
 20218  0055D4  0E00               	movlw	0
 20219  0055D6  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 20220  0055D8  0E00               	movlw	0
 20221  0055DA  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 20222  0055DC  0E00               	movlw	0
 20223  0055DE  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 20224                           
 20225                           ; BSR set to: 0
 20226  0055E0  0100               	movlb	0	; () banked
 20227  0055E2  5164               	movf	___lldiv@divisor& (0+255),w,b
 20228  0055E4  0100               	movlb	0	; () banked
 20229  0055E6  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 20230  0055E8  0100               	movlb	0	; () banked
 20231  0055EA  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 20232  0055EC  0100               	movlb	0	; () banked
 20233  0055EE  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 20234  0055F0  B4D8               	btfsc	status,2,c
 20235  0055F2  D042               	goto	l3204
 20236                           
 20237                           ; BSR set to: 0
 20238  0055F4  0E01               	movlw	1
 20239  0055F6  0100               	movlb	0	; () banked
 20240  0055F8  6F6C               	movwf	___lldiv@counter& (0+255),b
 20241  0055FA  D008               	goto	l13126
 20242  0055FC                     l13124:
 20243                           
 20244                           ; BSR set to: 0
 20245  0055FC  0100               	movlb	0	; () banked
 20246  0055FE  90D8               	bcf	status,0,c
 20247  005600  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 20248  005602  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 20249  005604  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 20250  005606  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 20251  005608  0100               	movlb	0	; () banked
 20252  00560A  2B6C               	incf	___lldiv@counter& (0+255),f,b
 20253  00560C                     l13126:
 20254                           
 20255                           ; BSR set to: 0
 20256  00560C  0100               	movlb	0	; () banked
 20257  00560E  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 20258  005610  D7F5               	goto	l13124
 20259  005612                     l13128:
 20260                           
 20261                           ; BSR set to: 0
 20262  005612  0100               	movlb	0	; () banked
 20263  005614  90D8               	bcf	status,0,c
 20264  005616  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 20265  005618  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 20266  00561A  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 20267  00561C  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 20268                           
 20269                           ; BSR set to: 0
 20270  00561E  0100               	movlb	0	; () banked
 20271  005620  5164               	movf	___lldiv@divisor& (0+255),w,b
 20272  005622  0100               	movlb	0	; () banked
 20273  005624  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 20274  005626  0100               	movlb	0	; () banked
 20275  005628  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 20276  00562A  0100               	movlb	0	; () banked
 20277  00562C  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 20278  00562E  0100               	movlb	0	; () banked
 20279  005630  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 20280  005632  0100               	movlb	0	; () banked
 20281  005634  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 20282  005636  0100               	movlb	0	; () banked
 20283  005638  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 20284  00563A  0100               	movlb	0	; () banked
 20285  00563C  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 20286  00563E  A0D8               	btfss	status,0,c
 20287  005640  D012               	goto	l13136
 20288                           
 20289                           ; BSR set to: 0
 20290  005642  0100               	movlb	0	; () banked
 20291  005644  5164               	movf	___lldiv@divisor& (0+255),w,b
 20292  005646  0100               	movlb	0	; () banked
 20293  005648  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 20294  00564A  0100               	movlb	0	; () banked
 20295  00564C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 20296  00564E  0100               	movlb	0	; () banked
 20297  005650  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 20298  005652  0100               	movlb	0	; () banked
 20299  005654  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 20300  005656  0100               	movlb	0	; () banked
 20301  005658  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 20302  00565A  0100               	movlb	0	; () banked
 20303  00565C  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 20304  00565E  0100               	movlb	0	; () banked
 20305  005660  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 20306                           
 20307                           ; BSR set to: 0
 20308  005662  0100               	movlb	0	; () banked
 20309  005664  8168               	bsf	___lldiv@quotient& (0+255),0,b
 20310  005666                     l13136:
 20311                           
 20312                           ; BSR set to: 0
 20313  005666  0100               	movlb	0	; () banked
 20314  005668  90D8               	bcf	status,0,c
 20315  00566A  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 20316  00566C  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 20317  00566E  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 20318  005670  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 20319                           
 20320                           ; BSR set to: 0
 20321  005672  0100               	movlb	0	; () banked
 20322  005674  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 20323  005676  D7CD               	goto	l13128
 20324  005678                     l3204:
 20325                           
 20326                           ; BSR set to: 0
 20327  005678  C068  F060         	movff	___lldiv@quotient,?___lldiv
 20328  00567C  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 20329  005680  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 20330  005684  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 20331                           
 20332                           ; BSR set to: 0
 20333  005688  0012               	return		;funcret
 20334  00568A                     __end_of___lldiv:
 20335                           	opt stack 0
 20336                           tblptru	equ	0xFF8
 20337                           tblptrh	equ	0xFF7
 20338                           tblptrl	equ	0xFF6
 20339                           tablat	equ	0xFF5
 20340                           prodh	equ	0xFF4
 20341                           prodl	equ	0xFF3
 20342                           intcon	equ	0xFF2
 20343                           postinc0	equ	0xFEE
 20344                           wreg	equ	0xFE8
 20345                           indf1	equ	0xFE7
 20346                           postinc1	equ	0xFE6
 20347                           postdec1	equ	0xFE5
 20348                           fsr1h	equ	0xFE2
 20349                           fsr1l	equ	0xFE1
 20350                           indf2	equ	0xFDF
 20351                           postinc2	equ	0xFDE
 20352                           postdec2	equ	0xFDD
 20353                           fsr2h	equ	0xFDA
 20354                           fsr2l	equ	0xFD9
 20355                           status	equ	0xFD8
 20356                           
 20357 ;; *************** function _readEDDADCSetup *****************
 20358 ;; Defined at:
 20359 ;;		line 163 in file "readKeyCable.c"
 20360 ;; Parameters:    Size  Location     Type
 20361 ;;		None
 20362 ;; Auto vars:     Size  Location     Type
 20363 ;;		None
 20364 ;; Return value:  Size  Location     Type
 20365 ;;                  1    wreg      void 
 20366 ;; Registers used:
 20367 ;;		wreg, status,2, status,0, cstack
 20368 ;; Tracked objects:
 20369 ;;		On entry : 0/0
 20370 ;;		On exit  : 0/0
 20371 ;;		Unchanged: 0/0
 20372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20377 ;;Total ram usage:        0 bytes
 20378 ;; Hardware stack levels used:    1
 20379 ;; Hardware stack levels required when called:    9
 20380 ;; This function calls:
 20381 ;;		__delay_us
 20382 ;; This function is called by:
 20383 ;;		_readEDDADC
 20384 ;; This function uses a non-reentrant model
 20385 ;;
 20386                           
 20387                           	psect	text106
 20388  007450                     __ptext106:
 20389                           	opt stack 0
 20390  007450                     _readEDDADCSetup:
 20391                           	opt stack 17
 20392                           
 20393                           ;readKeyCable.c: 164: FVRCON = 0b00000010;
 20394                           
 20395                           ; BSR set to: 0
 20396                           ;incstack = 0
 20397  007450  0E02               	movlw	2
 20398  007452  010E               	movlb	14	; () banked
 20399  007454  6FC4               	movwf	196,b	;volatile
 20400                           
 20401                           ; BSR set to: 14
 20402                           ;readKeyCable.c: 165: FVRCONbits.FVREN = 1;
 20403  007456  010E               	movlb	14	; () banked
 20404  007458  8FC4               	bsf	196,7,b	;volatile
 20405                           
 20406                           ; BSR set to: 14
 20407                           ;readKeyCable.c: 166: _delay_us(40);
 20408  00745A  0E28               	movlw	40
 20409  00745C  EC37  F03B         	call	__delay_us
 20410                           
 20411                           ;readKeyCable.c: 168: ADCON1 = 0b01110000;
 20412  007460  0E70               	movlw	112
 20413  007462  010F               	movlb	15	; () banked
 20414  007464  6F59               	movwf	89,b	;volatile
 20415                           
 20416                           ; BSR set to: 15
 20417                           ;readKeyCable.c: 169: ADPCH = 0b00100111;
 20418  007466  0E27               	movlw	39
 20419  007468  010F               	movlb	15	; () banked
 20420  00746A  6F5F               	movwf	95,b	;volatile
 20421                           
 20422                           ; BSR set to: 15
 20423                           ;readKeyCable.c: 170: ADCLK = 0b00111111;
 20424  00746C  0E3F               	movlw	63
 20425  00746E  010F               	movlb	15	; () banked
 20426  007470  6F57               	movwf	87,b	;volatile
 20427                           
 20428                           ; BSR set to: 15
 20429                           ;readKeyCable.c: 171: ADREF = 0b00000011;
 20430  007472  0E03               	movlw	3
 20431  007474  010F               	movlb	15	; () banked
 20432  007476  6F58               	movwf	88,b	;volatile
 20433                           
 20434                           ; BSR set to: 15
 20435                           ;readKeyCable.c: 172: ADCON0bits.ADFM = 1;
 20436  007478  8460               	bsf	3936,2,c	;volatile
 20437                           
 20438                           ; BSR set to: 15
 20439                           ;readKeyCable.c: 173: ADCON0bits.ADON = 1;
 20440  00747A  8E60               	bsf	3936,7,c	;volatile
 20441                           
 20442                           ; BSR set to: 15
 20443  00747C  0012               	return		;funcret
 20444  00747E                     __end_of_readEDDADCSetup:
 20445                           	opt stack 0
 20446                           tblptru	equ	0xFF8
 20447                           tblptrh	equ	0xFF7
 20448                           tblptrl	equ	0xFF6
 20449                           tablat	equ	0xFF5
 20450                           prodh	equ	0xFF4
 20451                           prodl	equ	0xFF3
 20452                           intcon	equ	0xFF2
 20453                           postinc0	equ	0xFEE
 20454                           wreg	equ	0xFE8
 20455                           indf1	equ	0xFE7
 20456                           postinc1	equ	0xFE6
 20457                           postdec1	equ	0xFE5
 20458                           fsr1h	equ	0xFE2
 20459                           fsr1l	equ	0xFE1
 20460                           indf2	equ	0xFDF
 20461                           postinc2	equ	0xFDE
 20462                           postdec2	equ	0xFDD
 20463                           fsr2h	equ	0xFDA
 20464                           fsr2l	equ	0xFD9
 20465                           status	equ	0xFD8
 20466                           
 20467 ;; *************** function _readKeyCable *****************
 20468 ;; Defined at:
 20469 ;;		line 35 in file "readKeyCable.c"
 20470 ;; Parameters:    Size  Location     Type
 20471 ;;		None
 20472 ;; Auto vars:     Size  Location     Type
 20473 ;;		None
 20474 ;; Return value:  Size  Location     Type
 20475 ;;                  1    wreg      void 
 20476 ;; Registers used:
 20477 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20478 ;; Tracked objects:
 20479 ;;		On entry : 0/0
 20480 ;;		On exit  : 0/0
 20481 ;;		Unchanged: 0/0
 20482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20487 ;;Total ram usage:        0 bytes
 20488 ;; Hardware stack levels used:    1
 20489 ;; Hardware stack levels required when called:    8
 20490 ;; This function calls:
 20491 ;;		Nothing
 20492 ;; This function is called by:
 20493 ;;		_currentStateHandler
 20494 ;; This function uses a non-reentrant model
 20495 ;;
 20496                           
 20497                           	psect	text107
 20498  005B5A                     __ptext107:
 20499                           	opt stack 0
 20500  005B5A                     _readKeyCable:
 20501                           	opt stack 20
 20502                           
 20503                           ;readKeyCable.c: 36: switch (state.readKeyCable.current){
 20504                           
 20505                           ; BSR set to: 15
 20506                           ;incstack = 0
 20507  005B5A  D03E               	goto	l14426
 20508  005B5C                     l14394:
 20509                           
 20510                           ;readKeyCable.c: 38: state.readKeyCable.counter = 25;
 20511  005B5C  0E00               	movlw	0
 20512  005B5E  0101               	movlb	1	; () banked
 20513  005B60  6FBD               	movwf	(_state+22)& (0+255),b
 20514  005B62  0E19               	movlw	25
 20515  005B64  6FBC               	movwf	(_state+21)& (0+255),b
 20516                           
 20517                           ; BSR set to: 1
 20518                           ;readKeyCable.c: 39: LATEbits.LATE5 = 1;
 20519  005B66  8A7D               	bsf	3965,5,c	;volatile
 20520                           
 20521                           ;readKeyCable.c: 40: testCounter = 0;
 20522  005B68  0E00               	movlw	0
 20523  005B6A  0100               	movlb	0	; () banked
 20524  005B6C  6FC7               	movwf	_testCounter& (0+255),b
 20525                           
 20526                           ;readKeyCable.c: 41: break;
 20527  005B6E  0012               	return	
 20528  005B70                     l14398:
 20529                           
 20530                           ;readKeyCable.c: 44: state.readKeyCable.counter = 50;
 20531  005B70  0E00               	movlw	0
 20532  005B72  0101               	movlb	1	; () banked
 20533  005B74  6FBD               	movwf	(_state+22)& (0+255),b
 20534  005B76  0E32               	movlw	50
 20535  005B78  6FBC               	movwf	(_state+21)& (0+255),b
 20536                           
 20537                           ; BSR set to: 1
 20538                           ;readKeyCable.c: 45: ABB_1.info.statusBits.cable_fault = 1;
 20539  005B7A  EE23  F0C1         	lfsr	2,_ABB_1+1
 20540  005B7E  82DF               	bsf	indf2,1,c
 20541                           
 20542                           ; BSR set to: 1
 20543                           ;readKeyCable.c: 46: testCounter = 0;
 20544  005B80  0E00               	movlw	0
 20545  005B82  0100               	movlb	0	; () banked
 20546  005B84  6FC7               	movwf	_testCounter& (0+255),b
 20547                           
 20548                           ;readKeyCable.c: 47: break;
 20549  005B86  0012               	return	
 20550  005B88                     l14404:
 20551                           
 20552                           ;readKeyCable.c: 50: state.readKeyCable.counter = 50;
 20553  005B88  0E00               	movlw	0
 20554  005B8A  0101               	movlb	1	; () banked
 20555  005B8C  6FBD               	movwf	(_state+22)& (0+255),b
 20556  005B8E  0E32               	movlw	50
 20557  005B90  6FBC               	movwf	(_state+21)& (0+255),b
 20558                           
 20559                           ; BSR set to: 1
 20560                           ;readKeyCable.c: 51: ABB_1.info.statusBits.cable_fault = 0;
 20561  005B92  EE23  F0C1         	lfsr	2,_ABB_1+1
 20562  005B96  92DF               	bcf	indf2,1,c
 20563                           
 20564                           ; BSR set to: 1
 20565                           ;readKeyCable.c: 52: testCounter = 0;
 20566  005B98  0E00               	movlw	0
 20567  005B9A  0100               	movlb	0	; () banked
 20568  005B9C  6FC7               	movwf	_testCounter& (0+255),b
 20569                           
 20570                           ;readKeyCable.c: 53: break;
 20571  005B9E  0012               	return	
 20572  005BA0                     l14410:
 20573                           
 20574                           ;readKeyCable.c: 56: state.readKeyCable.counter = 200;
 20575  005BA0  0E00               	movlw	0
 20576  005BA2  0101               	movlb	1	; () banked
 20577  005BA4  6FBD               	movwf	(_state+22)& (0+255),b
 20578  005BA6  0EC8               	movlw	200
 20579  005BA8  6FBC               	movwf	(_state+21)& (0+255),b
 20580                           
 20581                           ; BSR set to: 1
 20582                           ;readKeyCable.c: 57: ABB_1.info.statusBits.key_switch_status = 1;
 20583  005BAA  EE23  F0C1         	lfsr	2,_ABB_1+1
 20584  005BAE  80DF               	bsf	indf2,0,c
 20585                           
 20586                           ; BSR set to: 1
 20587                           ;readKeyCable.c: 58: LATEbits.LATE5 = 0;
 20588  005BB0  9A7D               	bcf	3965,5,c	;volatile
 20589                           
 20590                           ;readKeyCable.c: 59: break;
 20591  005BB2  0012               	return	
 20592  005BB4                     l14416:
 20593                           
 20594                           ; BSR set to: 1
 20595                           ;readKeyCable.c: 62: state.readKeyCable.counter = 200;
 20596  005BB4  0E00               	movlw	0
 20597  005BB6  0101               	movlb	1	; () banked
 20598  005BB8  6FBD               	movwf	(_state+22)& (0+255),b
 20599  005BBA  0EC8               	movlw	200
 20600  005BBC  6FBC               	movwf	(_state+21)& (0+255),b
 20601                           
 20602                           ; BSR set to: 1
 20603                           ;readKeyCable.c: 63: ABB_1.info.statusBits.key_switch_status = 0;
 20604  005BBE  EE23  F0C1         	lfsr	2,_ABB_1+1
 20605  005BC2  90DF               	bcf	indf2,0,c
 20606                           
 20607                           ; BSR set to: 1
 20608                           ;readKeyCable.c: 64: LATEbits.LATE5 = 0;
 20609  005BC4  9A7D               	bcf	3965,5,c	;volatile
 20610                           
 20611                           ;readKeyCable.c: 65: break;
 20612  005BC6  0012               	return	
 20613  005BC8                     l14422:
 20614                           
 20615                           ; BSR set to: 1
 20616                           ;readKeyCable.c: 68: state.readKeyCable.counter = 1;
 20617  005BC8  0E00               	movlw	0
 20618  005BCA  0101               	movlb	1	; () banked
 20619  005BCC  6FBD               	movwf	(_state+22)& (0+255),b
 20620  005BCE  0E01               	movlw	1
 20621  005BD0  6FBC               	movwf	(_state+21)& (0+255),b
 20622                           
 20623                           ; BSR set to: 1
 20624                           ;readKeyCable.c: 69: testCounter++;
 20625  005BD2  0100               	movlb	0	; () banked
 20626  005BD4  2BC7               	incf	_testCounter& (0+255),f,b
 20627                           
 20628                           ;readKeyCable.c: 71: }
 20629  005BD6  0012               	return	
 20630  005BD8                     l14426:
 20631  005BD8  0101               	movlb	1	; () banked
 20632  005BDA  51BA               	movf	(_state+19)& (0+255),w,b
 20633                           
 20634                           ; Switch size 1, requested type "space"
 20635                           ; Number of cases is 5, Range of values is 1 to 7
 20636                           ; switch strategies available:
 20637                           ; Name         Instructions Cycles
 20638                           ; simple_byte           16     9 (average)
 20639                           ;	Chosen strategy is simple_byte
 20640  005BDC  0A01               	xorlw	1	; case 1
 20641  005BDE  B4D8               	btfsc	status,2,c
 20642  005BE0  D7BD               	goto	l14394
 20643  005BE2  0A02               	xorlw	2	; case 3
 20644  005BE4  B4D8               	btfsc	status,2,c
 20645  005BE6  D7C4               	goto	l14398
 20646  005BE8  0A07               	xorlw	7	; case 4
 20647  005BEA  B4D8               	btfsc	status,2,c
 20648  005BEC  D7CD               	goto	l14404
 20649  005BEE  0A02               	xorlw	2	; case 6
 20650  005BF0  B4D8               	btfsc	status,2,c
 20651  005BF2  D7D6               	goto	l14410
 20652  005BF4  0A01               	xorlw	1	; case 7
 20653  005BF6  B4D8               	btfsc	status,2,c
 20654  005BF8  D7DD               	goto	l14416
 20655  005BFA  D7E6               	goto	l14422
 20656  005BFC                     __end_of_readKeyCable:
 20657                           	opt stack 0
 20658                           tblptru	equ	0xFF8
 20659                           tblptrh	equ	0xFF7
 20660                           tblptrl	equ	0xFF6
 20661                           tablat	equ	0xFF5
 20662                           prodh	equ	0xFF4
 20663                           prodl	equ	0xFF3
 20664                           intcon	equ	0xFF2
 20665                           postinc0	equ	0xFEE
 20666                           wreg	equ	0xFE8
 20667                           indf1	equ	0xFE7
 20668                           postinc1	equ	0xFE6
 20669                           postdec1	equ	0xFE5
 20670                           fsr1h	equ	0xFE2
 20671                           fsr1l	equ	0xFE1
 20672                           indf2	equ	0xFDF
 20673                           postinc2	equ	0xFDE
 20674                           postdec2	equ	0xFDD
 20675                           fsr2h	equ	0xFDA
 20676                           fsr2l	equ	0xFD9
 20677                           status	equ	0xFD8
 20678                           
 20679 ;; *************** function _outgoingMessagesStateHandler *****************
 20680 ;; Defined at:
 20681 ;;		line 64 in file "outgoingMessages.c"
 20682 ;; Parameters:    Size  Location     Type
 20683 ;;		None
 20684 ;; Auto vars:     Size  Location     Type
 20685 ;;		None
 20686 ;; Return value:  Size  Location     Type
 20687 ;;                  1    wreg      void 
 20688 ;; Registers used:
 20689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20690 ;; Tracked objects:
 20691 ;;		On entry : 0/0
 20692 ;;		On exit  : 0/0
 20693 ;;		Unchanged: 0/0
 20694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20699 ;;Total ram usage:        0 bytes
 20700 ;; Hardware stack levels used:    1
 20701 ;; Hardware stack levels required when called:    9
 20702 ;; This function calls:
 20703 ;;		_LineIdleST7540
 20704 ;;		_TransmitBusyST7540
 20705 ;; This function is called by:
 20706 ;;		_currentStateHandler
 20707 ;; This function uses a non-reentrant model
 20708 ;;
 20709                           
 20710                           	psect	text108
 20711  0061BE                     __ptext108:
 20712                           	opt stack 0
 20713  0061BE                     _outgoingMessagesStateHandler:
 20714                           	opt stack 19
 20715                           
 20716                           ;outgoingMessages.c: 65: switch(state.outgoingMessages.current){
 20717                           
 20718                           ;incstack = 0
 20719  0061BE  D034               	goto	l14608
 20720  0061C0                     l2117:
 20721                           
 20722                           ; BSR set to: 1
 20723                           ;outgoingMessages.c: 67: if(FLAGS.acknowledgeCCB)
 20724  0061C0  A839               	btfss	_FLAGS+2,4,c
 20725  0061C2  D004               	goto	l14586
 20726                           
 20727                           ; BSR set to: 1
 20728                           ;outgoingMessages.c: 68: state.outgoingMessages.next = 3;
 20729  0061C4  0E03               	movlw	3
 20730  0061C6  0101               	movlb	1	; () banked
 20731  0061C8  6FC9               	movwf	(_state+34)& (0+255),b
 20732  0061CA  0012               	return	
 20733  0061CC                     l14586:
 20734                           
 20735                           ; BSR set to: 1
 20736                           ;outgoingMessages.c: 69: else if (outgoingQueue.length > 0)
 20737  0061CC  0101               	movlb	1	; () banked
 20738  0061CE  5100               	movf	_outgoingQueue& (0+255),w,b
 20739  0061D0  B4D8               	btfsc	status,2,c
 20740  0061D2  D004               	goto	l14590
 20741                           
 20742                           ; BSR set to: 1
 20743                           ;outgoingMessages.c: 70: state.outgoingMessages.next = 2;
 20744  0061D4  0E02               	movlw	2
 20745  0061D6  0101               	movlb	1	; () banked
 20746  0061D8  6FC9               	movwf	(_state+34)& (0+255),b
 20747  0061DA  0012               	return	
 20748  0061DC                     l14590:
 20749                           
 20750                           ; BSR set to: 1
 20751                           ;outgoingMessages.c: 71: else
 20752                           ;outgoingMessages.c: 72: state.outgoingMessages.next = 1;
 20753  0061DC  0E01               	movlw	1
 20754  0061DE  0101               	movlb	1	; () banked
 20755  0061E0  6FC9               	movwf	(_state+34)& (0+255),b
 20756                           
 20757                           ; BSR set to: 1
 20758                           ;outgoingMessages.c: 73: break;
 20759                           
 20760                           ; BSR set to: 1
 20761  0061E2  0012               	return	
 20762  0061E4                     l14592:
 20763                           
 20764                           ; BSR set to: 1
 20765                           ;outgoingMessages.c: 76: state.outgoingMessages.next = 3;
 20766  0061E4  0E03               	movlw	3
 20767  0061E6  0101               	movlb	1	; () banked
 20768  0061E8  6FC9               	movwf	(_state+34)& (0+255),b
 20769                           
 20770                           ;outgoingMessages.c: 77: break;
 20771  0061EA  0012               	return	
 20772  0061EC                     l14594:
 20773                           
 20774                           ; BSR set to: 1
 20775                           ;outgoingMessages.c: 80: if (!TransmitBusyST7540() && LineIdleST7540() && ABB_1.info.sta
      +                          tusBits.communication_status)
 20776  0061EC  ECEC  F03D         	call	_TransmitBusyST7540	;wreg free
 20777  0061F0  0900               	iorlw	0
 20778  0061F2  A4D8               	btfss	status,2,c
 20779  0061F4  D00D               	goto	l14602
 20780  0061F6  ECA9  F03D         	call	_LineIdleST7540	;wreg free
 20781  0061FA  0900               	iorlw	0
 20782  0061FC  B4D8               	btfsc	status,2,c
 20783  0061FE  D008               	goto	l14602
 20784  006200  EE23  F0C2         	lfsr	2,_ABB_1+2
 20785  006204  A6DF               	btfss	indf2,3,c
 20786  006206  D004               	goto	l14602
 20787                           
 20788                           ;outgoingMessages.c: 81: state.outgoingMessages.next = 4;
 20789  006208  0E04               	movlw	4
 20790  00620A  0101               	movlb	1	; () banked
 20791  00620C  6FC9               	movwf	(_state+34)& (0+255),b
 20792  00620E  0012               	return	
 20793  006210                     l14602:
 20794                           
 20795                           ;outgoingMessages.c: 82: else
 20796                           ;outgoingMessages.c: 83: state.outgoingMessages.next = 3;
 20797  006210  0E03               	movlw	3
 20798  006212  0101               	movlb	1	; () banked
 20799  006214  6FC9               	movwf	(_state+34)& (0+255),b
 20800                           
 20801                           ; BSR set to: 1
 20802                           ;outgoingMessages.c: 84: break;
 20803  006216  0012               	return	
 20804  006218                     l14604:
 20805                           
 20806                           ; BSR set to: 1
 20807                           ;outgoingMessages.c: 87: state.outgoingMessages.next = 1;
 20808  006218  0E01               	movlw	1
 20809  00621A  0101               	movlb	1	; () banked
 20810  00621C  6FC9               	movwf	(_state+34)& (0+255),b
 20811                           
 20812                           ;outgoingMessages.c: 88: break;
 20813  00621E  0012               	return	
 20814  006220                     l14606:
 20815                           
 20816                           ; BSR set to: 1
 20817                           ;outgoingMessages.c: 91: state.outgoingMessages.next = 1;
 20818  006220  0E01               	movlw	1
 20819  006222  0101               	movlb	1	; () banked
 20820  006224  6FC9               	movwf	(_state+34)& (0+255),b
 20821                           
 20822                           ;outgoingMessages.c: 92: }
 20823  006226  0012               	return	
 20824  006228                     l14608:
 20825  006228  0101               	movlb	1	; () banked
 20826  00622A  51C8               	movf	(_state+33)& (0+255),w,b
 20827                           
 20828                           ; Switch size 1, requested type "space"
 20829                           ; Number of cases is 4, Range of values is 1 to 4
 20830                           ; switch strategies available:
 20831                           ; Name         Instructions Cycles
 20832                           ; simple_byte           13     7 (average)
 20833                           ;	Chosen strategy is simple_byte
 20834  00622C  0A01               	xorlw	1	; case 1
 20835  00622E  B4D8               	btfsc	status,2,c
 20836  006230  D7C7               	goto	l2117
 20837  006232  0A03               	xorlw	3	; case 2
 20838  006234  B4D8               	btfsc	status,2,c
 20839  006236  D7D6               	goto	l14592
 20840  006238  0A01               	xorlw	1	; case 3
 20841  00623A  B4D8               	btfsc	status,2,c
 20842  00623C  D7D7               	goto	l14594
 20843  00623E  0A07               	xorlw	7	; case 4
 20844  006240  B4D8               	btfsc	status,2,c
 20845  006242  D7EA               	goto	l14604
 20846  006244  D7ED               	goto	l14606
 20847  006246                     __end_of_outgoingMessagesStateHandler:
 20848                           	opt stack 0
 20849                           tblptru	equ	0xFF8
 20850                           tblptrh	equ	0xFF7
 20851                           tblptrl	equ	0xFF6
 20852                           tablat	equ	0xFF5
 20853                           prodh	equ	0xFF4
 20854                           prodl	equ	0xFF3
 20855                           intcon	equ	0xFF2
 20856                           postinc0	equ	0xFEE
 20857                           wreg	equ	0xFE8
 20858                           indf1	equ	0xFE7
 20859                           postinc1	equ	0xFE6
 20860                           postdec1	equ	0xFE5
 20861                           fsr1h	equ	0xFE2
 20862                           fsr1l	equ	0xFE1
 20863                           indf2	equ	0xFDF
 20864                           postinc2	equ	0xFDE
 20865                           postdec2	equ	0xFDD
 20866                           fsr2h	equ	0xFDA
 20867                           fsr2l	equ	0xFD9
 20868                           status	equ	0xFD8
 20869                           
 20870 ;; *************** function _TransmitBusyST7540 *****************
 20871 ;; Defined at:
 20872 ;;		line 266 in file "ST7540.c"
 20873 ;; Parameters:    Size  Location     Type
 20874 ;;		None
 20875 ;; Auto vars:     Size  Location     Type
 20876 ;;		None
 20877 ;; Return value:  Size  Location     Type
 20878 ;;                  1    wreg      unsigned char 
 20879 ;; Registers used:
 20880 ;;		wreg, status,2, status,0
 20881 ;; Tracked objects:
 20882 ;;		On entry : 0/0
 20883 ;;		On exit  : 0/0
 20884 ;;		Unchanged: 0/0
 20885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20890 ;;Total ram usage:        0 bytes
 20891 ;; Hardware stack levels used:    1
 20892 ;; Hardware stack levels required when called:    8
 20893 ;; This function calls:
 20894 ;;		Nothing
 20895 ;; This function is called by:
 20896 ;;		_outgoingMessagesStateHandler
 20897 ;; This function uses a non-reentrant model
 20898 ;;
 20899                           
 20900                           	psect	text109
 20901  007BD8                     __ptext109:
 20902                           	opt stack 0
 20903  007BD8                     _TransmitBusyST7540:
 20904                           	opt stack 19
 20905                           
 20906                           ;ST7540.c: 267: return (flagST7540 & 1);
 20907                           
 20908                           ; BSR set to: 1
 20909                           ;incstack = 0
 20910  007BD8  504C               	movf	_flagST7540,w,c
 20911  007BDA  0B01               	andlw	1
 20912  007BDC  0012               	return	
 20913  007BDE                     __end_of_TransmitBusyST7540:
 20914                           	opt stack 0
 20915                           tblptru	equ	0xFF8
 20916                           tblptrh	equ	0xFF7
 20917                           tblptrl	equ	0xFF6
 20918                           tablat	equ	0xFF5
 20919                           prodh	equ	0xFF4
 20920                           prodl	equ	0xFF3
 20921                           intcon	equ	0xFF2
 20922                           postinc0	equ	0xFEE
 20923                           wreg	equ	0xFE8
 20924                           indf1	equ	0xFE7
 20925                           postinc1	equ	0xFE6
 20926                           postdec1	equ	0xFE5
 20927                           fsr1h	equ	0xFE2
 20928                           fsr1l	equ	0xFE1
 20929                           indf2	equ	0xFDF
 20930                           postinc2	equ	0xFDE
 20931                           postdec2	equ	0xFDD
 20932                           fsr2h	equ	0xFDA
 20933                           fsr2l	equ	0xFD9
 20934                           status	equ	0xFD8
 20935                           
 20936 ;; *************** function _LineIdleST7540 *****************
 20937 ;; Defined at:
 20938 ;;		line 204 in file "ST7540.c"
 20939 ;; Parameters:    Size  Location     Type
 20940 ;;		None
 20941 ;; Auto vars:     Size  Location     Type
 20942 ;;		None
 20943 ;; Return value:  Size  Location     Type
 20944 ;;                  1    wreg      unsigned char 
 20945 ;; Registers used:
 20946 ;;		wreg
 20947 ;; Tracked objects:
 20948 ;;		On entry : 0/0
 20949 ;;		On exit  : 0/0
 20950 ;;		Unchanged: 0/0
 20951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20956 ;;Total ram usage:        0 bytes
 20957 ;; Hardware stack levels used:    1
 20958 ;; Hardware stack levels required when called:    8
 20959 ;; This function calls:
 20960 ;;		Nothing
 20961 ;; This function is called by:
 20962 ;;		_outgoingMessagesStateHandler
 20963 ;; This function uses a non-reentrant model
 20964 ;;
 20965                           
 20966                           	psect	text110
 20967  007B52                     __ptext110:
 20968                           	opt stack 0
 20969  007B52                     _LineIdleST7540:
 20970                           	opt stack 19
 20971                           
 20972                           ;ST7540.c: 205: if(PORTCbits.RC2)
 20973                           
 20974                           ;incstack = 0
 20975  007B52  A48B               	btfss	3979,2,c	;volatile
 20976  007B54  D002               	goto	l13744
 20977                           
 20978                           ;ST7540.c: 206: return 0;
 20979  007B56  0E00               	movlw	0
 20980  007B58  0012               	return	
 20981  007B5A                     l13744:
 20982                           
 20983                           ;ST7540.c: 207: return 1;
 20984  007B5A  0E01               	movlw	1
 20985  007B5C  0012               	return	
 20986  007B5E                     __end_of_LineIdleST7540:
 20987                           	opt stack 0
 20988                           tblptru	equ	0xFF8
 20989                           tblptrh	equ	0xFF7
 20990                           tblptrl	equ	0xFF6
 20991                           tablat	equ	0xFF5
 20992                           prodh	equ	0xFF4
 20993                           prodl	equ	0xFF3
 20994                           intcon	equ	0xFF2
 20995                           postinc0	equ	0xFEE
 20996                           wreg	equ	0xFE8
 20997                           indf1	equ	0xFE7
 20998                           postinc1	equ	0xFE6
 20999                           postdec1	equ	0xFE5
 21000                           fsr1h	equ	0xFE2
 21001                           fsr1l	equ	0xFE1
 21002                           indf2	equ	0xFDF
 21003                           postinc2	equ	0xFDE
 21004                           postdec2	equ	0xFDD
 21005                           fsr2h	equ	0xFDA
 21006                           fsr2l	equ	0xFD9
 21007                           status	equ	0xFD8
 21008                           
 21009 ;; *************** function _outgoingMessages *****************
 21010 ;; Defined at:
 21011 ;;		line 38 in file "outgoingMessages.c"
 21012 ;; Parameters:    Size  Location     Type
 21013 ;;		None
 21014 ;; Auto vars:     Size  Location     Type
 21015 ;;		None
 21016 ;; Return value:  Size  Location     Type
 21017 ;;                  1    wreg      void 
 21018 ;; Registers used:
 21019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21020 ;; Tracked objects:
 21021 ;;		On entry : 0/0
 21022 ;;		On exit  : 0/0
 21023 ;;		Unchanged: 0/0
 21024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21029 ;;Total ram usage:        0 bytes
 21030 ;; Hardware stack levels used:    1
 21031 ;; Hardware stack levels required when called:   10
 21032 ;; This function calls:
 21033 ;;		_StartTransmitST7540
 21034 ;;		_buildMessageST7540
 21035 ;; This function is called by:
 21036 ;;		_currentStateHandler
 21037 ;; This function uses a non-reentrant model
 21038 ;;
 21039                           
 21040                           	psect	text111
 21041  006770                     __ptext111:
 21042                           	opt stack 0
 21043  006770                     _outgoingMessages:
 21044                           	opt stack 18
 21045                           
 21046                           ;outgoingMessages.c: 39: switch (state.outgoingMessages.current){
 21047                           
 21048                           ;incstack = 0
 21049  006770  D022               	goto	l14580
 21050  006772                     l14564:
 21051                           
 21052                           ;outgoingMessages.c: 41: state.outgoingMessages.counter = 200;
 21053  006772  0E00               	movlw	0
 21054  006774  0101               	movlb	1	; () banked
 21055  006776  6FCB               	movwf	(_state+36)& (0+255),b
 21056  006778  0EC8               	movlw	200
 21057  00677A  6FCA               	movwf	(_state+35)& (0+255),b
 21058                           
 21059                           ;outgoingMessages.c: 42: break;
 21060  00677C  0012               	return	
 21061  00677E                     l14566:
 21062                           
 21063                           ; BSR set to: 1
 21064                           ;outgoingMessages.c: 45: state.outgoingMessages.counter = 200;
 21065  00677E  0E00               	movlw	0
 21066  006780  0101               	movlb	1	; () banked
 21067  006782  6FCB               	movwf	(_state+36)& (0+255),b
 21068  006784  0EC8               	movlw	200
 21069  006786  6FCA               	movwf	(_state+35)& (0+255),b
 21070                           
 21071                           ; BSR set to: 1
 21072                           ;outgoingMessages.c: 46: FLAGS.acknowledgeCCB = 1;
 21073  006788  8839               	bsf	_FLAGS+2,4,c
 21074                           
 21075                           ; BSR set to: 1
 21076                           ;outgoingMessages.c: 47: buildMessageST7540();
 21077  00678A  ECB8  F00B         	call	_buildMessageST7540	;wreg free
 21078                           
 21079                           ;outgoingMessages.c: 48: COUNTERS.communicationStatus = 4000;
 21080  00678E  0E0F               	movlw	15
 21081  006790  0100               	movlb	0	; () banked
 21082  006792  6FB0               	movwf	(_COUNTERS+13)& (0+255),b
 21083  006794  0EA0               	movlw	160
 21084  006796  6FAF               	movwf	(_COUNTERS+12)& (0+255),b
 21085                           
 21086                           ;outgoingMessages.c: 49: break;
 21087  006798  0012               	return	
 21088  00679A                     l14574:
 21089                           
 21090                           ;outgoingMessages.c: 52: state.outgoingMessages.counter = 200;
 21091  00679A  0E00               	movlw	0
 21092  00679C  0101               	movlb	1	; () banked
 21093  00679E  6FCB               	movwf	(_state+36)& (0+255),b
 21094  0067A0  0EC8               	movlw	200
 21095  0067A2  6FCA               	movwf	(_state+35)& (0+255),b
 21096                           
 21097                           ;outgoingMessages.c: 53: break;
 21098  0067A4  0012               	return	
 21099  0067A6                     l14576:
 21100                           
 21101                           ; BSR set to: 1
 21102                           ;outgoingMessages.c: 56: state.outgoingMessages.counter = 1000;
 21103  0067A6  0E03               	movlw	3
 21104  0067A8  0101               	movlb	1	; () banked
 21105  0067AA  6FCB               	movwf	(_state+36)& (0+255),b
 21106  0067AC  0EE8               	movlw	232
 21107  0067AE  6FCA               	movwf	(_state+35)& (0+255),b
 21108                           
 21109                           ; BSR set to: 1
 21110                           ;outgoingMessages.c: 57: StartTransmitST7540();
 21111  0067B0  ECC3  F03C         	call	_StartTransmitST7540	;wreg free
 21112                           
 21113                           ;outgoingMessages.c: 58: }
 21114  0067B4  0012               	return	
 21115  0067B6                     l14580:
 21116  0067B6  0101               	movlb	1	; () banked
 21117  0067B8  51C8               	movf	(_state+33)& (0+255),w,b
 21118                           
 21119                           ; Switch size 1, requested type "space"
 21120                           ; Number of cases is 4, Range of values is 1 to 4
 21121                           ; switch strategies available:
 21122                           ; Name         Instructions Cycles
 21123                           ; simple_byte           13     7 (average)
 21124                           ;	Chosen strategy is simple_byte
 21125  0067BA  0A01               	xorlw	1	; case 1
 21126  0067BC  B4D8               	btfsc	status,2,c
 21127  0067BE  D7D9               	goto	l14564
 21128  0067C0  0A03               	xorlw	3	; case 2
 21129  0067C2  B4D8               	btfsc	status,2,c
 21130  0067C4  D7DC               	goto	l14566
 21131  0067C6  0A01               	xorlw	1	; case 3
 21132  0067C8  B4D8               	btfsc	status,2,c
 21133  0067CA  D7E7               	goto	l14574
 21134  0067CC  0A07               	xorlw	7	; case 4
 21135  0067CE  A4D8               	btfss	status,2,c
 21136  0067D0  0012               	return	
 21137  0067D2  D7E9               	goto	l14576
 21138  0067D4                     __end_of_outgoingMessages:
 21139                           	opt stack 0
 21140                           tblptru	equ	0xFF8
 21141                           tblptrh	equ	0xFF7
 21142                           tblptrl	equ	0xFF6
 21143                           tablat	equ	0xFF5
 21144                           prodh	equ	0xFF4
 21145                           prodl	equ	0xFF3
 21146                           intcon	equ	0xFF2
 21147                           postinc0	equ	0xFEE
 21148                           wreg	equ	0xFE8
 21149                           indf1	equ	0xFE7
 21150                           postinc1	equ	0xFE6
 21151                           postdec1	equ	0xFE5
 21152                           fsr1h	equ	0xFE2
 21153                           fsr1l	equ	0xFE1
 21154                           indf2	equ	0xFDF
 21155                           postinc2	equ	0xFDE
 21156                           postdec2	equ	0xFDD
 21157                           fsr2h	equ	0xFDA
 21158                           fsr2l	equ	0xFD9
 21159                           status	equ	0xFD8
 21160                           
 21161 ;; *************** function _buildMessageST7540 *****************
 21162 ;; Defined at:
 21163 ;;		line 210 in file "ST7540.c"
 21164 ;; Parameters:    Size  Location     Type
 21165 ;;		None
 21166 ;; Auto vars:     Size  Location     Type
 21167 ;;  statusPtr       2   21[BANK0 ] PTR unsigned short 
 21168 ;;		 -> ABB_1.info.statusBits(2), ABB_1.info(3), 
 21169 ;;  packetCRCUS     2   23[BANK0 ] unsigned short 
 21170 ;;  index           1   27[BANK0 ] unsigned char 
 21171 ;;  dataBufLocUC    1   26[BANK0 ] unsigned char 
 21172 ;;  dataOffset      1   25[BANK0 ] unsigned char 
 21173 ;; Return value:  Size  Location     Type
 21174 ;;                  1    wreg      void 
 21175 ;; Registers used:
 21176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21177 ;; Tracked objects:
 21178 ;;		On entry : 0/0
 21179 ;;		On exit  : 0/0
 21180 ;;		Unchanged: 0/0
 21181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21183 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21184 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21185 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21186 ;;Total ram usage:       15 bytes
 21187 ;; Hardware stack levels used:    1
 21188 ;; Hardware stack levels required when called:    9
 21189 ;; This function calls:
 21190 ;;		_CRC16
 21191 ;; This function is called by:
 21192 ;;		_outgoingMessages
 21193 ;; This function uses a non-reentrant model
 21194 ;;
 21195                           
 21196                           	psect	text112
 21197  001770                     __ptext112:
 21198                           	opt stack 0
 21199  001770                     _buildMessageST7540:
 21200                           	opt stack 18
 21201                           
 21202                           ;ST7540.c: 211: unsigned char dataBufLocUC = 0;
 21203                           
 21204                           ;incstack = 0
 21205  001770  0E00               	movlw	0
 21206  001772  0100               	movlb	0	; () banked
 21207  001774  6F7A               	movwf	buildMessageST7540@dataBufLocUC& (0+255),b
 21208                           
 21209                           ;ST7540.c: 212: unsigned short packetCRCUS = 0;
 21210  001776  0E00               	movlw	0
 21211  001778  0100               	movlb	0	; () banked
 21212  00177A  6F78               	movwf	(buildMessageST7540@packetCRCUS+1)& (0+255),b
 21213  00177C  0E00               	movlw	0
 21214  00177E  6F77               	movwf	buildMessageST7540@packetCRCUS& (0+255),b
 21215                           
 21216                           ;ST7540.c: 213: unsigned char index = 0;
 21217  001780  0E00               	movlw	0
 21218  001782  0100               	movlb	0	; () banked
 21219  001784  6F7B               	movwf	buildMessageST7540@index& (0+255),b
 21220                           
 21221                           ;ST7540.c: 214: unsigned char dataOffset = 0;
 21222  001786  0E00               	movlw	0
 21223  001788  0100               	movlb	0	; () banked
 21224  00178A  6F79               	movwf	buildMessageST7540@dataOffset& (0+255),b
 21225                           
 21226                           ; BSR set to: 0
 21227                           ;ST7540.c: 215: if(outgoingQueue.queue_pointer >= outgoingQueue.length)
 21228  00178C  0101               	movlb	1	; () banked
 21229  00178E  5100               	movf	_outgoingQueue& (0+255),w,b
 21230  001790  0101               	movlb	1	; () banked
 21231  001792  5D01               	subwf	(_outgoingQueue+1)& (0+255),w,b
 21232  001794  A0D8               	btfss	status,0,c
 21233  001796  D006               	goto	l13754
 21234                           
 21235                           ; BSR set to: 1
 21236                           ;ST7540.c: 216: index = outgoingQueue.queue_pointer - outgoingQueue.length;
 21237  001798  0101               	movlb	1	; () banked
 21238  00179A  5100               	movf	_outgoingQueue& (0+255),w,b
 21239  00179C  0800               	sublw	0
 21240  00179E  0101               	movlb	1	; () banked
 21241  0017A0  2501               	addwf	(_outgoingQueue+1)& (0+255),w,b
 21242  0017A2  D006               	goto	L16
 21243  0017A4                     l13754:
 21244                           
 21245                           ;ST7540.c: 217: else
 21246                           ;ST7540.c: 218: index = 20 + outgoingQueue.queue_pointer - outgoingQueue.length;
 21247  0017A4  0101               	movlb	1	; () banked
 21248  0017A6  5100               	movf	_outgoingQueue& (0+255),w,b
 21249  0017A8  0800               	sublw	0
 21250  0017AA  0101               	movlb	1	; () banked
 21251  0017AC  2501               	addwf	(_outgoingQueue+1)& (0+255),w,b
 21252  0017AE  0F14               	addlw	20
 21253  0017B0                     L16:
 21254  0017B0  0100               	movlb	0	; () banked
 21255  0017B2  6F7B               	movwf	buildMessageST7540@index& (0+255),b
 21256                           
 21257                           ; BSR set to: 0
 21258                           ;ST7540.c: 220: bufferTXST7540UCA[0] = 0xAA;
 21259                           
 21260                           ; BSR set to: 0
 21261  0017B4  0EAA               	movlw	170
 21262  0017B6  0102               	movlb	2	; () banked
 21263  0017B8  6F00               	movwf	_bufferTXST7540UCA& (0+255),b
 21264                           
 21265                           ; BSR set to: 2
 21266                           ;ST7540.c: 221: bufferTXST7540UCA[1] = 0xAA;
 21267  0017BA  0EAA               	movlw	170
 21268  0017BC  0102               	movlb	2	; () banked
 21269  0017BE  6F01               	movwf	(_bufferTXST7540UCA+1)& (0+255),b
 21270                           
 21271                           ; BSR set to: 2
 21272                           ;ST7540.c: 222: bufferTXST7540UCA[2] = (unsigned long short) 0x9b58 >> 8;
 21273  0017C0  0E9B               	movlw	155
 21274  0017C2  0102               	movlb	2	; () banked
 21275  0017C4  6F02               	movwf	(_bufferTXST7540UCA+2)& (0+255),b
 21276                           
 21277                           ; BSR set to: 2
 21278                           ;ST7540.c: 223: bufferTXST7540UCA[3] = (unsigned long short) 0x9b58;
 21279  0017C6  0E58               	movlw	88
 21280  0017C8  0102               	movlb	2	; () banked
 21281  0017CA  6F03               	movwf	(_bufferTXST7540UCA+3)& (0+255),b
 21282                           
 21283                           ; BSR set to: 2
 21284                           ;ST7540.c: 224: bufferTXST7540UCA[4] = 9 + outgoingQueue.queue_store[index].data_length;
 21285  0017CC  0100               	movlb	0	; () banked
 21286  0017CE  517B               	movf	buildMessageST7540@index& (0+255),w,b
 21287  0017D0  0D07               	mullw	7
 21288  0017D2  0E02               	movlw	2
 21289  0017D4  26F3               	addwf	prodl,f,c
 21290  0017D6  0E00               	movlw	0
 21291  0017D8  22F4               	addwfc	prodh,f,c
 21292  0017DA  0E00               	movlw	low _outgoingQueue
 21293  0017DC  24F3               	addwf	prodl,w,c
 21294  0017DE  6ED9               	movwf	fsr2l,c
 21295  0017E0  0E01               	movlw	high _outgoingQueue
 21296  0017E2  20F4               	addwfc	prodh,w,c
 21297  0017E4  6EDA               	movwf	fsr2h,c
 21298  0017E6  50DF               	movf	indf2,w,c
 21299  0017E8  0F09               	addlw	9
 21300  0017EA  0102               	movlb	2	; () banked
 21301  0017EC  6F04               	movwf	(_bufferTXST7540UCA+4)& (0+255),b
 21302                           
 21303                           ; BSR set to: 2
 21304                           ;ST7540.c: 225: bufferTXST7540UCA[5] = 0x0008 >> 8;
 21305  0017EE  0E00               	movlw	0
 21306  0017F0  0102               	movlb	2	; () banked
 21307  0017F2  6F05               	movwf	(_bufferTXST7540UCA+5)& (0+255),b
 21308                           
 21309                           ; BSR set to: 2
 21310                           ;ST7540.c: 226: bufferTXST7540UCA[6] = 0x0008;
 21311  0017F4  0E08               	movlw	8
 21312  0017F6  0102               	movlb	2	; () banked
 21313  0017F8  6F06               	movwf	(_bufferTXST7540UCA+6)& (0+255),b
 21314                           
 21315                           ; BSR set to: 2
 21316                           ;ST7540.c: 227: bufferTXST7540UCA[7] = outgoingQueue.queue_store[index].destination >> 8
      +                          ;
 21317  0017FA  0100               	movlb	0	; () banked
 21318  0017FC  517B               	movf	buildMessageST7540@index& (0+255),w,b
 21319  0017FE  0D07               	mullw	7
 21320  001800  0E03               	movlw	3
 21321  001802  26F3               	addwf	prodl,f,c
 21322  001804  0E00               	movlw	0
 21323  001806  22F4               	addwfc	prodh,f,c
 21324  001808  0E00               	movlw	low _outgoingQueue
 21325  00180A  24F3               	addwf	prodl,w,c
 21326  00180C  6ED9               	movwf	fsr2l,c
 21327  00180E  0E01               	movlw	high _outgoingQueue
 21328  001810  20F4               	addwfc	prodh,w,c
 21329  001812  6EDA               	movwf	fsr2h,c
 21330  001814  CFDE F06D          	movff	postinc2,??_buildMessageST7540
 21331  001818  CFDD F06E          	movff	postdec2,??_buildMessageST7540+1
 21332  00181C  C06E  F06D         	movff	??_buildMessageST7540+1,??_buildMessageST7540
 21333  001820  0100               	movlb	0	; () banked
 21334  001822  6B6E               	clrf	(??_buildMessageST7540+1)& (0+255),b
 21335  001824  0100               	movlb	0	; () banked
 21336  001826  516D               	movf	??_buildMessageST7540& (0+255),w,b
 21337  001828  0102               	movlb	2	; () banked
 21338  00182A  6F07               	movwf	(_bufferTXST7540UCA+7)& (0+255),b
 21339                           
 21340                           ; BSR set to: 2
 21341                           ;ST7540.c: 228: bufferTXST7540UCA[8] = outgoingQueue.queue_store[index].destination;
 21342  00182C  0100               	movlb	0	; () banked
 21343  00182E  517B               	movf	buildMessageST7540@index& (0+255),w,b
 21344  001830  0D07               	mullw	7
 21345  001832  0E03               	movlw	3
 21346  001834  26F3               	addwf	prodl,f,c
 21347  001836  0E00               	movlw	0
 21348  001838  22F4               	addwfc	prodh,f,c
 21349  00183A  0E00               	movlw	low _outgoingQueue
 21350  00183C  24F3               	addwf	prodl,w,c
 21351  00183E  6ED9               	movwf	fsr2l,c
 21352  001840  0E01               	movlw	high _outgoingQueue
 21353  001842  20F4               	addwfc	prodh,w,c
 21354  001844  6EDA               	movwf	fsr2h,c
 21355  001846  50DF               	movf	indf2,w,c
 21356  001848  0102               	movlb	2	; () banked
 21357  00184A  6F08               	movwf	(_bufferTXST7540UCA+8)& (0+255),b
 21358                           
 21359                           ; BSR set to: 2
 21360                           ;ST7540.c: 229: bufferTXST7540UCA[9] = packetNumberUC++;
 21361  00184C  C0C8  F209         	movff	_packetNumberUC,_bufferTXST7540UCA+9
 21362                           
 21363                           ; BSR set to: 2
 21364  001850  0100               	movlb	0	; () banked
 21365  001852  2BC8               	incf	_packetNumberUC& (0+255),f,b
 21366                           
 21367                           ; BSR set to: 0
 21368                           ;ST7540.c: 230: bufferTXST7540UCA[10] = outgoingQueue.queue_store[index].command;
 21369  001854  0100               	movlb	0	; () banked
 21370  001856  517B               	movf	buildMessageST7540@index& (0+255),w,b
 21371  001858  0D07               	mullw	7
 21372  00185A  0E06               	movlw	6
 21373  00185C  26F3               	addwf	prodl,f,c
 21374  00185E  0E00               	movlw	0
 21375  001860  22F4               	addwfc	prodh,f,c
 21376  001862  0E00               	movlw	low _outgoingQueue
 21377  001864  24F3               	addwf	prodl,w,c
 21378  001866  6ED9               	movwf	fsr2l,c
 21379  001868  0E01               	movlw	high _outgoingQueue
 21380  00186A  20F4               	addwfc	prodh,w,c
 21381  00186C  6EDA               	movwf	fsr2h,c
 21382  00186E  50DF               	movf	indf2,w,c
 21383  001870  0102               	movlb	2	; () banked
 21384  001872  6F0A               	movwf	(_bufferTXST7540UCA+10)& (0+255),b
 21385                           
 21386                           ; BSR set to: 2
 21387                           ;ST7540.c: 232: if(bufferTXST7540UCA[10] == 0b00001011){
 21388  001874  0E0B               	movlw	11
 21389  001876  0102               	movlb	2	; () banked
 21390  001878  190A               	xorwf	(_bufferTXST7540UCA+10)& (0+255),w,b
 21391  00187A  A4D8               	btfss	status,2,c
 21392  00187C  D027               	goto	l13794
 21393                           
 21394                           ; BSR set to: 2
 21395                           ;ST7540.c: 233: unsigned short *statusPtr;
 21396                           ;ST7540.c: 234: statusPtr = &ABB_1.info.statusBits;
 21397  00187E  0EC1               	movlw	low (_ABB_1+1)
 21398  001880  0100               	movlb	0	; () banked
 21399  001882  6F75               	movwf	buildMessageST7540@statusPtr& (0+255),b
 21400  001884  0E03               	movlw	high (_ABB_1+1)
 21401  001886  0100               	movlb	0	; () banked
 21402  001888  6F76               	movwf	(buildMessageST7540@statusPtr+1)& (0+255),b
 21403                           
 21404                           ; BSR set to: 0
 21405                           ;ST7540.c: 235: bufferTXST7540UCA[11] = ABB_1.dets_length;
 21406  00188A  C3C0  F20B         	movff	_ABB_1,_bufferTXST7540UCA+11
 21407                           
 21408                           ; BSR set to: 0
 21409                           ;ST7540.c: 236: bufferTXST7540UCA[12] = ABB_1.info.CRC;
 21410  00188E  C3C3  F20C         	movff	_ABB_1+3,_bufferTXST7540UCA+12
 21411                           
 21412                           ; BSR set to: 0
 21413                           ;ST7540.c: 237: bufferTXST7540UCA[13] = *statusPtr >> 8;
 21414  001892  C075  FFD9         	movff	buildMessageST7540@statusPtr,fsr2l
 21415  001896  C076  FFDA         	movff	buildMessageST7540@statusPtr+1,fsr2h
 21416  00189A  CFDE F06D          	movff	postinc2,??_buildMessageST7540
 21417  00189E  CFDD F06E          	movff	postdec2,??_buildMessageST7540+1
 21418  0018A2  C06E  F06D         	movff	??_buildMessageST7540+1,??_buildMessageST7540
 21419  0018A6  0100               	movlb	0	; () banked
 21420  0018A8  6B6E               	clrf	(??_buildMessageST7540+1)& (0+255),b
 21421  0018AA  0100               	movlb	0	; () banked
 21422  0018AC  516D               	movf	??_buildMessageST7540& (0+255),w,b
 21423  0018AE  0102               	movlb	2	; () banked
 21424  0018B0  6F0D               	movwf	(_bufferTXST7540UCA+13)& (0+255),b
 21425                           
 21426                           ; BSR set to: 2
 21427                           ;ST7540.c: 238: bufferTXST7540UCA[14] = *statusPtr;
 21428  0018B2  C075  FFD9         	movff	buildMessageST7540@statusPtr,fsr2l
 21429  0018B6  C076  FFDA         	movff	buildMessageST7540@statusPtr+1,fsr2h
 21430  0018BA  50DF               	movf	indf2,w,c
 21431  0018BC  0102               	movlb	2	; () banked
 21432  0018BE  6F0E               	movwf	(_bufferTXST7540UCA+14)& (0+255),b
 21433                           
 21434                           ;ST7540.c: 239: bufferTXST7540UCA[4] += 4;
 21435  0018C0  0E04               	movlw	4
 21436  0018C2  0102               	movlb	2	; () banked
 21437  0018C4  2704               	addwf	(_bufferTXST7540UCA+4)& (0+255),f,b
 21438                           
 21439                           ; BSR set to: 2
 21440                           ;ST7540.c: 240: dataOffset = 4;
 21441  0018C6  0E04               	movlw	4
 21442  0018C8  0100               	movlb	0	; () banked
 21443  0018CA  6F79               	movwf	buildMessageST7540@dataOffset& (0+255),b
 21444  0018CC                     l13794:
 21445                           
 21446                           ;ST7540.c: 241: }
 21447                           ;ST7540.c: 242: for(dataBufLocUC = dataOffset; dataBufLocUC < outgoingQueue.queue_store[
      +                          index].data_length + dataOffset; dataBufLocUC++)
 21448  0018CC  C079  F07A         	movff	buildMessageST7540@dataOffset,buildMessageST7540@dataBufLocUC
 21449  0018D0  D048               	goto	l13800
 21450  0018D2                     l13796:
 21451                           
 21452                           ;ST7540.c: 243: bufferTXST7540UCA[dataBufLocUC + 11] = outgoingQueue.queue_store[index].
      +                          data[dataBufLocUC - dataOffset];
 21453  0018D2  0100               	movlb	0	; () banked
 21454  0018D4  5179               	movf	buildMessageST7540@dataOffset& (0+255),w,b
 21455  0018D6  0100               	movlb	0	; () banked
 21456  0018D8  6F6D               	movwf	??_buildMessageST7540& (0+255),b
 21457  0018DA  6B6E               	clrf	(??_buildMessageST7540+1)& (0+255),b
 21458  0018DC  0100               	movlb	0	; () banked
 21459  0018DE  1F6D               	comf	??_buildMessageST7540& (0+255),f,b
 21460  0018E0  1F6E               	comf	(??_buildMessageST7540+1)& (0+255),f,b
 21461  0018E2  4B6D               	infsnz	??_buildMessageST7540& (0+255),f,b
 21462  0018E4  2B6E               	incf	(??_buildMessageST7540+1)& (0+255),f,b
 21463  0018E6  0100               	movlb	0	; () banked
 21464  0018E8  517A               	movf	buildMessageST7540@dataBufLocUC& (0+255),w,b
 21465  0018EA  0100               	movlb	0	; () banked
 21466  0018EC  6F6F               	movwf	(??_buildMessageST7540+2)& (0+255),b
 21467  0018EE  6B70               	clrf	(??_buildMessageST7540+3)& (0+255),b
 21468  0018F0  0100               	movlb	0	; () banked
 21469  0018F2  516D               	movf	??_buildMessageST7540& (0+255),w,b
 21470  0018F4  0100               	movlb	0	; () banked
 21471  0018F6  276F               	addwf	(??_buildMessageST7540+2)& (0+255),f,b
 21472  0018F8  0100               	movlb	0	; () banked
 21473  0018FA  516E               	movf	(??_buildMessageST7540+1)& (0+255),w,b
 21474  0018FC  0100               	movlb	0	; () banked
 21475  0018FE  2370               	addwfc	(??_buildMessageST7540+3)& (0+255),f,b
 21476  001900  0100               	movlb	0	; () banked
 21477  001902  517B               	movf	buildMessageST7540@index& (0+255),w,b
 21478  001904  0D07               	mullw	7
 21479  001906  0E07               	movlw	7
 21480  001908  26F3               	addwf	prodl,f,c
 21481  00190A  0E00               	movlw	0
 21482  00190C  22F4               	addwfc	prodh,f,c
 21483  00190E  0E00               	movlw	low _outgoingQueue
 21484  001910  24F3               	addwf	prodl,w,c
 21485  001912  6ED9               	movwf	fsr2l,c
 21486  001914  0E01               	movlw	high _outgoingQueue
 21487  001916  20F4               	addwfc	prodh,w,c
 21488  001918  6EDA               	movwf	fsr2h,c
 21489  00191A  CFDE F071          	movff	postinc2,??_buildMessageST7540+4
 21490  00191E  CFDD F072          	movff	postdec2,??_buildMessageST7540+5
 21491  001922  0100               	movlb	0	; () banked
 21492  001924  516F               	movf	(??_buildMessageST7540+2)& (0+255),w,b
 21493  001926  0100               	movlb	0	; () banked
 21494  001928  2571               	addwf	(??_buildMessageST7540+4)& (0+255),w,b
 21495  00192A  6ED9               	movwf	fsr2l,c
 21496  00192C  0100               	movlb	0	; () banked
 21497  00192E  5170               	movf	(??_buildMessageST7540+3)& (0+255),w,b
 21498  001930  0100               	movlb	0	; () banked
 21499  001932  2172               	addwfc	(??_buildMessageST7540+5)& (0+255),w,b
 21500  001934  6EDA               	movwf	fsr2h,c
 21501  001936  0100               	movlb	0	; () banked
 21502  001938  517A               	movf	buildMessageST7540@dataBufLocUC& (0+255),w,b
 21503  00193A  0100               	movlb	0	; () banked
 21504  00193C  6F73               	movwf	(??_buildMessageST7540+6)& (0+255),b
 21505  00193E  6B74               	clrf	(??_buildMessageST7540+7)& (0+255),b
 21506  001940  0E0B               	movlw	11
 21507  001942  0100               	movlb	0	; () banked
 21508  001944  2773               	addwf	(??_buildMessageST7540+6)& (0+255),f,b
 21509  001946  0E00               	movlw	0
 21510  001948  2374               	addwfc	(??_buildMessageST7540+7)& (0+255),f,b
 21511  00194A  0E00               	movlw	low _bufferTXST7540UCA
 21512  00194C  0100               	movlb	0	; () banked
 21513  00194E  2573               	addwf	(??_buildMessageST7540+6)& (0+255),w,b
 21514  001950  6EE1               	movwf	fsr1l,c
 21515  001952  0E02               	movlw	high _bufferTXST7540UCA
 21516  001954  0100               	movlb	0	; () banked
 21517  001956  2174               	addwfc	(??_buildMessageST7540+7)& (0+255),w,b
 21518  001958  6EE2               	movwf	fsr1h,c
 21519  00195A  CFDF FFE7          	movff	indf2,indf1
 21520                           
 21521                           ; BSR set to: 0
 21522  00195E  0100               	movlb	0	; () banked
 21523  001960  2B7A               	incf	buildMessageST7540@dataBufLocUC& (0+255),f,b
 21524  001962                     l13800:
 21525  001962  0100               	movlb	0	; () banked
 21526  001964  517B               	movf	buildMessageST7540@index& (0+255),w,b
 21527  001966  0D07               	mullw	7
 21528  001968  0E02               	movlw	2
 21529  00196A  26F3               	addwf	prodl,f,c
 21530  00196C  0E00               	movlw	0
 21531  00196E  22F4               	addwfc	prodh,f,c
 21532  001970  0E00               	movlw	low _outgoingQueue
 21533  001972  24F3               	addwf	prodl,w,c
 21534  001974  6ED9               	movwf	fsr2l,c
 21535  001976  0E01               	movlw	high _outgoingQueue
 21536  001978  20F4               	addwfc	prodh,w,c
 21537  00197A  6EDA               	movwf	fsr2h,c
 21538  00197C  50DF               	movf	indf2,w,c
 21539  00197E  0100               	movlb	0	; () banked
 21540  001980  6F6D               	movwf	??_buildMessageST7540& (0+255),b
 21541  001982  6B6E               	clrf	(??_buildMessageST7540+1)& (0+255),b
 21542  001984  0100               	movlb	0	; () banked
 21543  001986  5179               	movf	buildMessageST7540@dataOffset& (0+255),w,b
 21544  001988  0100               	movlb	0	; () banked
 21545  00198A  276D               	addwf	??_buildMessageST7540& (0+255),f,b
 21546  00198C  0E00               	movlw	0
 21547  00198E  236E               	addwfc	(??_buildMessageST7540+1)& (0+255),f,b
 21548  001990  0100               	movlb	0	; () banked
 21549  001992  517A               	movf	buildMessageST7540@dataBufLocUC& (0+255),w,b
 21550  001994  0100               	movlb	0	; () banked
 21551  001996  6F6F               	movwf	(??_buildMessageST7540+2)& (0+255),b
 21552  001998  6B70               	clrf	(??_buildMessageST7540+3)& (0+255),b
 21553  00199A  0100               	movlb	0	; () banked
 21554  00199C  516D               	movf	??_buildMessageST7540& (0+255),w,b
 21555  00199E  0100               	movlb	0	; () banked
 21556  0019A0  5D6F               	subwf	(??_buildMessageST7540+2)& (0+255),w,b
 21557  0019A2  0100               	movlb	0	; () banked
 21558  0019A4  5170               	movf	(??_buildMessageST7540+3)& (0+255),w,b
 21559  0019A6  0A80               	xorlw	128
 21560  0019A8  0100               	movlb	0	; () banked
 21561  0019AA  6F71               	movwf	(??_buildMessageST7540+4)& (0+255),b
 21562  0019AC  0100               	movlb	0	; () banked
 21563  0019AE  516E               	movf	(??_buildMessageST7540+1)& (0+255),w,b
 21564  0019B0  0A80               	xorlw	128
 21565  0019B2  0100               	movlb	0	; () banked
 21566  0019B4  5971               	subwfb	(??_buildMessageST7540+4)& (0+255),w,b
 21567  0019B6  A0D8               	btfss	status,0,c
 21568  0019B8  D78C               	goto	l13796
 21569                           
 21570                           ; BSR set to: 0
 21571                           ;ST7540.c: 244: dataBufLocUC += 11;
 21572                           
 21573                           ; BSR set to: 0
 21574  0019BA  0E0B               	movlw	11
 21575  0019BC  0100               	movlb	0	; () banked
 21576  0019BE  277A               	addwf	buildMessageST7540@dataBufLocUC& (0+255),f,b
 21577                           
 21578                           ; BSR set to: 0
 21579                           ;ST7540.c: 246: packetCRCUS = CRC16(bufferTXST7540UCA + 4, 9 + outgoingQueue.queue_store
      +                          [index].data_length - 2 + dataOffset);
 21580  0019C0  0E04               	movlw	low (_bufferTXST7540UCA+4)
 21581  0019C2  0100               	movlb	0	; () banked
 21582  0019C4  6F60               	movwf	CRC16@data_p& (0+255),b
 21583  0019C6  0E02               	movlw	high (_bufferTXST7540UCA+4)
 21584  0019C8  0100               	movlb	0	; () banked
 21585  0019CA  6F61               	movwf	(CRC16@data_p+1)& (0+255),b
 21586  0019CC  0100               	movlb	0	; () banked
 21587  0019CE  517B               	movf	buildMessageST7540@index& (0+255),w,b
 21588  0019D0  0D07               	mullw	7
 21589  0019D2  0E02               	movlw	2
 21590  0019D4  26F3               	addwf	prodl,f,c
 21591  0019D6  0E00               	movlw	0
 21592  0019D8  22F4               	addwfc	prodh,f,c
 21593  0019DA  0E00               	movlw	low _outgoingQueue
 21594  0019DC  24F3               	addwf	prodl,w,c
 21595  0019DE  6ED9               	movwf	fsr2l,c
 21596  0019E0  0E01               	movlw	high _outgoingQueue
 21597  0019E2  20F4               	addwfc	prodh,w,c
 21598  0019E4  6EDA               	movwf	fsr2h,c
 21599  0019E6  50DF               	movf	indf2,w,c
 21600  0019E8  0100               	movlb	0	; () banked
 21601  0019EA  6F6D               	movwf	??_buildMessageST7540& (0+255),b
 21602  0019EC  6B6E               	clrf	(??_buildMessageST7540+1)& (0+255),b
 21603  0019EE  0100               	movlb	0	; () banked
 21604  0019F0  5179               	movf	buildMessageST7540@dataOffset& (0+255),w,b
 21605  0019F2  0100               	movlb	0	; () banked
 21606  0019F4  276D               	addwf	??_buildMessageST7540& (0+255),f,b
 21607  0019F6  0E00               	movlw	0
 21608  0019F8  236E               	addwfc	(??_buildMessageST7540+1)& (0+255),f,b
 21609  0019FA  0E07               	movlw	7
 21610  0019FC  0100               	movlb	0	; () banked
 21611  0019FE  256D               	addwf	??_buildMessageST7540& (0+255),w,b
 21612  001A00  0100               	movlb	0	; () banked
 21613  001A02  6F62               	movwf	CRC16@length& (0+255),b
 21614  001A04  0E00               	movlw	0
 21615  001A06  0100               	movlb	0	; () banked
 21616  001A08  216E               	addwfc	(??_buildMessageST7540+1)& (0+255),w,b
 21617  001A0A  0100               	movlb	0	; () banked
 21618  001A0C  6F63               	movwf	(CRC16@length+1)& (0+255),b
 21619  001A0E  EC08  F01E         	call	_CRC16	;wreg free
 21620  001A12  C060  F077         	movff	?_CRC16,buildMessageST7540@packetCRCUS
 21621  001A16  C061  F078         	movff	?_CRC16+1,buildMessageST7540@packetCRCUS+1
 21622                           
 21623                           ;ST7540.c: 247: bufferTXST7540UCA[dataBufLocUC++] = packetCRCUS >> 8;
 21624  001A1A  0100               	movlb	0	; () banked
 21625  001A1C  517A               	movf	buildMessageST7540@dataBufLocUC& (0+255),w,b
 21626  001A1E  0D01               	mullw	1
 21627  001A20  0E00               	movlw	low _bufferTXST7540UCA
 21628  001A22  24F3               	addwf	prodl,w,c
 21629  001A24  6ED9               	movwf	fsr2l,c
 21630  001A26  0E02               	movlw	high _bufferTXST7540UCA
 21631  001A28  20F4               	addwfc	prodh,w,c
 21632  001A2A  6EDA               	movwf	fsr2h,c
 21633  001A2C  0100               	movlb	0	; () banked
 21634  001A2E  5178               	movf	(buildMessageST7540@packetCRCUS+1)& (0+255),w,b
 21635  001A30  6EDF               	movwf	indf2,c
 21636                           
 21637                           ; BSR set to: 0
 21638  001A32  0100               	movlb	0	; () banked
 21639  001A34  2B7A               	incf	buildMessageST7540@dataBufLocUC& (0+255),f,b
 21640                           
 21641                           ; BSR set to: 0
 21642                           ;ST7540.c: 248: bufferTXST7540UCA[dataBufLocUC] = packetCRCUS;
 21643  001A36  0100               	movlb	0	; () banked
 21644  001A38  517A               	movf	buildMessageST7540@dataBufLocUC& (0+255),w,b
 21645  001A3A  0D01               	mullw	1
 21646  001A3C  0E00               	movlw	low _bufferTXST7540UCA
 21647  001A3E  24F3               	addwf	prodl,w,c
 21648  001A40  6ED9               	movwf	fsr2l,c
 21649  001A42  0E02               	movlw	high _bufferTXST7540UCA
 21650  001A44  20F4               	addwfc	prodh,w,c
 21651  001A46  6EDA               	movwf	fsr2h,c
 21652  001A48  C077  FFDF         	movff	buildMessageST7540@packetCRCUS,indf2
 21653                           
 21654                           ; BSR set to: 0
 21655                           ;ST7540.c: 249: bufferTXLenUCA = dataBufLocUC;
 21656  001A4C  C07A  F04B         	movff	buildMessageST7540@dataBufLocUC,_bufferTXLenUCA
 21657                           
 21658                           ; BSR set to: 0
 21659                           ;ST7540.c: 251: outgoingQueue.length--;
 21660  001A50  0101               	movlb	1	; () banked
 21661  001A52  0700               	decf	_outgoingQueue& (0+255),f,b
 21662                           
 21663                           ; BSR set to: 1
 21664  001A54  0012               	return		;funcret
 21665  001A56                     __end_of_buildMessageST7540:
 21666                           	opt stack 0
 21667                           tblptru	equ	0xFF8
 21668                           tblptrh	equ	0xFF7
 21669                           tblptrl	equ	0xFF6
 21670                           tablat	equ	0xFF5
 21671                           prodh	equ	0xFF4
 21672                           prodl	equ	0xFF3
 21673                           intcon	equ	0xFF2
 21674                           postinc0	equ	0xFEE
 21675                           wreg	equ	0xFE8
 21676                           indf1	equ	0xFE7
 21677                           postinc1	equ	0xFE6
 21678                           postdec1	equ	0xFE5
 21679                           fsr1h	equ	0xFE2
 21680                           fsr1l	equ	0xFE1
 21681                           indf2	equ	0xFDF
 21682                           postinc2	equ	0xFDE
 21683                           postdec2	equ	0xFDD
 21684                           fsr2h	equ	0xFDA
 21685                           fsr2l	equ	0xFD9
 21686                           status	equ	0xFD8
 21687                           
 21688 ;; *************** function _StartTransmitST7540 *****************
 21689 ;; Defined at:
 21690 ;;		line 254 in file "ST7540.c"
 21691 ;; Parameters:    Size  Location     Type
 21692 ;;		None
 21693 ;; Auto vars:     Size  Location     Type
 21694 ;;  discardUC       1    0[BANK0 ] unsigned char 
 21695 ;; Return value:  Size  Location     Type
 21696 ;;                  1    wreg      void 
 21697 ;; Registers used:
 21698 ;;		wreg, status,2, status,0
 21699 ;; Tracked objects:
 21700 ;;		On entry : 0/0
 21701 ;;		On exit  : 0/0
 21702 ;;		Unchanged: 0/0
 21703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21705 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21707 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21708 ;;Total ram usage:        1 bytes
 21709 ;; Hardware stack levels used:    1
 21710 ;; Hardware stack levels required when called:    8
 21711 ;; This function calls:
 21712 ;;		Nothing
 21713 ;; This function is called by:
 21714 ;;		_outgoingMessages
 21715 ;; This function uses a non-reentrant model
 21716 ;;
 21717                           
 21718                           	psect	text113
 21719  007986                     __ptext113:
 21720                           	opt stack 0
 21721  007986                     _StartTransmitST7540:
 21722                           	opt stack 19
 21723                           
 21724                           ;ST7540.c: 255: unsigned char discardUC;
 21725                           ;ST7540.c: 257: flagST7540 |= 1;
 21726                           
 21727                           ; BSR set to: 1
 21728                           ;incstack = 0
 21729  007986  804C               	bsf	_flagST7540,0,c
 21730                           
 21731                           ;ST7540.c: 258: LATCbits.LATC6 = 0;
 21732  007988  9C7B               	bcf	3963,6,c	;volatile
 21733  00798A                     l752:
 21734  00798A  B68B               	btfsc	3979,3,c	;volatile
 21735  00798C  D7FE               	goto	l752
 21736                           
 21737                           ;ST7540.c: 260: SSP1CON1bits.SSPEN = 1;
 21738  00798E  8A95               	bsf	3989,5,c	;volatile
 21739                           
 21740                           ;ST7540.c: 261: discardUC = SSP1BUF;
 21741  007990  CF91 F060          	movff	3985,StartTransmitST7540@discardUC	;volatile
 21742                           
 21743                           ;ST7540.c: 262: SSP1BUF = bufferTXST7540UCA[0];
 21744  007994  C200  FF91         	movff	_bufferTXST7540UCA,3985	;volatile
 21745                           
 21746                           ;ST7540.c: 263: bufferTXNextUCA = 1;
 21747  007998  0E01               	movlw	1
 21748  00799A  6E4A               	movwf	_bufferTXNextUCA,c
 21749  00799C  0012               	return		;funcret
 21750  00799E                     __end_of_StartTransmitST7540:
 21751                           	opt stack 0
 21752                           tblptru	equ	0xFF8
 21753                           tblptrh	equ	0xFF7
 21754                           tblptrl	equ	0xFF6
 21755                           tablat	equ	0xFF5
 21756                           prodh	equ	0xFF4
 21757                           prodl	equ	0xFF3
 21758                           intcon	equ	0xFF2
 21759                           postinc0	equ	0xFEE
 21760                           wreg	equ	0xFE8
 21761                           indf1	equ	0xFE7
 21762                           postinc1	equ	0xFE6
 21763                           postdec1	equ	0xFE5
 21764                           fsr1h	equ	0xFE2
 21765                           fsr1l	equ	0xFE1
 21766                           indf2	equ	0xFDF
 21767                           postinc2	equ	0xFDE
 21768                           postdec2	equ	0xFDD
 21769                           fsr2h	equ	0xFDA
 21770                           fsr2l	equ	0xFD9
 21771                           status	equ	0xFD8
 21772                           
 21773 ;; *************** function _ledStateHandler *****************
 21774 ;; Defined at:
 21775 ;;		line 114 in file "led.c"
 21776 ;; Parameters:    Size  Location     Type
 21777 ;;		None
 21778 ;; Auto vars:     Size  Location     Type
 21779 ;;		None
 21780 ;; Return value:  Size  Location     Type
 21781 ;;                  1    wreg      void 
 21782 ;; Registers used:
 21783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21784 ;; Tracked objects:
 21785 ;;		On entry : 0/0
 21786 ;;		On exit  : 0/0
 21787 ;;		Unchanged: 0/0
 21788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21793 ;;Total ram usage:        0 bytes
 21794 ;; Hardware stack levels used:    1
 21795 ;; Hardware stack levels required when called:    9
 21796 ;; This function calls:
 21797 ;;		_checkIfTagIsRemoved
 21798 ;; This function is called by:
 21799 ;;		_currentStateHandler
 21800 ;; This function uses a non-reentrant model
 21801 ;;
 21802                           
 21803                           	psect	text114
 21804  002B42                     __ptext114:
 21805                           	opt stack 0
 21806  002B42                     _ledStateHandler:
 21807                           	opt stack 19
 21808                           
 21809                           ;led.c: 115: if(state.led.current == 15 || state.led.current == 14){
 21810                           
 21811                           ;incstack = 0
 21812  002B42  0E0F               	movlw	15
 21813  002B44  0101               	movlb	1	; () banked
 21814  002B46  19B3               	xorwf	(_state+12)& (0+255),w,b
 21815  002B48  B4D8               	btfsc	status,2,c
 21816  002B4A  D005               	goto	l14680
 21817                           
 21818                           ; BSR set to: 1
 21819  002B4C  0E0E               	movlw	14
 21820  002B4E  0101               	movlb	1	; () banked
 21821  002B50  19B3               	xorwf	(_state+12)& (0+255),w,b
 21822  002B52  A4D8               	btfss	status,2,c
 21823  002B54  D0D4               	goto	l14762
 21824  002B56                     l14680:
 21825                           
 21826                           ; BSR set to: 1
 21827                           ;led.c: 116: if(COUNTERS.sec2 < 2000){
 21828  002B56  0ED0               	movlw	208
 21829  002B58  0100               	movlb	0	; () banked
 21830  002B5A  5DAB               	subwf	(_COUNTERS+8)& (0+255),w,b
 21831  002B5C  0E07               	movlw	7
 21832  002B5E  0100               	movlb	0	; () banked
 21833  002B60  59AC               	subwfb	(_COUNTERS+9)& (0+255),w,b
 21834  002B62  B0D8               	btfsc	status,0,c
 21835  002B64  0012               	return	
 21836                           
 21837                           ; BSR set to: 0
 21838                           ;led.c: 117: if(checkIfTagIsRemoved() || FLAGS.sec2)
 21839  002B66  ECAF  F03D         	call	_checkIfTagIsRemoved	;wreg free
 21840  002B6A  0900               	iorlw	0
 21841  002B6C  B4D8               	btfsc	status,2,c
 21842  002B6E  BA37               	btfsc	_FLAGS,5,c
 21843  002B70  D001               	goto	l14686
 21844  002B72  D004               	goto	l1454
 21845  002B74                     l14686:
 21846                           
 21847                           ;led.c: 118: state.led.next = 1;
 21848  002B74  0E01               	movlw	1
 21849  002B76  0101               	movlb	1	; () banked
 21850  002B78  6FB4               	movwf	(_state+13)& (0+255),b
 21851  002B7A  0012               	return	
 21852  002B7C                     l1454:
 21853                           
 21854                           ;led.c: 119: else
 21855                           ;led.c: 120: state.led.next = state.led.current;
 21856  002B7C  C1B3  F1B4         	movff	_state+12,_state+13
 21857                           
 21858                           ;led.c: 121: }
 21859                           ;led.c: 122: return;
 21860  002B80  0012               	return	
 21861  002B82                     l14688:
 21862                           
 21863                           ;led.c: 129: state.led.next = 8;
 21864  002B82  0E08               	movlw	8
 21865  002B84  0101               	movlb	1	; () banked
 21866  002B86  6FB4               	movwf	(_state+13)& (0+255),b
 21867                           
 21868                           ;led.c: 130: break;
 21869  002B88  0012               	return	
 21870  002B8A                     l14690:
 21871                           
 21872                           ; BSR set to: 1
 21873                           ;led.c: 132: state.led.next = 1;
 21874  002B8A  0E01               	movlw	1
 21875  002B8C  0101               	movlb	1	; () banked
 21876  002B8E  6FB4               	movwf	(_state+13)& (0+255),b
 21877                           
 21878                           ;led.c: 133: break;
 21879  002B90  0012               	return	
 21880  002B92                     l14692:
 21881                           
 21882                           ; BSR set to: 1
 21883                           ;led.c: 135: state.led.next = 8;
 21884  002B92  0E08               	movlw	8
 21885  002B94  0101               	movlb	1	; () banked
 21886  002B96  6FB4               	movwf	(_state+13)& (0+255),b
 21887                           
 21888                           ;led.c: 137: }
 21889  002B98  0012               	return	
 21890  002B9A                     l14694:
 21891  002B9A  0101               	movlb	1	; () banked
 21892  002B9C  51B3               	movf	(_state+12)& (0+255),w,b
 21893                           
 21894                           ; Switch size 1, requested type "space"
 21895                           ; Number of cases is 2, Range of values is 1 to 8
 21896                           ; switch strategies available:
 21897                           ; Name         Instructions Cycles
 21898                           ; simple_byte            7     4 (average)
 21899                           ;	Chosen strategy is simple_byte
 21900  002B9E  0A01               	xorlw	1	; case 1
 21901  002BA0  B4D8               	btfsc	status,2,c
 21902  002BA2  D7EF               	goto	l14688
 21903  002BA4  0A09               	xorlw	9	; case 8
 21904  002BA6  B4D8               	btfsc	status,2,c
 21905  002BA8  D7F0               	goto	l14690
 21906  002BAA  D7F3               	goto	l14692
 21907  002BAC                     l14696:
 21908                           
 21909                           ; BSR set to: 1
 21910                           ;led.c: 143: state.led.next = 8;
 21911  002BAC  0E08               	movlw	8
 21912  002BAE  0101               	movlb	1	; () banked
 21913  002BB0  6FB4               	movwf	(_state+13)& (0+255),b
 21914                           
 21915                           ;led.c: 144: break;
 21916  002BB2  0012               	return	
 21917  002BB4                     l14698:
 21918                           
 21919                           ; BSR set to: 1
 21920                           ;led.c: 146: state.led.next = 1;
 21921  002BB4  0E01               	movlw	1
 21922  002BB6  0101               	movlb	1	; () banked
 21923  002BB8  6FB4               	movwf	(_state+13)& (0+255),b
 21924                           
 21925                           ;led.c: 147: break;
 21926  002BBA  0012               	return	
 21927  002BBC                     l14700:
 21928                           
 21929                           ; BSR set to: 1
 21930                           ;led.c: 149: state.led.next = 8;
 21931  002BBC  0E08               	movlw	8
 21932  002BBE  0101               	movlb	1	; () banked
 21933  002BC0  6FB4               	movwf	(_state+13)& (0+255),b
 21934                           
 21935                           ;led.c: 150: }
 21936  002BC2  0012               	return	
 21937  002BC4                     l14702:
 21938  002BC4  0101               	movlb	1	; () banked
 21939  002BC6  51B3               	movf	(_state+12)& (0+255),w,b
 21940                           
 21941                           ; Switch size 1, requested type "space"
 21942                           ; Number of cases is 2, Range of values is 1 to 8
 21943                           ; switch strategies available:
 21944                           ; Name         Instructions Cycles
 21945                           ; simple_byte            7     4 (average)
 21946                           ;	Chosen strategy is simple_byte
 21947  002BC8  0A01               	xorlw	1	; case 1
 21948  002BCA  B4D8               	btfsc	status,2,c
 21949  002BCC  D7EF               	goto	l14696
 21950  002BCE  0A09               	xorlw	9	; case 8
 21951  002BD0  B4D8               	btfsc	status,2,c
 21952  002BD2  D7F0               	goto	l14698
 21953  002BD4  D7F3               	goto	l14700
 21954  002BD6                     l14704:
 21955                           
 21956                           ; BSR set to: 1
 21957                           ;led.c: 155: state.led.next = 1;
 21958  002BD6  0E01               	movlw	1
 21959  002BD8  0101               	movlb	1	; () banked
 21960  002BDA  6FB4               	movwf	(_state+13)& (0+255),b
 21961                           
 21962                           ;led.c: 156: break;
 21963  002BDC  0012               	return	
 21964  002BDE                     l14706:
 21965                           
 21966                           ; BSR set to: 1
 21967                           ;led.c: 158: state.led.next = 7;
 21968  002BDE  0E07               	movlw	7
 21969  002BE0  0101               	movlb	1	; () banked
 21970  002BE2  6FB4               	movwf	(_state+13)& (0+255),b
 21971                           
 21972                           ;led.c: 159: break;
 21973  002BE4  0012               	return	
 21974  002BE6                     l14708:
 21975                           
 21976                           ; BSR set to: 1
 21977                           ;led.c: 161: state.led.next = 7;
 21978  002BE6  0E07               	movlw	7
 21979  002BE8  0101               	movlb	1	; () banked
 21980  002BEA  6FB4               	movwf	(_state+13)& (0+255),b
 21981                           
 21982                           ;led.c: 162: }
 21983  002BEC  0012               	return	
 21984  002BEE                     l14710:
 21985  002BEE  0101               	movlb	1	; () banked
 21986  002BF0  51B3               	movf	(_state+12)& (0+255),w,b
 21987                           
 21988                           ; Switch size 1, requested type "space"
 21989                           ; Number of cases is 2, Range of values is 1 to 7
 21990                           ; switch strategies available:
 21991                           ; Name         Instructions Cycles
 21992                           ; simple_byte            7     4 (average)
 21993                           ;	Chosen strategy is simple_byte
 21994  002BF2  0A01               	xorlw	1	; case 1
 21995  002BF4  B4D8               	btfsc	status,2,c
 21996  002BF6  D7F3               	goto	l14706
 21997  002BF8  0A06               	xorlw	6	; case 7
 21998  002BFA  B4D8               	btfsc	status,2,c
 21999  002BFC  D7EC               	goto	l14704
 22000  002BFE  D7F3               	goto	l14708
 22001  002C00                     l14712:
 22002                           
 22003                           ; BSR set to: 1
 22004                           ;led.c: 168: state.led.next = 1;
 22005  002C00  0E01               	movlw	1
 22006  002C02  0101               	movlb	1	; () banked
 22007  002C04  6FB4               	movwf	(_state+13)& (0+255),b
 22008                           
 22009                           ;led.c: 169: break;
 22010  002C06  0012               	return	
 22011  002C08                     l14714:
 22012                           
 22013                           ; BSR set to: 1
 22014                           ;led.c: 171: state.led.next = 7;
 22015  002C08  0E07               	movlw	7
 22016  002C0A  0101               	movlb	1	; () banked
 22017  002C0C  6FB4               	movwf	(_state+13)& (0+255),b
 22018                           
 22019                           ;led.c: 172: break;
 22020  002C0E  0012               	return	
 22021  002C10                     l14716:
 22022                           
 22023                           ; BSR set to: 1
 22024                           ;led.c: 174: state.led.next = 7;
 22025  002C10  0E07               	movlw	7
 22026  002C12  0101               	movlb	1	; () banked
 22027  002C14  6FB4               	movwf	(_state+13)& (0+255),b
 22028                           
 22029                           ;led.c: 175: }
 22030  002C16  0012               	return	
 22031  002C18                     l14718:
 22032  002C18  0101               	movlb	1	; () banked
 22033  002C1A  51B3               	movf	(_state+12)& (0+255),w,b
 22034                           
 22035                           ; Switch size 1, requested type "space"
 22036                           ; Number of cases is 2, Range of values is 1 to 7
 22037                           ; switch strategies available:
 22038                           ; Name         Instructions Cycles
 22039                           ; simple_byte            7     4 (average)
 22040                           ;	Chosen strategy is simple_byte
 22041  002C1C  0A01               	xorlw	1	; case 1
 22042  002C1E  B4D8               	btfsc	status,2,c
 22043  002C20  D7F3               	goto	l14714
 22044  002C22  0A06               	xorlw	6	; case 7
 22045  002C24  B4D8               	btfsc	status,2,c
 22046  002C26  D7EC               	goto	l14712
 22047  002C28  D7F3               	goto	l14716
 22048  002C2A                     l14720:
 22049                           
 22050                           ; BSR set to: 1
 22051                           ;led.c: 181: state.led.next = 3;
 22052  002C2A  0E03               	movlw	3
 22053  002C2C  0101               	movlb	1	; () banked
 22054  002C2E  6FB4               	movwf	(_state+13)& (0+255),b
 22055                           
 22056                           ;led.c: 182: break;
 22057  002C30  0012               	return	
 22058  002C32                     l14722:
 22059                           
 22060                           ; BSR set to: 1
 22061                           ;led.c: 184: state.led.next = 7;
 22062  002C32  0E07               	movlw	7
 22063  002C34  0101               	movlb	1	; () banked
 22064  002C36  6FB4               	movwf	(_state+13)& (0+255),b
 22065                           
 22066                           ;led.c: 185: break;
 22067  002C38  0012               	return	
 22068  002C3A                     l14724:
 22069                           
 22070                           ; BSR set to: 1
 22071                           ;led.c: 187: state.led.next = 7;
 22072  002C3A  0E07               	movlw	7
 22073  002C3C  0101               	movlb	1	; () banked
 22074  002C3E  6FB4               	movwf	(_state+13)& (0+255),b
 22075                           
 22076                           ;led.c: 188: }
 22077  002C40  0012               	return	
 22078  002C42                     l14726:
 22079  002C42  0101               	movlb	1	; () banked
 22080  002C44  51B3               	movf	(_state+12)& (0+255),w,b
 22081                           
 22082                           ; Switch size 1, requested type "space"
 22083                           ; Number of cases is 2, Range of values is 3 to 7
 22084                           ; switch strategies available:
 22085                           ; Name         Instructions Cycles
 22086                           ; simple_byte            7     4 (average)
 22087                           ;	Chosen strategy is simple_byte
 22088  002C46  0A03               	xorlw	3	; case 3
 22089  002C48  B4D8               	btfsc	status,2,c
 22090  002C4A  D7F3               	goto	l14722
 22091  002C4C  0A04               	xorlw	4	; case 7
 22092  002C4E  B4D8               	btfsc	status,2,c
 22093  002C50  D7EC               	goto	l14720
 22094  002C52  D7F3               	goto	l14724
 22095  002C54                     l14728:
 22096                           
 22097                           ;led.c: 194: state.led.next = 1;
 22098  002C54  0E01               	movlw	1
 22099  002C56  0101               	movlb	1	; () banked
 22100  002C58  6FB4               	movwf	(_state+13)& (0+255),b
 22101                           
 22102                           ;led.c: 195: }
 22103  002C5A  D00C               	goto	l14736
 22104  002C5C                     l14730:
 22105                           
 22106                           ; BSR set to: 1
 22107                           ;led.c: 200: state.led.next = 7;
 22108  002C5C  0E07               	movlw	7
 22109  002C5E  0101               	movlb	1	; () banked
 22110  002C60  6FB4               	movwf	(_state+13)& (0+255),b
 22111                           
 22112                           ;led.c: 201: break;
 22113  002C62  0012               	return	
 22114  002C64                     l14732:
 22115                           
 22116                           ; BSR set to: 1
 22117                           ;led.c: 203: state.led.next = 1;
 22118  002C64  0E01               	movlw	1
 22119  002C66  0101               	movlb	1	; () banked
 22120  002C68  6FB4               	movwf	(_state+13)& (0+255),b
 22121                           
 22122                           ;led.c: 204: break;
 22123  002C6A  0012               	return	
 22124  002C6C                     l14734:
 22125                           
 22126                           ; BSR set to: 1
 22127                           ;led.c: 206: state.led.next = 7;
 22128  002C6C  0E07               	movlw	7
 22129  002C6E  0101               	movlb	1	; () banked
 22130  002C70  6FB4               	movwf	(_state+13)& (0+255),b
 22131                           
 22132                           ;led.c: 207: }
 22133  002C72  0012               	return	
 22134  002C74                     l14736:
 22135  002C74  0101               	movlb	1	; () banked
 22136  002C76  51B3               	movf	(_state+12)& (0+255),w,b
 22137                           
 22138                           ; Switch size 1, requested type "space"
 22139                           ; Number of cases is 2, Range of values is 1 to 7
 22140                           ; switch strategies available:
 22141                           ; Name         Instructions Cycles
 22142                           ; simple_byte            7     4 (average)
 22143                           ;	Chosen strategy is simple_byte
 22144  002C78  0A01               	xorlw	1	; case 1
 22145  002C7A  B4D8               	btfsc	status,2,c
 22146  002C7C  D7EF               	goto	l14730
 22147  002C7E  0A06               	xorlw	6	; case 7
 22148  002C80  B4D8               	btfsc	status,2,c
 22149  002C82  D7F0               	goto	l14732
 22150  002C84  D7F3               	goto	l14734
 22151  002C86                     l14738:
 22152                           
 22153                           ; BSR set to: 1
 22154                           ;led.c: 213: state.led.next = 9;
 22155  002C86  0E09               	movlw	9
 22156  002C88  0101               	movlb	1	; () banked
 22157  002C8A  6FB4               	movwf	(_state+13)& (0+255),b
 22158                           
 22159                           ;led.c: 214: break;
 22160  002C8C  0012               	return	
 22161  002C8E                     l14740:
 22162                           
 22163                           ; BSR set to: 1
 22164                           ;led.c: 216: state.led.next = 1;
 22165  002C8E  0E01               	movlw	1
 22166  002C90  0101               	movlb	1	; () banked
 22167  002C92  6FB4               	movwf	(_state+13)& (0+255),b
 22168                           
 22169                           ;led.c: 217: break;
 22170  002C94  0012               	return	
 22171  002C96                     l14742:
 22172                           
 22173                           ; BSR set to: 1
 22174                           ;led.c: 219: state.led.next = 9;
 22175  002C96  0E09               	movlw	9
 22176  002C98  0101               	movlb	1	; () banked
 22177  002C9A  6FB4               	movwf	(_state+13)& (0+255),b
 22178                           
 22179                           ;led.c: 221: }
 22180  002C9C  0012               	return	
 22181  002C9E                     l14744:
 22182  002C9E  0101               	movlb	1	; () banked
 22183  002CA0  51B3               	movf	(_state+12)& (0+255),w,b
 22184                           
 22185                           ; Switch size 1, requested type "space"
 22186                           ; Number of cases is 2, Range of values is 1 to 9
 22187                           ; switch strategies available:
 22188                           ; Name         Instructions Cycles
 22189                           ; simple_byte            7     4 (average)
 22190                           ;	Chosen strategy is simple_byte
 22191  002CA2  0A01               	xorlw	1	; case 1
 22192  002CA4  B4D8               	btfsc	status,2,c
 22193  002CA6  D7EF               	goto	l14738
 22194  002CA8  0A08               	xorlw	8	; case 9
 22195  002CAA  B4D8               	btfsc	status,2,c
 22196  002CAC  D7F0               	goto	l14740
 22197  002CAE  D7F3               	goto	l14742
 22198  002CB0                     l14746:
 22199                           
 22200                           ; BSR set to: 1
 22201                           ;led.c: 227: state.led.next = 3;
 22202  002CB0  0E03               	movlw	3
 22203  002CB2  0101               	movlb	1	; () banked
 22204  002CB4  6FB4               	movwf	(_state+13)& (0+255),b
 22205                           
 22206                           ;led.c: 228: break;
 22207  002CB6  0012               	return	
 22208  002CB8                     l14748:
 22209                           
 22210                           ; BSR set to: 1
 22211                           ;led.c: 230: state.led.next = 10;
 22212  002CB8  0E0A               	movlw	10
 22213  002CBA  0101               	movlb	1	; () banked
 22214  002CBC  6FB4               	movwf	(_state+13)& (0+255),b
 22215                           
 22216                           ;led.c: 231: break;
 22217  002CBE  0012               	return	
 22218  002CC0                     l14750:
 22219                           
 22220                           ; BSR set to: 1
 22221                           ;led.c: 233: state.led.next = 1;
 22222  002CC0  0E01               	movlw	1
 22223  002CC2  0101               	movlb	1	; () banked
 22224  002CC4  6FB4               	movwf	(_state+13)& (0+255),b
 22225                           
 22226                           ;led.c: 234: break;
 22227  002CC6  0012               	return	
 22228  002CC8                     l14752:
 22229                           
 22230                           ; BSR set to: 1
 22231                           ;led.c: 236: state.led.next = 7;
 22232  002CC8  0E07               	movlw	7
 22233  002CCA  0101               	movlb	1	; () banked
 22234  002CCC  6FB4               	movwf	(_state+13)& (0+255),b
 22235                           
 22236                           ;led.c: 237: break;
 22237  002CCE  0012               	return	
 22238  002CD0                     l14754:
 22239                           
 22240                           ; BSR set to: 1
 22241                           ;led.c: 239: state.led.next = 7;
 22242  002CD0  0E07               	movlw	7
 22243  002CD2  0101               	movlb	1	; () banked
 22244  002CD4  6FB4               	movwf	(_state+13)& (0+255),b
 22245                           
 22246                           ;led.c: 241: }
 22247  002CD6  0012               	return	
 22248  002CD8                     l14756:
 22249  002CD8  0101               	movlb	1	; () banked
 22250  002CDA  51B3               	movf	(_state+12)& (0+255),w,b
 22251                           
 22252                           ; Switch size 1, requested type "space"
 22253                           ; Number of cases is 4, Range of values is 1 to 10
 22254                           ; switch strategies available:
 22255                           ; Name         Instructions Cycles
 22256                           ; simple_byte           13     7 (average)
 22257                           ;	Chosen strategy is simple_byte
 22258  002CDC  0A01               	xorlw	1	; case 1
 22259  002CDE  B4D8               	btfsc	status,2,c
 22260  002CE0  D7F3               	goto	l14752
 22261  002CE2  0A02               	xorlw	2	; case 3
 22262  002CE4  B4D8               	btfsc	status,2,c
 22263  002CE6  D7E8               	goto	l14748
 22264  002CE8  0A04               	xorlw	4	; case 7
 22265  002CEA  B4D8               	btfsc	status,2,c
 22266  002CEC  D7E1               	goto	l14746
 22267  002CEE  0A0D               	xorlw	13	; case 10
 22268  002CF0  B4D8               	btfsc	status,2,c
 22269  002CF2  D7E6               	goto	l14750
 22270  002CF4  D7ED               	goto	l14754
 22271  002CF6                     l14758:
 22272                           
 22273                           ;led.c: 247: state.led.next = 1;
 22274  002CF6  0E01               	movlw	1
 22275  002CF8  0101               	movlb	1	; () banked
 22276  002CFA  6FB4               	movwf	(_state+13)& (0+255),b
 22277                           
 22278                           ;led.c: 248: }
 22279  002CFC  0012               	return	
 22280  002CFE                     l14762:
 22281  002CFE  EE27  F053         	lfsr	2,_ABB_1+915
 22282  002D02  50DF               	movf	indf2,w,c
 22283                           
 22284                           ; Switch size 1, requested type "space"
 22285                           ; Number of cases is 10, Range of values is 1 to 24
 22286                           ; switch strategies available:
 22287                           ; Name         Instructions Cycles
 22288                           ; simple_byte           31    16 (average)
 22289                           ;	Chosen strategy is simple_byte
 22290  002D04  0A01               	xorlw	1	; case 1
 22291  002D06  B4D8               	btfsc	status,2,c
 22292  002D08  D748               	goto	l14694
 22293  002D0A  0A02               	xorlw	2	; case 3
 22294  002D0C  B4D8               	btfsc	status,2,c
 22295  002D0E  D76F               	goto	l14710
 22296  002D10  0A07               	xorlw	7	; case 4
 22297  002D12  B4D8               	btfsc	status,2,c
 22298  002D14  D796               	goto	l14726
 22299  002D16  0A02               	xorlw	2	; case 6
 22300  002D18  B4D8               	btfsc	status,2,c
 22301  002D1A  D754               	goto	l14702
 22302  002D1C  0A01               	xorlw	1	; case 7
 22303  002D1E  B4D8               	btfsc	status,2,c
 22304  002D20  D7A9               	goto	l14736
 22305  002D22  0A0D               	xorlw	13	; case 10
 22306  002D24  B4D8               	btfsc	status,2,c
 22307  002D26  D7D8               	goto	l14756
 22308  002D28  0A01               	xorlw	1	; case 11
 22309  002D2A  B4D8               	btfsc	status,2,c
 22310  002D2C  D7B8               	goto	l14744
 22311  002D2E  0A1B               	xorlw	27	; case 16
 22312  002D30  B4D8               	btfsc	status,2,c
 22313  002D32  D772               	goto	l14718
 22314  002D34  0A04               	xorlw	4	; case 20
 22315  002D36  B4D8               	btfsc	status,2,c
 22316  002D38  D7DE               	goto	l14758
 22317  002D3A  0A0C               	xorlw	12	; case 24
 22318  002D3C  A4D8               	btfss	status,2,c
 22319  002D3E  0012               	return	
 22320  002D40  D789               	goto	l14728
 22321  002D42                     __end_of_ledStateHandler:
 22322                           	opt stack 0
 22323                           tblptru	equ	0xFF8
 22324                           tblptrh	equ	0xFF7
 22325                           tblptrl	equ	0xFF6
 22326                           tablat	equ	0xFF5
 22327                           prodh	equ	0xFF4
 22328                           prodl	equ	0xFF3
 22329                           intcon	equ	0xFF2
 22330                           postinc0	equ	0xFEE
 22331                           wreg	equ	0xFE8
 22332                           indf1	equ	0xFE7
 22333                           postinc1	equ	0xFE6
 22334                           postdec1	equ	0xFE5
 22335                           fsr1h	equ	0xFE2
 22336                           fsr1l	equ	0xFE1
 22337                           indf2	equ	0xFDF
 22338                           postinc2	equ	0xFDE
 22339                           postdec2	equ	0xFDD
 22340                           fsr2h	equ	0xFDA
 22341                           fsr2l	equ	0xFD9
 22342                           status	equ	0xFD8
 22343                           
 22344 ;; *************** function _checkIfTagIsRemoved *****************
 22345 ;; Defined at:
 22346 ;;		line 651 in file "tagRead.c"
 22347 ;; Parameters:    Size  Location     Type
 22348 ;;		None
 22349 ;; Auto vars:     Size  Location     Type
 22350 ;;		None
 22351 ;; Return value:  Size  Location     Type
 22352 ;;                  1    wreg      unsigned char 
 22353 ;; Registers used:
 22354 ;;		wreg
 22355 ;; Tracked objects:
 22356 ;;		On entry : 0/0
 22357 ;;		On exit  : 0/0
 22358 ;;		Unchanged: 0/0
 22359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22364 ;;Total ram usage:        0 bytes
 22365 ;; Hardware stack levels used:    1
 22366 ;; Hardware stack levels required when called:    8
 22367 ;; This function calls:
 22368 ;;		Nothing
 22369 ;; This function is called by:
 22370 ;;		_ledStateHandler
 22371 ;; This function uses a non-reentrant model
 22372 ;;
 22373                           
 22374                           	psect	text115
 22375  007B5E                     __ptext115:
 22376                           	opt stack 0
 22377  007B5E                     _checkIfTagIsRemoved:
 22378                           	opt stack 19
 22379                           
 22380                           ;tagRead.c: 652: return PORTEbits.RE2;
 22381                           
 22382                           ;incstack = 0
 22383  007B5E  A48D               	btfss	3981,2,c	;volatile
 22384  007B60  D002               	goto	u10070
 22385  007B62  0E01               	movlw	1
 22386  007B64  0012               	return	
 22387  007B66                     u10070:
 22388  007B66  0E00               	movlw	0
 22389  007B68  0012               	return	
 22390  007B6A                     __end_of_checkIfTagIsRemoved:
 22391                           	opt stack 0
 22392                           tblptru	equ	0xFF8
 22393                           tblptrh	equ	0xFF7
 22394                           tblptrl	equ	0xFF6
 22395                           tablat	equ	0xFF5
 22396                           prodh	equ	0xFF4
 22397                           prodl	equ	0xFF3
 22398                           intcon	equ	0xFF2
 22399                           postinc0	equ	0xFEE
 22400                           wreg	equ	0xFE8
 22401                           indf1	equ	0xFE7
 22402                           postinc1	equ	0xFE6
 22403                           postdec1	equ	0xFE5
 22404                           fsr1h	equ	0xFE2
 22405                           fsr1l	equ	0xFE1
 22406                           indf2	equ	0xFDF
 22407                           postinc2	equ	0xFDE
 22408                           postdec2	equ	0xFDD
 22409                           fsr2h	equ	0xFDA
 22410                           fsr2l	equ	0xFD9
 22411                           status	equ	0xFD8
 22412                           
 22413 ;; *************** function _led *****************
 22414 ;; Defined at:
 22415 ;;		line 33 in file "led.c"
 22416 ;; Parameters:    Size  Location     Type
 22417 ;;		None
 22418 ;; Auto vars:     Size  Location     Type
 22419 ;;		None
 22420 ;; Return value:  Size  Location     Type
 22421 ;;                  1    wreg      void 
 22422 ;; Registers used:
 22423 ;;		wreg, status,2, status,0, cstack
 22424 ;; Tracked objects:
 22425 ;;		On entry : 0/0
 22426 ;;		On exit  : 0/0
 22427 ;;		Unchanged: 0/0
 22428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22433 ;;Total ram usage:        0 bytes
 22434 ;; Hardware stack levels used:    1
 22435 ;; Hardware stack levels required when called:    9
 22436 ;; This function calls:
 22437 ;;		_setBlueLed
 22438 ;;		_setGreenLed
 22439 ;;		_setOffLed
 22440 ;;		_setRedLed
 22441 ;; This function is called by:
 22442 ;;		_currentStateHandler
 22443 ;; This function uses a non-reentrant model
 22444 ;;
 22445                           
 22446                           	psect	text116
 22447  003978                     __ptext116:
 22448                           	opt stack 0
 22449  003978                     _led:
 22450                           	opt stack 19
 22451                           
 22452                           ;led.c: 34: switch (state.led.current){
 22453                           
 22454                           ;incstack = 0
 22455  003978  D078               	goto	l14674
 22456  00397A                     l14612:
 22457                           
 22458                           ;led.c: 36: setOffLed();
 22459  00397A  ECCE  F03D         	call	_setOffLed	;wreg free
 22460                           
 22461                           ;led.c: 37: state.led.counter = 900;
 22462  00397E  0E03               	movlw	3
 22463  003980  0101               	movlb	1	; () banked
 22464  003982  6FB6               	movwf	(_state+15)& (0+255),b
 22465  003984  0E84               	movlw	132
 22466  003986  6FB5               	movwf	(_state+14)& (0+255),b
 22467                           
 22468                           ;led.c: 38: break;
 22469  003988  0012               	return	
 22470  00398A                     l14616:
 22471                           
 22472                           ; BSR set to: 1
 22473                           ;led.c: 41: setOffLed();
 22474  00398A  ECCE  F03D         	call	_setOffLed	;wreg free
 22475                           
 22476                           ;led.c: 42: state.led.counter = 900;
 22477  00398E  0E03               	movlw	3
 22478  003990  0101               	movlb	1	; () banked
 22479  003992  6FB6               	movwf	(_state+15)& (0+255),b
 22480  003994  0E84               	movlw	132
 22481  003996  6FB5               	movwf	(_state+14)& (0+255),b
 22482                           
 22483                           ;led.c: 43: break;
 22484  003998  0012               	return	
 22485  00399A                     l14620:
 22486                           
 22487                           ; BSR set to: 1
 22488                           ;led.c: 46: setOffLed();
 22489  00399A  ECCE  F03D         	call	_setOffLed	;wreg free
 22490                           
 22491                           ;led.c: 47: state.led.counter = 100;
 22492  00399E  0E00               	movlw	0
 22493  0039A0  0101               	movlb	1	; () banked
 22494  0039A2  6FB6               	movwf	(_state+15)& (0+255),b
 22495  0039A4  0E64               	movlw	100
 22496  0039A6  6FB5               	movwf	(_state+14)& (0+255),b
 22497                           
 22498                           ;led.c: 48: break;
 22499  0039A8  0012               	return	
 22500  0039AA                     l14624:
 22501                           
 22502                           ; BSR set to: 1
 22503                           ;led.c: 51: setOffLed();
 22504  0039AA  ECCE  F03D         	call	_setOffLed	;wreg free
 22505                           
 22506                           ;led.c: 52: state.led.counter = 100;
 22507  0039AE  0E00               	movlw	0
 22508  0039B0  0101               	movlb	1	; () banked
 22509  0039B2  6FB6               	movwf	(_state+15)& (0+255),b
 22510  0039B4  0E64               	movlw	100
 22511  0039B6  6FB5               	movwf	(_state+14)& (0+255),b
 22512                           
 22513                           ;led.c: 53: break;
 22514  0039B8  0012               	return	
 22515  0039BA                     l14628:
 22516                           
 22517                           ; BSR set to: 1
 22518                           ;led.c: 56: setRedLed();
 22519  0039BA  ECCA  F03D         	call	_setRedLed	;wreg free
 22520                           
 22521                           ;led.c: 57: state.led.counter = 100;
 22522  0039BE  0E00               	movlw	0
 22523  0039C0  0101               	movlb	1	; () banked
 22524  0039C2  6FB6               	movwf	(_state+15)& (0+255),b
 22525  0039C4  0E64               	movlw	100
 22526  0039C6  6FB5               	movwf	(_state+14)& (0+255),b
 22527                           
 22528                           ;led.c: 58: break;
 22529  0039C8  0012               	return	
 22530  0039CA                     l14632:
 22531                           
 22532                           ; BSR set to: 1
 22533                           ;led.c: 61: setGreenLed();
 22534  0039CA  ECD2  F03D         	call	_setGreenLed	;wreg free
 22535                           
 22536                           ;led.c: 62: state.led.counter = 100;
 22537  0039CE  0E00               	movlw	0
 22538  0039D0  0101               	movlb	1	; () banked
 22539  0039D2  6FB6               	movwf	(_state+15)& (0+255),b
 22540  0039D4  0E64               	movlw	100
 22541  0039D6  6FB5               	movwf	(_state+14)& (0+255),b
 22542                           
 22543                           ;led.c: 63: break;
 22544  0039D8  0012               	return	
 22545  0039DA                     l14636:
 22546                           
 22547                           ; BSR set to: 1
 22548                           ;led.c: 66: setBlueLed();
 22549  0039DA  ECD6  F03D         	call	_setBlueLed	;wreg free
 22550                           
 22551                           ;led.c: 67: state.led.counter = 100;
 22552  0039DE  0E00               	movlw	0
 22553  0039E0  0101               	movlb	1	; () banked
 22554  0039E2  6FB6               	movwf	(_state+15)& (0+255),b
 22555  0039E4  0E64               	movlw	100
 22556  0039E6  6FB5               	movwf	(_state+14)& (0+255),b
 22557                           
 22558                           ;led.c: 68: break;
 22559  0039E8  0012               	return	
 22560  0039EA                     l14640:
 22561                           
 22562                           ; BSR set to: 1
 22563                           ;led.c: 71: setRedLed();
 22564  0039EA  ECCA  F03D         	call	_setRedLed	;wreg free
 22565                           
 22566                           ;led.c: 72: state.led.counter = 100;
 22567  0039EE  0E00               	movlw	0
 22568  0039F0  0101               	movlb	1	; () banked
 22569  0039F2  6FB6               	movwf	(_state+15)& (0+255),b
 22570  0039F4  0E64               	movlw	100
 22571  0039F6  6FB5               	movwf	(_state+14)& (0+255),b
 22572                           
 22573                           ;led.c: 73: break;
 22574  0039F8  0012               	return	
 22575  0039FA                     l14644:
 22576                           
 22577                           ; BSR set to: 1
 22578                           ;led.c: 76: setGreenLed();
 22579  0039FA  ECD2  F03D         	call	_setGreenLed	;wreg free
 22580                           
 22581                           ;led.c: 77: state.led.counter = 100;
 22582  0039FE  0E00               	movlw	0
 22583  003A00  0101               	movlb	1	; () banked
 22584  003A02  6FB6               	movwf	(_state+15)& (0+255),b
 22585  003A04  0E64               	movlw	100
 22586  003A06  6FB5               	movwf	(_state+14)& (0+255),b
 22587                           
 22588                           ;led.c: 78: break;
 22589  003A08  0012               	return	
 22590  003A0A                     l14648:
 22591                           
 22592                           ; BSR set to: 1
 22593                           ;led.c: 81: setBlueLed();
 22594  003A0A  ECD6  F03D         	call	_setBlueLed	;wreg free
 22595                           
 22596                           ;led.c: 82: state.led.counter = 100;
 22597  003A0E  0E00               	movlw	0
 22598  003A10  0101               	movlb	1	; () banked
 22599  003A12  6FB6               	movwf	(_state+15)& (0+255),b
 22600  003A14  0E64               	movlw	100
 22601  003A16  6FB5               	movwf	(_state+14)& (0+255),b
 22602                           
 22603                           ;led.c: 83: break;
 22604  003A18  0012               	return	
 22605  003A1A                     l14652:
 22606                           
 22607                           ; BSR set to: 1
 22608                           ;led.c: 86: setRedLed();
 22609  003A1A  ECCA  F03D         	call	_setRedLed	;wreg free
 22610                           
 22611                           ;led.c: 87: state.led.counter = 1000;
 22612  003A1E  0E03               	movlw	3
 22613  003A20  0101               	movlb	1	; () banked
 22614  003A22  6FB6               	movwf	(_state+15)& (0+255),b
 22615  003A24  0EE8               	movlw	232
 22616  003A26  6FB5               	movwf	(_state+14)& (0+255),b
 22617                           
 22618                           ;led.c: 88: break;
 22619  003A28  0012               	return	
 22620  003A2A                     l14656:
 22621                           
 22622                           ; BSR set to: 1
 22623                           ;led.c: 91: setBlueLed();
 22624  003A2A  ECD6  F03D         	call	_setBlueLed	;wreg free
 22625                           
 22626                           ;led.c: 92: state.led.counter = 1000;
 22627  003A2E  0E03               	movlw	3
 22628  003A30  0101               	movlb	1	; () banked
 22629  003A32  6FB6               	movwf	(_state+15)& (0+255),b
 22630  003A34  0EE8               	movlw	232
 22631  003A36  6FB5               	movwf	(_state+14)& (0+255),b
 22632                           
 22633                           ;led.c: 93: break;
 22634  003A38  0012               	return	
 22635  003A3A                     l14660:
 22636                           
 22637                           ; BSR set to: 1
 22638                           ;led.c: 96: setGreenLed();
 22639  003A3A  ECD2  F03D         	call	_setGreenLed	;wreg free
 22640                           
 22641                           ;led.c: 97: state.led.counter = 1000;
 22642  003A3E  0E03               	movlw	3
 22643  003A40  0101               	movlb	1	; () banked
 22644  003A42  6FB6               	movwf	(_state+15)& (0+255),b
 22645  003A44  0EE8               	movlw	232
 22646  003A46  6FB5               	movwf	(_state+14)& (0+255),b
 22647                           
 22648                           ;led.c: 98: break;
 22649  003A48  0012               	return	
 22650  003A4A                     l14664:
 22651                           
 22652                           ; BSR set to: 1
 22653                           ;led.c: 101: setGreenLed();
 22654  003A4A  ECD2  F03D         	call	_setGreenLed	;wreg free
 22655                           
 22656                           ;led.c: 102: state.led.counter = 10;
 22657  003A4E  0E00               	movlw	0
 22658  003A50  0101               	movlb	1	; () banked
 22659  003A52  6FB6               	movwf	(_state+15)& (0+255),b
 22660  003A54  0E0A               	movlw	10
 22661  003A56  6FB5               	movwf	(_state+14)& (0+255),b
 22662                           
 22663                           ;led.c: 103: break;
 22664  003A58  0012               	return	
 22665  003A5A                     l14668:
 22666                           
 22667                           ; BSR set to: 1
 22668                           ;led.c: 106: setRedLed();
 22669  003A5A  ECCA  F03D         	call	_setRedLed	;wreg free
 22670                           
 22671                           ;led.c: 107: state.led.counter = 10;
 22672  003A5E  0E00               	movlw	0
 22673  003A60  0101               	movlb	1	; () banked
 22674  003A62  6FB6               	movwf	(_state+15)& (0+255),b
 22675  003A64  0E0A               	movlw	10
 22676  003A66  6FB5               	movwf	(_state+14)& (0+255),b
 22677                           
 22678                           ; BSR set to: 1
 22679                           ;led.c: 109: }
 22680                           
 22681                           ;led.c: 108: break;
 22682  003A68  0012               	return	
 22683  003A6A                     l14674:
 22684  003A6A  0101               	movlb	1	; () banked
 22685  003A6C  51B3               	movf	(_state+12)& (0+255),w,b
 22686                           
 22687                           ; Switch size 1, requested type "space"
 22688                           ; Number of cases is 15, Range of values is 1 to 15
 22689                           ; switch strategies available:
 22690                           ; Name         Instructions Cycles
 22691                           ; simple_byte           46    24 (average)
 22692                           ;	Chosen strategy is simple_byte
 22693  003A6E  0A01               	xorlw	1	; case 1
 22694  003A70  B4D8               	btfsc	status,2,c
 22695  003A72  D783               	goto	l14612
 22696  003A74  0A03               	xorlw	3	; case 2
 22697  003A76  B4D8               	btfsc	status,2,c
 22698  003A78  D788               	goto	l14616
 22699  003A7A  0A01               	xorlw	1	; case 3
 22700  003A7C  B4D8               	btfsc	status,2,c
 22701  003A7E  D78D               	goto	l14620
 22702  003A80  0A07               	xorlw	7	; case 4
 22703  003A82  B4D8               	btfsc	status,2,c
 22704  003A84  D7CA               	goto	l14652
 22705  003A86  0A01               	xorlw	1	; case 5
 22706  003A88  B4D8               	btfsc	status,2,c
 22707  003A8A  D7D7               	goto	l14660
 22708  003A8C  0A03               	xorlw	3	; case 6
 22709  003A8E  B4D8               	btfsc	status,2,c
 22710  003A90  D7CC               	goto	l14656
 22711  003A92  0A01               	xorlw	1	; case 7
 22712  003A94  B4D8               	btfsc	status,2,c
 22713  003A96  D791               	goto	l14628
 22714  003A98  0A0F               	xorlw	15	; case 8
 22715  003A9A  B4D8               	btfsc	status,2,c
 22716  003A9C  D796               	goto	l14632
 22717  003A9E  0A01               	xorlw	1	; case 9
 22718  003AA0  B4D8               	btfsc	status,2,c
 22719  003AA2  D79B               	goto	l14636
 22720  003AA4  0A03               	xorlw	3	; case 10
 22721  003AA6  B4D8               	btfsc	status,2,c
 22722  003AA8  D7A0               	goto	l14640
 22723  003AAA  0A01               	xorlw	1	; case 11
 22724  003AAC  B4D8               	btfsc	status,2,c
 22725  003AAE  D7A5               	goto	l14644
 22726  003AB0  0A07               	xorlw	7	; case 12
 22727  003AB2  B4D8               	btfsc	status,2,c
 22728  003AB4  D7AA               	goto	l14648
 22729  003AB6  0A01               	xorlw	1	; case 13
 22730  003AB8  B4D8               	btfsc	status,2,c
 22731  003ABA  D777               	goto	l14624
 22732  003ABC  0A03               	xorlw	3	; case 14
 22733  003ABE  B4D8               	btfsc	status,2,c
 22734  003AC0  D7C4               	goto	l14664
 22735  003AC2  0A01               	xorlw	1	; case 15
 22736  003AC4  A4D8               	btfss	status,2,c
 22737  003AC6  0012               	return	
 22738  003AC8  D7C8               	goto	l14668
 22739  003ACA                     __end_of_led:
 22740                           	opt stack 0
 22741                           tblptru	equ	0xFF8
 22742                           tblptrh	equ	0xFF7
 22743                           tblptrl	equ	0xFF6
 22744                           tablat	equ	0xFF5
 22745                           prodh	equ	0xFF4
 22746                           prodl	equ	0xFF3
 22747                           intcon	equ	0xFF2
 22748                           postinc0	equ	0xFEE
 22749                           wreg	equ	0xFE8
 22750                           indf1	equ	0xFE7
 22751                           postinc1	equ	0xFE6
 22752                           postdec1	equ	0xFE5
 22753                           fsr1h	equ	0xFE2
 22754                           fsr1l	equ	0xFE1
 22755                           indf2	equ	0xFDF
 22756                           postinc2	equ	0xFDE
 22757                           postdec2	equ	0xFDD
 22758                           fsr2h	equ	0xFDA
 22759                           fsr2l	equ	0xFD9
 22760                           status	equ	0xFD8
 22761                           
 22762 ;; *************** function _setRedLed *****************
 22763 ;; Defined at:
 22764 ;;		line 258 in file "led.c"
 22765 ;; Parameters:    Size  Location     Type
 22766 ;;		None
 22767 ;; Auto vars:     Size  Location     Type
 22768 ;;		None
 22769 ;; Return value:  Size  Location     Type
 22770 ;;                  1    wreg      void 
 22771 ;; Registers used:
 22772 ;;		None
 22773 ;; Tracked objects:
 22774 ;;		On entry : 0/0
 22775 ;;		On exit  : 0/0
 22776 ;;		Unchanged: 0/0
 22777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22782 ;;Total ram usage:        0 bytes
 22783 ;; Hardware stack levels used:    1
 22784 ;; Hardware stack levels required when called:    8
 22785 ;; This function calls:
 22786 ;;		Nothing
 22787 ;; This function is called by:
 22788 ;;		_led
 22789 ;;		_fire
 22790 ;;		_firePic
 22791 ;; This function uses a non-reentrant model
 22792 ;;
 22793                           
 22794                           	psect	text117
 22795  007B94                     __ptext117:
 22796                           	opt stack 0
 22797  007B94                     _setRedLed:
 22798                           	opt stack 20
 22799                           
 22800                           ;led.c: 259: LATHbits.LATH0 = 1;
 22801                           
 22802                           ; BSR set to: 1
 22803                           ;incstack = 0
 22804  007B94  8080               	bsf	3968,0,c	;volatile
 22805                           
 22806                           ;led.c: 260: LATAbits.LATA0 = 0;
 22807  007B96  9079               	bcf	3961,0,c	;volatile
 22808                           
 22809                           ;led.c: 261: LATHbits.LATH1 = 0;
 22810  007B98  9280               	bcf	3968,1,c	;volatile
 22811  007B9A  0012               	return		;funcret
 22812  007B9C                     __end_of_setRedLed:
 22813                           	opt stack 0
 22814                           tblptru	equ	0xFF8
 22815                           tblptrh	equ	0xFF7
 22816                           tblptrl	equ	0xFF6
 22817                           tablat	equ	0xFF5
 22818                           prodh	equ	0xFF4
 22819                           prodl	equ	0xFF3
 22820                           intcon	equ	0xFF2
 22821                           postinc0	equ	0xFEE
 22822                           wreg	equ	0xFE8
 22823                           indf1	equ	0xFE7
 22824                           postinc1	equ	0xFE6
 22825                           postdec1	equ	0xFE5
 22826                           fsr1h	equ	0xFE2
 22827                           fsr1l	equ	0xFE1
 22828                           indf2	equ	0xFDF
 22829                           postinc2	equ	0xFDE
 22830                           postdec2	equ	0xFDD
 22831                           fsr2h	equ	0xFDA
 22832                           fsr2l	equ	0xFD9
 22833                           status	equ	0xFD8
 22834                           
 22835 ;; *************** function _setOffLed *****************
 22836 ;; Defined at:
 22837 ;;		line 279 in file "led.c"
 22838 ;; Parameters:    Size  Location     Type
 22839 ;;		None
 22840 ;; Auto vars:     Size  Location     Type
 22841 ;;		None
 22842 ;; Return value:  Size  Location     Type
 22843 ;;                  1    wreg      void 
 22844 ;; Registers used:
 22845 ;;		None
 22846 ;; Tracked objects:
 22847 ;;		On entry : 0/0
 22848 ;;		On exit  : 0/0
 22849 ;;		Unchanged: 0/0
 22850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22855 ;;Total ram usage:        0 bytes
 22856 ;; Hardware stack levels used:    1
 22857 ;; Hardware stack levels required when called:    8
 22858 ;; This function calls:
 22859 ;;		Nothing
 22860 ;; This function is called by:
 22861 ;;		_initialiseLed
 22862 ;;		_led
 22863 ;;		_program
 22864 ;;		_sleep
 22865 ;;		_mainsSleep
 22866 ;; This function uses a non-reentrant model
 22867 ;;
 22868                           
 22869                           	psect	text118
 22870  007B9C                     __ptext118:
 22871                           	opt stack 0
 22872  007B9C                     _setOffLed:
 22873                           	opt stack 20
 22874                           
 22875                           ;led.c: 280: LATHbits.LATH0 = 0;
 22876                           
 22877                           ;incstack = 0
 22878  007B9C  9080               	bcf	3968,0,c	;volatile
 22879                           
 22880                           ;led.c: 281: LATAbits.LATA0 = 0;
 22881  007B9E  9079               	bcf	3961,0,c	;volatile
 22882                           
 22883                           ;led.c: 282: LATHbits.LATH1 = 0;
 22884  007BA0  9280               	bcf	3968,1,c	;volatile
 22885  007BA2  0012               	return		;funcret
 22886  007BA4                     __end_of_setOffLed:
 22887                           	opt stack 0
 22888                           tblptru	equ	0xFF8
 22889                           tblptrh	equ	0xFF7
 22890                           tblptrl	equ	0xFF6
 22891                           tablat	equ	0xFF5
 22892                           prodh	equ	0xFF4
 22893                           prodl	equ	0xFF3
 22894                           intcon	equ	0xFF2
 22895                           postinc0	equ	0xFEE
 22896                           wreg	equ	0xFE8
 22897                           indf1	equ	0xFE7
 22898                           postinc1	equ	0xFE6
 22899                           postdec1	equ	0xFE5
 22900                           fsr1h	equ	0xFE2
 22901                           fsr1l	equ	0xFE1
 22902                           indf2	equ	0xFDF
 22903                           postinc2	equ	0xFDE
 22904                           postdec2	equ	0xFDD
 22905                           fsr2h	equ	0xFDA
 22906                           fsr2l	equ	0xFD9
 22907                           status	equ	0xFD8
 22908                           
 22909 ;; *************** function _setGreenLed *****************
 22910 ;; Defined at:
 22911 ;;		line 265 in file "led.c"
 22912 ;; Parameters:    Size  Location     Type
 22913 ;;		None
 22914 ;; Auto vars:     Size  Location     Type
 22915 ;;		None
 22916 ;; Return value:  Size  Location     Type
 22917 ;;                  1    wreg      void 
 22918 ;; Registers used:
 22919 ;;		None
 22920 ;; Tracked objects:
 22921 ;;		On entry : 0/0
 22922 ;;		On exit  : 0/0
 22923 ;;		Unchanged: 0/0
 22924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22929 ;;Total ram usage:        0 bytes
 22930 ;; Hardware stack levels used:    1
 22931 ;; Hardware stack levels required when called:    8
 22932 ;; This function calls:
 22933 ;;		Nothing
 22934 ;; This function is called by:
 22935 ;;		_led
 22936 ;; This function uses a non-reentrant model
 22937 ;;
 22938                           
 22939                           	psect	text119
 22940  007BA4                     __ptext119:
 22941                           	opt stack 0
 22942  007BA4                     _setGreenLed:
 22943                           	opt stack 19
 22944                           
 22945                           ;led.c: 266: LATHbits.LATH0 = 0;
 22946                           
 22947                           ;incstack = 0
 22948  007BA4  9080               	bcf	3968,0,c	;volatile
 22949                           
 22950                           ;led.c: 267: LATAbits.LATA0 = 0;
 22951  007BA6  9079               	bcf	3961,0,c	;volatile
 22952                           
 22953                           ;led.c: 268: LATHbits.LATH1 = 1;
 22954  007BA8  8280               	bsf	3968,1,c	;volatile
 22955  007BAA  0012               	return		;funcret
 22956  007BAC                     __end_of_setGreenLed:
 22957                           	opt stack 0
 22958                           tblptru	equ	0xFF8
 22959                           tblptrh	equ	0xFF7
 22960                           tblptrl	equ	0xFF6
 22961                           tablat	equ	0xFF5
 22962                           prodh	equ	0xFF4
 22963                           prodl	equ	0xFF3
 22964                           intcon	equ	0xFF2
 22965                           postinc0	equ	0xFEE
 22966                           wreg	equ	0xFE8
 22967                           indf1	equ	0xFE7
 22968                           postinc1	equ	0xFE6
 22969                           postdec1	equ	0xFE5
 22970                           fsr1h	equ	0xFE2
 22971                           fsr1l	equ	0xFE1
 22972                           indf2	equ	0xFDF
 22973                           postinc2	equ	0xFDE
 22974                           postdec2	equ	0xFDD
 22975                           fsr2h	equ	0xFDA
 22976                           fsr2l	equ	0xFD9
 22977                           status	equ	0xFD8
 22978                           
 22979 ;; *************** function _setBlueLed *****************
 22980 ;; Defined at:
 22981 ;;		line 272 in file "led.c"
 22982 ;; Parameters:    Size  Location     Type
 22983 ;;		None
 22984 ;; Auto vars:     Size  Location     Type
 22985 ;;		None
 22986 ;; Return value:  Size  Location     Type
 22987 ;;                  1    wreg      void 
 22988 ;; Registers used:
 22989 ;;		None
 22990 ;; Tracked objects:
 22991 ;;		On entry : 0/0
 22992 ;;		On exit  : 0/0
 22993 ;;		Unchanged: 0/0
 22994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22999 ;;Total ram usage:        0 bytes
 23000 ;; Hardware stack levels used:    1
 23001 ;; Hardware stack levels required when called:    8
 23002 ;; This function calls:
 23003 ;;		Nothing
 23004 ;; This function is called by:
 23005 ;;		_led
 23006 ;;		_programUIDs
 23007 ;; This function uses a non-reentrant model
 23008 ;;
 23009                           
 23010                           	psect	text120
 23011  007BAC                     __ptext120:
 23012                           	opt stack 0
 23013  007BAC                     _setBlueLed:
 23014                           	opt stack 19
 23015                           
 23016                           ;led.c: 273: LATHbits.LATH0 = 0;
 23017                           
 23018                           ;incstack = 0
 23019  007BAC  9080               	bcf	3968,0,c	;volatile
 23020                           
 23021                           ;led.c: 274: LATAbits.LATA0 = 1;
 23022  007BAE  8079               	bsf	3961,0,c	;volatile
 23023                           
 23024                           ;led.c: 275: LATHbits.LATH1 = 0;
 23025  007BB0  9280               	bcf	3968,1,c	;volatile
 23026  007BB2  0012               	return		;funcret
 23027  007BB4                     __end_of_setBlueLed:
 23028                           	opt stack 0
 23029                           tblptru	equ	0xFF8
 23030                           tblptrh	equ	0xFF7
 23031                           tblptrl	equ	0xFF6
 23032                           tablat	equ	0xFF5
 23033                           prodh	equ	0xFF4
 23034                           prodl	equ	0xFF3
 23035                           intcon	equ	0xFF2
 23036                           postinc0	equ	0xFEE
 23037                           wreg	equ	0xFE8
 23038                           indf1	equ	0xFE7
 23039                           postinc1	equ	0xFE6
 23040                           postdec1	equ	0xFE5
 23041                           fsr1h	equ	0xFE2
 23042                           fsr1l	equ	0xFE1
 23043                           indf2	equ	0xFDF
 23044                           postinc2	equ	0xFDE
 23045                           postdec2	equ	0xFDD
 23046                           fsr2h	equ	0xFDA
 23047                           fsr2l	equ	0xFD9
 23048                           status	equ	0xFD8
 23049                           
 23050 ;; *************** function _incomingCommandsStateHandler *****************
 23051 ;; Defined at:
 23052 ;;		line 45 in file "incomingCommands.c"
 23053 ;; Parameters:    Size  Location     Type
 23054 ;;		None
 23055 ;; Auto vars:     Size  Location     Type
 23056 ;;		None
 23057 ;; Return value:  Size  Location     Type
 23058 ;;                  1    wreg      void 
 23059 ;; Registers used:
 23060 ;;		wreg, status,2, status,0, cstack
 23061 ;; Tracked objects:
 23062 ;;		On entry : 0/0
 23063 ;;		On exit  : 0/0
 23064 ;;		Unchanged: 0/0
 23065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23070 ;;Total ram usage:        0 bytes
 23071 ;; Hardware stack levels used:    1
 23072 ;; Hardware stack levels required when called:    9
 23073 ;; This function calls:
 23074 ;;		_DataReadyST7540
 23075 ;; This function is called by:
 23076 ;;		_currentStateHandler
 23077 ;; This function uses a non-reentrant model
 23078 ;;
 23079                           
 23080                           	psect	text121
 23081  0067D4                     __ptext121:
 23082                           	opt stack 0
 23083  0067D4                     _incomingCommandsStateHandler:
 23084                           	opt stack 19
 23085                           
 23086                           ;incomingCommands.c: 46: switch(state.incomingCommands.current){
 23087                           
 23088                           ;incstack = 0
 23089  0067D4  D021               	goto	l14802
 23090  0067D6                     l14786:
 23091                           
 23092                           ;incomingCommands.c: 48: state.incomingCommands.next = 2;
 23093  0067D6  0E02               	movlw	2
 23094  0067D8  0101               	movlb	1	; () banked
 23095  0067DA  6FD0               	movwf	(_state+41)& (0+255),b
 23096                           
 23097                           ;incomingCommands.c: 49: break;
 23098  0067DC  0012               	return	
 23099  0067DE                     l14788:
 23100                           
 23101                           ; BSR set to: 1
 23102                           ;incomingCommands.c: 52: if (DataReadyST7540())
 23103  0067DE  ECEF  F03D         	call	_DataReadyST7540	;wreg free
 23104  0067E2  0900               	iorlw	0
 23105  0067E4  B4D8               	btfsc	status,2,c
 23106  0067E6  D004               	goto	l14792
 23107                           
 23108                           ;incomingCommands.c: 53: state.incomingCommands.next = 3;
 23109  0067E8  0E03               	movlw	3
 23110  0067EA  0101               	movlb	1	; () banked
 23111  0067EC  6FD0               	movwf	(_state+41)& (0+255),b
 23112  0067EE  0012               	return	
 23113  0067F0                     l14792:
 23114                           
 23115                           ;incomingCommands.c: 54: else if (incomingQueue.length > 0)
 23116  0067F0  0103               	movlb	3	; () banked
 23117  0067F2  5100               	movf	_incomingQueue& (0+255),w,b
 23118  0067F4  B4D8               	btfsc	status,2,c
 23119  0067F6  0012               	return	
 23120                           
 23121                           ; BSR set to: 3
 23122                           ;incomingCommands.c: 55: state.incomingCommands.next = 4;
 23123  0067F8  0E04               	movlw	4
 23124  0067FA  0101               	movlb	1	; () banked
 23125  0067FC  6FD0               	movwf	(_state+41)& (0+255),b
 23126                           
 23127                           ; BSR set to: 1
 23128                           ;incomingCommands.c: 56: break;
 23129                           
 23130                           ; BSR set to: 1
 23131  0067FE  0012               	return	
 23132  006800                     l14796:
 23133                           
 23134                           ; BSR set to: 1
 23135                           ;incomingCommands.c: 59: state.incomingCommands.next = 1;
 23136  006800  0E01               	movlw	1
 23137  006802  0101               	movlb	1	; () banked
 23138  006804  6FD0               	movwf	(_state+41)& (0+255),b
 23139                           
 23140                           ;incomingCommands.c: 60: break;
 23141  006806  0012               	return	
 23142  006808                     l14798:
 23143                           
 23144                           ; BSR set to: 1
 23145                           ;incomingCommands.c: 63: state.incomingCommands.next = 2;
 23146  006808  0E02               	movlw	2
 23147  00680A  0101               	movlb	1	; () banked
 23148  00680C  6FD0               	movwf	(_state+41)& (0+255),b
 23149                           
 23150                           ;incomingCommands.c: 64: break;
 23151  00680E  0012               	return	
 23152  006810                     l14800:
 23153                           
 23154                           ; BSR set to: 1
 23155                           ;incomingCommands.c: 67: state.incomingCommands.next = 1;
 23156  006810  0E01               	movlw	1
 23157  006812  0101               	movlb	1	; () banked
 23158  006814  6FD0               	movwf	(_state+41)& (0+255),b
 23159                           
 23160                           ;incomingCommands.c: 68: }
 23161  006816  0012               	return	
 23162  006818                     l14802:
 23163  006818  0101               	movlb	1	; () banked
 23164  00681A  51CF               	movf	(_state+40)& (0+255),w,b
 23165                           
 23166                           ; Switch size 1, requested type "space"
 23167                           ; Number of cases is 4, Range of values is 1 to 4
 23168                           ; switch strategies available:
 23169                           ; Name         Instructions Cycles
 23170                           ; simple_byte           13     7 (average)
 23171                           ;	Chosen strategy is simple_byte
 23172  00681C  0A01               	xorlw	1	; case 1
 23173  00681E  B4D8               	btfsc	status,2,c
 23174  006820  D7DA               	goto	l14786
 23175  006822  0A03               	xorlw	3	; case 2
 23176  006824  B4D8               	btfsc	status,2,c
 23177  006826  D7DB               	goto	l14788
 23178  006828  0A01               	xorlw	1	; case 3
 23179  00682A  B4D8               	btfsc	status,2,c
 23180  00682C  D7E9               	goto	l14796
 23181  00682E  0A07               	xorlw	7	; case 4
 23182  006830  B4D8               	btfsc	status,2,c
 23183  006832  D7EA               	goto	l14798
 23184  006834  D7ED               	goto	l14800
 23185  006836                     __end_of_incomingCommandsStateHandler:
 23186                           	opt stack 0
 23187                           tblptru	equ	0xFF8
 23188                           tblptrh	equ	0xFF7
 23189                           tblptrl	equ	0xFF6
 23190                           tablat	equ	0xFF5
 23191                           prodh	equ	0xFF4
 23192                           prodl	equ	0xFF3
 23193                           intcon	equ	0xFF2
 23194                           postinc0	equ	0xFEE
 23195                           wreg	equ	0xFE8
 23196                           indf1	equ	0xFE7
 23197                           postinc1	equ	0xFE6
 23198                           postdec1	equ	0xFE5
 23199                           fsr1h	equ	0xFE2
 23200                           fsr1l	equ	0xFE1
 23201                           indf2	equ	0xFDF
 23202                           postinc2	equ	0xFDE
 23203                           postdec2	equ	0xFDD
 23204                           fsr2h	equ	0xFDA
 23205                           fsr2l	equ	0xFD9
 23206                           status	equ	0xFD8
 23207                           
 23208 ;; *************** function _DataReadyST7540 *****************
 23209 ;; Defined at:
 23210 ;;		line 309 in file "ST7540.c"
 23211 ;; Parameters:    Size  Location     Type
 23212 ;;		None
 23213 ;; Auto vars:     Size  Location     Type
 23214 ;;		None
 23215 ;; Return value:  Size  Location     Type
 23216 ;;                  1    wreg      unsigned char 
 23217 ;; Registers used:
 23218 ;;		wreg, status,2, status,0
 23219 ;; Tracked objects:
 23220 ;;		On entry : 0/0
 23221 ;;		On exit  : 0/0
 23222 ;;		Unchanged: 0/0
 23223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23228 ;;Total ram usage:        0 bytes
 23229 ;; Hardware stack levels used:    1
 23230 ;; Hardware stack levels required when called:    8
 23231 ;; This function calls:
 23232 ;;		Nothing
 23233 ;; This function is called by:
 23234 ;;		_incomingCommandsStateHandler
 23235 ;; This function uses a non-reentrant model
 23236 ;;
 23237                           
 23238                           	psect	text122
 23239  007BDE                     __ptext122:
 23240                           	opt stack 0
 23241  007BDE                     _DataReadyST7540:
 23242                           	opt stack 19
 23243                           
 23244                           ;ST7540.c: 310: return (flagST7540 & 4);
 23245                           
 23246                           ;incstack = 0
 23247  007BDE  504C               	movf	_flagST7540,w,c
 23248  007BE0  0B04               	andlw	4
 23249  007BE2  0012               	return	
 23250  007BE4                     __end_of_DataReadyST7540:
 23251                           	opt stack 0
 23252                           tblptru	equ	0xFF8
 23253                           tblptrh	equ	0xFF7
 23254                           tblptrl	equ	0xFF6
 23255                           tablat	equ	0xFF5
 23256                           prodh	equ	0xFF4
 23257                           prodl	equ	0xFF3
 23258                           intcon	equ	0xFF2
 23259                           postinc0	equ	0xFEE
 23260                           wreg	equ	0xFE8
 23261                           indf1	equ	0xFE7
 23262                           postinc1	equ	0xFE6
 23263                           postdec1	equ	0xFE5
 23264                           fsr1h	equ	0xFE2
 23265                           fsr1l	equ	0xFE1
 23266                           indf2	equ	0xFDF
 23267                           postinc2	equ	0xFDE
 23268                           postdec2	equ	0xFDD
 23269                           fsr2h	equ	0xFDA
 23270                           fsr2l	equ	0xFD9
 23271                           status	equ	0xFD8
 23272                           
 23273 ;; *************** function _incomingCommands *****************
 23274 ;; Defined at:
 23275 ;;		line 19 in file "incomingCommands.c"
 23276 ;; Parameters:    Size  Location     Type
 23277 ;;		None
 23278 ;; Auto vars:     Size  Location     Type
 23279 ;;		None
 23280 ;; Return value:  Size  Location     Type
 23281 ;;                  1    wreg      void 
 23282 ;; Registers used:
 23283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23284 ;; Tracked objects:
 23285 ;;		On entry : 0/0
 23286 ;;		On exit  : 0/0
 23287 ;;		Unchanged: 0/0
 23288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23293 ;;Total ram usage:        0 bytes
 23294 ;; Hardware stack levels used:    1
 23295 ;; Hardware stack levels required when called:   12
 23296 ;; This function calls:
 23297 ;;		_ReceiveNewDataST7540
 23298 ;;		_addPacketToIncomingQueue
 23299 ;;		_handleIncomingQueuePacket
 23300 ;; This function is called by:
 23301 ;;		_currentStateHandler
 23302 ;; This function uses a non-reentrant model
 23303 ;;
 23304                           
 23305                           	psect	text123
 23306  006956                     __ptext123:
 23307                           	opt stack 0
 23308  006956                     _incomingCommands:
 23309                           	opt stack 16
 23310                           
 23311                           ;incomingCommands.c: 20: switch(state.incomingCommands.current){
 23312                           
 23313                           ;incstack = 0
 23314  006956  D020               	goto	l14782
 23315  006958                     l2166:
 23316                           
 23317                           ; BSR set to: 1
 23318                           ;incomingCommands.c: 22: PIE0bits.INT0IE = 1;
 23319  006958  010E               	movlb	14	; () banked
 23320  00695A  8129               	bsf	41,0,b	;volatile
 23321                           
 23322                           ; BSR set to: 14
 23323                           ;incomingCommands.c: 23: ReceiveNewDataST7540();
 23324  00695C  EC26  F03D         	call	_ReceiveNewDataST7540	;wreg free
 23325                           
 23326                           ;incomingCommands.c: 24: state.incomingCommands.counter = 1;
 23327  006960  0E00               	movlw	0
 23328  006962  0101               	movlb	1	; () banked
 23329  006964  6FD2               	movwf	(_state+43)& (0+255),b
 23330  006966  0E01               	movlw	1
 23331  006968  6FD1               	movwf	(_state+42)& (0+255),b
 23332                           
 23333                           ;incomingCommands.c: 25: break;
 23334  00696A  0012               	return	
 23335  00696C                     l14770:
 23336                           
 23337                           ; BSR set to: 1
 23338                           ;incomingCommands.c: 28: state.incomingCommands.counter = 100;
 23339  00696C  0E00               	movlw	0
 23340  00696E  0101               	movlb	1	; () banked
 23341  006970  6FD2               	movwf	(_state+43)& (0+255),b
 23342  006972  0E64               	movlw	100
 23343  006974  6FD1               	movwf	(_state+42)& (0+255),b
 23344                           
 23345                           ;incomingCommands.c: 29: break;
 23346  006976  0012               	return	
 23347  006978                     l14772:
 23348                           
 23349                           ; BSR set to: 1
 23350                           ;incomingCommands.c: 32: addPacketToIncomingQueue();
 23351  006978  EC80  F017         	call	_addPacketToIncomingQueue	;wreg free
 23352                           
 23353                           ;incomingCommands.c: 33: state.incomingCommands.counter = 100;
 23354  00697C  0E00               	movlw	0
 23355  00697E  0101               	movlb	1	; () banked
 23356  006980  6FD2               	movwf	(_state+43)& (0+255),b
 23357  006982  0E64               	movlw	100
 23358  006984  6FD1               	movwf	(_state+42)& (0+255),b
 23359                           
 23360                           ;incomingCommands.c: 34: break;
 23361  006986  0012               	return	
 23362  006988                     l14776:
 23363                           
 23364                           ; BSR set to: 1
 23365                           ;incomingCommands.c: 37: handleIncomingQueuePacket();
 23366  006988  EC61  F020         	call	_handleIncomingQueuePacket	;wreg free
 23367                           
 23368                           ;incomingCommands.c: 38: state.incomingCommands.counter = 100;
 23369  00698C  0E00               	movlw	0
 23370  00698E  0101               	movlb	1	; () banked
 23371  006990  6FD2               	movwf	(_state+43)& (0+255),b
 23372  006992  0E64               	movlw	100
 23373  006994  6FD1               	movwf	(_state+42)& (0+255),b
 23374                           
 23375                           ; BSR set to: 1
 23376                           ;incomingCommands.c: 40: }
 23377                           
 23378                           ;incomingCommands.c: 39: break;
 23379  006996  0012               	return	
 23380  006998                     l14782:
 23381  006998  0101               	movlb	1	; () banked
 23382  00699A  51CF               	movf	(_state+40)& (0+255),w,b
 23383                           
 23384                           ; Switch size 1, requested type "space"
 23385                           ; Number of cases is 4, Range of values is 1 to 4
 23386                           ; switch strategies available:
 23387                           ; Name         Instructions Cycles
 23388                           ; simple_byte           13     7 (average)
 23389                           ;	Chosen strategy is simple_byte
 23390  00699C  0A01               	xorlw	1	; case 1
 23391  00699E  B4D8               	btfsc	status,2,c
 23392  0069A0  D7DB               	goto	l2166
 23393  0069A2  0A03               	xorlw	3	; case 2
 23394  0069A4  B4D8               	btfsc	status,2,c
 23395  0069A6  D7E2               	goto	l14770
 23396  0069A8  0A01               	xorlw	1	; case 3
 23397  0069AA  B4D8               	btfsc	status,2,c
 23398  0069AC  D7E5               	goto	l14772
 23399  0069AE  0A07               	xorlw	7	; case 4
 23400  0069B0  A4D8               	btfss	status,2,c
 23401  0069B2  0012               	return	
 23402  0069B4  D7E9               	goto	l14776
 23403  0069B6                     __end_of_incomingCommands:
 23404                           	opt stack 0
 23405                           tblptru	equ	0xFF8
 23406                           tblptrh	equ	0xFF7
 23407                           tblptrl	equ	0xFF6
 23408                           tablat	equ	0xFF5
 23409                           prodh	equ	0xFF4
 23410                           prodl	equ	0xFF3
 23411                           intcon	equ	0xFF2
 23412                           postinc0	equ	0xFEE
 23413                           wreg	equ	0xFE8
 23414                           indf1	equ	0xFE7
 23415                           postinc1	equ	0xFE6
 23416                           postdec1	equ	0xFE5
 23417                           fsr1h	equ	0xFE2
 23418                           fsr1l	equ	0xFE1
 23419                           indf2	equ	0xFDF
 23420                           postinc2	equ	0xFDE
 23421                           postdec2	equ	0xFDD
 23422                           fsr2h	equ	0xFDA
 23423                           fsr2l	equ	0xFD9
 23424                           status	equ	0xFD8
 23425                           
 23426 ;; *************** function _handleIncomingQueuePacket *****************
 23427 ;; Defined at:
 23428 ;;		line 96 in file "packetQueueHandler.c"
 23429 ;; Parameters:    Size  Location     Type
 23430 ;;		None
 23431 ;; Auto vars:     Size  Location     Type
 23432 ;;  index           1   19[BANK0 ] unsigned char 
 23433 ;; Return value:  Size  Location     Type
 23434 ;;                  1    wreg      void 
 23435 ;; Registers used:
 23436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23437 ;; Tracked objects:
 23438 ;;		On entry : 0/0
 23439 ;;		On exit  : 0/0
 23440 ;;		Unchanged: 0/0
 23441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23443 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23444 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23445 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23446 ;;Total ram usage:        3 bytes
 23447 ;; Hardware stack levels used:    1
 23448 ;; Hardware stack levels required when called:   10
 23449 ;; This function calls:
 23450 ;;		_addDataToOutgoingQueue
 23451 ;; This function is called by:
 23452 ;;		_incomingCommands
 23453 ;; This function uses a non-reentrant model
 23454 ;;
 23455                           
 23456                           	psect	text124
 23457  0040C2                     __ptext124:
 23458                           	opt stack 0
 23459  0040C2                     _handleIncomingQueuePacket:
 23460                           	opt stack 17
 23461                           
 23462                           ;packetQueueHandler.c: 97: unsigned char index = 0;
 23463                           
 23464                           ; BSR set to: 1
 23465                           ;incstack = 0
 23466  0040C2  0E00               	movlw	0
 23467  0040C4  0100               	movlb	0	; () banked
 23468  0040C6  6F73               	movwf	handleIncomingQueuePacket@index& (0+255),b
 23469                           
 23470                           ; BSR set to: 0
 23471                           ;packetQueueHandler.c: 98: if(incomingQueue.queue_pointer >= incomingQueue.length)
 23472  0040C8  0103               	movlb	3	; () banked
 23473  0040CA  5100               	movf	_incomingQueue& (0+255),w,b
 23474  0040CC  0103               	movlb	3	; () banked
 23475  0040CE  5D01               	subwf	(_incomingQueue+1)& (0+255),w,b
 23476  0040D0  A0D8               	btfss	status,0,c
 23477  0040D2  D006               	goto	l13844
 23478                           
 23479                           ; BSR set to: 3
 23480                           ;packetQueueHandler.c: 99: index = incomingQueue.queue_pointer - incomingQueue.length;
 23481  0040D4  0103               	movlb	3	; () banked
 23482  0040D6  5100               	movf	_incomingQueue& (0+255),w,b
 23483  0040D8  0800               	sublw	0
 23484  0040DA  0103               	movlb	3	; () banked
 23485  0040DC  2501               	addwf	(_incomingQueue+1)& (0+255),w,b
 23486  0040DE  D006               	goto	L17
 23487  0040E0                     l13844:
 23488                           
 23489                           ;packetQueueHandler.c: 100: else
 23490                           ;packetQueueHandler.c: 101: index = 10 + incomingQueue.queue_pointer - incomingQueue.len
      +                          gth;
 23491  0040E0  0103               	movlb	3	; () banked
 23492  0040E2  5100               	movf	_incomingQueue& (0+255),w,b
 23493  0040E4  0800               	sublw	0
 23494  0040E6  0103               	movlb	3	; () banked
 23495  0040E8  2501               	addwf	(_incomingQueue+1)& (0+255),w,b
 23496  0040EA  0F0A               	addlw	10
 23497  0040EC                     L17:
 23498  0040EC  0100               	movlb	0	; () banked
 23499  0040EE  6F73               	movwf	handleIncomingQueuePacket@index& (0+255),b
 23500                           
 23501                           ; BSR set to: 0
 23502                           ;packetQueueHandler.c: 103: ABB_1.destination = incomingQueue.queue_store[index].source;
 23503                           
 23504                           ; BSR set to: 0
 23505  0040F0  0100               	movlb	0	; () banked
 23506  0040F2  5173               	movf	handleIncomingQueuePacket@index& (0+255),w,b
 23507  0040F4  0D13               	mullw	19
 23508  0040F6  0E03               	movlw	3
 23509  0040F8  26F3               	addwf	prodl,f,c
 23510  0040FA  0E00               	movlw	0
 23511  0040FC  22F4               	addwfc	prodh,f,c
 23512  0040FE  0E00               	movlw	low _incomingQueue
 23513  004100  24F3               	addwf	prodl,w,c
 23514  004102  6ED9               	movwf	fsr2l,c
 23515  004104  0E03               	movlw	high _incomingQueue
 23516  004106  20F4               	addwfc	prodh,w,c
 23517  004108  6EDA               	movwf	fsr2h,c
 23518  00410A  CFDE F751          	movff	postinc2,_ABB_1+913
 23519  00410E  CFDD F752          	movff	postdec2,_ABB_1+914
 23520                           
 23521                           ; BSR set to: 0
 23522                           ;packetQueueHandler.c: 104: FLAGS.communication_status = 1;
 23523  004112  8239               	bsf	_FLAGS+2,1,c
 23524                           
 23525                           ; BSR set to: 0
 23526                           ;packetQueueHandler.c: 105: ABB_1.info.statusBits.communication_status = 1;
 23527  004114  EE23  F0C2         	lfsr	2,_ABB_1+2
 23528  004118  86DF               	bsf	indf2,3,c
 23529                           
 23530                           ;packetQueueHandler.c: 106: switch(incomingQueue.queue_store[index].command){
 23531  00411A  D03A               	goto	l13866
 23532  00411C                     l872:
 23533                           
 23534                           ; BSR set to: 0
 23535                           ;packetQueueHandler.c: 108: FLAGS.communication_status = 1;
 23536  00411C  8239               	bsf	_FLAGS+2,1,c
 23537                           
 23538                           ;packetQueueHandler.c: 109: break;
 23539  00411E  D058               	goto	l13868
 23540  004120                     l874:
 23541                           
 23542                           ; BSR set to: 0
 23543                           ;packetQueueHandler.c: 112: FLAGS.fireFlag = 1;
 23544  004120  8638               	bsf	_FLAGS+1,3,c
 23545                           
 23546                           ;packetQueueHandler.c: 113: break;
 23547  004122  D056               	goto	l13868
 23548  004124                     l13856:
 23549                           
 23550                           ; BSR set to: 0
 23551                           ;packetQueueHandler.c: 121: if(incomingQueue.queue_store[index].destination == 0x0008)
 23552  004124  0100               	movlb	0	; () banked
 23553  004126  5173               	movf	handleIncomingQueuePacket@index& (0+255),w,b
 23554  004128  0D13               	mullw	19
 23555  00412A  0E05               	movlw	5
 23556  00412C  26F3               	addwf	prodl,f,c
 23557  00412E  0E00               	movlw	0
 23558  004130  22F4               	addwfc	prodh,f,c
 23559  004132  0E00               	movlw	low _incomingQueue
 23560  004134  24F3               	addwf	prodl,w,c
 23561  004136  6ED9               	movwf	fsr2l,c
 23562  004138  0E03               	movlw	high _incomingQueue
 23563  00413A  20F4               	addwfc	prodh,w,c
 23564  00413C  6EDA               	movwf	fsr2h,c
 23565  00413E  0E08               	movlw	8
 23566  004140  18DE               	xorwf	postinc2,w,c
 23567  004142  10DE               	iorwf	postinc2,w,c
 23568  004144  A4D8               	btfss	status,2,c
 23569  004146  D044               	goto	l13868
 23570                           
 23571                           ; BSR set to: 0
 23572                           ;packetQueueHandler.c: 122: FLAGS.acknowledgeCCB = 0;
 23573  004148  9839               	bcf	_FLAGS+2,4,c
 23574                           
 23575                           ; BSR set to: 0
 23576                           ;packetQueueHandler.c: 123: break;
 23577  00414A  D042               	goto	l13868
 23578  00414C                     l13860:
 23579                           
 23580                           ; BSR set to: 0
 23581                           ;packetQueueHandler.c: 126: addDataToOutgoingQueue(ABB_1.det_arrays.info, 0b00001011, si
      +                          zeof(detonator_data));
 23582  00414C  0EBD               	movlw	low (_ABB_1+509)
 23583  00414E  0100               	movlb	0	; () banked
 23584  004150  6F66               	movwf	addDataToOutgoingQueue@data& (0+255),b
 23585  004152  0E05               	movlw	high (_ABB_1+509)
 23586  004154  0100               	movlb	0	; () banked
 23587  004156  6F67               	movwf	(addDataToOutgoingQueue@data+1)& (0+255),b
 23588  004158  0E0B               	movlw	11
 23589  00415A  0100               	movlb	0	; () banked
 23590  00415C  6F68               	movwf	addDataToOutgoingQueue@command& (0+255),b
 23591  00415E  0E00               	movlw	0
 23592  004160  0100               	movlb	0	; () banked
 23593  004162  6F6A               	movwf	(addDataToOutgoingQueue@size+1)& (0+255),b
 23594  004164  0E04               	movlw	4
 23595  004166  6F69               	movwf	addDataToOutgoingQueue@size& (0+255),b
 23596  004168  ECA1  F016         	call	_addDataToOutgoingQueue	;wreg free
 23597                           
 23598                           ;packetQueueHandler.c: 127: break;
 23599  00416C  D031               	goto	l13868
 23600  00416E                     l13862:
 23601                           
 23602                           ;packetQueueHandler.c: 130: addDataToOutgoingQueue(ABB_1.det_arrays.UIDs, 0b00001010, si
      +                          zeof(detonator_UID));
 23603  00416E  0EC4               	movlw	low (_ABB_1+4)
 23604  004170  0100               	movlb	0	; () banked
 23605  004172  6F66               	movwf	addDataToOutgoingQueue@data& (0+255),b
 23606  004174  0E03               	movlw	high (_ABB_1+4)
 23607  004176  0100               	movlb	0	; () banked
 23608  004178  6F67               	movwf	(addDataToOutgoingQueue@data+1)& (0+255),b
 23609  00417A  0E0A               	movlw	10
 23610  00417C  0100               	movlb	0	; () banked
 23611  00417E  6F68               	movwf	addDataToOutgoingQueue@command& (0+255),b
 23612  004180  0E00               	movlw	0
 23613  004182  0100               	movlb	0	; () banked
 23614  004184  6F6A               	movwf	(addDataToOutgoingQueue@size+1)& (0+255),b
 23615  004186  0E05               	movlw	5
 23616  004188  6F69               	movwf	addDataToOutgoingQueue@size& (0+255),b
 23617  00418A  ECA1  F016         	call	_addDataToOutgoingQueue	;wreg free
 23618                           
 23619                           ;packetQueueHandler.c: 136: }
 23620                           
 23621                           ;packetQueueHandler.c: 134: break;
 23622                           
 23623                           ;packetQueueHandler.c: 133: default :
 23624                           
 23625                           ;packetQueueHandler.c: 131: break;
 23626  00418E  D020               	goto	l13868
 23627  004190                     l13866:
 23628  004190  0100               	movlb	0	; () banked
 23629  004192  5173               	movf	handleIncomingQueuePacket@index& (0+255),w,b
 23630  004194  0D13               	mullw	19
 23631  004196  0E08               	movlw	8
 23632  004198  26F3               	addwf	prodl,f,c
 23633  00419A  0E00               	movlw	0
 23634  00419C  22F4               	addwfc	prodh,f,c
 23635  00419E  0E00               	movlw	low _incomingQueue
 23636  0041A0  24F3               	addwf	prodl,w,c
 23637  0041A2  6ED9               	movwf	fsr2l,c
 23638  0041A4  0E03               	movlw	high _incomingQueue
 23639  0041A6  20F4               	addwfc	prodh,w,c
 23640  0041A8  6EDA               	movwf	fsr2h,c
 23641  0041AA  50DF               	movf	indf2,w,c
 23642                           
 23643                           ; Switch size 1, requested type "space"
 23644                           ; Number of cases is 6, Range of values is 7 to 64
 23645                           ; switch strategies available:
 23646                           ; Name         Instructions Cycles
 23647                           ; simple_byte           19    10 (average)
 23648                           ;	Chosen strategy is simple_byte
 23649  0041AC  0A07               	xorlw	7	; case 7
 23650  0041AE  B4D8               	btfsc	status,2,c
 23651  0041B0  D7DE               	goto	l13862
 23652  0041B2  0A0D               	xorlw	13	; case 10
 23653  0041B4  B4D8               	btfsc	status,2,c
 23654  0041B6  D7B6               	goto	l13856
 23655  0041B8  0A01               	xorlw	1	; case 11
 23656  0041BA  B4D8               	btfsc	status,2,c
 23657  0041BC  D7B3               	goto	l13856
 23658  0041BE  0A2E               	xorlw	46	; case 37
 23659  0041C0  B4D8               	btfsc	status,2,c
 23660  0041C2  D7AE               	goto	l874
 23661  0041C4  0A0C               	xorlw	12	; case 41
 23662  0041C6  B4D8               	btfsc	status,2,c
 23663  0041C8  D7A9               	goto	l872
 23664  0041CA  0A69               	xorlw	105	; case 64
 23665  0041CC  B4D8               	btfsc	status,2,c
 23666  0041CE  D7BE               	goto	l13860
 23667  0041D0                     l13868:
 23668                           
 23669                           ;packetQueueHandler.c: 137: incomingQueue.length--;
 23670  0041D0  0103               	movlb	3	; () banked
 23671  0041D2  0700               	decf	_incomingQueue& (0+255),f,b
 23672                           
 23673                           ; BSR set to: 3
 23674  0041D4  0012               	return		;funcret
 23675  0041D6                     __end_of_handleIncomingQueuePacket:
 23676                           	opt stack 0
 23677                           tblptru	equ	0xFF8
 23678                           tblptrh	equ	0xFF7
 23679                           tblptrl	equ	0xFF6
 23680                           tablat	equ	0xFF5
 23681                           prodh	equ	0xFF4
 23682                           prodl	equ	0xFF3
 23683                           intcon	equ	0xFF2
 23684                           postinc0	equ	0xFEE
 23685                           wreg	equ	0xFE8
 23686                           indf1	equ	0xFE7
 23687                           postinc1	equ	0xFE6
 23688                           postdec1	equ	0xFE5
 23689                           fsr1h	equ	0xFE2
 23690                           fsr1l	equ	0xFE1
 23691                           indf2	equ	0xFDF
 23692                           postinc2	equ	0xFDE
 23693                           postdec2	equ	0xFDD
 23694                           fsr2h	equ	0xFDA
 23695                           fsr2l	equ	0xFD9
 23696                           status	equ	0xFD8
 23697                           
 23698 ;; *************** function _addPacketToIncomingQueue *****************
 23699 ;; Defined at:
 23700 ;;		line 140 in file "packetQueueHandler.c"
 23701 ;; Parameters:    Size  Location     Type
 23702 ;;		None
 23703 ;; Auto vars:     Size  Location     Type
 23704 ;;  i               2   32[BANK0 ] int 
 23705 ;; Return value:  Size  Location     Type
 23706 ;;                  1    wreg      void 
 23707 ;; Registers used:
 23708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23709 ;; Tracked objects:
 23710 ;;		On entry : 0/0
 23711 ;;		On exit  : 0/0
 23712 ;;		Unchanged: 0/0
 23713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23715 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23716 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23717 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23718 ;;Total ram usage:        6 bytes
 23719 ;; Hardware stack levels used:    1
 23720 ;; Hardware stack levels required when called:   11
 23721 ;; This function calls:
 23722 ;;		_PacketDataST7540
 23723 ;;		_PacketReadParamST7540
 23724 ;; This function is called by:
 23725 ;;		_incomingCommands
 23726 ;; This function uses a non-reentrant model
 23727 ;;
 23728                           
 23729                           	psect	text125
 23730  002F00                     __ptext125:
 23731                           	opt stack 0
 23732  002F00                     _addPacketToIncomingQueue:
 23733                           	opt stack 16
 23734                           
 23735                           ;packetQueueHandler.c: 141: if(PacketReadParamST7540(5)){
 23736                           
 23737                           ; BSR set to: 3
 23738                           ;incstack = 0
 23739  002F00  0E05               	movlw	5
 23740  002F02  EC58  F027         	call	_PacketReadParamST7540
 23741  002F06  0100               	movlb	0	; () banked
 23742  002F08  5175               	movf	?_PacketReadParamST7540& (0+255),w,b
 23743  002F0A  0100               	movlb	0	; () banked
 23744  002F0C  1176               	iorwf	(?_PacketReadParamST7540+1)& (0+255),w,b
 23745  002F0E  B4D8               	btfsc	status,2,c
 23746  002F10  0012               	return	
 23747                           
 23748                           ; BSR set to: 0
 23749                           ;packetQueueHandler.c: 142: incomingQueue.queue_store[incomingQueue.queue_pointer].comma
      +                          nd = PacketReadParamST7540(4);
 23750  002F12  0E04               	movlw	4
 23751  002F14  EC58  F027         	call	_PacketReadParamST7540
 23752  002F18  0103               	movlb	3	; () banked
 23753  002F1A  5101               	movf	(_incomingQueue+1)& (0+255),w,b
 23754  002F1C  0D13               	mullw	19
 23755  002F1E  0E08               	movlw	8
 23756  002F20  26F3               	addwf	prodl,f,c
 23757  002F22  0E00               	movlw	0
 23758  002F24  22F4               	addwfc	prodh,f,c
 23759  002F26  0E00               	movlw	low _incomingQueue
 23760  002F28  24F3               	addwf	prodl,w,c
 23761  002F2A  6ED9               	movwf	fsr2l,c
 23762  002F2C  0E03               	movlw	high _incomingQueue
 23763  002F2E  20F4               	addwfc	prodh,w,c
 23764  002F30  6EDA               	movwf	fsr2h,c
 23765  002F32  0100               	movlb	0	; () banked
 23766  002F34  C075  FFDF         	movff	?_PacketReadParamST7540,indf2
 23767                           
 23768                           ;packetQueueHandler.c: 143: incomingQueue.queue_store[incomingQueue.queue_pointer].data_
      +                          length = PacketReadParamST7540(0);
 23769  002F38  0E00               	movlw	0
 23770  002F3A  EC58  F027         	call	_PacketReadParamST7540
 23771  002F3E  0103               	movlb	3	; () banked
 23772  002F40  5101               	movf	(_incomingQueue+1)& (0+255),w,b
 23773  002F42  0D13               	mullw	19
 23774  002F44  0E02               	movlw	2
 23775  002F46  26F3               	addwf	prodl,f,c
 23776  002F48  0E00               	movlw	0
 23777  002F4A  22F4               	addwfc	prodh,f,c
 23778  002F4C  0E00               	movlw	low _incomingQueue
 23779  002F4E  24F3               	addwf	prodl,w,c
 23780  002F50  6ED9               	movwf	fsr2l,c
 23781  002F52  0E03               	movlw	high _incomingQueue
 23782  002F54  20F4               	addwfc	prodh,w,c
 23783  002F56  6EDA               	movwf	fsr2h,c
 23784  002F58  0100               	movlb	0	; () banked
 23785  002F5A  C075  FFDF         	movff	?_PacketReadParamST7540,indf2
 23786                           
 23787                           ;packetQueueHandler.c: 144: incomingQueue.queue_store[incomingQueue.queue_pointer].packe
      +                          t_number = PacketReadParamST7540(3);
 23788  002F5E  0E03               	movlw	3
 23789  002F60  EC58  F027         	call	_PacketReadParamST7540
 23790  002F64  0103               	movlb	3	; () banked
 23791  002F66  5101               	movf	(_incomingQueue+1)& (0+255),w,b
 23792  002F68  0D13               	mullw	19
 23793  002F6A  0E07               	movlw	7
 23794  002F6C  26F3               	addwf	prodl,f,c
 23795  002F6E  0E00               	movlw	0
 23796  002F70  22F4               	addwfc	prodh,f,c
 23797  002F72  0E00               	movlw	low _incomingQueue
 23798  002F74  24F3               	addwf	prodl,w,c
 23799  002F76  6ED9               	movwf	fsr2l,c
 23800  002F78  0E03               	movlw	high _incomingQueue
 23801  002F7A  20F4               	addwfc	prodh,w,c
 23802  002F7C  6EDA               	movwf	fsr2h,c
 23803  002F7E  0100               	movlb	0	; () banked
 23804  002F80  C075  FFDF         	movff	?_PacketReadParamST7540,indf2
 23805                           
 23806                           ;packetQueueHandler.c: 145: incomingQueue.queue_store[incomingQueue.queue_pointer].sourc
      +                          e = PacketReadParamST7540(1);
 23807  002F84  0E01               	movlw	1
 23808  002F86  EC58  F027         	call	_PacketReadParamST7540
 23809  002F8A  0103               	movlb	3	; () banked
 23810  002F8C  5101               	movf	(_incomingQueue+1)& (0+255),w,b
 23811  002F8E  0D13               	mullw	19
 23812  002F90  0E03               	movlw	3
 23813  002F92  26F3               	addwf	prodl,f,c
 23814  002F94  0E00               	movlw	0
 23815  002F96  22F4               	addwfc	prodh,f,c
 23816  002F98  0E00               	movlw	low _incomingQueue
 23817  002F9A  24F3               	addwf	prodl,w,c
 23818  002F9C  6ED9               	movwf	fsr2l,c
 23819  002F9E  0E03               	movlw	high _incomingQueue
 23820  002FA0  20F4               	addwfc	prodh,w,c
 23821  002FA2  6EDA               	movwf	fsr2h,c
 23822  002FA4  0100               	movlb	0	; () banked
 23823  002FA6  C075  FFDE         	movff	?_PacketReadParamST7540,postinc2
 23824  002FAA  0100               	movlb	0	; () banked
 23825  002FAC  C076  FFDD         	movff	?_PacketReadParamST7540+1,postdec2
 23826                           
 23827                           ;packetQueueHandler.c: 146: incomingQueue.queue_store[incomingQueue.queue_pointer].desti
      +                          nation = PacketReadParamST7540(2);
 23828  002FB0  0E02               	movlw	2
 23829  002FB2  EC58  F027         	call	_PacketReadParamST7540
 23830  002FB6  0103               	movlb	3	; () banked
 23831  002FB8  5101               	movf	(_incomingQueue+1)& (0+255),w,b
 23832  002FBA  0D13               	mullw	19
 23833  002FBC  0E05               	movlw	5
 23834  002FBE  26F3               	addwf	prodl,f,c
 23835  002FC0  0E00               	movlw	0
 23836  002FC2  22F4               	addwfc	prodh,f,c
 23837  002FC4  0E00               	movlw	low _incomingQueue
 23838  002FC6  24F3               	addwf	prodl,w,c
 23839  002FC8  6ED9               	movwf	fsr2l,c
 23840  002FCA  0E03               	movlw	high _incomingQueue
 23841  002FCC  20F4               	addwfc	prodh,w,c
 23842  002FCE  6EDA               	movwf	fsr2h,c
 23843  002FD0  0100               	movlb	0	; () banked
 23844  002FD2  C075  FFDE         	movff	?_PacketReadParamST7540,postinc2
 23845  002FD6  0100               	movlb	0	; () banked
 23846  002FD8  C076  FFDD         	movff	?_PacketReadParamST7540+1,postdec2
 23847                           
 23848                           ; BSR set to: 0
 23849                           ;packetQueueHandler.c: 147: for (int i = 0; i < incomingQueue.queue_store[incomingQueue.
      +                          queue_pointer].data_length; i++){
 23850  002FDC  0E00               	movlw	0
 23851  002FDE  0100               	movlb	0	; () banked
 23852  002FE0  6F81               	movwf	(addPacketToIncomingQueue@i+1)& (0+255),b
 23853  002FE2  0E00               	movlw	0
 23854  002FE4  6F80               	movwf	addPacketToIncomingQueue@i& (0+255),b
 23855  002FE6  D038               	goto	l13880
 23856  002FE8                     l13876:
 23857                           
 23858                           ; BSR set to: 0
 23859                           ;packetQueueHandler.c: 148: incomingQueue.queue_store[incomingQueue.queue_pointer].data[
      +                          i] = *(PacketDataST7540() + i);
 23860  002FE8  EC84  F03D         	call	_PacketDataST7540	;wreg free
 23861  002FEC  0100               	movlb	0	; () banked
 23862  002FEE  5180               	movf	addPacketToIncomingQueue@i& (0+255),w,b
 23863  002FF0  0100               	movlb	0	; () banked
 23864  002FF2  2560               	addwf	?_PacketDataST7540& (0+255),w,b
 23865  002FF4  6ED9               	movwf	fsr2l,c
 23866  002FF6  0100               	movlb	0	; () banked
 23867  002FF8  5181               	movf	(addPacketToIncomingQueue@i+1)& (0+255),w,b
 23868  002FFA  0100               	movlb	0	; () banked
 23869  002FFC  2161               	addwfc	(?_PacketDataST7540+1)& (0+255),w,b
 23870  002FFE  6EDA               	movwf	fsr2h,c
 23871  003000  0E07               	movlw	7
 23872  003002  0100               	movlb	0	; () banked
 23873  003004  2580               	addwf	addPacketToIncomingQueue@i& (0+255),w,b
 23874  003006  0100               	movlb	0	; () banked
 23875  003008  6F7C               	movwf	??_addPacketToIncomingQueue& (0+255),b
 23876  00300A  0E00               	movlw	0
 23877  00300C  0100               	movlb	0	; () banked
 23878  00300E  2181               	addwfc	(addPacketToIncomingQueue@i+1)& (0+255),w,b
 23879  003010  0100               	movlb	0	; () banked
 23880  003012  6F7D               	movwf	(??_addPacketToIncomingQueue+1)& (0+255),b
 23881  003014  0103               	movlb	3	; () banked
 23882  003016  5101               	movf	(_incomingQueue+1)& (0+255),w,b
 23883  003018  0D13               	mullw	19
 23884  00301A  0E02               	movlw	2
 23885  00301C  26F3               	addwf	prodl,f,c
 23886  00301E  0E00               	movlw	0
 23887  003020  22F4               	addwfc	prodh,f,c
 23888  003022  0E00               	movlw	low _incomingQueue
 23889  003024  0100               	movlb	0	; () banked
 23890  003026  6F7E               	movwf	(??_addPacketToIncomingQueue+2)& (0+255),b
 23891  003028  0E03               	movlw	high _incomingQueue
 23892  00302A  0100               	movlb	0	; () banked
 23893  00302C  6F7F               	movwf	(??_addPacketToIncomingQueue+3)& (0+255),b
 23894  00302E  50F3               	movf	prodl,w,c
 23895  003030  0100               	movlb	0	; () banked
 23896  003032  277E               	addwf	(??_addPacketToIncomingQueue+2)& (0+255),f,b
 23897  003034  50F4               	movf	prodh,w,c
 23898  003036  0100               	movlb	0	; () banked
 23899  003038  237F               	addwfc	(??_addPacketToIncomingQueue+3)& (0+255),f,b
 23900  00303A  0100               	movlb	0	; () banked
 23901  00303C  517C               	movf	??_addPacketToIncomingQueue& (0+255),w,b
 23902  00303E  0100               	movlb	0	; () banked
 23903  003040  257E               	addwf	(??_addPacketToIncomingQueue+2)& (0+255),w,b
 23904  003042  6EE1               	movwf	fsr1l,c
 23905  003044  0100               	movlb	0	; () banked
 23906  003046  517D               	movf	(??_addPacketToIncomingQueue+1)& (0+255),w,b
 23907  003048  0100               	movlb	0	; () banked
 23908  00304A  217F               	addwfc	(??_addPacketToIncomingQueue+3)& (0+255),w,b
 23909  00304C  6EE2               	movwf	fsr1h,c
 23910  00304E  CFDF FFE7          	movff	indf2,indf1
 23911                           
 23912                           ; BSR set to: 0
 23913  003052  0100               	movlb	0	; () banked
 23914  003054  4B80               	infsnz	addPacketToIncomingQueue@i& (0+255),f,b
 23915  003056  2B81               	incf	(addPacketToIncomingQueue@i+1)& (0+255),f,b
 23916  003058                     l13880:
 23917                           
 23918                           ; BSR set to: 0
 23919  003058  0103               	movlb	3	; () banked
 23920  00305A  5101               	movf	(_incomingQueue+1)& (0+255),w,b
 23921  00305C  0D13               	mullw	19
 23922  00305E  0E02               	movlw	2
 23923  003060  26F3               	addwf	prodl,f,c
 23924  003062  0E00               	movlw	0
 23925  003064  22F4               	addwfc	prodh,f,c
 23926  003066  0E00               	movlw	low _incomingQueue
 23927  003068  24F3               	addwf	prodl,w,c
 23928  00306A  6ED9               	movwf	fsr2l,c
 23929  00306C  0E03               	movlw	high _incomingQueue
 23930  00306E  20F4               	addwfc	prodh,w,c
 23931  003070  6EDA               	movwf	fsr2h,c
 23932  003072  50DF               	movf	indf2,w,c
 23933  003074  0100               	movlb	0	; () banked
 23934  003076  6F7C               	movwf	??_addPacketToIncomingQueue& (0+255),b
 23935  003078  6B7D               	clrf	(??_addPacketToIncomingQueue+1)& (0+255),b
 23936  00307A  0100               	movlb	0	; () banked
 23937  00307C  517C               	movf	??_addPacketToIncomingQueue& (0+255),w,b
 23938  00307E  0100               	movlb	0	; () banked
 23939  003080  5D80               	subwf	addPacketToIncomingQueue@i& (0+255),w,b
 23940  003082  0100               	movlb	0	; () banked
 23941  003084  5181               	movf	(addPacketToIncomingQueue@i+1)& (0+255),w,b
 23942  003086  0A80               	xorlw	128
 23943  003088  0100               	movlb	0	; () banked
 23944  00308A  6F7E               	movwf	(??_addPacketToIncomingQueue+2)& (0+255),b
 23945  00308C  0100               	movlb	0	; () banked
 23946  00308E  517D               	movf	(??_addPacketToIncomingQueue+1)& (0+255),w,b
 23947  003090  0A80               	xorlw	128
 23948  003092  0100               	movlb	0	; () banked
 23949  003094  597E               	subwfb	(??_addPacketToIncomingQueue+2)& (0+255),w,b
 23950  003096  A0D8               	btfss	status,0,c
 23951  003098  D7A7               	goto	l13876
 23952                           
 23953                           ; BSR set to: 0
 23954                           ;packetQueueHandler.c: 149: }
 23955                           ;packetQueueHandler.c: 150: incomingQueue.length++;
 23956                           
 23957                           ; BSR set to: 0
 23958  00309A  0103               	movlb	3	; () banked
 23959  00309C  2B00               	incf	_incomingQueue& (0+255),f,b
 23960                           
 23961                           ;packetQueueHandler.c: 151: incomingQueue.queue_pointer++;
 23962  00309E  0103               	movlb	3	; () banked
 23963  0030A0  2B01               	incf	(_incomingQueue+1)& (0+255),f,b
 23964                           
 23965                           ; BSR set to: 3
 23966                           ;packetQueueHandler.c: 152: if (incomingQueue.queue_pointer == 10 - 1){
 23967  0030A2  0E09               	movlw	9
 23968  0030A4  0103               	movlb	3	; () banked
 23969  0030A6  1901               	xorwf	(_incomingQueue+1)& (0+255),w,b
 23970  0030A8  A4D8               	btfss	status,2,c
 23971  0030AA  0012               	return	
 23972                           
 23973                           ; BSR set to: 3
 23974                           ;packetQueueHandler.c: 153: incomingQueue.queue_pointer = 0;
 23975  0030AC  0E00               	movlw	0
 23976  0030AE  0103               	movlb	3	; () banked
 23977  0030B0  6F01               	movwf	(_incomingQueue+1)& (0+255),b
 23978                           
 23979                           ; BSR set to: 3
 23980  0030B2  0012               	return	
 23981  0030B4                     __end_of_addPacketToIncomingQueue:
 23982                           	opt stack 0
 23983                           tblptru	equ	0xFF8
 23984                           tblptrh	equ	0xFF7
 23985                           tblptrl	equ	0xFF6
 23986                           tablat	equ	0xFF5
 23987                           prodh	equ	0xFF4
 23988                           prodl	equ	0xFF3
 23989                           intcon	equ	0xFF2
 23990                           postinc0	equ	0xFEE
 23991                           wreg	equ	0xFE8
 23992                           indf1	equ	0xFE7
 23993                           postinc1	equ	0xFE6
 23994                           postdec1	equ	0xFE5
 23995                           fsr1h	equ	0xFE2
 23996                           fsr1l	equ	0xFE1
 23997                           indf2	equ	0xFDF
 23998                           postinc2	equ	0xFDE
 23999                           postdec2	equ	0xFDD
 24000                           fsr2h	equ	0xFDA
 24001                           fsr2l	equ	0xFD9
 24002                           status	equ	0xFD8
 24003                           
 24004 ;; *************** function _PacketReadParamST7540 *****************
 24005 ;; Defined at:
 24006 ;;		line 284 in file "ST7540.c"
 24007 ;; Parameters:    Size  Location     Type
 24008 ;;  paramName       1    wreg     unsigned char 
 24009 ;; Auto vars:     Size  Location     Type
 24010 ;;  paramName       1   25[BANK0 ] unsigned char 
 24011 ;;  retValueUS      2   26[BANK0 ] unsigned short 
 24012 ;; Return value:  Size  Location     Type
 24013 ;;                  2   21[BANK0 ] unsigned short 
 24014 ;; Registers used:
 24015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24016 ;; Tracked objects:
 24017 ;;		On entry : 0/0
 24018 ;;		On exit  : 0/0
 24019 ;;		Unchanged: 0/0
 24020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24021 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24022 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24023 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24024 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24025 ;;Total ram usage:        7 bytes
 24026 ;; Hardware stack levels used:    1
 24027 ;; Hardware stack levels required when called:   10
 24028 ;; This function calls:
 24029 ;;		_CheckCRCST7540
 24030 ;; This function is called by:
 24031 ;;		_addPacketToIncomingQueue
 24032 ;; This function uses a non-reentrant model
 24033 ;;
 24034                           
 24035                           	psect	text126
 24036  004EB0                     __ptext126:
 24037                           	opt stack 0
 24038  004EB0                     _PacketReadParamST7540:
 24039                           	opt stack 16
 24040                           
 24041                           ;incstack = 0
 24042                           ;PacketReadParamST7540@paramName stored from wreg
 24043  004EB0  0100               	movlb	0	; () banked
 24044  004EB2  6F79               	movwf	PacketReadParamST7540@paramName& (0+255),b
 24045                           
 24046                           ;ST7540.c: 285: unsigned short retValueUS = 0;
 24047  004EB4  0E00               	movlw	0
 24048  004EB6  0100               	movlb	0	; () banked
 24049  004EB8  6F7B               	movwf	(PacketReadParamST7540@retValueUS+1)& (0+255),b
 24050  004EBA  0E00               	movlw	0
 24051  004EBC  6F7A               	movwf	PacketReadParamST7540@retValueUS& (0+255),b
 24052                           
 24053                           ;ST7540.c: 287: switch(paramName){
 24054  004EBE  D04A               	goto	l13322
 24055  004EC0                     l13300:
 24056                           
 24057                           ; BSR set to: 0
 24058                           ;ST7540.c: 289: return bufferRXST7540UCA[0] - 9;
 24059  004EC0  0EF7               	movlw	247
 24060  004EC2  0102               	movlb	2	; () banked
 24061  004EC4  254F               	addwf	_bufferRXST7540UCA& (0+255),w,b
 24062  004EC6  0100               	movlb	0	; () banked
 24063  004EC8  6F75               	movwf	?_PacketReadParamST7540& (0+255),b
 24064  004ECA  0100               	movlb	0	; () banked
 24065  004ECC  6B76               	clrf	(?_PacketReadParamST7540+1)& (0+255),b
 24066  004ECE  0EFF               	movlw	255
 24067  004ED0  2376               	addwfc	(?_PacketReadParamST7540+1)& (0+255),f,b
 24068                           
 24069                           ; BSR set to: 0
 24070  004ED2  0012               	return	
 24071  004ED4                     l13304:
 24072                           
 24073                           ; BSR set to: 0
 24074                           ;ST7540.c: 291: retValueUS |= ((unsigned short) bufferRXST7540UCA[1] << 8);
 24075  004ED4  0102               	movlb	2	; () banked
 24076  004ED6  5150               	movf	(_bufferRXST7540UCA+1)& (0+255),w,b
 24077  004ED8  0100               	movlb	0	; () banked
 24078  004EDA  6F78               	movwf	(??_PacketReadParamST7540+1)& (0+255),b
 24079  004EDC  6B77               	clrf	??_PacketReadParamST7540& (0+255),b
 24080  004EDE  0100               	movlb	0	; () banked
 24081  004EE0  5177               	movf	??_PacketReadParamST7540& (0+255),w,b
 24082  004EE2  0100               	movlb	0	; () banked
 24083  004EE4  137A               	iorwf	PacketReadParamST7540@retValueUS& (0+255),f,b
 24084  004EE6  0100               	movlb	0	; () banked
 24085  004EE8  5178               	movf	(??_PacketReadParamST7540+1)& (0+255),w,b
 24086  004EEA  0100               	movlb	0	; () banked
 24087  004EEC  137B               	iorwf	(PacketReadParamST7540@retValueUS+1)& (0+255),f,b
 24088                           
 24089                           ;ST7540.c: 292: retValueUS |= bufferRXST7540UCA[2];
 24090  004EEE  0102               	movlb	2	; () banked
 24091  004EF0  5151               	movf	(_bufferRXST7540UCA+2)& (0+255),w,b
 24092  004EF2  0100               	movlb	0	; () banked
 24093  004EF4  137A               	iorwf	PacketReadParamST7540@retValueUS& (0+255),f,b
 24094                           
 24095                           ; BSR set to: 0
 24096                           ;ST7540.c: 293: return retValueUS;
 24097  004EF6  C07A  F075         	movff	PacketReadParamST7540@retValueUS,?_PacketReadParamST7540
 24098  004EFA  C07B  F076         	movff	PacketReadParamST7540@retValueUS+1,?_PacketReadParamST7540+1
 24099                           
 24100                           ; BSR set to: 0
 24101  004EFE  0012               	return	
 24102  004F00                     l13310:
 24103                           
 24104                           ; BSR set to: 0
 24105                           ;ST7540.c: 295: retValueUS |= ((unsigned short) bufferRXST7540UCA[3] << 8);
 24106  004F00  0102               	movlb	2	; () banked
 24107  004F02  5152               	movf	(_bufferRXST7540UCA+3)& (0+255),w,b
 24108  004F04  0100               	movlb	0	; () banked
 24109  004F06  6F78               	movwf	(??_PacketReadParamST7540+1)& (0+255),b
 24110  004F08  6B77               	clrf	??_PacketReadParamST7540& (0+255),b
 24111  004F0A  0100               	movlb	0	; () banked
 24112  004F0C  5177               	movf	??_PacketReadParamST7540& (0+255),w,b
 24113  004F0E  0100               	movlb	0	; () banked
 24114  004F10  137A               	iorwf	PacketReadParamST7540@retValueUS& (0+255),f,b
 24115  004F12  0100               	movlb	0	; () banked
 24116  004F14  5178               	movf	(??_PacketReadParamST7540+1)& (0+255),w,b
 24117  004F16  0100               	movlb	0	; () banked
 24118  004F18  137B               	iorwf	(PacketReadParamST7540@retValueUS+1)& (0+255),f,b
 24119                           
 24120                           ;ST7540.c: 296: retValueUS |= bufferRXST7540UCA[4];
 24121  004F1A  0102               	movlb	2	; () banked
 24122  004F1C  5153               	movf	(_bufferRXST7540UCA+4)& (0+255),w,b
 24123  004F1E  0100               	movlb	0	; () banked
 24124  004F20  137A               	iorwf	PacketReadParamST7540@retValueUS& (0+255),f,b
 24125                           
 24126                           ; BSR set to: 0
 24127                           ;ST7540.c: 297: return retValueUS;
 24128  004F22  C07A  F075         	movff	PacketReadParamST7540@retValueUS,?_PacketReadParamST7540
 24129  004F26  C07B  F076         	movff	PacketReadParamST7540@retValueUS+1,?_PacketReadParamST7540+1
 24130                           
 24131                           ; BSR set to: 0
 24132  004F2A  0012               	return	
 24133  004F2C                     l772:
 24134                           
 24135                           ; BSR set to: 0
 24136                           ;ST7540.c: 299: return bufferRXST7540UCA[5];
 24137  004F2C  C254  F075         	movff	_bufferRXST7540UCA+5,?_PacketReadParamST7540
 24138  004F30  0100               	movlb	0	; () banked
 24139  004F32  6B76               	clrf	(?_PacketReadParamST7540+1)& (0+255),b
 24140  004F34  0012               	return	
 24141  004F36                     l773:
 24142                           
 24143                           ; BSR set to: 0
 24144                           ;ST7540.c: 301: return bufferRXST7540UCA[6];
 24145  004F36  C255  F075         	movff	_bufferRXST7540UCA+6,?_PacketReadParamST7540
 24146  004F3A  0100               	movlb	0	; () banked
 24147  004F3C  6B76               	clrf	(?_PacketReadParamST7540+1)& (0+255),b
 24148  004F3E  0012               	return	
 24149  004F40                     l13316:
 24150                           
 24151                           ; BSR set to: 0
 24152                           ;ST7540.c: 303: return CheckCRCST7540();
 24153  004F40  ECA2  F02B         	call	_CheckCRCST7540	;wreg free
 24154  004F44  0100               	movlb	0	; () banked
 24155  004F46  6F77               	movwf	??_PacketReadParamST7540& (0+255),b
 24156  004F48  0100               	movlb	0	; () banked
 24157  004F4A  5177               	movf	??_PacketReadParamST7540& (0+255),w,b
 24158  004F4C  0100               	movlb	0	; () banked
 24159  004F4E  6F75               	movwf	?_PacketReadParamST7540& (0+255),b
 24160  004F50  6B76               	clrf	(?_PacketReadParamST7540+1)& (0+255),b
 24161                           
 24162                           ; BSR set to: 0
 24163  004F52  0012               	return	
 24164  004F54                     l13322:
 24165                           
 24166                           ; BSR set to: 0
 24167  004F54  0100               	movlb	0	; () banked
 24168  004F56  5179               	movf	PacketReadParamST7540@paramName& (0+255),w,b
 24169                           
 24170                           ; Switch size 1, requested type "space"
 24171                           ; Number of cases is 6, Range of values is 0 to 5
 24172                           ; switch strategies available:
 24173                           ; Name         Instructions Cycles
 24174                           ; simple_byte           19    10 (average)
 24175                           ;	Chosen strategy is simple_byte
 24176  004F58  0A00               	xorlw	0	; case 0
 24177  004F5A  B4D8               	btfsc	status,2,c
 24178  004F5C  D7B1               	goto	l13300
 24179  004F5E  0A01               	xorlw	1	; case 1
 24180  004F60  B4D8               	btfsc	status,2,c
 24181  004F62  D7B8               	goto	l13304
 24182  004F64  0A03               	xorlw	3	; case 2
 24183  004F66  B4D8               	btfsc	status,2,c
 24184  004F68  D7CB               	goto	l13310
 24185  004F6A  0A01               	xorlw	1	; case 3
 24186  004F6C  B4D8               	btfsc	status,2,c
 24187  004F6E  D7DE               	goto	l772
 24188  004F70  0A07               	xorlw	7	; case 4
 24189  004F72  B4D8               	btfsc	status,2,c
 24190  004F74  D7E0               	goto	l773
 24191  004F76  0A01               	xorlw	1	; case 5
 24192  004F78  B4D8               	btfsc	status,2,c
 24193  004F7A  D7E2               	goto	l13316
 24194                           
 24195                           ; BSR set to: 0
 24196                           ;ST7540.c: 306: return 0;
 24197                           
 24198                           ; BSR set to: 0
 24199  004F7C  0E00               	movlw	0
 24200  004F7E  0100               	movlb	0	; () banked
 24201  004F80  6F76               	movwf	(?_PacketReadParamST7540+1)& (0+255),b
 24202  004F82  0E00               	movlw	0
 24203  004F84  6F75               	movwf	?_PacketReadParamST7540& (0+255),b
 24204  004F86  0012               	return	
 24205  004F88                     __end_of_PacketReadParamST7540:
 24206                           	opt stack 0
 24207                           tblptru	equ	0xFF8
 24208                           tblptrh	equ	0xFF7
 24209                           tblptrl	equ	0xFF6
 24210                           tablat	equ	0xFF5
 24211                           prodh	equ	0xFF4
 24212                           prodl	equ	0xFF3
 24213                           intcon	equ	0xFF2
 24214                           postinc0	equ	0xFEE
 24215                           wreg	equ	0xFE8
 24216                           indf1	equ	0xFE7
 24217                           postinc1	equ	0xFE6
 24218                           postdec1	equ	0xFE5
 24219                           fsr1h	equ	0xFE2
 24220                           fsr1l	equ	0xFE1
 24221                           indf2	equ	0xFDF
 24222                           postinc2	equ	0xFDE
 24223                           postdec2	equ	0xFDD
 24224                           fsr2h	equ	0xFDA
 24225                           fsr2l	equ	0xFD9
 24226                           status	equ	0xFD8
 24227                           
 24228 ;; *************** function _CheckCRCST7540 *****************
 24229 ;; Defined at:
 24230 ;;		line 313 in file "ST7540.c"
 24231 ;; Parameters:    Size  Location     Type
 24232 ;;		None
 24233 ;; Auto vars:     Size  Location     Type
 24234 ;;  receivedCRCU    2   18[BANK0 ] unsigned short 
 24235 ;;  expectedCRCU    2   16[BANK0 ] unsigned short 
 24236 ;;  packetLenUC     1   20[BANK0 ] unsigned char 
 24237 ;; Return value:  Size  Location     Type
 24238 ;;                  1    wreg      unsigned char 
 24239 ;; Registers used:
 24240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24241 ;; Tracked objects:
 24242 ;;		On entry : 0/0
 24243 ;;		On exit  : 0/0
 24244 ;;		Unchanged: 0/0
 24245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24247 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24248 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24249 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24250 ;;Total ram usage:        8 bytes
 24251 ;; Hardware stack levels used:    1
 24252 ;; Hardware stack levels required when called:    9
 24253 ;; This function calls:
 24254 ;;		_CRC16
 24255 ;; This function is called by:
 24256 ;;		_PacketReadParamST7540
 24257 ;; This function uses a non-reentrant model
 24258 ;;
 24259                           
 24260                           	psect	text127
 24261  005744                     __ptext127:
 24262                           	opt stack 0
 24263  005744                     _CheckCRCST7540:
 24264                           	opt stack 16
 24265                           
 24266                           ;ST7540.c: 314: unsigned short expectedCRCUS;
 24267                           ;ST7540.c: 315: unsigned short receivedCRCUS = 0;
 24268                           
 24269                           ; BSR set to: 0
 24270                           ;incstack = 0
 24271  005744  0E00               	movlw	0
 24272  005746  0100               	movlb	0	; () banked
 24273  005748  6F73               	movwf	(CheckCRCST7540@receivedCRCUS+1)& (0+255),b
 24274  00574A  0E00               	movlw	0
 24275  00574C  6F72               	movwf	CheckCRCST7540@receivedCRCUS& (0+255),b
 24276                           
 24277                           ; BSR set to: 0
 24278                           ;ST7540.c: 316: unsigned char packetLenUC;
 24279                           ;ST7540.c: 318: packetLenUC = bufferRXST7540UCA[0]-2;
 24280  00574E  0102               	movlb	2	; () banked
 24281  005750  514F               	movf	_bufferRXST7540UCA& (0+255),w,b
 24282  005752  0FFE               	addlw	254
 24283  005754  0100               	movlb	0	; () banked
 24284  005756  6F74               	movwf	CheckCRCST7540@packetLenUC& (0+255),b
 24285                           
 24286                           ; BSR set to: 0
 24287                           ;ST7540.c: 319: expectedCRCUS = CRC16(bufferRXST7540UCA, packetLenUC);
 24288  005758  0E4F               	movlw	low _bufferRXST7540UCA
 24289  00575A  0100               	movlb	0	; () banked
 24290  00575C  6F60               	movwf	CRC16@data_p& (0+255),b
 24291  00575E  0E02               	movlw	high _bufferRXST7540UCA
 24292  005760  0100               	movlb	0	; () banked
 24293  005762  6F61               	movwf	(CRC16@data_p+1)& (0+255),b
 24294  005764  C074  F062         	movff	CheckCRCST7540@packetLenUC,CRC16@length
 24295  005768  0100               	movlb	0	; () banked
 24296  00576A  6B63               	clrf	(CRC16@length+1)& (0+255),b
 24297  00576C  EC08  F01E         	call	_CRC16	;wreg free
 24298  005770  C060  F070         	movff	?_CRC16,CheckCRCST7540@expectedCRCUS
 24299  005774  C061  F071         	movff	?_CRC16+1,CheckCRCST7540@expectedCRCUS+1
 24300                           
 24301                           ;ST7540.c: 320: receivedCRCUS |= ((unsigned short) bufferRXST7540UCA[packetLenUC] << 8);
 24302  005778  0100               	movlb	0	; () banked
 24303  00577A  5174               	movf	CheckCRCST7540@packetLenUC& (0+255),w,b
 24304  00577C  0D01               	mullw	1
 24305  00577E  0E4F               	movlw	low _bufferRXST7540UCA
 24306  005780  24F3               	addwf	prodl,w,c
 24307  005782  6ED9               	movwf	fsr2l,c
 24308  005784  0E02               	movlw	high _bufferRXST7540UCA
 24309  005786  20F4               	addwfc	prodh,w,c
 24310  005788  6EDA               	movwf	fsr2h,c
 24311  00578A  50DF               	movf	indf2,w,c
 24312  00578C  0100               	movlb	0	; () banked
 24313  00578E  6F6D               	movwf	??_CheckCRCST7540& (0+255),b
 24314  005790  0100               	movlb	0	; () banked
 24315  005792  516D               	movf	??_CheckCRCST7540& (0+255),w,b
 24316  005794  0100               	movlb	0	; () banked
 24317  005796  6F6F               	movwf	(??_CheckCRCST7540+2)& (0+255),b
 24318  005798  6B6E               	clrf	(??_CheckCRCST7540+1)& (0+255),b
 24319  00579A  0100               	movlb	0	; () banked
 24320  00579C  516E               	movf	(??_CheckCRCST7540+1)& (0+255),w,b
 24321  00579E  0100               	movlb	0	; () banked
 24322  0057A0  1372               	iorwf	CheckCRCST7540@receivedCRCUS& (0+255),f,b
 24323  0057A2  0100               	movlb	0	; () banked
 24324  0057A4  516F               	movf	(??_CheckCRCST7540+2)& (0+255),w,b
 24325  0057A6  0100               	movlb	0	; () banked
 24326  0057A8  1373               	iorwf	(CheckCRCST7540@receivedCRCUS+1)& (0+255),f,b
 24327                           
 24328                           ; BSR set to: 0
 24329                           ;ST7540.c: 321: receivedCRCUS |= bufferRXST7540UCA[packetLenUC+1];
 24330  0057AA  0100               	movlb	0	; () banked
 24331  0057AC  5174               	movf	CheckCRCST7540@packetLenUC& (0+255),w,b
 24332  0057AE  0100               	movlb	0	; () banked
 24333  0057B0  6F6D               	movwf	??_CheckCRCST7540& (0+255),b
 24334  0057B2  6B6E               	clrf	(??_CheckCRCST7540+1)& (0+255),b
 24335  0057B4  0E01               	movlw	1
 24336  0057B6  0100               	movlb	0	; () banked
 24337  0057B8  276D               	addwf	??_CheckCRCST7540& (0+255),f,b
 24338  0057BA  0E00               	movlw	0
 24339  0057BC  236E               	addwfc	(??_CheckCRCST7540+1)& (0+255),f,b
 24340  0057BE  0E4F               	movlw	low _bufferRXST7540UCA
 24341  0057C0  0100               	movlb	0	; () banked
 24342  0057C2  256D               	addwf	??_CheckCRCST7540& (0+255),w,b
 24343  0057C4  6ED9               	movwf	fsr2l,c
 24344  0057C6  0E02               	movlw	high _bufferRXST7540UCA
 24345  0057C8  0100               	movlb	0	; () banked
 24346  0057CA  216E               	addwfc	(??_CheckCRCST7540+1)& (0+255),w,b
 24347  0057CC  6EDA               	movwf	fsr2h,c
 24348  0057CE  50DF               	movf	indf2,w,c
 24349  0057D0  0100               	movlb	0	; () banked
 24350  0057D2  6F6F               	movwf	(??_CheckCRCST7540+2)& (0+255),b
 24351  0057D4  0100               	movlb	0	; () banked
 24352  0057D6  516F               	movf	(??_CheckCRCST7540+2)& (0+255),w,b
 24353  0057D8  0100               	movlb	0	; () banked
 24354  0057DA  1372               	iorwf	CheckCRCST7540@receivedCRCUS& (0+255),f,b
 24355                           
 24356                           ; BSR set to: 0
 24357                           ;ST7540.c: 323: return (expectedCRCUS == receivedCRCUS);
 24358  0057DC  0100               	movlb	0	; () banked
 24359  0057DE  5172               	movf	CheckCRCST7540@receivedCRCUS& (0+255),w,b
 24360  0057E0  0100               	movlb	0	; () banked
 24361  0057E2  1970               	xorwf	CheckCRCST7540@expectedCRCUS& (0+255),w,b
 24362  0057E4  E108               	bnz	u9210
 24363  0057E6  0100               	movlb	0	; () banked
 24364  0057E8  5173               	movf	(CheckCRCST7540@receivedCRCUS+1)& (0+255),w,b
 24365  0057EA  0100               	movlb	0	; () banked
 24366  0057EC  1971               	xorwf	(CheckCRCST7540@expectedCRCUS+1)& (0+255),w,b
 24367  0057EE  A4D8               	btfss	status,2,c
 24368  0057F0  D002               	goto	u9210
 24369  0057F2  0E01               	movlw	1
 24370  0057F4  0012               	return	
 24371  0057F6                     u9210:
 24372  0057F6  0E00               	movlw	0
 24373  0057F8  0012               	return	
 24374  0057FA                     __end_of_CheckCRCST7540:
 24375                           	opt stack 0
 24376                           tblptru	equ	0xFF8
 24377                           tblptrh	equ	0xFF7
 24378                           tblptrl	equ	0xFF6
 24379                           tablat	equ	0xFF5
 24380                           prodh	equ	0xFF4
 24381                           prodl	equ	0xFF3
 24382                           intcon	equ	0xFF2
 24383                           postinc0	equ	0xFEE
 24384                           wreg	equ	0xFE8
 24385                           indf1	equ	0xFE7
 24386                           postinc1	equ	0xFE6
 24387                           postdec1	equ	0xFE5
 24388                           fsr1h	equ	0xFE2
 24389                           fsr1l	equ	0xFE1
 24390                           indf2	equ	0xFDF
 24391                           postinc2	equ	0xFDE
 24392                           postdec2	equ	0xFDD
 24393                           fsr2h	equ	0xFDA
 24394                           fsr2l	equ	0xFD9
 24395                           status	equ	0xFD8
 24396                           
 24397 ;; *************** function _CRC16 *****************
 24398 ;; Defined at:
 24399 ;;		line 22 in file "crc16.c"
 24400 ;; Parameters:    Size  Location     Type
 24401 ;;  data_p          2    0[BANK0 ] PTR unsigned char 
 24402 ;;		 -> bufferRXST7540UCA(75), bufferTXST7540UCA(79), 
 24403 ;;  length          2    2[BANK0 ] unsigned short 
 24404 ;; Auto vars:     Size  Location     Type
 24405 ;;  crc             2   11[BANK0 ] unsigned int 
 24406 ;;  data            2    9[BANK0 ] unsigned int 
 24407 ;;  i               1    8[BANK0 ] unsigned char 
 24408 ;; Return value:  Size  Location     Type
 24409 ;;                  2    0[BANK0 ] unsigned short 
 24410 ;; Registers used:
 24411 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24412 ;; Tracked objects:
 24413 ;;		On entry : 0/0
 24414 ;;		On exit  : 0/0
 24415 ;;		Unchanged: 0/0
 24416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24417 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24418 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24419 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24420 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24421 ;;Total ram usage:       13 bytes
 24422 ;; Hardware stack levels used:    1
 24423 ;; Hardware stack levels required when called:    8
 24424 ;; This function calls:
 24425 ;;		Nothing
 24426 ;; This function is called by:
 24427 ;;		_buildMessageST7540
 24428 ;;		_CheckCRCST7540
 24429 ;; This function uses a non-reentrant model
 24430 ;;
 24431                           
 24432                           	psect	text128
 24433  003C10                     __ptext128:
 24434                           	opt stack 0
 24435  003C10                     _CRC16:
 24436                           	opt stack 18
 24437                           
 24438                           ;crc16.c: 24: unsigned char i;
 24439                           ;crc16.c: 25: unsigned int data;
 24440                           ;crc16.c: 26: unsigned int crc = 0xffff;
 24441                           
 24442                           ; BSR set to: 0
 24443                           ;incstack = 0
 24444  003C10  0100               	movlb	0	; () banked
 24445  003C12  696B               	setf	CRC16@crc& (0+255),b
 24446  003C14  696C               	setf	(CRC16@crc+1)& (0+255),b
 24447                           
 24448                           ; BSR set to: 0
 24449                           ;crc16.c: 28: if (length == 0)
 24450  003C16  0100               	movlb	0	; () banked
 24451  003C18  5162               	movf	CRC16@length& (0+255),w,b
 24452  003C1A  0100               	movlb	0	; () banked
 24453  003C1C  1163               	iorwf	(CRC16@length+1)& (0+255),w,b
 24454  003C1E  A4D8               	btfss	status,2,c
 24455  003C20  D009               	goto	l12880
 24456                           
 24457                           ; BSR set to: 0
 24458                           ;crc16.c: 29: return (~crc);
 24459  003C22  0100               	movlb	0	; () banked
 24460  003C24  1D6B               	comf	CRC16@crc& (0+255),w,b
 24461  003C26  0100               	movlb	0	; () banked
 24462  003C28  6F60               	movwf	?_CRC16& (0+255),b
 24463  003C2A  0100               	movlb	0	; () banked
 24464  003C2C  1D6C               	comf	(CRC16@crc+1)& (0+255),w,b
 24465  003C2E  0100               	movlb	0	; () banked
 24466  003C30  6F61               	movwf	(?_CRC16+1)& (0+255),b
 24467                           
 24468                           ; BSR set to: 0
 24469  003C32  0012               	return	
 24470  003C34                     l12880:
 24471                           
 24472                           ; BSR set to: 0
 24473                           ;crc16.c: 32: {
 24474                           ;crc16.c: 33: for (i=0, data=(unsigned int)0xff & *data_p++;
 24475  003C34  0E00               	movlw	0
 24476  003C36  0100               	movlb	0	; () banked
 24477  003C38  6F68               	movwf	CRC16@i& (0+255),b
 24478                           
 24479                           ; BSR set to: 0
 24480  003C3A  C060  FFD9         	movff	CRC16@data_p,fsr2l
 24481  003C3E  C061  FFDA         	movff	CRC16@data_p+1,fsr2h
 24482  003C42  50DF               	movf	indf2,w,c
 24483  003C44  0100               	movlb	0	; () banked
 24484  003C46  6F64               	movwf	??_CRC16& (0+255),b
 24485  003C48  0100               	movlb	0	; () banked
 24486  003C4A  5164               	movf	??_CRC16& (0+255),w,b
 24487  003C4C  0100               	movlb	0	; () banked
 24488  003C4E  6F69               	movwf	CRC16@data& (0+255),b
 24489  003C50  6B6A               	clrf	(CRC16@data+1)& (0+255),b
 24490                           
 24491                           ; BSR set to: 0
 24492  003C52  0100               	movlb	0	; () banked
 24493  003C54  4B60               	infsnz	CRC16@data_p& (0+255),f,b
 24494  003C56  2B61               	incf	(CRC16@data_p+1)& (0+255),f,b
 24495  003C58                     l12886:
 24496                           
 24497                           ; BSR set to: 0
 24498                           ;crc16.c: 34: i < 8;
 24499                           ;crc16.c: 35: i++, data >>= 1)
 24500  003C58  0E07               	movlw	7
 24501  003C5A  0100               	movlb	0	; () banked
 24502  003C5C  6568               	cpfsgt	CRC16@i& (0+255),b
 24503  003C5E  D001               	goto	l12890
 24504  003C60  D041               	goto	l12898
 24505  003C62                     l12890:
 24506                           
 24507                           ; BSR set to: 0
 24508                           ;crc16.c: 36: {
 24509                           ;crc16.c: 37: if ((crc & 0x0001) ^ (data & 0x0001))
 24510  003C62  0E01               	movlw	1
 24511  003C64  0100               	movlb	0	; () banked
 24512  003C66  1569               	andwf	CRC16@data& (0+255),w,b
 24513  003C68  0100               	movlb	0	; () banked
 24514  003C6A  6F64               	movwf	??_CRC16& (0+255),b
 24515  003C6C  0E00               	movlw	0
 24516  003C6E  0100               	movlb	0	; () banked
 24517  003C70  156A               	andwf	(CRC16@data+1)& (0+255),w,b
 24518  003C72  0100               	movlb	0	; () banked
 24519  003C74  6F65               	movwf	(??_CRC16+1)& (0+255),b
 24520  003C76  0E01               	movlw	1
 24521  003C78  0100               	movlb	0	; () banked
 24522  003C7A  156B               	andwf	CRC16@crc& (0+255),w,b
 24523  003C7C  0100               	movlb	0	; () banked
 24524  003C7E  6F66               	movwf	(??_CRC16+2)& (0+255),b
 24525  003C80  0E00               	movlw	0
 24526  003C82  0100               	movlb	0	; () banked
 24527  003C84  156C               	andwf	(CRC16@crc+1)& (0+255),w,b
 24528  003C86  0100               	movlb	0	; () banked
 24529  003C88  6F67               	movwf	(??_CRC16+3)& (0+255),b
 24530  003C8A  0100               	movlb	0	; () banked
 24531  003C8C  5164               	movf	??_CRC16& (0+255),w,b
 24532  003C8E  0100               	movlb	0	; () banked
 24533  003C90  1B66               	xorwf	(??_CRC16+2)& (0+255),f,b
 24534  003C92  0100               	movlb	0	; () banked
 24535  003C94  5165               	movf	(??_CRC16+1)& (0+255),w,b
 24536  003C96  0100               	movlb	0	; () banked
 24537  003C98  1B67               	xorwf	(??_CRC16+3)& (0+255),f,b
 24538  003C9A  0100               	movlb	0	; () banked
 24539  003C9C  5166               	movf	(??_CRC16+2)& (0+255),w,b
 24540  003C9E  0100               	movlb	0	; () banked
 24541  003CA0  1167               	iorwf	(??_CRC16+3)& (0+255),w,b
 24542  003CA2  B4D8               	btfsc	status,2,c
 24543  003CA4  D014               	goto	l12894
 24544                           
 24545                           ; BSR set to: 0
 24546                           ;crc16.c: 38: crc = (crc >> 1) ^ 0x8408;
 24547  003CA6  90D8               	bcf	status,0,c
 24548  003CA8  0100               	movlb	0	; () banked
 24549  003CAA  316C               	rrcf	(CRC16@crc+1)& (0+255),w,b
 24550  003CAC  0100               	movlb	0	; () banked
 24551  003CAE  6F65               	movwf	(??_CRC16+1)& (0+255),b
 24552  003CB0  0100               	movlb	0	; () banked
 24553  003CB2  316B               	rrcf	CRC16@crc& (0+255),w,b
 24554  003CB4  0100               	movlb	0	; () banked
 24555  003CB6  6F64               	movwf	??_CRC16& (0+255),b
 24556  003CB8  0E08               	movlw	8
 24557  003CBA  0100               	movlb	0	; () banked
 24558  003CBC  1964               	xorwf	??_CRC16& (0+255),w,b
 24559  003CBE  0100               	movlb	0	; () banked
 24560  003CC0  6F6B               	movwf	CRC16@crc& (0+255),b
 24561  003CC2  0E84               	movlw	132
 24562  003CC4  0100               	movlb	0	; () banked
 24563  003CC6  1965               	xorwf	(??_CRC16+1)& (0+255),w,b
 24564  003CC8  0100               	movlb	0	; () banked
 24565  003CCA  6F6C               	movwf	(CRC16@crc+1)& (0+255),b
 24566  003CCC  D004               	goto	l818
 24567  003CCE                     l12894:
 24568                           
 24569                           ; BSR set to: 0
 24570                           ;crc16.c: 39: else crc >>= 1;
 24571  003CCE  0100               	movlb	0	; () banked
 24572  003CD0  90D8               	bcf	status,0,c
 24573  003CD2  336C               	rrcf	(CRC16@crc+1)& (0+255),f,b
 24574  003CD4  336B               	rrcf	CRC16@crc& (0+255),f,b
 24575  003CD6                     l818:
 24576                           
 24577                           ; BSR set to: 0
 24578  003CD6  0100               	movlb	0	; () banked
 24579  003CD8  2B68               	incf	CRC16@i& (0+255),f,b
 24580  003CDA  0100               	movlb	0	; () banked
 24581  003CDC  90D8               	bcf	status,0,c
 24582  003CDE  336A               	rrcf	(CRC16@data+1)& (0+255),f,b
 24583  003CE0  3369               	rrcf	CRC16@data& (0+255),f,b
 24584  003CE2  D7BA               	goto	l12886
 24585  003CE4                     l12898:
 24586                           
 24587                           ; BSR set to: 0
 24588                           ;crc16.c: 40: }
 24589                           ;crc16.c: 41: } while (--length);
 24590  003CE4  0100               	movlb	0	; () banked
 24591  003CE6  0762               	decf	CRC16@length& (0+255),f,b
 24592  003CE8  A0D8               	btfss	status,0,c
 24593  003CEA  0763               	decf	(CRC16@length+1)& (0+255),f,b
 24594  003CEC  0100               	movlb	0	; () banked
 24595  003CEE  5162               	movf	CRC16@length& (0+255),w,b
 24596  003CF0  0100               	movlb	0	; () banked
 24597  003CF2  1163               	iorwf	(CRC16@length+1)& (0+255),w,b
 24598  003CF4  A4D8               	btfss	status,2,c
 24599  003CF6  D79E               	goto	l12880
 24600                           
 24601                           ; BSR set to: 0
 24602                           ;crc16.c: 43: crc = ~crc;
 24603                           
 24604                           ; BSR set to: 0
 24605  003CF8  0100               	movlb	0	; () banked
 24606  003CFA  1F6B               	comf	CRC16@crc& (0+255),f,b
 24607  003CFC  1F6C               	comf	(CRC16@crc+1)& (0+255),f,b
 24608                           
 24609                           ; BSR set to: 0
 24610                           ;crc16.c: 44: data = crc;
 24611  003CFE  C06B  F069         	movff	CRC16@crc,CRC16@data
 24612  003D02  C06C  F06A         	movff	CRC16@crc+1,CRC16@data+1
 24613                           
 24614                           ; BSR set to: 0
 24615                           ;crc16.c: 45: crc = (crc << 8) | (data >> 8 & 0xff);
 24616  003D06  C069  F064         	movff	CRC16@data,??_CRC16
 24617  003D0A  C06A  F065         	movff	CRC16@data+1,??_CRC16+1
 24618  003D0E  C065  F064         	movff	??_CRC16+1,??_CRC16
 24619  003D12  0100               	movlb	0	; () banked
 24620  003D14  6B65               	clrf	(??_CRC16+1)& (0+255),b
 24621  003D16  0100               	movlb	0	; () banked
 24622  003D18  5164               	movf	??_CRC16& (0+255),w,b
 24623  003D1A  C06B  F066         	movff	CRC16@crc,??_CRC16+2
 24624  003D1E  C06C  F067         	movff	CRC16@crc+1,??_CRC16+3
 24625  003D22  C066  F067         	movff	??_CRC16+2,??_CRC16+3
 24626  003D26  0100               	movlb	0	; () banked
 24627  003D28  6B66               	clrf	(??_CRC16+2)& (0+255),b
 24628  003D2A  0100               	movlb	0	; () banked
 24629  003D2C  1166               	iorwf	(??_CRC16+2)& (0+255),w,b
 24630  003D2E  0100               	movlb	0	; () banked
 24631  003D30  6F6B               	movwf	CRC16@crc& (0+255),b
 24632  003D32  0100               	movlb	0	; () banked
 24633  003D34  5167               	movf	(??_CRC16+3)& (0+255),w,b
 24634  003D36  0100               	movlb	0	; () banked
 24635  003D38  6F6C               	movwf	(CRC16@crc+1)& (0+255),b
 24636                           
 24637                           ; BSR set to: 0
 24638                           ;crc16.c: 47: return (crc);
 24639  003D3A  C06B  F060         	movff	CRC16@crc,?_CRC16
 24640  003D3E  C06C  F061         	movff	CRC16@crc+1,?_CRC16+1
 24641  003D42  0012               	return	
 24642  003D44                     __end_of_CRC16:
 24643                           	opt stack 0
 24644                           tblptru	equ	0xFF8
 24645                           tblptrh	equ	0xFF7
 24646                           tblptrl	equ	0xFF6
 24647                           tablat	equ	0xFF5
 24648                           prodh	equ	0xFF4
 24649                           prodl	equ	0xFF3
 24650                           intcon	equ	0xFF2
 24651                           postinc0	equ	0xFEE
 24652                           wreg	equ	0xFE8
 24653                           indf1	equ	0xFE7
 24654                           postinc1	equ	0xFE6
 24655                           postdec1	equ	0xFE5
 24656                           fsr1h	equ	0xFE2
 24657                           fsr1l	equ	0xFE1
 24658                           indf2	equ	0xFDF
 24659                           postinc2	equ	0xFDE
 24660                           postdec2	equ	0xFDD
 24661                           fsr2h	equ	0xFDA
 24662                           fsr2l	equ	0xFD9
 24663                           status	equ	0xFD8
 24664                           
 24665 ;; *************** function _PacketDataST7540 *****************
 24666 ;; Defined at:
 24667 ;;		line 280 in file "ST7540.c"
 24668 ;; Parameters:    Size  Location     Type
 24669 ;;		None
 24670 ;; Auto vars:     Size  Location     Type
 24671 ;;		None
 24672 ;; Return value:  Size  Location     Type
 24673 ;;                  2    0[BANK0 ] PTR unsigned char 
 24674 ;; Registers used:
 24675 ;;		wreg, status,2, status,0
 24676 ;; Tracked objects:
 24677 ;;		On entry : 0/0
 24678 ;;		On exit  : 0/0
 24679 ;;		Unchanged: 0/0
 24680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24681 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24684 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24685 ;;Total ram usage:        2 bytes
 24686 ;; Hardware stack levels used:    1
 24687 ;; Hardware stack levels required when called:    8
 24688 ;; This function calls:
 24689 ;;		Nothing
 24690 ;; This function is called by:
 24691 ;;		_addPacketToIncomingQueue
 24692 ;; This function uses a non-reentrant model
 24693 ;;
 24694                           
 24695                           	psect	text129
 24696  007B08                     __ptext129:
 24697                           	opt stack 0
 24698  007B08                     _PacketDataST7540:
 24699                           	opt stack 18
 24700                           
 24701                           ;ST7540.c: 281: return (bufferRXST7540UCA + 7);
 24702                           
 24703                           ; BSR set to: 0
 24704                           ;incstack = 0
 24705  007B08  0E56               	movlw	low (_bufferRXST7540UCA+7)
 24706  007B0A  0100               	movlb	0	; () banked
 24707  007B0C  6F60               	movwf	?_PacketDataST7540& (0+255),b
 24708  007B0E  0E02               	movlw	high (_bufferRXST7540UCA+7)
 24709  007B10  0100               	movlb	0	; () banked
 24710  007B12  6F61               	movwf	(?_PacketDataST7540+1)& (0+255),b
 24711  007B14  0012               	return	
 24712  007B16                     __end_of_PacketDataST7540:
 24713                           	opt stack 0
 24714                           tblptru	equ	0xFF8
 24715                           tblptrh	equ	0xFF7
 24716                           tblptrl	equ	0xFF6
 24717                           tablat	equ	0xFF5
 24718                           prodh	equ	0xFF4
 24719                           prodl	equ	0xFF3
 24720                           intcon	equ	0xFF2
 24721                           postinc0	equ	0xFEE
 24722                           wreg	equ	0xFE8
 24723                           indf1	equ	0xFE7
 24724                           postinc1	equ	0xFE6
 24725                           postdec1	equ	0xFE5
 24726                           fsr1h	equ	0xFE2
 24727                           fsr1l	equ	0xFE1
 24728                           indf2	equ	0xFDF
 24729                           postinc2	equ	0xFDE
 24730                           postdec2	equ	0xFDD
 24731                           fsr2h	equ	0xFDA
 24732                           fsr2l	equ	0xFD9
 24733                           status	equ	0xFD8
 24734                           
 24735 ;; *************** function _ReceiveNewDataST7540 *****************
 24736 ;; Defined at:
 24737 ;;		line 270 in file "ST7540.c"
 24738 ;; Parameters:    Size  Location     Type
 24739 ;;		None
 24740 ;; Auto vars:     Size  Location     Type
 24741 ;;  discardUC       1    0[BANK0 ] unsigned char 
 24742 ;; Return value:  Size  Location     Type
 24743 ;;                  1    wreg      void 
 24744 ;; Registers used:
 24745 ;;		wreg, status,2, status,0
 24746 ;; Tracked objects:
 24747 ;;		On entry : 0/0
 24748 ;;		On exit  : 0/0
 24749 ;;		Unchanged: 0/0
 24750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24752 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24754 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24755 ;;Total ram usage:        1 bytes
 24756 ;; Hardware stack levels used:    1
 24757 ;; Hardware stack levels required when called:    8
 24758 ;; This function calls:
 24759 ;;		Nothing
 24760 ;; This function is called by:
 24761 ;;		_incomingCommands
 24762 ;; This function uses a non-reentrant model
 24763 ;;
 24764                           
 24765                           	psect	text130
 24766  007A4C                     __ptext130:
 24767                           	opt stack 0
 24768  007A4C                     _ReceiveNewDataST7540:
 24769                           	opt stack 19
 24770                           
 24771                           ;ST7540.c: 271: unsigned char discardUC;
 24772                           ;ST7540.c: 273: flagST7540 |= 2;
 24773                           
 24774                           ; BSR set to: 0
 24775                           ;incstack = 0
 24776  007A4C  824C               	bsf	_flagST7540,1,c
 24777                           
 24778                           ;ST7540.c: 274: flagST7540 &= ~4;
 24779  007A4E  944C               	bcf	_flagST7540,2,c
 24780                           
 24781                           ;ST7540.c: 275: discardUC = SSP1BUF;
 24782  007A50  CF91 F060          	movff	3985,ReceiveNewDataST7540@discardUC	;volatile
 24783                           
 24784                           ;ST7540.c: 276: SSP1BUF = 0;
 24785  007A54  0E00               	movlw	0
 24786  007A56  6E91               	movwf	3985,c	;volatile
 24787                           
 24788                           ;ST7540.c: 277: bufferRXNextUCA = 0;
 24789  007A58  0E00               	movlw	0
 24790  007A5A  6E48               	movwf	_bufferRXNextUCA,c
 24791  007A5C  0012               	return		;funcret
 24792  007A5E                     __end_of_ReceiveNewDataST7540:
 24793                           	opt stack 0
 24794                           tblptru	equ	0xFF8
 24795                           tblptrh	equ	0xFF7
 24796                           tblptrl	equ	0xFF6
 24797                           tablat	equ	0xFF5
 24798                           prodh	equ	0xFF4
 24799                           prodl	equ	0xFF3
 24800                           intcon	equ	0xFF2
 24801                           postinc0	equ	0xFEE
 24802                           wreg	equ	0xFE8
 24803                           indf1	equ	0xFE7
 24804                           postinc1	equ	0xFE6
 24805                           postdec1	equ	0xFE5
 24806                           fsr1h	equ	0xFE2
 24807                           fsr1l	equ	0xFE1
 24808                           indf2	equ	0xFDF
 24809                           postinc2	equ	0xFDE
 24810                           postdec2	equ	0xFDD
 24811                           fsr2h	equ	0xFDA
 24812                           fsr2l	equ	0xFD9
 24813                           status	equ	0xFD8
 24814                           
 24815 ;; *************** function _bluetoothStateHandler *****************
 24816 ;; Defined at:
 24817 ;;		line 318 in file "bluetooth.c"
 24818 ;; Parameters:    Size  Location     Type
 24819 ;;		None
 24820 ;; Auto vars:     Size  Location     Type
 24821 ;;		None
 24822 ;; Return value:  Size  Location     Type
 24823 ;;                  1    wreg      void 
 24824 ;; Registers used:
 24825 ;;		wreg, status,2, status,0
 24826 ;; Tracked objects:
 24827 ;;		On entry : 0/0
 24828 ;;		On exit  : 0/0
 24829 ;;		Unchanged: 0/0
 24830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24835 ;;Total ram usage:        0 bytes
 24836 ;; Hardware stack levels used:    1
 24837 ;; Hardware stack levels required when called:    8
 24838 ;; This function calls:
 24839 ;;		Nothing
 24840 ;; This function is called by:
 24841 ;;		_currentStateHandler
 24842 ;; This function uses a non-reentrant model
 24843 ;;
 24844                           
 24845                           	psect	text131
 24846  0045D0                     __ptext131:
 24847                           	opt stack 0
 24848  0045D0                     _bluetoothStateHandler:
 24849                           	opt stack 20
 24850                           
 24851                           ;bluetooth.c: 320: switch(state.bluetooth.current){
 24852                           
 24853                           ;incstack = 0
 24854  0045D0  D053               	goto	l14980
 24855  0045D2                     l2688:
 24856                           
 24857                           ; BSR set to: 1
 24858                           ;bluetooth.c: 322: if(bluetoothStatus.bluetoothSetup)
 24859  0045D2  0100               	movlb	0	; () banked
 24860  0045D4  A3C2               	btfss	_bluetoothStatus& (0+255),1,b
 24861  0045D6  D004               	goto	l14948
 24862                           
 24863                           ; BSR set to: 0
 24864                           ;bluetooth.c: 323: state.bluetooth.next = 6;
 24865  0045D8  0E06               	movlw	6
 24866  0045DA  0101               	movlb	1	; () banked
 24867  0045DC  6FDE               	movwf	(_state+55)& (0+255),b
 24868  0045DE  0012               	return	
 24869  0045E0                     l14948:
 24870                           
 24871                           ;bluetooth.c: 324: else
 24872                           ;bluetooth.c: 325: state.bluetooth.next = 2;
 24873  0045E0  0E02               	movlw	2
 24874  0045E2  0101               	movlb	1	; () banked
 24875  0045E4  6FDE               	movwf	(_state+55)& (0+255),b
 24876                           
 24877                           ; BSR set to: 1
 24878                           ;bluetooth.c: 326: break;
 24879  0045E6  0012               	return	
 24880  0045E8                     l14950:
 24881                           
 24882                           ; BSR set to: 1
 24883                           ;bluetooth.c: 329: if(setupIndex == 0)
 24884  0045E8  0100               	movlb	0	; () banked
 24885  0045EA  51C0               	movf	_setupIndex& (0+255),w,b
 24886  0045EC  A4D8               	btfss	status,2,c
 24887  0045EE  D004               	goto	l14954
 24888                           
 24889                           ; BSR set to: 0
 24890                           ;bluetooth.c: 330: state.bluetooth.next = 10;
 24891  0045F0  0E0A               	movlw	10
 24892  0045F2  0101               	movlb	1	; () banked
 24893  0045F4  6FDE               	movwf	(_state+55)& (0+255),b
 24894  0045F6  0012               	return	
 24895  0045F8                     l14954:
 24896                           
 24897                           ;bluetooth.c: 331: else
 24898                           ;bluetooth.c: 332: state.bluetooth.next = 6;
 24899  0045F8  0E06               	movlw	6
 24900  0045FA  0101               	movlb	1	; () banked
 24901  0045FC  6FDE               	movwf	(_state+55)& (0+255),b
 24902                           
 24903                           ; BSR set to: 1
 24904                           ;bluetooth.c: 333: break;
 24905  0045FE  0012               	return	
 24906  004600                     l14956:
 24907                           
 24908                           ; BSR set to: 1
 24909                           ;bluetooth.c: 336: state.bluetooth.next = 6;
 24910  004600  0E06               	movlw	6
 24911  004602  0101               	movlb	1	; () banked
 24912  004604  6FDE               	movwf	(_state+55)& (0+255),b
 24913                           
 24914                           ;bluetooth.c: 337: break;
 24915  004606  0012               	return	
 24916  004608                     l14958:
 24917                           
 24918                           ; BSR set to: 1
 24919                           ;bluetooth.c: 340: state.bluetooth.next = 8;
 24920  004608  0E08               	movlw	8
 24921  00460A  0101               	movlb	1	; () banked
 24922  00460C  6FDE               	movwf	(_state+55)& (0+255),b
 24923                           
 24924                           ;bluetooth.c: 341: break;
 24925  00460E  0012               	return	
 24926  004610                     l2697:
 24927                           
 24928                           ; BSR set to: 1
 24929                           ;bluetooth.c: 344: if(bluetoothStatus.dataReceived)
 24930  004610  0100               	movlb	0	; () banked
 24931  004612  A5C2               	btfss	_bluetoothStatus& (0+255),2,b
 24932  004614  D004               	goto	l14962
 24933                           
 24934                           ; BSR set to: 0
 24935                           ;bluetooth.c: 345: state.bluetooth.next = 7;
 24936  004616  0E07               	movlw	7
 24937  004618  0101               	movlb	1	; () banked
 24938  00461A  6FDE               	movwf	(_state+55)& (0+255),b
 24939  00461C  0012               	return	
 24940  00461E                     l14962:
 24941                           
 24942                           ;bluetooth.c: 346: else
 24943                           ;bluetooth.c: 347: state.bluetooth.next = 10;
 24944  00461E  0E0A               	movlw	10
 24945  004620  0101               	movlb	1	; () banked
 24946  004622  6FDE               	movwf	(_state+55)& (0+255),b
 24947                           
 24948                           ; BSR set to: 1
 24949                           ;bluetooth.c: 348: break;
 24950  004624  0012               	return	
 24951  004626                     l14964:
 24952                           
 24953                           ; BSR set to: 1
 24954                           ;bluetooth.c: 351: state.bluetooth.next = 1;
 24955  004626  0E01               	movlw	1
 24956  004628  0101               	movlb	1	; () banked
 24957  00462A  6FDE               	movwf	(_state+55)& (0+255),b
 24958                           
 24959                           ;bluetooth.c: 352: break;
 24960  00462C  0012               	return	
 24961  00462E                     l14966:
 24962                           
 24963                           ; BSR set to: 1
 24964                           ;bluetooth.c: 355: state.bluetooth.next = 2;
 24965  00462E  0E02               	movlw	2
 24966  004630  0101               	movlb	1	; () banked
 24967  004632  6FDE               	movwf	(_state+55)& (0+255),b
 24968                           
 24969                           ;bluetooth.c: 356: break;
 24970  004634  0012               	return	
 24971  004636                     l2702:
 24972                           
 24973                           ; BSR set to: 1
 24974                           ;bluetooth.c: 359: if(bluetoothStatus.dataReceived)
 24975  004636  0100               	movlb	0	; () banked
 24976  004638  A5C2               	btfss	_bluetoothStatus& (0+255),2,b
 24977  00463A  0012               	return	
 24978                           
 24979                           ; BSR set to: 0
 24980                           ;bluetooth.c: 360: state.bluetooth.next = 3;
 24981  00463C  0E03               	movlw	3
 24982  00463E  0101               	movlb	1	; () banked
 24983  004640  6FDE               	movwf	(_state+55)& (0+255),b
 24984                           
 24985                           ; BSR set to: 1
 24986                           ;bluetooth.c: 361: break;
 24987  004642  0012               	return	
 24988  004644                     l2704:
 24989                           
 24990                           ; BSR set to: 1
 24991                           ;bluetooth.c: 364: if(bluetoothStatus.ACKReady)
 24992  004644  0100               	movlb	0	; () banked
 24993  004646  A7C2               	btfss	_bluetoothStatus& (0+255),3,b
 24994  004648  D004               	goto	l14972
 24995                           
 24996                           ; BSR set to: 0
 24997                           ;bluetooth.c: 365: state.bluetooth.next = 4;
 24998  00464A  0E04               	movlw	4
 24999  00464C  0101               	movlb	1	; () banked
 25000  00464E  6FDE               	movwf	(_state+55)& (0+255),b
 25001  004650  0012               	return	
 25002  004652                     l14972:
 25003                           
 25004                           ;bluetooth.c: 366: else
 25005                           ;bluetooth.c: 367: state.bluetooth.next = 1;
 25006  004652  0E01               	movlw	1
 25007  004654  0101               	movlb	1	; () banked
 25008  004656  6FDE               	movwf	(_state+55)& (0+255),b
 25009                           
 25010                           ; BSR set to: 1
 25011                           ;bluetooth.c: 368: break;
 25012  004658  0012               	return	
 25013  00465A                     l2707:
 25014                           
 25015                           ; BSR set to: 1
 25016                           ;bluetooth.c: 371: if(bluetoothStatus.packetReceived)
 25017  00465A  0100               	movlb	0	; () banked
 25018  00465C  A9C2               	btfss	_bluetoothStatus& (0+255),4,b
 25019  00465E  D004               	goto	l14976
 25020                           
 25021                           ; BSR set to: 0
 25022                           ;bluetooth.c: 372: state.bluetooth.next = 11;
 25023  004660  0E0B               	movlw	11
 25024  004662  0101               	movlb	1	; () banked
 25025  004664  6FDE               	movwf	(_state+55)& (0+255),b
 25026  004666  0012               	return	
 25027  004668                     l14976:
 25028                           
 25029                           ;bluetooth.c: 373: else
 25030                           ;bluetooth.c: 374: state.bluetooth.next = 1;
 25031  004668  0E01               	movlw	1
 25032  00466A  0101               	movlb	1	; () banked
 25033  00466C  6FDE               	movwf	(_state+55)& (0+255),b
 25034                           
 25035                           ; BSR set to: 1
 25036                           ;bluetooth.c: 375: break;
 25037  00466E  0012               	return	
 25038  004670                     l14978:
 25039                           
 25040                           ; BSR set to: 1
 25041                           ;bluetooth.c: 378: state.bluetooth.next = 1;
 25042  004670  0E01               	movlw	1
 25043  004672  0101               	movlb	1	; () banked
 25044  004674  6FDE               	movwf	(_state+55)& (0+255),b
 25045                           
 25046                           ;bluetooth.c: 379: }
 25047  004676  0012               	return	
 25048  004678                     l14980:
 25049  004678  0101               	movlb	1	; () banked
 25050  00467A  51DD               	movf	(_state+54)& (0+255),w,b
 25051                           
 25052                           ; Switch size 1, requested type "space"
 25053                           ; Number of cases is 10, Range of values is 1 to 10
 25054                           ; switch strategies available:
 25055                           ; Name         Instructions Cycles
 25056                           ; simple_byte           31    16 (average)
 25057                           ;	Chosen strategy is simple_byte
 25058  00467C  0A01               	xorlw	1	; case 1
 25059  00467E  B4D8               	btfsc	status,2,c
 25060  004680  D7A8               	goto	l2688
 25061  004682  0A03               	xorlw	3	; case 2
 25062  004684  B4D8               	btfsc	status,2,c
 25063  004686  D7D7               	goto	l2702
 25064  004688  0A01               	xorlw	1	; case 3
 25065  00468A  B4D8               	btfsc	status,2,c
 25066  00468C  D7DB               	goto	l2704
 25067  00468E  0A07               	xorlw	7	; case 4
 25068  004690  B4D8               	btfsc	status,2,c
 25069  004692  D7E3               	goto	l2707
 25070  004694  0A01               	xorlw	1	; case 5
 25071  004696  B4D8               	btfsc	status,2,c
 25072  004698  D7CA               	goto	l14966
 25073  00469A  0A03               	xorlw	3	; case 6
 25074  00469C  B4D8               	btfsc	status,2,c
 25075  00469E  D7B4               	goto	l14958
 25076  0046A0  0A01               	xorlw	1	; case 7
 25077  0046A2  B4D8               	btfsc	status,2,c
 25078  0046A4  D7C0               	goto	l14964
 25079  0046A6  0A0F               	xorlw	15	; case 8
 25080  0046A8  B4D8               	btfsc	status,2,c
 25081  0046AA  D7B2               	goto	l2697
 25082  0046AC  0A01               	xorlw	1	; case 9
 25083  0046AE  B4D8               	btfsc	status,2,c
 25084  0046B0  D79B               	goto	l14950
 25085  0046B2  0A03               	xorlw	3	; case 10
 25086  0046B4  B4D8               	btfsc	status,2,c
 25087  0046B6  D7A4               	goto	l14956
 25088  0046B8  D7DB               	goto	l14978
 25089  0046BA                     __end_of_bluetoothStateHandler:
 25090                           	opt stack 0
 25091                           tblptru	equ	0xFF8
 25092                           tblptrh	equ	0xFF7
 25093                           tblptrl	equ	0xFF6
 25094                           tablat	equ	0xFF5
 25095                           prodh	equ	0xFF4
 25096                           prodl	equ	0xFF3
 25097                           intcon	equ	0xFF2
 25098                           postinc0	equ	0xFEE
 25099                           wreg	equ	0xFE8
 25100                           indf1	equ	0xFE7
 25101                           postinc1	equ	0xFE6
 25102                           postdec1	equ	0xFE5
 25103                           fsr1h	equ	0xFE2
 25104                           fsr1l	equ	0xFE1
 25105                           indf2	equ	0xFDF
 25106                           postinc2	equ	0xFDE
 25107                           postdec2	equ	0xFDD
 25108                           fsr2h	equ	0xFDA
 25109                           fsr2l	equ	0xFD9
 25110                           status	equ	0xFD8
 25111                           
 25112 ;; *************** function _bluetooth *****************
 25113 ;; Defined at:
 25114 ;;		line 242 in file "bluetooth.c"
 25115 ;; Parameters:    Size  Location     Type
 25116 ;;		None
 25117 ;; Auto vars:     Size  Location     Type
 25118 ;;		None
 25119 ;; Return value:  Size  Location     Type
 25120 ;;                  1    wreg      void 
 25121 ;; Registers used:
 25122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25123 ;; Tracked objects:
 25124 ;;		On entry : 0/0
 25125 ;;		On exit  : 0/0
 25126 ;;		Unchanged: 0/0
 25127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25132 ;;Total ram usage:        0 bytes
 25133 ;; Hardware stack levels used:    1
 25134 ;; Hardware stack levels required when called:   13
 25135 ;; This function calls:
 25136 ;;		_addDataToOutgoingQueue
 25137 ;;		_bluetoothSetupSwitch
 25138 ;;		_processBTPacket
 25139 ;;		_sendPacket
 25140 ;; This function is called by:
 25141 ;;		_currentStateHandler
 25142 ;; This function uses a non-reentrant model
 25143 ;;
 25144                           
 25145                           	psect	text132
 25146  00353C                     __ptext132:
 25147                           	opt stack 0
 25148  00353C                     _bluetooth:
 25149                           	opt stack 15
 25150                           
 25151                           ;bluetooth.c: 243: switch(state.bluetooth.current) {
 25152                           
 25153                           ;incstack = 0
 25154  00353C  D093               	goto	l14942
 25155  00353E                     l14890:
 25156                           
 25157                           ;bluetooth.c: 245: state.bluetooth.counter = 0;
 25158  00353E  0E00               	movlw	0
 25159  003540  0101               	movlb	1	; () banked
 25160  003542  6FE0               	movwf	(_state+57)& (0+255),b
 25161  003544  0E00               	movlw	0
 25162  003546  6FDF               	movwf	(_state+56)& (0+255),b
 25163                           
 25164                           ;bluetooth.c: 246: break;
 25165  003548  0012               	return	
 25166  00354A                     l14892:
 25167                           
 25168                           ; BSR set to: 1
 25169                           ;bluetooth.c: 249: state.bluetooth.counter = 1;
 25170  00354A  0E00               	movlw	0
 25171  00354C  0101               	movlb	1	; () banked
 25172  00354E  6FE0               	movwf	(_state+57)& (0+255),b
 25173  003550  0E01               	movlw	1
 25174  003552  6FDF               	movwf	(_state+56)& (0+255),b
 25175                           
 25176                           ;bluetooth.c: 250: break;
 25177  003554  0012               	return	
 25178  003556                     l14894:
 25179                           
 25180                           ; BSR set to: 1
 25181                           ;bluetooth.c: 253: setupIndex = 0;
 25182  003556  0E00               	movlw	0
 25183  003558  0100               	movlb	0	; () banked
 25184  00355A  6FC0               	movwf	_setupIndex& (0+255),b
 25185                           
 25186                           ;bluetooth.c: 254: state.bluetooth.counter = 1;
 25187  00355C  0E00               	movlw	0
 25188  00355E  0101               	movlb	1	; () banked
 25189  003560  6FE0               	movwf	(_state+57)& (0+255),b
 25190  003562  0E01               	movlw	1
 25191  003564  6FDF               	movwf	(_state+56)& (0+255),b
 25192                           
 25193                           ;bluetooth.c: 255: break;
 25194  003566  0012               	return	
 25195  003568                     l2676:
 25196                           
 25197                           ; BSR set to: 1
 25198                           ;bluetooth.c: 258: RC3STAbits.SPEN = 1;
 25199  003568  010E               	movlb	14	; () banked
 25200  00356A  8FEE               	bsf	238,7,b	;volatile
 25201                           
 25202                           ;bluetooth.c: 259: RC3STAbits.CREN = 1;
 25203  00356C  010E               	movlb	14	; () banked
 25204  00356E  89EE               	bsf	238,4,b	;volatile
 25205                           
 25206                           ;bluetooth.c: 260: PIE4bits.RC3IE = 1;
 25207  003570  010E               	movlb	14	; () banked
 25208  003572  832D               	bsf	45,1,b	;volatile
 25209                           
 25210                           ; BSR set to: 14
 25211                           ;bluetooth.c: 261: bluetoothSetupSwitch();
 25212  003574  EC5F  F038         	call	_bluetoothSetupSwitch	;wreg free
 25213                           
 25214                           ;bluetooth.c: 262: state.bluetooth.counter = 300;
 25215  003578  0E01               	movlw	1
 25216  00357A  0101               	movlb	1	; () banked
 25217  00357C  6FE0               	movwf	(_state+57)& (0+255),b
 25218  00357E  0E2C               	movlw	44
 25219  003580  6FDF               	movwf	(_state+56)& (0+255),b
 25220                           
 25221                           ;bluetooth.c: 263: break;
 25222  003582  0012               	return	
 25223  003584                     l14900:
 25224                           
 25225                           ; BSR set to: 1
 25226                           ;bluetooth.c: 266: state.bluetooth.counter = 1;
 25227  003584  0E00               	movlw	0
 25228  003586  0101               	movlb	1	; () banked
 25229  003588  6FE0               	movwf	(_state+57)& (0+255),b
 25230  00358A  0E01               	movlw	1
 25231  00358C  6FDF               	movwf	(_state+56)& (0+255),b
 25232                           
 25233                           ;bluetooth.c: 267: break;
 25234  00358E  0012               	return	
 25235  003590                     l14902:
 25236                           
 25237                           ; BSR set to: 1
 25238                           ;bluetooth.c: 270: setupIndex ++;
 25239  003590  0100               	movlb	0	; () banked
 25240  003592  2BC0               	incf	_setupIndex& (0+255),f,b
 25241                           
 25242                           ; BSR set to: 0
 25243                           ;bluetooth.c: 271: RC3STAbits.SPEN = 0;
 25244  003594  010E               	movlb	14	; () banked
 25245  003596  9FEE               	bcf	238,7,b	;volatile
 25246                           
 25247                           ; BSR set to: 14
 25248                           ;bluetooth.c: 272: RC3STAbits.CREN = 0;
 25249  003598  010E               	movlb	14	; () banked
 25250  00359A  99EE               	bcf	238,4,b	;volatile
 25251                           
 25252                           ; BSR set to: 14
 25253                           ;bluetooth.c: 273: PIE4bits.RC3IE = 0;
 25254  00359C  010E               	movlb	14	; () banked
 25255  00359E  932D               	bcf	45,1,b	;volatile
 25256                           
 25257                           ; BSR set to: 14
 25258                           ;bluetooth.c: 274: bluetoothStatus.dataReceived = 0;
 25259  0035A0  0100               	movlb	0	; () banked
 25260  0035A2  95C2               	bcf	_bluetoothStatus& (0+255),2,b
 25261                           
 25262                           ; BSR set to: 0
 25263                           ;bluetooth.c: 275: state.bluetooth.counter = 1;
 25264  0035A4  0E00               	movlw	0
 25265  0035A6  0101               	movlb	1	; () banked
 25266  0035A8  6FE0               	movwf	(_state+57)& (0+255),b
 25267  0035AA  0E01               	movlw	1
 25268  0035AC  6FDF               	movwf	(_state+56)& (0+255),b
 25269                           
 25270                           ;bluetooth.c: 276: break;
 25271  0035AE  0012               	return	
 25272  0035B0                     l2679:
 25273                           
 25274                           ; BSR set to: 1
 25275                           ;bluetooth.c: 279: RC3STAbits.SPEN = 1;
 25276  0035B0  010E               	movlb	14	; () banked
 25277  0035B2  8FEE               	bsf	238,7,b	;volatile
 25278                           
 25279                           ;bluetooth.c: 280: RC3STAbits.CREN = 1;
 25280  0035B4  010E               	movlb	14	; () banked
 25281  0035B6  89EE               	bsf	238,4,b	;volatile
 25282                           
 25283                           ;bluetooth.c: 281: PIE4bits.RC3IE = 1;
 25284  0035B8  010E               	movlb	14	; () banked
 25285  0035BA  832D               	bsf	45,1,b	;volatile
 25286                           
 25287                           ; BSR set to: 14
 25288                           ;bluetooth.c: 282: state.bluetooth.counter = 1;
 25289  0035BC  0E00               	movlw	0
 25290  0035BE  0101               	movlb	1	; () banked
 25291  0035C0  6FE0               	movwf	(_state+57)& (0+255),b
 25292  0035C2  0E01               	movlw	1
 25293  0035C4  6FDF               	movwf	(_state+56)& (0+255),b
 25294                           
 25295                           ;bluetooth.c: 283: break;
 25296  0035C6  0012               	return	
 25297  0035C8                     l2680:
 25298                           
 25299                           ; BSR set to: 1
 25300                           ;bluetooth.c: 286: RC3STAbits.SPEN = 1;
 25301  0035C8  010E               	movlb	14	; () banked
 25302  0035CA  8FEE               	bsf	238,7,b	;volatile
 25303                           
 25304                           ;bluetooth.c: 287: RC3STAbits.CREN = 1;
 25305  0035CC  010E               	movlb	14	; () banked
 25306  0035CE  89EE               	bsf	238,4,b	;volatile
 25307                           
 25308                           ;bluetooth.c: 288: PIE4bits.RC3IE = 1;
 25309  0035D0  010E               	movlb	14	; () banked
 25310  0035D2  832D               	bsf	45,1,b	;volatile
 25311                           
 25312                           ; BSR set to: 14
 25313                           ;bluetooth.c: 289: state.bluetooth.counter = 1;
 25314  0035D4  0E00               	movlw	0
 25315  0035D6  0101               	movlb	1	; () banked
 25316  0035D8  6FE0               	movwf	(_state+57)& (0+255),b
 25317  0035DA  0E01               	movlw	1
 25318  0035DC  6FDF               	movwf	(_state+56)& (0+255),b
 25319                           
 25320                           ;bluetooth.c: 290: break;
 25321  0035DE  0012               	return	
 25322  0035E0                     l2681:
 25323                           
 25324                           ; BSR set to: 1
 25325                           ;bluetooth.c: 293: PIE4bits.RC3IE = 0;
 25326  0035E0  010E               	movlb	14	; () banked
 25327  0035E2  932D               	bcf	45,1,b	;volatile
 25328                           
 25329                           ; BSR set to: 14
 25330                           ;bluetooth.c: 294: processBTPacket();
 25331  0035E4  EC5F  F008         	call	_processBTPacket	;wreg free
 25332                           
 25333                           ;bluetooth.c: 295: bluetoothStatus.dataReceived = 0;
 25334  0035E8  0100               	movlb	0	; () banked
 25335  0035EA  95C2               	bcf	_bluetoothStatus& (0+255),2,b
 25336                           
 25337                           ; BSR set to: 0
 25338                           ;bluetooth.c: 296: state.bluetooth.counter = 1;
 25339  0035EC  0E00               	movlw	0
 25340  0035EE  0101               	movlb	1	; () banked
 25341  0035F0  6FE0               	movwf	(_state+57)& (0+255),b
 25342  0035F2  0E01               	movlw	1
 25343  0035F4  6FDF               	movwf	(_state+56)& (0+255),b
 25344                           
 25345                           ;bluetooth.c: 297: break;
 25346  0035F6  0012               	return	
 25347  0035F8                     l14924:
 25348                           
 25349                           ; BSR set to: 1
 25350                           ;bluetooth.c: 300: sendPacket();
 25351  0035F8  EC0C  F01C         	call	_sendPacket	;wreg free
 25352                           
 25353                           ;bluetooth.c: 301: RC3STAbits.SPEN = 0;
 25354  0035FC  010E               	movlb	14	; () banked
 25355  0035FE  9FEE               	bcf	238,7,b	;volatile
 25356                           
 25357                           ; BSR set to: 14
 25358                           ;bluetooth.c: 302: RC3STAbits.CREN = 0;
 25359  003600  010E               	movlb	14	; () banked
 25360  003602  99EE               	bcf	238,4,b	;volatile
 25361                           
 25362                           ; BSR set to: 14
 25363                           ;bluetooth.c: 303: state.bluetooth.counter = 0;
 25364  003604  0E00               	movlw	0
 25365  003606  0101               	movlb	1	; () banked
 25366  003608  6FE0               	movwf	(_state+57)& (0+255),b
 25367  00360A  0E00               	movlw	0
 25368  00360C  6FDF               	movwf	(_state+56)& (0+255),b
 25369                           
 25370                           ;bluetooth.c: 304: break;
 25371  00360E  0012               	return	
 25372  003610                     l14932:
 25373                           
 25374                           ; BSR set to: 1
 25375                           ;bluetooth.c: 307: addDataToOutgoingQueue(ABB_1.det_arrays.UIDs, 0b00001010, sizeof(deto
      +                          nator_UID));
 25376  003610  0EC4               	movlw	low (_ABB_1+4)
 25377  003612  0100               	movlb	0	; () banked
 25378  003614  6F66               	movwf	addDataToOutgoingQueue@data& (0+255),b
 25379  003616  0E03               	movlw	high (_ABB_1+4)
 25380  003618  0100               	movlb	0	; () banked
 25381  00361A  6F67               	movwf	(addDataToOutgoingQueue@data+1)& (0+255),b
 25382  00361C  0E0A               	movlw	10
 25383  00361E  0100               	movlb	0	; () banked
 25384  003620  6F68               	movwf	addDataToOutgoingQueue@command& (0+255),b
 25385  003622  0E00               	movlw	0
 25386  003624  0100               	movlb	0	; () banked
 25387  003626  6F6A               	movwf	(addDataToOutgoingQueue@size+1)& (0+255),b
 25388  003628  0E05               	movlw	5
 25389  00362A  6F69               	movwf	addDataToOutgoingQueue@size& (0+255),b
 25390  00362C  ECA1  F016         	call	_addDataToOutgoingQueue	;wreg free
 25391                           
 25392                           ;bluetooth.c: 308: addDataToOutgoingQueue(ABB_1.det_arrays.info, 0b00001011, sizeof(deto
      +                          nator_data));
 25393  003630  0EBD               	movlw	low (_ABB_1+509)
 25394  003632  0100               	movlb	0	; () banked
 25395  003634  6F66               	movwf	addDataToOutgoingQueue@data& (0+255),b
 25396  003636  0E05               	movlw	high (_ABB_1+509)
 25397  003638  0100               	movlb	0	; () banked
 25398  00363A  6F67               	movwf	(addDataToOutgoingQueue@data+1)& (0+255),b
 25399  00363C  0E0B               	movlw	11
 25400  00363E  0100               	movlb	0	; () banked
 25401  003640  6F68               	movwf	addDataToOutgoingQueue@command& (0+255),b
 25402  003642  0E00               	movlw	0
 25403  003644  0100               	movlb	0	; () banked
 25404  003646  6F6A               	movwf	(addDataToOutgoingQueue@size+1)& (0+255),b
 25405  003648  0E04               	movlw	4
 25406  00364A  6F69               	movwf	addDataToOutgoingQueue@size& (0+255),b
 25407  00364C  ECA1  F016         	call	_addDataToOutgoingQueue	;wreg free
 25408                           
 25409                           ;bluetooth.c: 309: state.bluetooth.counter = 1;
 25410  003650  0E00               	movlw	0
 25411  003652  0101               	movlb	1	; () banked
 25412  003654  6FE0               	movwf	(_state+57)& (0+255),b
 25413  003656  0E01               	movlw	1
 25414  003658  6FDF               	movwf	(_state+56)& (0+255),b
 25415                           
 25416                           ; BSR set to: 1
 25417                           ;bluetooth.c: 310: bluetoothStatus.packetReceived = 0;
 25418  00365A  0100               	movlb	0	; () banked
 25419  00365C  99C2               	bcf	_bluetoothStatus& (0+255),4,b
 25420                           
 25421                           ; BSR set to: 0
 25422                           ;bluetooth.c: 311: bluetoothStatus.ACKReady = 0;
 25423  00365E  0100               	movlb	0	; () banked
 25424  003660  97C2               	bcf	_bluetoothStatus& (0+255),3,b
 25425                           
 25426                           ; BSR set to: 0
 25427                           ;bluetooth.c: 313: }
 25428                           
 25429                           ;bluetooth.c: 312: break;
 25430  003662  0012               	return	
 25431  003664                     l14942:
 25432  003664  0101               	movlb	1	; () banked
 25433  003666  51DD               	movf	(_state+54)& (0+255),w,b
 25434                           
 25435                           ; Switch size 1, requested type "space"
 25436                           ; Number of cases is 11, Range of values is 1 to 11
 25437                           ; switch strategies available:
 25438                           ; Name         Instructions Cycles
 25439                           ; simple_byte           34    18 (average)
 25440                           ;	Chosen strategy is simple_byte
 25441  003668  0A01               	xorlw	1	; case 1
 25442  00366A  B4D8               	btfsc	status,2,c
 25443  00366C  D768               	goto	l14890
 25444  00366E  0A03               	xorlw	3	; case 2
 25445  003670  B4D8               	btfsc	status,2,c
 25446  003672  D7AA               	goto	l2680
 25447  003674  0A01               	xorlw	1	; case 3
 25448  003676  B4D8               	btfsc	status,2,c
 25449  003678  D7B3               	goto	l2681
 25450  00367A  0A07               	xorlw	7	; case 4
 25451  00367C  B4D8               	btfsc	status,2,c
 25452  00367E  D7BC               	goto	l14924
 25453  003680  0A01               	xorlw	1	; case 5
 25454  003682  B4D8               	btfsc	status,2,c
 25455  003684  D795               	goto	l2679
 25456  003686  0A03               	xorlw	3	; case 6
 25457  003688  B4D8               	btfsc	status,2,c
 25458  00368A  D76E               	goto	l2676
 25459  00368C  0A01               	xorlw	1	; case 7
 25460  00368E  B4D8               	btfsc	status,2,c
 25461  003690  D77F               	goto	l14902
 25462  003692  0A0F               	xorlw	15	; case 8
 25463  003694  B4D8               	btfsc	status,2,c
 25464  003696  D776               	goto	l14900
 25465  003698  0A01               	xorlw	1	; case 9
 25466  00369A  B4D8               	btfsc	status,2,c
 25467  00369C  D756               	goto	l14892
 25468  00369E  0A03               	xorlw	3	; case 10
 25469  0036A0  B4D8               	btfsc	status,2,c
 25470  0036A2  D759               	goto	l14894
 25471  0036A4  0A01               	xorlw	1	; case 11
 25472  0036A6  A4D8               	btfss	status,2,c
 25473  0036A8  0012               	return	
 25474  0036AA  D7B2               	goto	l14932
 25475  0036AC                     __end_of_bluetooth:
 25476                           	opt stack 0
 25477                           tblptru	equ	0xFF8
 25478                           tblptrh	equ	0xFF7
 25479                           tblptrl	equ	0xFF6
 25480                           tablat	equ	0xFF5
 25481                           prodh	equ	0xFF4
 25482                           prodl	equ	0xFF3
 25483                           intcon	equ	0xFF2
 25484                           postinc0	equ	0xFEE
 25485                           wreg	equ	0xFE8
 25486                           indf1	equ	0xFE7
 25487                           postinc1	equ	0xFE6
 25488                           postdec1	equ	0xFE5
 25489                           fsr1h	equ	0xFE2
 25490                           fsr1l	equ	0xFE1
 25491                           indf2	equ	0xFDF
 25492                           postinc2	equ	0xFDE
 25493                           postdec2	equ	0xFDD
 25494                           fsr2h	equ	0xFDA
 25495                           fsr2l	equ	0xFD9
 25496                           status	equ	0xFD8
 25497                           
 25498 ;; *************** function _sendPacket *****************
 25499 ;; Defined at:
 25500 ;;		line 105 in file "bluetooth.c"
 25501 ;; Parameters:    Size  Location     Type
 25502 ;;		None
 25503 ;; Auto vars:     Size  Location     Type
 25504 ;;  txReg          11   37[BANK0 ] unsigned char [11]
 25505 ;;  i               2   48[BANK0 ] int 
 25506 ;; Return value:  Size  Location     Type
 25507 ;;                  1    wreg      void 
 25508 ;; Registers used:
 25509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25510 ;; Tracked objects:
 25511 ;;		On entry : 0/0
 25512 ;;		On exit  : 0/0
 25513 ;;		Unchanged: 0/0
 25514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25516 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25517 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25518 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25519 ;;Total ram usage:       18 bytes
 25520 ;; Hardware stack levels used:    1
 25521 ;; Hardware stack levels required when called:   11
 25522 ;; This function calls:
 25523 ;;		_bluetoothCRC
 25524 ;;		_writeEUSART
 25525 ;; This function is called by:
 25526 ;;		_bluetooth
 25527 ;; This function uses a non-reentrant model
 25528 ;;
 25529                           
 25530                           	psect	text133
 25531  003818                     __ptext133:
 25532                           	opt stack 0
 25533  003818                     _sendPacket:
 25534                           	opt stack 16
 25535                           
 25536                           ;bluetooth.c: 106: unsigned char txReg[11];
 25537                           ;bluetooth.c: 107: int i;
 25538                           ;bluetooth.c: 108: txReg[0] = 0xAA;
 25539                           
 25540                           ;incstack = 0
 25541  003818  0EAA               	movlw	170
 25542  00381A  0100               	movlb	0	; () banked
 25543  00381C  6F85               	movwf	sendPacket@txReg& (0+255),b
 25544                           
 25545                           ; BSR set to: 0
 25546                           ;bluetooth.c: 109: txReg[1] = btPacket.send.size;
 25547  00381E  C0CB  F086         	movff	_btPacket+1,sendPacket@txReg+1
 25548                           
 25549                           ; BSR set to: 0
 25550                           ;bluetooth.c: 110: txReg[2] = btPacket.send.command;
 25551  003822  C0CC  F087         	movff	_btPacket+2,sendPacket@txReg+2
 25552                           
 25553                           ;bluetooth.c: 112: for (i = 0; i < btPacket.send.size - 5; i++){
 25554  003826  0E00               	movlw	0
 25555  003828  0100               	movlb	0	; () banked
 25556  00382A  6F91               	movwf	(sendPacket@i+1)& (0+255),b
 25557  00382C  0E00               	movlw	0
 25558  00382E  6F90               	movwf	sendPacket@i& (0+255),b
 25559  003830  D029               	goto	l14226
 25560  003832                     l14222:
 25561                           
 25562                           ; BSR set to: 0
 25563                           ;bluetooth.c: 113: txReg[i + 3] = btPacket.send.data[i];
 25564  003832  0E03               	movlw	3
 25565  003834  0100               	movlb	0	; () banked
 25566  003836  2590               	addwf	sendPacket@i& (0+255),w,b
 25567  003838  0100               	movlb	0	; () banked
 25568  00383A  6F80               	movwf	??_sendPacket& (0+255),b
 25569  00383C  0E00               	movlw	0
 25570  00383E  0100               	movlb	0	; () banked
 25571  003840  2191               	addwfc	(sendPacket@i+1)& (0+255),w,b
 25572  003842  0100               	movlb	0	; () banked
 25573  003844  6F81               	movwf	(??_sendPacket+1)& (0+255),b
 25574  003846  0ECA               	movlw	low _btPacket
 25575  003848  0100               	movlb	0	; () banked
 25576  00384A  2580               	addwf	??_sendPacket& (0+255),w,b
 25577  00384C  6ED9               	movwf	fsr2l,c
 25578  00384E  0E00               	movlw	high _btPacket
 25579  003850  0100               	movlb	0	; () banked
 25580  003852  2181               	addwfc	(??_sendPacket+1)& (0+255),w,b
 25581  003854  6EDA               	movwf	fsr2h,c
 25582  003856  0E03               	movlw	3
 25583  003858  0100               	movlb	0	; () banked
 25584  00385A  2590               	addwf	sendPacket@i& (0+255),w,b
 25585  00385C  0100               	movlb	0	; () banked
 25586  00385E  6F82               	movwf	(??_sendPacket+2)& (0+255),b
 25587  003860  0E00               	movlw	0
 25588  003862  0100               	movlb	0	; () banked
 25589  003864  2191               	addwfc	(sendPacket@i+1)& (0+255),w,b
 25590  003866  0100               	movlb	0	; () banked
 25591  003868  6F83               	movwf	(??_sendPacket+3)& (0+255),b
 25592  00386A  0E85               	movlw	low sendPacket@txReg
 25593  00386C  0100               	movlb	0	; () banked
 25594  00386E  2582               	addwf	(??_sendPacket+2)& (0+255),w,b
 25595  003870  6EE1               	movwf	fsr1l,c
 25596  003872  0E00               	movlw	high sendPacket@txReg
 25597  003874  0100               	movlb	0	; () banked
 25598  003876  2183               	addwfc	(??_sendPacket+3)& (0+255),w,b
 25599  003878  6EE2               	movwf	fsr1h,c
 25600  00387A  CFDF FFE7          	movff	indf2,indf1
 25601                           
 25602                           ; BSR set to: 0
 25603  00387E  0100               	movlb	0	; () banked
 25604  003880  4B90               	infsnz	sendPacket@i& (0+255),f,b
 25605  003882  2B91               	incf	(sendPacket@i+1)& (0+255),f,b
 25606  003884                     l14226:
 25607                           
 25608                           ; BSR set to: 0
 25609  003884  0EFB               	movlw	251
 25610  003886  0100               	movlb	0	; () banked
 25611  003888  6F80               	movwf	??_sendPacket& (0+255),b
 25612  00388A  0EFF               	movlw	255
 25613  00388C  0100               	movlb	0	; () banked
 25614  00388E  6F81               	movwf	(??_sendPacket+1)& (0+255),b
 25615  003890  0100               	movlb	0	; () banked
 25616  003892  51CB               	movf	(_btPacket+1)& (0+255),w,b
 25617  003894  0100               	movlb	0	; () banked
 25618  003896  6F82               	movwf	(??_sendPacket+2)& (0+255),b
 25619  003898  6B83               	clrf	(??_sendPacket+3)& (0+255),b
 25620  00389A  0100               	movlb	0	; () banked
 25621  00389C  5180               	movf	??_sendPacket& (0+255),w,b
 25622  00389E  0100               	movlb	0	; () banked
 25623  0038A0  2782               	addwf	(??_sendPacket+2)& (0+255),f,b
 25624  0038A2  0100               	movlb	0	; () banked
 25625  0038A4  5181               	movf	(??_sendPacket+1)& (0+255),w,b
 25626  0038A6  0100               	movlb	0	; () banked
 25627  0038A8  2383               	addwfc	(??_sendPacket+3)& (0+255),f,b
 25628  0038AA  0100               	movlb	0	; () banked
 25629  0038AC  5182               	movf	(??_sendPacket+2)& (0+255),w,b
 25630  0038AE  0100               	movlb	0	; () banked
 25631  0038B0  5D90               	subwf	sendPacket@i& (0+255),w,b
 25632  0038B2  0100               	movlb	0	; () banked
 25633  0038B4  5191               	movf	(sendPacket@i+1)& (0+255),w,b
 25634  0038B6  0A80               	xorlw	128
 25635  0038B8  0100               	movlb	0	; () banked
 25636  0038BA  6F84               	movwf	(??_sendPacket+4)& (0+255),b
 25637  0038BC  0100               	movlb	0	; () banked
 25638  0038BE  5183               	movf	(??_sendPacket+3)& (0+255),w,b
 25639  0038C0  0A80               	xorlw	128
 25640  0038C2  0100               	movlb	0	; () banked
 25641  0038C4  5984               	subwfb	(??_sendPacket+4)& (0+255),w,b
 25642  0038C6  A0D8               	btfss	status,0,c
 25643  0038C8  D7B4               	goto	l14222
 25644                           
 25645                           ; BSR set to: 0
 25646                           ;bluetooth.c: 114: }
 25647                           ;bluetooth.c: 115: btPacket.send.crc = bluetoothCRC(txReg, btPacket.send.size - 2);
 25648                           
 25649                           ; BSR set to: 0
 25650  0038CA  0E85               	movlw	low sendPacket@txReg
 25651  0038CC  0100               	movlb	0	; () banked
 25652  0038CE  6F6F               	movwf	bluetoothCRC@data& (0+255),b
 25653  0038D0  0E00               	movlw	high sendPacket@txReg
 25654  0038D2  0100               	movlb	0	; () banked
 25655  0038D4  6F70               	movwf	(bluetoothCRC@data+1)& (0+255),b
 25656  0038D6  0100               	movlb	0	; () banked
 25657  0038D8  51CB               	movf	(_btPacket+1)& (0+255),w,b
 25658  0038DA  0FFE               	addlw	254
 25659  0038DC  0100               	movlb	0	; () banked
 25660  0038DE  6F71               	movwf	bluetoothCRC@length& (0+255),b
 25661  0038E0  EC2C  F019         	call	_bluetoothCRC	;wreg free
 25662  0038E4  C06F  F0D3         	movff	?_bluetoothCRC,_btPacket+9
 25663  0038E8  C070  F0D4         	movff	?_bluetoothCRC+1,_btPacket+10
 25664                           
 25665                           ;bluetooth.c: 116: txReg[btPacket.send.size - 2] = btPacket.send.crc >> 8;
 25666  0038EC  0EFE               	movlw	254
 25667  0038EE  0100               	movlb	0	; () banked
 25668  0038F0  6F80               	movwf	??_sendPacket& (0+255),b
 25669  0038F2  0EFF               	movlw	255
 25670  0038F4  0100               	movlb	0	; () banked
 25671  0038F6  6F81               	movwf	(??_sendPacket+1)& (0+255),b
 25672  0038F8  0100               	movlb	0	; () banked
 25673  0038FA  51CB               	movf	(_btPacket+1)& (0+255),w,b
 25674  0038FC  0100               	movlb	0	; () banked
 25675  0038FE  6F82               	movwf	(??_sendPacket+2)& (0+255),b
 25676  003900  6B83               	clrf	(??_sendPacket+3)& (0+255),b
 25677  003902  0100               	movlb	0	; () banked
 25678  003904  5180               	movf	??_sendPacket& (0+255),w,b
 25679  003906  0100               	movlb	0	; () banked
 25680  003908  2782               	addwf	(??_sendPacket+2)& (0+255),f,b
 25681  00390A  0100               	movlb	0	; () banked
 25682  00390C  5181               	movf	(??_sendPacket+1)& (0+255),w,b
 25683  00390E  0100               	movlb	0	; () banked
 25684  003910  2383               	addwfc	(??_sendPacket+3)& (0+255),f,b
 25685  003912  0E85               	movlw	low sendPacket@txReg
 25686  003914  0100               	movlb	0	; () banked
 25687  003916  2582               	addwf	(??_sendPacket+2)& (0+255),w,b
 25688  003918  6ED9               	movwf	fsr2l,c
 25689  00391A  0E00               	movlw	high sendPacket@txReg
 25690  00391C  0100               	movlb	0	; () banked
 25691  00391E  2183               	addwfc	(??_sendPacket+3)& (0+255),w,b
 25692  003920  6EDA               	movwf	fsr2h,c
 25693  003922  0100               	movlb	0	; () banked
 25694  003924  51D4               	movf	(_btPacket+10)& (0+255),w,b
 25695  003926  6EDF               	movwf	indf2,c
 25696                           
 25697                           ; BSR set to: 0
 25698                           ;bluetooth.c: 117: txReg[btPacket.send.size - 1] = (unsigned char)btPacket.send.crc;
 25699  003928  0EFF               	movlw	255
 25700  00392A  0100               	movlb	0	; () banked
 25701  00392C  6F80               	movwf	??_sendPacket& (0+255),b
 25702  00392E  0EFF               	movlw	255
 25703  003930  0100               	movlb	0	; () banked
 25704  003932  6F81               	movwf	(??_sendPacket+1)& (0+255),b
 25705  003934  0100               	movlb	0	; () banked
 25706  003936  51CB               	movf	(_btPacket+1)& (0+255),w,b
 25707  003938  0100               	movlb	0	; () banked
 25708  00393A  6F82               	movwf	(??_sendPacket+2)& (0+255),b
 25709  00393C  6B83               	clrf	(??_sendPacket+3)& (0+255),b
 25710  00393E  0100               	movlb	0	; () banked
 25711  003940  5180               	movf	??_sendPacket& (0+255),w,b
 25712  003942  0100               	movlb	0	; () banked
 25713  003944  2782               	addwf	(??_sendPacket+2)& (0+255),f,b
 25714  003946  0100               	movlb	0	; () banked
 25715  003948  5181               	movf	(??_sendPacket+1)& (0+255),w,b
 25716  00394A  0100               	movlb	0	; () banked
 25717  00394C  2383               	addwfc	(??_sendPacket+3)& (0+255),f,b
 25718  00394E  0E85               	movlw	low sendPacket@txReg
 25719  003950  0100               	movlb	0	; () banked
 25720  003952  2582               	addwf	(??_sendPacket+2)& (0+255),w,b
 25721  003954  6ED9               	movwf	fsr2l,c
 25722  003956  0E00               	movlw	high sendPacket@txReg
 25723  003958  0100               	movlb	0	; () banked
 25724  00395A  2183               	addwfc	(??_sendPacket+3)& (0+255),w,b
 25725  00395C  6EDA               	movwf	fsr2h,c
 25726  00395E  C0D3  FFDF         	movff	_btPacket+9,indf2
 25727                           
 25728                           ; BSR set to: 0
 25729                           ;bluetooth.c: 119: writeEUSART(txReg, btPacket.send.size);
 25730  003962  0E85               	movlw	low sendPacket@txReg
 25731  003964  0100               	movlb	0	; () banked
 25732  003966  6F60               	movwf	writeEUSART@data& (0+255),b
 25733  003968  0E00               	movlw	high sendPacket@txReg
 25734  00396A  0100               	movlb	0	; () banked
 25735  00396C  6F61               	movwf	(writeEUSART@data+1)& (0+255),b
 25736  00396E  C0CB  F062         	movff	_btPacket+1,writeEUSART@size
 25737  003972  EC53  F033         	call	_writeEUSART	;wreg free
 25738  003976  0012               	return		;funcret
 25739  003978                     __end_of_sendPacket:
 25740                           	opt stack 0
 25741                           tblptru	equ	0xFF8
 25742                           tblptrh	equ	0xFF7
 25743                           tblptrl	equ	0xFF6
 25744                           tablat	equ	0xFF5
 25745                           prodh	equ	0xFF4
 25746                           prodl	equ	0xFF3
 25747                           intcon	equ	0xFF2
 25748                           postinc0	equ	0xFEE
 25749                           wreg	equ	0xFE8
 25750                           indf1	equ	0xFE7
 25751                           postinc1	equ	0xFE6
 25752                           postdec1	equ	0xFE5
 25753                           fsr1h	equ	0xFE2
 25754                           fsr1l	equ	0xFE1
 25755                           indf2	equ	0xFDF
 25756                           postinc2	equ	0xFDE
 25757                           postdec2	equ	0xFDD
 25758                           fsr2h	equ	0xFDA
 25759                           fsr2l	equ	0xFD9
 25760                           status	equ	0xFD8
 25761                           
 25762 ;; *************** function _processBTPacket *****************
 25763 ;; Defined at:
 25764 ;;		line 135 in file "bluetooth.c"
 25765 ;; Parameters:    Size  Location     Type
 25766 ;;		None
 25767 ;; Auto vars:     Size  Location     Type
 25768 ;;  i               2   62[BANK0 ] int 
 25769 ;;  i               2   60[BANK0 ] int 
 25770 ;;  tempDetInfo     2   58[BANK0 ] PTR unsigned char 
 25771 ;;		 -> ABB_1.det_arrays.info.data(1), ABB_1.det_arrays.info(404), 
 25772 ;; Return value:  Size  Location     Type
 25773 ;;                  1    wreg      void 
 25774 ;; Registers used:
 25775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25776 ;; Tracked objects:
 25777 ;;		On entry : 0/0
 25778 ;;		On exit  : 0/0
 25779 ;;		Unchanged: 0/0
 25780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25782 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25783 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25784 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25785 ;;Total ram usage:       13 bytes
 25786 ;; Hardware stack levels used:    1
 25787 ;; Hardware stack levels required when called:   12
 25788 ;; This function calls:
 25789 ;;		_checkBluetoothCRC
 25790 ;;		_checkForExistingUID
 25791 ;; This function is called by:
 25792 ;;		_bluetooth
 25793 ;; This function uses a non-reentrant model
 25794 ;;
 25795                           
 25796                           	psect	text134
 25797  0010BE                     __ptext134:
 25798                           	opt stack 0
 25799  0010BE                     _processBTPacket:
 25800                           	opt stack 15
 25801                           
 25802                           ;bluetooth.c: 136: if(!checkBluetoothCRC()){
 25803                           
 25804                           ;incstack = 0
 25805  0010BE  ECD3  F01F         	call	_checkBluetoothCRC	;wreg free
 25806  0010C2  0900               	iorlw	0
 25807  0010C4  A4D8               	btfss	status,2,c
 25808  0010C6  D003               	goto	l2630
 25809                           
 25810                           ;bluetooth.c: 137: bluetoothStatus.ACKReady = 0;
 25811  0010C8  0100               	movlb	0	; () banked
 25812  0010CA  97C2               	bcf	_bluetoothStatus& (0+255),3,b
 25813                           
 25814                           ;bluetooth.c: 138: return;
 25815  0010CC  0012               	return	
 25816  0010CE                     l2630:
 25817                           
 25818                           ;bluetooth.c: 139: }
 25819                           ;bluetooth.c: 140: unsigned char *tempDetInfo;
 25820                           ;bluetooth.c: 141: bluetoothStatus.packetReceived = 0;
 25821  0010CE  0100               	movlb	0	; () banked
 25822  0010D0  99C2               	bcf	_bluetoothStatus& (0+255),4,b
 25823                           
 25824                           ; BSR set to: 0
 25825                           ;bluetooth.c: 142: btPacket.send.start = 0xAA;
 25826  0010D2  0EAA               	movlw	170
 25827  0010D4  0100               	movlb	0	; () banked
 25828  0010D6  6FCA               	movwf	_btPacket& (0+255),b
 25829                           
 25830                           ; BSR set to: 0
 25831                           ;bluetooth.c: 143: btPacket.send.command = btPacket.receive.command;
 25832  0010D8  C0D7  F0CC         	movff	_btPacket+13,_btPacket+2
 25833                           
 25834                           ;bluetooth.c: 144: btPacket.send.size = 5;
 25835  0010DC  0E05               	movlw	5
 25836  0010DE  0100               	movlb	0	; () banked
 25837  0010E0  6FCB               	movwf	(_btPacket+1)& (0+255),b
 25838                           
 25839                           ;bluetooth.c: 145: switch(btPacket.receive.command){
 25840  0010E2  D190               	goto	l14306
 25841  0010E4                     l2633:
 25842                           
 25843                           ; BSR set to: 0
 25844                           ;bluetooth.c: 147: ABB_1.dets_length = 0;
 25845  0010E4  0E00               	movlw	0
 25846  0010E6  CFE8 F3C0          	movff	wreg,_ABB_1
 25847                           
 25848                           ; BSR set to: 0
 25849                           ;bluetooth.c: 148: btPacket.send.size += 2;
 25850  0010EA  0E02               	movlw	2
 25851  0010EC  0100               	movlb	0	; () banked
 25852  0010EE  27CB               	addwf	(_btPacket+1)& (0+255),f,b
 25853                           
 25854                           ; BSR set to: 0
 25855                           ;bluetooth.c: 149: expectedDets = btPacket.receive.data[0];
 25856  0010F0  C0D8  F0C1         	movff	_btPacket+14,_expectedDets
 25857                           
 25858                           ;bluetooth.c: 150: if(btPacket.receive.data[0] < 101 -1)
 25859  0010F4  0E64               	movlw	100
 25860  0010F6  0100               	movlb	0	; () banked
 25861  0010F8  61D8               	cpfslt	(_btPacket+14)& (0+255),b
 25862  0010FA  D003               	goto	l14250
 25863                           
 25864                           ; BSR set to: 0
 25865                           ;bluetooth.c: 151: btPacket.send.data[0] = expectedDets;
 25866  0010FC  C0C1  F0CD         	movff	_expectedDets,_btPacket+3
 25867  001100  D003               	goto	l2635
 25868  001102                     l14250:
 25869                           
 25870                           ; BSR set to: 0
 25871                           ;bluetooth.c: 152: else
 25872                           ;bluetooth.c: 153: btPacket.send.data[0] = 101 - 1;
 25873  001102  0E64               	movlw	100
 25874  001104  0100               	movlb	0	; () banked
 25875  001106  6FCD               	movwf	(_btPacket+3)& (0+255),b
 25876  001108                     l2635:
 25877                           
 25878                           ; BSR set to: 0
 25879                           ;bluetooth.c: 154: btPacket.send.data[1] = 10;
 25880  001108  0E0A               	movlw	10
 25881  00110A  D177               	goto	L18
 25882  00110C                     l14252:
 25883                           
 25884                           ; BSR set to: 0
 25885                           ;bluetooth.c: 158: btPacket.send.size += 6;
 25886  00110C  0E06               	movlw	6
 25887  00110E  0100               	movlb	0	; () banked
 25888  001110  27CB               	addwf	(_btPacket+1)& (0+255),f,b
 25889                           
 25890                           ; BSR set to: 0
 25891                           ;bluetooth.c: 159: if(checkForExistingUID(btPacket.receive.data)){
 25892  001112  0ED8               	movlw	low (_btPacket+14)
 25893  001114  0100               	movlb	0	; () banked
 25894  001116  6F66               	movwf	checkForExistingUID@receivedUID& (0+255),b
 25895  001118  0E00               	movlw	high (_btPacket+14)
 25896  00111A  0100               	movlb	0	; () banked
 25897  00111C  6F67               	movwf	(checkForExistingUID@receivedUID+1)& (0+255),b
 25898  00111E  EC04  F02D         	call	_checkForExistingUID	;wreg free
 25899  001122  0900               	iorlw	0
 25900  001124  B4D8               	btfsc	status,2,c
 25901  001126  D004               	goto	l14258
 25902                           
 25903                           ;bluetooth.c: 160: __nop();
 25904  001128  F000               	nop	
 25905                           
 25906                           ;bluetooth.c: 161: bluetoothStatus.ACKReady = 0;
 25907  00112A  0100               	movlb	0	; () banked
 25908  00112C  97C2               	bcf	_bluetoothStatus& (0+255),3,b
 25909                           
 25910                           ;bluetooth.c: 162: return;
 25911  00112E  0012               	return	
 25912  001130                     l14258:
 25913                           
 25914                           ;bluetooth.c: 163: }
 25915                           ;bluetooth.c: 164: ABB_1.dets_length ++;
 25916  001130  C3C0  FFE8         	movff	_ABB_1,wreg
 25917  001134  0F01               	addlw	1
 25918  001136  CFE8 F3C0          	movff	wreg,_ABB_1
 25919                           
 25920                           ;bluetooth.c: 165: for(int i = 0; i < 4; i++){
 25921  00113A  0E00               	movlw	0
 25922  00113C  0100               	movlb	0	; () banked
 25923  00113E  6F9D               	movwf	(processBTPacket@i+1)& (0+255),b
 25924  001140  0E00               	movlw	0
 25925  001142  6F9C               	movwf	processBTPacket@i& (0+255),b
 25926  001144                     l14262:
 25927                           
 25928                           ; BSR set to: 0
 25929  001144  0100               	movlb	0	; () banked
 25930  001146  BF9D               	btfsc	(processBTPacket@i+1)& (0+255),7,b
 25931  001148  D008               	goto	l14266
 25932  00114A  0100               	movlb	0	; () banked
 25933  00114C  519D               	movf	(processBTPacket@i+1)& (0+255),w,b
 25934  00114E  E13D               	bnz	l14272
 25935  001150  0E04               	movlw	4
 25936  001152  0100               	movlb	0	; () banked
 25937  001154  5D9C               	subwf	processBTPacket@i& (0+255),w,b
 25938  001156  B0D8               	btfsc	status,0,c
 25939  001158  D038               	goto	l14272
 25940  00115A                     l14266:
 25941                           
 25942                           ; BSR set to: 0
 25943                           ;bluetooth.c: 166: ABB_1.det_arrays.UIDs[ABB_1.dets_length].UID[i] = btPacket.receive.da
      +                          ta[i];
 25944  00115A  0E03               	movlw	3
 25945  00115C  0100               	movlb	0	; () banked
 25946  00115E  259C               	addwf	processBTPacket@i& (0+255),w,b
 25947  001160  0100               	movlb	0	; () banked
 25948  001162  6F93               	movwf	??_processBTPacket& (0+255),b
 25949  001164  0E00               	movlw	0
 25950  001166  0100               	movlb	0	; () banked
 25951  001168  219D               	addwfc	(processBTPacket@i+1)& (0+255),w,b
 25952  00116A  0100               	movlb	0	; () banked
 25953  00116C  6F94               	movwf	(??_processBTPacket+1)& (0+255),b
 25954  00116E  0ED5               	movlw	low (_btPacket+11)
 25955  001170  0100               	movlb	0	; () banked
 25956  001172  2593               	addwf	??_processBTPacket& (0+255),w,b
 25957  001174  6ED9               	movwf	fsr2l,c
 25958  001176  0E00               	movlw	high (_btPacket+11)
 25959  001178  0100               	movlb	0	; () banked
 25960  00117A  2194               	addwfc	(??_processBTPacket+1)& (0+255),w,b
 25961  00117C  6EDA               	movwf	fsr2h,c
 25962  00117E  C3C0  F095         	movff	_ABB_1,??_processBTPacket+2
 25963  001182  0100               	movlb	0	; () banked
 25964  001184  5195               	movf	(??_processBTPacket+2)& (0+255),w,b
 25965  001186  0D05               	mullw	5
 25966  001188  0EC0               	movlw	low _ABB_1
 25967  00118A  0100               	movlb	0	; () banked
 25968  00118C  6F96               	movwf	(??_processBTPacket+3)& (0+255),b
 25969  00118E  0E03               	movlw	high _ABB_1
 25970  001190  0100               	movlb	0	; () banked
 25971  001192  6F97               	movwf	(??_processBTPacket+4)& (0+255),b
 25972  001194  0E04               	movlw	4
 25973  001196  0100               	movlb	0	; () banked
 25974  001198  2796               	addwf	(??_processBTPacket+3)& (0+255),f,b
 25975  00119A  0E00               	movlw	0
 25976  00119C  2397               	addwfc	(??_processBTPacket+4)& (0+255),f,b
 25977  00119E  50F3               	movf	prodl,w,c
 25978  0011A0  0100               	movlb	0	; () banked
 25979  0011A2  2796               	addwf	(??_processBTPacket+3)& (0+255),f,b
 25980  0011A4  50F4               	movf	prodh,w,c
 25981  0011A6  0100               	movlb	0	; () banked
 25982  0011A8  2397               	addwfc	(??_processBTPacket+4)& (0+255),f,b
 25983  0011AA  0100               	movlb	0	; () banked
 25984  0011AC  519C               	movf	processBTPacket@i& (0+255),w,b
 25985  0011AE  0100               	movlb	0	; () banked
 25986  0011B0  2596               	addwf	(??_processBTPacket+3)& (0+255),w,b
 25987  0011B2  6EE1               	movwf	fsr1l,c
 25988  0011B4  0100               	movlb	0	; () banked
 25989  0011B6  519D               	movf	(processBTPacket@i+1)& (0+255),w,b
 25990  0011B8  0100               	movlb	0	; () banked
 25991  0011BA  2197               	addwfc	(??_processBTPacket+4)& (0+255),w,b
 25992  0011BC  6EE2               	movwf	fsr1h,c
 25993  0011BE  CFDF FFE7          	movff	indf2,indf1
 25994                           
 25995                           ; BSR set to: 0
 25996  0011C2  0100               	movlb	0	; () banked
 25997  0011C4  4B9C               	infsnz	processBTPacket@i& (0+255),f,b
 25998  0011C6  2B9D               	incf	(processBTPacket@i+1)& (0+255),f,b
 25999  0011C8  D7BD               	goto	l14262
 26000  0011CA                     l14272:
 26001                           
 26002                           ; BSR set to: 0
 26003                           ;bluetooth.c: 167: }
 26004                           ;bluetooth.c: 168: ABB_1.det_arrays.info[ABB_1.dets_length].delay = (unsigned short)btPa
      +                          cket.receive.data[4] << 8;
 26005  0011CA  0100               	movlb	0	; () banked
 26006  0011CC  51DC               	movf	(_btPacket+18)& (0+255),w,b
 26007  0011CE  0100               	movlb	0	; () banked
 26008  0011D0  6F94               	movwf	(??_processBTPacket+1)& (0+255),b
 26009  0011D2  6B93               	clrf	??_processBTPacket& (0+255),b
 26010  0011D4  0EF9               	movlw	249
 26011  0011D6  0100               	movlb	0	; () banked
 26012  0011D8  6F95               	movwf	(??_processBTPacket+2)& (0+255),b
 26013  0011DA  0E01               	movlw	1
 26014  0011DC  0100               	movlb	0	; () banked
 26015  0011DE  6F96               	movwf	(??_processBTPacket+3)& (0+255),b
 26016  0011E0  C3C0  F097         	movff	_ABB_1,??_processBTPacket+4
 26017  0011E4  0100               	movlb	0	; () banked
 26018  0011E6  5197               	movf	(??_processBTPacket+4)& (0+255),w,b
 26019  0011E8  0D04               	mullw	4
 26020  0011EA  0100               	movlb	0	; () banked
 26021  0011EC  5195               	movf	(??_processBTPacket+2)& (0+255),w,b
 26022  0011EE  26F3               	addwf	prodl,f,c
 26023  0011F0  0100               	movlb	0	; () banked
 26024  0011F2  5196               	movf	(??_processBTPacket+3)& (0+255),w,b
 26025  0011F4  22F4               	addwfc	prodh,f,c
 26026  0011F6  0EC0               	movlw	low _ABB_1
 26027  0011F8  0100               	movlb	0	; () banked
 26028  0011FA  6F98               	movwf	(??_processBTPacket+5)& (0+255),b
 26029  0011FC  0E03               	movlw	high _ABB_1
 26030  0011FE  0100               	movlb	0	; () banked
 26031  001200  6F99               	movwf	(??_processBTPacket+6)& (0+255),b
 26032  001202  0E04               	movlw	4
 26033  001204  0100               	movlb	0	; () banked
 26034  001206  2798               	addwf	(??_processBTPacket+5)& (0+255),f,b
 26035  001208  0E00               	movlw	0
 26036  00120A  2399               	addwfc	(??_processBTPacket+6)& (0+255),f,b
 26037  00120C  50F3               	movf	prodl,w,c
 26038  00120E  0100               	movlb	0	; () banked
 26039  001210  2798               	addwf	(??_processBTPacket+5)& (0+255),f,b
 26040  001212  50F4               	movf	prodh,w,c
 26041  001214  0100               	movlb	0	; () banked
 26042  001216  2399               	addwfc	(??_processBTPacket+6)& (0+255),f,b
 26043  001218  0E02               	movlw	2
 26044  00121A  0100               	movlb	0	; () banked
 26045  00121C  2598               	addwf	(??_processBTPacket+5)& (0+255),w,b
 26046  00121E  6ED9               	movwf	fsr2l,c
 26047  001220  0E00               	movlw	0
 26048  001222  0100               	movlb	0	; () banked
 26049  001224  2199               	addwfc	(??_processBTPacket+6)& (0+255),w,b
 26050  001226  6EDA               	movwf	fsr2h,c
 26051  001228  C093  FFDE         	movff	??_processBTPacket,postinc2
 26052  00122C  C094  FFDD         	movff	??_processBTPacket+1,postdec2
 26053                           
 26054                           ;bluetooth.c: 169: ABB_1.det_arrays.info[ABB_1.dets_length].delay |= (unsigned short)btP
      +                          acket.receive.data[5];
 26055  001230  0EF9               	movlw	249
 26056  001232  0100               	movlb	0	; () banked
 26057  001234  6F93               	movwf	??_processBTPacket& (0+255),b
 26058  001236  0E01               	movlw	1
 26059  001238  0100               	movlb	0	; () banked
 26060  00123A  6F94               	movwf	(??_processBTPacket+1)& (0+255),b
 26061  00123C  C3C0  F095         	movff	_ABB_1,??_processBTPacket+2
 26062  001240  0100               	movlb	0	; () banked
 26063  001242  5195               	movf	(??_processBTPacket+2)& (0+255),w,b
 26064  001244  0D04               	mullw	4
 26065  001246  0100               	movlb	0	; () banked
 26066  001248  5193               	movf	??_processBTPacket& (0+255),w,b
 26067  00124A  26F3               	addwf	prodl,f,c
 26068  00124C  0100               	movlb	0	; () banked
 26069  00124E  5194               	movf	(??_processBTPacket+1)& (0+255),w,b
 26070  001250  22F4               	addwfc	prodh,f,c
 26071  001252  0EC0               	movlw	low _ABB_1
 26072  001254  0100               	movlb	0	; () banked
 26073  001256  6F96               	movwf	(??_processBTPacket+3)& (0+255),b
 26074  001258  0E03               	movlw	high _ABB_1
 26075  00125A  0100               	movlb	0	; () banked
 26076  00125C  6F97               	movwf	(??_processBTPacket+4)& (0+255),b
 26077  00125E  0E04               	movlw	4
 26078  001260  0100               	movlb	0	; () banked
 26079  001262  2796               	addwf	(??_processBTPacket+3)& (0+255),f,b
 26080  001264  0E00               	movlw	0
 26081  001266  2397               	addwfc	(??_processBTPacket+4)& (0+255),f,b
 26082  001268  50F3               	movf	prodl,w,c
 26083  00126A  0100               	movlb	0	; () banked
 26084  00126C  2796               	addwf	(??_processBTPacket+3)& (0+255),f,b
 26085  00126E  50F4               	movf	prodh,w,c
 26086  001270  0100               	movlb	0	; () banked
 26087  001272  2397               	addwfc	(??_processBTPacket+4)& (0+255),f,b
 26088  001274  0E02               	movlw	2
 26089  001276  0100               	movlb	0	; () banked
 26090  001278  2596               	addwf	(??_processBTPacket+3)& (0+255),w,b
 26091  00127A  6ED9               	movwf	fsr2l,c
 26092  00127C  0E00               	movlw	0
 26093  00127E  0100               	movlb	0	; () banked
 26094  001280  2197               	addwfc	(??_processBTPacket+4)& (0+255),w,b
 26095  001282  6EDA               	movwf	fsr2h,c
 26096  001284  0100               	movlb	0	; () banked
 26097  001286  51DD               	movf	(_btPacket+19)& (0+255),w,b
 26098  001288  12DE               	iorwf	postinc2,f,c
 26099  00128A  0E00               	movlw	0
 26100  00128C  12DD               	iorwf	postdec2,f,c
 26101                           
 26102                           ;bluetooth.c: 170: ABB_1.det_arrays.info[ABB_1.dets_length].data.tagged = 1;
 26103  00128E  0EF9               	movlw	249
 26104  001290  0100               	movlb	0	; () banked
 26105  001292  6F93               	movwf	??_processBTPacket& (0+255),b
 26106  001294  0E01               	movlw	1
 26107  001296  0100               	movlb	0	; () banked
 26108  001298  6F94               	movwf	(??_processBTPacket+1)& (0+255),b
 26109  00129A  C3C0  F095         	movff	_ABB_1,??_processBTPacket+2
 26110  00129E  0100               	movlb	0	; () banked
 26111  0012A0  5195               	movf	(??_processBTPacket+2)& (0+255),w,b
 26112  0012A2  0D04               	mullw	4
 26113  0012A4  0100               	movlb	0	; () banked
 26114  0012A6  5193               	movf	??_processBTPacket& (0+255),w,b
 26115  0012A8  26F3               	addwf	prodl,f,c
 26116  0012AA  0100               	movlb	0	; () banked
 26117  0012AC  5194               	movf	(??_processBTPacket+1)& (0+255),w,b
 26118  0012AE  22F4               	addwfc	prodh,f,c
 26119  0012B0  0EC0               	movlw	low _ABB_1
 26120  0012B2  0100               	movlb	0	; () banked
 26121  0012B4  6F96               	movwf	(??_processBTPacket+3)& (0+255),b
 26122  0012B6  0E03               	movlw	high _ABB_1
 26123  0012B8  0100               	movlb	0	; () banked
 26124  0012BA  6F97               	movwf	(??_processBTPacket+4)& (0+255),b
 26125  0012BC  0E04               	movlw	4
 26126  0012BE  0100               	movlb	0	; () banked
 26127  0012C0  2796               	addwf	(??_processBTPacket+3)& (0+255),f,b
 26128  0012C2  0E00               	movlw	0
 26129  0012C4  2397               	addwfc	(??_processBTPacket+4)& (0+255),f,b
 26130  0012C6  50F3               	movf	prodl,w,c
 26131  0012C8  0100               	movlb	0	; () banked
 26132  0012CA  2796               	addwf	(??_processBTPacket+3)& (0+255),f,b
 26133  0012CC  50F4               	movf	prodh,w,c
 26134  0012CE  0100               	movlb	0	; () banked
 26135  0012D0  2397               	addwfc	(??_processBTPacket+4)& (0+255),f,b
 26136  0012D2  0E01               	movlw	1
 26137  0012D4  0100               	movlb	0	; () banked
 26138  0012D6  2596               	addwf	(??_processBTPacket+3)& (0+255),w,b
 26139  0012D8  6ED9               	movwf	fsr2l,c
 26140  0012DA  0E00               	movlw	0
 26141  0012DC  0100               	movlb	0	; () banked
 26142  0012DE  2197               	addwfc	(??_processBTPacket+4)& (0+255),w,b
 26143  0012E0  6EDA               	movwf	fsr2h,c
 26144  0012E2  84DF               	bsf	indf2,2,c
 26145                           
 26146                           ; BSR set to: 0
 26147                           ;bluetooth.c: 171: for(int i = 0; i < 4; i++){
 26148  0012E4  0E00               	movlw	0
 26149  0012E6  0100               	movlb	0	; () banked
 26150  0012E8  6F9F               	movwf	(processBTPacket@i_8508+1)& (0+255),b
 26151  0012EA  0E00               	movlw	0
 26152  0012EC  6F9E               	movwf	processBTPacket@i_8508& (0+255),b
 26153                           
 26154                           ; BSR set to: 0
 26155  0012EE  0100               	movlb	0	; () banked
 26156  0012F0  BF9F               	btfsc	(processBTPacket@i_8508+1)& (0+255),7,b
 26157  0012F2  D008               	goto	l14280
 26158  0012F4  0100               	movlb	0	; () banked
 26159  0012F6  519F               	movf	(processBTPacket@i_8508+1)& (0+255),w,b
 26160  0012F8  E135               	bnz	l2642
 26161  0012FA  0E04               	movlw	4
 26162  0012FC  0100               	movlb	0	; () banked
 26163  0012FE  5D9E               	subwf	processBTPacket@i_8508& (0+255),w,b
 26164  001300  B0D8               	btfsc	status,0,c
 26165  001302  D030               	goto	l2642
 26166  001304                     l14280:
 26167                           
 26168                           ; BSR set to: 0
 26169                           ;bluetooth.c: 172: btPacket.send.data[i] = btPacket.receive.data[i];
 26170  001304  0E03               	movlw	3
 26171  001306  0100               	movlb	0	; () banked
 26172  001308  259E               	addwf	processBTPacket@i_8508& (0+255),w,b
 26173  00130A  0100               	movlb	0	; () banked
 26174  00130C  6F93               	movwf	??_processBTPacket& (0+255),b
 26175  00130E  0E00               	movlw	0
 26176  001310  0100               	movlb	0	; () banked
 26177  001312  219F               	addwfc	(processBTPacket@i_8508+1)& (0+255),w,b
 26178  001314  0100               	movlb	0	; () banked
 26179  001316  6F94               	movwf	(??_processBTPacket+1)& (0+255),b
 26180  001318  0ED5               	movlw	low (_btPacket+11)
 26181  00131A  0100               	movlb	0	; () banked
 26182  00131C  2593               	addwf	??_processBTPacket& (0+255),w,b
 26183  00131E  6ED9               	movwf	fsr2l,c
 26184  001320  0E00               	movlw	high (_btPacket+11)
 26185  001322  0100               	movlb	0	; () banked
 26186  001324  2194               	addwfc	(??_processBTPacket+1)& (0+255),w,b
 26187  001326  6EDA               	movwf	fsr2h,c
 26188  001328  0E03               	movlw	3
 26189  00132A  0100               	movlb	0	; () banked
 26190  00132C  259E               	addwf	processBTPacket@i_8508& (0+255),w,b
 26191  00132E  0100               	movlb	0	; () banked
 26192  001330  6F95               	movwf	(??_processBTPacket+2)& (0+255),b
 26193  001332  0E00               	movlw	0
 26194  001334  0100               	movlb	0	; () banked
 26195  001336  219F               	addwfc	(processBTPacket@i_8508+1)& (0+255),w,b
 26196  001338  0100               	movlb	0	; () banked
 26197  00133A  6F96               	movwf	(??_processBTPacket+3)& (0+255),b
 26198  00133C  0ECA               	movlw	low _btPacket
 26199  00133E  0100               	movlb	0	; () banked
 26200  001340  2595               	addwf	(??_processBTPacket+2)& (0+255),w,b
 26201  001342  6EE1               	movwf	fsr1l,c
 26202  001344  0E00               	movlw	high _btPacket
 26203  001346  0100               	movlb	0	; () banked
 26204  001348  2196               	addwfc	(??_processBTPacket+3)& (0+255),w,b
 26205  00134A  6EE2               	movwf	fsr1h,c
 26206  00134C  CFDF FFE7          	movff	indf2,indf1
 26207                           
 26208                           ; BSR set to: 0
 26209  001350  0100               	movlb	0	; () banked
 26210  001352  4B9E               	infsnz	processBTPacket@i_8508& (0+255),f,b
 26211  001354  2B9F               	incf	(processBTPacket@i_8508+1)& (0+255),f,b
 26212                           
 26213                           ; BSR set to: 0
 26214  001356  0100               	movlb	0	; () banked
 26215  001358  BF9F               	btfsc	(processBTPacket@i_8508+1)& (0+255),7,b
 26216  00135A  D7D4               	goto	l14280
 26217  00135C  0100               	movlb	0	; () banked
 26218  00135E  519F               	movf	(processBTPacket@i_8508+1)& (0+255),w,b
 26219  001360  E101               	bnz	u10550
 26220  001362  D7CB               	goto	L19
 26221  001364                     u10550:
 26222  001364                     l2642:
 26223                           
 26224                           ; BSR set to: 0
 26225                           ;bluetooth.c: 173: }
 26226                           ;bluetooth.c: 174: btPacket.send.data[4] = btPacket.receive.data[4];
 26227  001364  C0DC  F0D1         	movff	_btPacket+18,_btPacket+7
 26228                           
 26229                           ;bluetooth.c: 175: btPacket.send.data[5] = btPacket.receive.data[5];
 26230  001368  C0DD  F0D2         	movff	_btPacket+19,_btPacket+8
 26231                           
 26232                           ;bluetooth.c: 176: break;
 26233  00136C  D05D               	goto	l14308
 26234  00136E                     l14286:
 26235                           
 26236                           ; BSR set to: 0
 26237                           ;bluetooth.c: 179: if(ABB_1.dets_length == expectedDets)
 26238  00136E  EE23  F0C0         	lfsr	2,_ABB_1
 26239  001372  0100               	movlb	0	; () banked
 26240  001374  51C1               	movf	_expectedDets& (0+255),w,b
 26241  001376  18DE               	xorwf	postinc2,w,c
 26242  001378  A4D8               	btfss	status,2,c
 26243  00137A  D002               	goto	l14290
 26244                           
 26245                           ; BSR set to: 0
 26246                           ;bluetooth.c: 180: btPacket.send.data[0] = 1;
 26247  00137C  0E01               	movlw	1
 26248  00137E  D001               	goto	L20
 26249  001380                     l14290:
 26250                           
 26251                           ; BSR set to: 0
 26252                           ;bluetooth.c: 181: else
 26253                           ;bluetooth.c: 182: btPacket.send.data[0] = 0;
 26254  001380  0E00               	movlw	0
 26255  001382                     L20:
 26256  001382  0100               	movlb	0	; () banked
 26257  001384  6FCD               	movwf	(_btPacket+3)& (0+255),b
 26258                           
 26259                           ; BSR set to: 0
 26260                           ;bluetooth.c: 183: btPacket.send.size += 1;
 26261                           
 26262                           ; BSR set to: 0
 26263  001386  0100               	movlb	0	; () banked
 26264  001388  2BCB               	incf	(_btPacket+1)& (0+255),f,b
 26265                           
 26266                           ; BSR set to: 0
 26267                           ;bluetooth.c: 184: bluetoothStatus.packetReceived = 1;
 26268  00138A  0100               	movlb	0	; () banked
 26269  00138C  89C2               	bsf	_bluetoothStatus& (0+255),4,b
 26270                           
 26271                           ;bluetooth.c: 185: break;
 26272  00138E  D04C               	goto	l14308
 26273  001390                     l14296:
 26274                           
 26275                           ; BSR set to: 0
 26276                           ;bluetooth.c: 188: tempDetInfo = &ABB_1.det_arrays.info[btPacket.receive.data[0]].data;
 26277  001390  0EF9               	movlw	249
 26278  001392  0100               	movlb	0	; () banked
 26279  001394  6F93               	movwf	??_processBTPacket& (0+255),b
 26280  001396  0E01               	movlw	1
 26281  001398  0100               	movlb	0	; () banked
 26282  00139A  6F94               	movwf	(??_processBTPacket+1)& (0+255),b
 26283  00139C  0100               	movlb	0	; () banked
 26284  00139E  51D8               	movf	(_btPacket+14)& (0+255),w,b
 26285  0013A0  0D04               	mullw	4
 26286  0013A2  0100               	movlb	0	; () banked
 26287  0013A4  5193               	movf	??_processBTPacket& (0+255),w,b
 26288  0013A6  26F3               	addwf	prodl,f,c
 26289  0013A8  0100               	movlb	0	; () banked
 26290  0013AA  5194               	movf	(??_processBTPacket+1)& (0+255),w,b
 26291  0013AC  22F4               	addwfc	prodh,f,c
 26292  0013AE  0EC0               	movlw	low _ABB_1
 26293  0013B0  0100               	movlb	0	; () banked
 26294  0013B2  6F95               	movwf	(??_processBTPacket+2)& (0+255),b
 26295  0013B4  0E03               	movlw	high _ABB_1
 26296  0013B6  0100               	movlb	0	; () banked
 26297  0013B8  6F96               	movwf	(??_processBTPacket+3)& (0+255),b
 26298  0013BA  0E04               	movlw	4
 26299  0013BC  0100               	movlb	0	; () banked
 26300  0013BE  2795               	addwf	(??_processBTPacket+2)& (0+255),f,b
 26301  0013C0  0E00               	movlw	0
 26302  0013C2  2396               	addwfc	(??_processBTPacket+3)& (0+255),f,b
 26303  0013C4  50F3               	movf	prodl,w,c
 26304  0013C6  0100               	movlb	0	; () banked
 26305  0013C8  2795               	addwf	(??_processBTPacket+2)& (0+255),f,b
 26306  0013CA  50F4               	movf	prodh,w,c
 26307  0013CC  0100               	movlb	0	; () banked
 26308  0013CE  2396               	addwfc	(??_processBTPacket+3)& (0+255),f,b
 26309  0013D0  0E01               	movlw	1
 26310  0013D2  0100               	movlb	0	; () banked
 26311  0013D4  2595               	addwf	(??_processBTPacket+2)& (0+255),w,b
 26312  0013D6  0100               	movlb	0	; () banked
 26313  0013D8  6F9A               	movwf	processBTPacket@tempDetInfo& (0+255),b
 26314  0013DA  0E00               	movlw	0
 26315  0013DC  0100               	movlb	0	; () banked
 26316  0013DE  2196               	addwfc	(??_processBTPacket+3)& (0+255),w,b
 26317  0013E0  0100               	movlb	0	; () banked
 26318  0013E2  6F9B               	movwf	(processBTPacket@tempDetInfo+1)& (0+255),b
 26319                           
 26320                           ; BSR set to: 0
 26321                           ;bluetooth.c: 189: btPacket.send.size += 2;
 26322  0013E4  0E02               	movlw	2
 26323  0013E6  0100               	movlb	0	; () banked
 26324  0013E8  27CB               	addwf	(_btPacket+1)& (0+255),f,b
 26325                           
 26326                           ; BSR set to: 0
 26327                           ;bluetooth.c: 190: btPacket.send.data[0] = btPacket.receive.data[0];
 26328  0013EA  C0D8  F0CD         	movff	_btPacket+14,_btPacket+3
 26329                           
 26330                           ; BSR set to: 0
 26331                           ;bluetooth.c: 191: btPacket.send.data[1] = (*tempDetInfo)&0xF0;
 26332  0013EE  C09A  FFD9         	movff	processBTPacket@tempDetInfo,fsr2l
 26333  0013F2  C09B  FFDA         	movff	processBTPacket@tempDetInfo+1,fsr2h
 26334  0013F6  50DF               	movf	indf2,w,c
 26335  0013F8  0BF0               	andlw	240
 26336  0013FA                     L18:
 26337  0013FA  0100               	movlb	0	; () banked
 26338  0013FC  6FCE               	movwf	(_btPacket+4)& (0+255),b
 26339                           
 26340                           ;bluetooth.c: 192: break;
 26341  0013FE  D014               	goto	l14308
 26342  001400                     l2647:
 26343                           
 26344                           ; BSR set to: 0
 26345  001400  00FF               	reset		;# 
 26346                           
 26347                           ;bluetooth.c: 198: return;
 26348                           
 26349                           ;bluetooth.c: 197: default :
 26350  001402  0012               	return	
 26351  001404                     l14306:
 26352  001404  0100               	movlb	0	; () banked
 26353  001406  51D7               	movf	(_btPacket+13)& (0+255),w,b
 26354                           
 26355                           ; Switch size 1, requested type "space"
 26356                           ; Number of cases is 5, Range of values is 1 to 5
 26357                           ; switch strategies available:
 26358                           ; Name         Instructions Cycles
 26359                           ; simple_byte           16     9 (average)
 26360                           ;	Chosen strategy is simple_byte
 26361  001408  0A01               	xorlw	1	; case 1
 26362  00140A  B4D8               	btfsc	status,2,c
 26363  00140C  D66B               	goto	l2633
 26364  00140E  0A03               	xorlw	3	; case 2
 26365  001410  B4D8               	btfsc	status,2,c
 26366  001412  D67C               	goto	l14252
 26367  001414  0A01               	xorlw	1	; case 3
 26368  001416  B4D8               	btfsc	status,2,c
 26369  001418  D7AA               	goto	l14286
 26370  00141A  0A07               	xorlw	7	; case 4
 26371  00141C  B4D8               	btfsc	status,2,c
 26372  00141E  D7B8               	goto	l14296
 26373  001420  0A01               	xorlw	1	; case 5
 26374  001422  A4D8               	btfss	status,2,c
 26375  001424  0012               	return	
 26376  001426  D7EC               	goto	l2647
 26377  001428                     l14308:
 26378                           
 26379                           ;bluetooth.c: 201: btPacket.receive.command = 0;
 26380  001428  0E00               	movlw	0
 26381  00142A  0100               	movlb	0	; () banked
 26382  00142C  6FD7               	movwf	(_btPacket+13)& (0+255),b
 26383                           
 26384                           ; BSR set to: 0
 26385                           ;bluetooth.c: 202: bluetoothStatus.ACKReady = 1;
 26386  00142E  0100               	movlb	0	; () banked
 26387  001430  87C2               	bsf	_bluetoothStatus& (0+255),3,b
 26388  001432  0012               	return		;funcret
 26389  001434                     __end_of_processBTPacket:
 26390                           	opt stack 0
 26391                           tblptru	equ	0xFF8
 26392                           tblptrh	equ	0xFF7
 26393                           tblptrl	equ	0xFF6
 26394                           tablat	equ	0xFF5
 26395                           prodh	equ	0xFF4
 26396                           prodl	equ	0xFF3
 26397                           intcon	equ	0xFF2
 26398                           postinc0	equ	0xFEE
 26399                           wreg	equ	0xFE8
 26400                           indf1	equ	0xFE7
 26401                           postinc1	equ	0xFE6
 26402                           postdec1	equ	0xFE5
 26403                           fsr1h	equ	0xFE2
 26404                           fsr1l	equ	0xFE1
 26405                           indf2	equ	0xFDF
 26406                           postinc2	equ	0xFDE
 26407                           postdec2	equ	0xFDD
 26408                           fsr2h	equ	0xFDA
 26409                           fsr2l	equ	0xFD9
 26410                           status	equ	0xFD8
 26411                           
 26412 ;; *************** function _checkForExistingUID *****************
 26413 ;; Defined at:
 26414 ;;		line 190 in file "peripherals.c"
 26415 ;; Parameters:    Size  Location     Type
 26416 ;;  receivedUID     2    6[BANK0 ] PTR unsigned long 
 26417 ;;		 -> btPacket.receive(11), btPacket(22), response(4), TAG_Response(10), 
 26418 ;; Auto vars:     Size  Location     Type
 26419 ;;  i               2   18[BANK0 ] int 
 26420 ;;  currentUID      2   16[BANK0 ] PTR unsigned long 
 26421 ;;		 -> ABB_1.det_arrays.UIDs.UID(4), ABB_1.det_arrays.UIDs(505), 
 26422 ;; Return value:  Size  Location     Type
 26423 ;;                  1    wreg      unsigned char 
 26424 ;; Registers used:
 26425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26426 ;; Tracked objects:
 26427 ;;		On entry : 0/0
 26428 ;;		On exit  : 0/0
 26429 ;;		Unchanged: 0/0
 26430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26431 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26432 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26433 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26434 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26435 ;;Total ram usage:       14 bytes
 26436 ;; Hardware stack levels used:    1
 26437 ;; Hardware stack levels required when called:    9
 26438 ;; This function calls:
 26439 ;;		___wmul
 26440 ;; This function is called by:
 26441 ;;		_readUID
 26442 ;;		_processBTPacket
 26443 ;; This function uses a non-reentrant model
 26444 ;;
 26445                           
 26446                           	psect	text135
 26447  005A08                     __ptext135:
 26448                           	opt stack 0
 26449  005A08                     _checkForExistingUID:
 26450                           	opt stack 17
 26451                           
 26452                           ;peripherals.c: 191: unsigned long *currentUID;
 26453                           ;peripherals.c: 192: for(int i = 0; i < ABB_1.dets_length; i ++){
 26454                           
 26455                           ;incstack = 0
 26456  005A08  0E00               	movlw	0
 26457  005A0A  0100               	movlb	0	; () banked
 26458  005A0C  6F73               	movwf	(checkForExistingUID@i+1)& (0+255),b
 26459  005A0E  0E00               	movlw	0
 26460  005A10  6F72               	movwf	checkForExistingUID@i& (0+255),b
 26461  005A12  D039               	goto	l13200
 26462  005A14                     l13188:
 26463                           
 26464                           ; BSR set to: 0
 26465                           ;peripherals.c: 193: currentUID = ABB_1.det_arrays.UIDs[i].UID;
 26466  005A14  C072  F060         	movff	checkForExistingUID@i,___wmul@multiplier
 26467  005A18  C073  F061         	movff	checkForExistingUID@i+1,___wmul@multiplier+1
 26468  005A1C  0E00               	movlw	0
 26469  005A1E  0100               	movlb	0	; () banked
 26470  005A20  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 26471  005A22  0E05               	movlw	5
 26472  005A24  6F62               	movwf	___wmul@multiplicand& (0+255),b
 26473  005A26  ECB3  F038         	call	___wmul	;wreg free
 26474  005A2A  0EC4               	movlw	low (_ABB_1+4)
 26475  005A2C  0100               	movlb	0	; () banked
 26476  005A2E  2560               	addwf	?___wmul& (0+255),w,b
 26477  005A30  0100               	movlb	0	; () banked
 26478  005A32  6F70               	movwf	checkForExistingUID@currentUID& (0+255),b
 26479  005A34  0E03               	movlw	high (_ABB_1+4)
 26480  005A36  0100               	movlb	0	; () banked
 26481  005A38  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 26482  005A3A  0100               	movlb	0	; () banked
 26483  005A3C  6F71               	movwf	(checkForExistingUID@currentUID+1)& (0+255),b
 26484                           
 26485                           ; BSR set to: 0
 26486                           ;peripherals.c: 194: if(*currentUID == *receivedUID || !*receivedUID)
 26487  005A3E  C066  FFD9         	movff	checkForExistingUID@receivedUID,fsr2l
 26488  005A42  C067  FFDA         	movff	checkForExistingUID@receivedUID+1,fsr2h
 26489  005A46  C070  FFE1         	movff	checkForExistingUID@currentUID,fsr1l
 26490  005A4A  C071  FFE2         	movff	checkForExistingUID@currentUID+1,fsr1h
 26491  005A4E  50DE               	movf	postinc2,w,c
 26492  005A50  18E6               	xorwf	postinc1,w,c
 26493  005A52  E10A               	bnz	u9450
 26494  005A54  50DE               	movf	postinc2,w,c
 26495  005A56  18E6               	xorwf	postinc1,w,c
 26496  005A58  E107               	bnz	u9450
 26497  005A5A  50DE               	movf	postinc2,w,c
 26498  005A5C  18E6               	xorwf	postinc1,w,c
 26499  005A5E  E104               	bnz	u9450
 26500  005A60  50DE               	movf	postinc2,w,c
 26501  005A62  18E6               	xorwf	postinc1,w,c
 26502  005A64  B4D8               	btfsc	status,2,c
 26503  005A66  D00A               	goto	l13194
 26504  005A68                     u9450:
 26505                           
 26506                           ; BSR set to: 0
 26507  005A68  C066  FFD9         	movff	checkForExistingUID@receivedUID,fsr2l
 26508  005A6C  C067  FFDA         	movff	checkForExistingUID@receivedUID+1,fsr2h
 26509  005A70  50DE               	movf	postinc2,w,c
 26510  005A72  10DE               	iorwf	postinc2,w,c
 26511  005A74  10DE               	iorwf	postinc2,w,c
 26512  005A76  10DE               	iorwf	postinc2,w,c
 26513  005A78  A4D8               	btfss	status,2,c
 26514  005A7A  D002               	goto	l13198
 26515  005A7C                     l13194:
 26516                           
 26517                           ; BSR set to: 0
 26518                           ;peripherals.c: 195: return 1;
 26519  005A7C  0E01               	movlw	1
 26520                           
 26521                           ; BSR set to: 0
 26522  005A7E  0012               	return	
 26523  005A80                     l13198:
 26524                           
 26525                           ; BSR set to: 0
 26526  005A80  0100               	movlb	0	; () banked
 26527  005A82  4B72               	infsnz	checkForExistingUID@i& (0+255),f,b
 26528  005A84  2B73               	incf	(checkForExistingUID@i+1)& (0+255),f,b
 26529  005A86                     l13200:
 26530                           
 26531                           ; BSR set to: 0
 26532  005A86  EE23  F0C0         	lfsr	2,_ABB_1
 26533  005A8A  50DF               	movf	indf2,w,c
 26534  005A8C  0100               	movlb	0	; () banked
 26535  005A8E  6F68               	movwf	??_checkForExistingUID& (0+255),b
 26536  005A90  6B69               	clrf	(??_checkForExistingUID+1)& (0+255),b
 26537  005A92  0100               	movlb	0	; () banked
 26538  005A94  5168               	movf	??_checkForExistingUID& (0+255),w,b
 26539  005A96  0100               	movlb	0	; () banked
 26540  005A98  5D72               	subwf	checkForExistingUID@i& (0+255),w,b
 26541  005A9A  0100               	movlb	0	; () banked
 26542  005A9C  5173               	movf	(checkForExistingUID@i+1)& (0+255),w,b
 26543  005A9E  0A80               	xorlw	128
 26544  005AA0  0100               	movlb	0	; () banked
 26545  005AA2  6F6A               	movwf	(??_checkForExistingUID+2)& (0+255),b
 26546  005AA4  0100               	movlb	0	; () banked
 26547  005AA6  5169               	movf	(??_checkForExistingUID+1)& (0+255),w,b
 26548  005AA8  0A80               	xorlw	128
 26549  005AAA  0100               	movlb	0	; () banked
 26550  005AAC  596A               	subwfb	(??_checkForExistingUID+2)& (0+255),w,b
 26551  005AAE  A0D8               	btfss	status,0,c
 26552  005AB0  D7B1               	goto	l13188
 26553                           
 26554                           ; BSR set to: 0
 26555                           ;peripherals.c: 196: }
 26556                           ;peripherals.c: 197: return 0;
 26557                           
 26558                           ; BSR set to: 0
 26559  005AB2  0E00               	movlw	0
 26560  005AB4  0012               	return	
 26561  005AB6                     __end_of_checkForExistingUID:
 26562                           	opt stack 0
 26563                           tblptru	equ	0xFF8
 26564                           tblptrh	equ	0xFF7
 26565                           tblptrl	equ	0xFF6
 26566                           tablat	equ	0xFF5
 26567                           prodh	equ	0xFF4
 26568                           prodl	equ	0xFF3
 26569                           intcon	equ	0xFF2
 26570                           postinc0	equ	0xFEE
 26571                           wreg	equ	0xFE8
 26572                           indf1	equ	0xFE7
 26573                           postinc1	equ	0xFE6
 26574                           postdec1	equ	0xFE5
 26575                           fsr1h	equ	0xFE2
 26576                           fsr1l	equ	0xFE1
 26577                           indf2	equ	0xFDF
 26578                           postinc2	equ	0xFDE
 26579                           postdec2	equ	0xFDD
 26580                           fsr2h	equ	0xFDA
 26581                           fsr2l	equ	0xFD9
 26582                           status	equ	0xFD8
 26583                           
 26584 ;; *************** function _checkBluetoothCRC *****************
 26585 ;; Defined at:
 26586 ;;		line 383 in file "bluetooth.c"
 26587 ;; Parameters:    Size  Location     Type
 26588 ;;		None
 26589 ;; Auto vars:     Size  Location     Type
 26590 ;;  i               2   48[BANK0 ] int 
 26591 ;;  data           11   37[BANK0 ] unsigned char [11]
 26592 ;;  indexCrc        1   50[BANK0 ] unsigned char 
 26593 ;; Return value:  Size  Location     Type
 26594 ;;                  1    wreg      unsigned char 
 26595 ;; Registers used:
 26596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26597 ;; Tracked objects:
 26598 ;;		On entry : 0/0
 26599 ;;		On exit  : 0/0
 26600 ;;		Unchanged: 0/0
 26601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26603 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26604 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26605 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26606 ;;Total ram usage:       19 bytes
 26607 ;; Hardware stack levels used:    1
 26608 ;; Hardware stack levels required when called:   11
 26609 ;; This function calls:
 26610 ;;		_bluetoothCRC
 26611 ;; This function is called by:
 26612 ;;		_processBTPacket
 26613 ;; This function uses a non-reentrant model
 26614 ;;
 26615                           
 26616                           	psect	text136
 26617  003FA6                     __ptext136:
 26618                           	opt stack 0
 26619  003FA6                     _checkBluetoothCRC:
 26620                           	opt stack 15
 26621                           
 26622                           ;bluetooth.c: 384: unsigned char data[11];
 26623                           ;bluetooth.c: 385: unsigned char indexCrc = 0;
 26624                           
 26625                           ; BSR set to: 0
 26626                           ;incstack = 0
 26627  003FA6  0E00               	movlw	0
 26628  003FA8  0100               	movlb	0	; () banked
 26629  003FAA  6F92               	movwf	checkBluetoothCRC@indexCrc& (0+255),b
 26630                           
 26631                           ; BSR set to: 0
 26632                           ;bluetooth.c: 386: data[indexCrc ++ ] = 0xAA;
 26633  003FAC  0100               	movlb	0	; () banked
 26634  003FAE  5192               	movf	checkBluetoothCRC@indexCrc& (0+255),w,b
 26635  003FB0  0D01               	mullw	1
 26636  003FB2  0E85               	movlw	low checkBluetoothCRC@data
 26637  003FB4  24F3               	addwf	prodl,w,c
 26638  003FB6  6ED9               	movwf	fsr2l,c
 26639  003FB8  0E00               	movlw	high checkBluetoothCRC@data
 26640  003FBA  20F4               	addwfc	prodh,w,c
 26641  003FBC  6EDA               	movwf	fsr2h,c
 26642  003FBE  0EAA               	movlw	170
 26643  003FC0  6EDF               	movwf	indf2,c
 26644                           
 26645                           ; BSR set to: 0
 26646  003FC2  0100               	movlb	0	; () banked
 26647  003FC4  2B92               	incf	checkBluetoothCRC@indexCrc& (0+255),f,b
 26648                           
 26649                           ; BSR set to: 0
 26650                           ;bluetooth.c: 387: data[indexCrc ++ ] = btPacket.receive.size;
 26651  003FC6  0100               	movlb	0	; () banked
 26652  003FC8  5192               	movf	checkBluetoothCRC@indexCrc& (0+255),w,b
 26653  003FCA  0D01               	mullw	1
 26654  003FCC  0E85               	movlw	low checkBluetoothCRC@data
 26655  003FCE  24F3               	addwf	prodl,w,c
 26656  003FD0  6ED9               	movwf	fsr2l,c
 26657  003FD2  0E00               	movlw	high checkBluetoothCRC@data
 26658  003FD4  20F4               	addwfc	prodh,w,c
 26659  003FD6  6EDA               	movwf	fsr2h,c
 26660  003FD8  C0D6  FFDF         	movff	_btPacket+12,indf2
 26661                           
 26662                           ; BSR set to: 0
 26663  003FDC  0100               	movlb	0	; () banked
 26664  003FDE  2B92               	incf	checkBluetoothCRC@indexCrc& (0+255),f,b
 26665                           
 26666                           ; BSR set to: 0
 26667                           ;bluetooth.c: 388: data[indexCrc ++ ] = btPacket.receive.command;
 26668  003FE0  0100               	movlb	0	; () banked
 26669  003FE2  5192               	movf	checkBluetoothCRC@indexCrc& (0+255),w,b
 26670  003FE4  0D01               	mullw	1
 26671  003FE6  0E85               	movlw	low checkBluetoothCRC@data
 26672  003FE8  24F3               	addwf	prodl,w,c
 26673  003FEA  6ED9               	movwf	fsr2l,c
 26674  003FEC  0E00               	movlw	high checkBluetoothCRC@data
 26675  003FEE  20F4               	addwfc	prodh,w,c
 26676  003FF0  6EDA               	movwf	fsr2h,c
 26677  003FF2  C0D7  FFDF         	movff	_btPacket+13,indf2
 26678                           
 26679                           ; BSR set to: 0
 26680  003FF6  0100               	movlb	0	; () banked
 26681  003FF8  2B92               	incf	checkBluetoothCRC@indexCrc& (0+255),f,b
 26682                           
 26683                           ; BSR set to: 0
 26684                           ;bluetooth.c: 389: for(int i = 0; i < btPacket.receive.size - 5; i++){
 26685  003FFA  0E00               	movlw	0
 26686  003FFC  0100               	movlb	0	; () banked
 26687  003FFE  6F91               	movwf	(checkBluetoothCRC@i+1)& (0+255),b
 26688  004000  0E00               	movlw	0
 26689  004002  6F90               	movwf	checkBluetoothCRC@i& (0+255),b
 26690  004004  D022               	goto	l13586
 26691  004006                     l13580:
 26692                           
 26693                           ; BSR set to: 0
 26694                           ;bluetooth.c: 390: data[indexCrc ++ ] = btPacket.receive.data[i];
 26695  004006  0E03               	movlw	3
 26696  004008  0100               	movlb	0	; () banked
 26697  00400A  2590               	addwf	checkBluetoothCRC@i& (0+255),w,b
 26698  00400C  0100               	movlb	0	; () banked
 26699  00400E  6F80               	movwf	??_checkBluetoothCRC& (0+255),b
 26700  004010  0E00               	movlw	0
 26701  004012  0100               	movlb	0	; () banked
 26702  004014  2191               	addwfc	(checkBluetoothCRC@i+1)& (0+255),w,b
 26703  004016  0100               	movlb	0	; () banked
 26704  004018  6F81               	movwf	(??_checkBluetoothCRC+1)& (0+255),b
 26705  00401A  0ED5               	movlw	low (_btPacket+11)
 26706  00401C  0100               	movlb	0	; () banked
 26707  00401E  2580               	addwf	??_checkBluetoothCRC& (0+255),w,b
 26708  004020  6ED9               	movwf	fsr2l,c
 26709  004022  0E00               	movlw	high (_btPacket+11)
 26710  004024  0100               	movlb	0	; () banked
 26711  004026  2181               	addwfc	(??_checkBluetoothCRC+1)& (0+255),w,b
 26712  004028  6EDA               	movwf	fsr2h,c
 26713  00402A  0100               	movlb	0	; () banked
 26714  00402C  5192               	movf	checkBluetoothCRC@indexCrc& (0+255),w,b
 26715  00402E  0D01               	mullw	1
 26716  004030  0E85               	movlw	low checkBluetoothCRC@data
 26717  004032  24F3               	addwf	prodl,w,c
 26718  004034  6EE1               	movwf	fsr1l,c
 26719  004036  0E00               	movlw	high checkBluetoothCRC@data
 26720  004038  20F4               	addwfc	prodh,w,c
 26721  00403A  6EE2               	movwf	fsr1h,c
 26722  00403C  CFDF FFE7          	movff	indf2,indf1
 26723                           
 26724                           ; BSR set to: 0
 26725  004040  0100               	movlb	0	; () banked
 26726  004042  2B92               	incf	checkBluetoothCRC@indexCrc& (0+255),f,b
 26727                           
 26728                           ; BSR set to: 0
 26729  004044  0100               	movlb	0	; () banked
 26730  004046  4B90               	infsnz	checkBluetoothCRC@i& (0+255),f,b
 26731  004048  2B91               	incf	(checkBluetoothCRC@i+1)& (0+255),f,b
 26732  00404A                     l13586:
 26733                           
 26734                           ; BSR set to: 0
 26735  00404A  0EFB               	movlw	251
 26736  00404C  0100               	movlb	0	; () banked
 26737  00404E  6F80               	movwf	??_checkBluetoothCRC& (0+255),b
 26738  004050  0EFF               	movlw	255
 26739  004052  0100               	movlb	0	; () banked
 26740  004054  6F81               	movwf	(??_checkBluetoothCRC+1)& (0+255),b
 26741  004056  0100               	movlb	0	; () banked
 26742  004058  51D6               	movf	(_btPacket+12)& (0+255),w,b
 26743  00405A  0100               	movlb	0	; () banked
 26744  00405C  6F82               	movwf	(??_checkBluetoothCRC+2)& (0+255),b
 26745  00405E  6B83               	clrf	(??_checkBluetoothCRC+3)& (0+255),b
 26746  004060  0100               	movlb	0	; () banked
 26747  004062  5180               	movf	??_checkBluetoothCRC& (0+255),w,b
 26748  004064  0100               	movlb	0	; () banked
 26749  004066  2782               	addwf	(??_checkBluetoothCRC+2)& (0+255),f,b
 26750  004068  0100               	movlb	0	; () banked
 26751  00406A  5181               	movf	(??_checkBluetoothCRC+1)& (0+255),w,b
 26752  00406C  0100               	movlb	0	; () banked
 26753  00406E  2383               	addwfc	(??_checkBluetoothCRC+3)& (0+255),f,b
 26754  004070  0100               	movlb	0	; () banked
 26755  004072  5182               	movf	(??_checkBluetoothCRC+2)& (0+255),w,b
 26756  004074  0100               	movlb	0	; () banked
 26757  004076  5D90               	subwf	checkBluetoothCRC@i& (0+255),w,b
 26758  004078  0100               	movlb	0	; () banked
 26759  00407A  5191               	movf	(checkBluetoothCRC@i+1)& (0+255),w,b
 26760  00407C  0A80               	xorlw	128
 26761  00407E  0100               	movlb	0	; () banked
 26762  004080  6F84               	movwf	(??_checkBluetoothCRC+4)& (0+255),b
 26763  004082  0100               	movlb	0	; () banked
 26764  004084  5183               	movf	(??_checkBluetoothCRC+3)& (0+255),w,b
 26765  004086  0A80               	xorlw	128
 26766  004088  0100               	movlb	0	; () banked
 26767  00408A  5984               	subwfb	(??_checkBluetoothCRC+4)& (0+255),w,b
 26768  00408C  A0D8               	btfss	status,0,c
 26769  00408E  D7BB               	goto	l13580
 26770                           
 26771                           ; BSR set to: 0
 26772                           ;bluetooth.c: 391: }
 26773                           ;bluetooth.c: 392: if(btPacket.receive.crc == bluetoothCRC(data, indexCrc))
 26774                           
 26775                           ; BSR set to: 0
 26776  004090  0E85               	movlw	low checkBluetoothCRC@data
 26777  004092  0100               	movlb	0	; () banked
 26778  004094  6F6F               	movwf	bluetoothCRC@data& (0+255),b
 26779  004096  0E00               	movlw	high checkBluetoothCRC@data
 26780  004098  0100               	movlb	0	; () banked
 26781  00409A  6F70               	movwf	(bluetoothCRC@data+1)& (0+255),b
 26782  00409C  C092  F071         	movff	checkBluetoothCRC@indexCrc,bluetoothCRC@length
 26783  0040A0  EC2C  F019         	call	_bluetoothCRC	;wreg free
 26784  0040A4  0100               	movlb	0	; () banked
 26785  0040A6  51DE               	movf	(_btPacket+20)& (0+255),w,b
 26786  0040A8  0100               	movlb	0	; () banked
 26787  0040AA  196F               	xorwf	?_bluetoothCRC& (0+255),w,b
 26788  0040AC  E108               	bnz	l13596
 26789  0040AE  0100               	movlb	0	; () banked
 26790  0040B0  51DF               	movf	(_btPacket+21)& (0+255),w,b
 26791  0040B2  0100               	movlb	0	; () banked
 26792  0040B4  1970               	xorwf	(?_bluetoothCRC+1)& (0+255),w,b
 26793  0040B6  A4D8               	btfss	status,2,c
 26794  0040B8  D002               	goto	l13596
 26795                           
 26796                           ; BSR set to: 0
 26797                           ;bluetooth.c: 393: return 1;
 26798  0040BA  0E01               	movlw	1
 26799                           
 26800                           ; BSR set to: 0
 26801                           
 26802                           ; BSR set to: 0
 26803  0040BC  0012               	return	
 26804  0040BE                     l13596:
 26805                           
 26806                           ; BSR set to: 0
 26807                           ;bluetooth.c: 394: else
 26808                           ;bluetooth.c: 395: return 0;
 26809  0040BE  0E00               	movlw	0
 26810                           
 26811                           ; BSR set to: 0
 26812  0040C0  0012               	return	
 26813  0040C2                     __end_of_checkBluetoothCRC:
 26814                           	opt stack 0
 26815                           tblptru	equ	0xFF8
 26816                           tblptrh	equ	0xFF7
 26817                           tblptrl	equ	0xFF6
 26818                           tablat	equ	0xFF5
 26819                           prodh	equ	0xFF4
 26820                           prodl	equ	0xFF3
 26821                           intcon	equ	0xFF2
 26822                           postinc0	equ	0xFEE
 26823                           wreg	equ	0xFE8
 26824                           indf1	equ	0xFE7
 26825                           postinc1	equ	0xFE6
 26826                           postdec1	equ	0xFE5
 26827                           fsr1h	equ	0xFE2
 26828                           fsr1l	equ	0xFE1
 26829                           indf2	equ	0xFDF
 26830                           postinc2	equ	0xFDE
 26831                           postdec2	equ	0xFDD
 26832                           fsr2h	equ	0xFDA
 26833                           fsr2l	equ	0xFD9
 26834                           status	equ	0xFD8
 26835                           
 26836 ;; *************** function _bluetoothCRC *****************
 26837 ;; Defined at:
 26838 ;;		line 400 in file "bluetooth.c"
 26839 ;; Parameters:    Size  Location     Type
 26840 ;;  data            2   15[BANK0 ] PTR unsigned char 
 26841 ;;		 -> checkBluetoothCRC@data(11), sendPacket@txReg(11), 
 26842 ;;  length          1   17[BANK0 ] unsigned char 
 26843 ;; Auto vars:     Size  Location     Type
 26844 ;;  intCrc          2   30[BANK0 ] int 
 26845 ;;  loopBits        2   28[BANK0 ] int 
 26846 ;;  loopBytes       2   26[BANK0 ] int 
 26847 ;;  testBit         2   24[BANK0 ] unsigned int 
 26848 ;;  crc             2   22[BANK0 ] unsigned short 
 26849 ;; Return value:  Size  Location     Type
 26850 ;;                  2   15[BANK0 ] unsigned short 
 26851 ;; Registers used:
 26852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26853 ;; Tracked objects:
 26854 ;;		On entry : 0/0
 26855 ;;		On exit  : 0/0
 26856 ;;		Unchanged: 0/0
 26857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26858 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26859 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26860 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26861 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26862 ;;Total ram usage:       17 bytes
 26863 ;; Hardware stack levels used:    1
 26864 ;; Hardware stack levels required when called:   10
 26865 ;; This function calls:
 26866 ;;		_power
 26867 ;; This function is called by:
 26868 ;;		_sendPacket
 26869 ;;		_checkBluetoothCRC
 26870 ;; This function uses a non-reentrant model
 26871 ;;
 26872                           
 26873                           	psect	text137
 26874  003258                     __ptext137:
 26875                           	opt stack 0
 26876  003258                     _bluetoothCRC:
 26877                           	opt stack 16
 26878                           
 26879                           ;bluetooth.c: 401: int intCrc = 0;
 26880                           
 26881                           ; BSR set to: 0
 26882                           ;incstack = 0
 26883  003258  0E00               	movlw	0
 26884  00325A  0100               	movlb	0	; () banked
 26885  00325C  6F7F               	movwf	(bluetoothCRC@intCrc+1)& (0+255),b
 26886  00325E  0E00               	movlw	0
 26887  003260  6F7E               	movwf	bluetoothCRC@intCrc& (0+255),b
 26888                           
 26889                           ;bluetooth.c: 402: int loopBytes,loopBits;
 26890                           ;bluetooth.c: 403: unsigned short crc;
 26891                           ;bluetooth.c: 404: unsigned testBit;
 26892                           ;bluetooth.c: 406: for(loopBytes = 0; loopBytes < length; loopBytes++){
 26893  003262  0E00               	movlw	0
 26894  003264  0100               	movlb	0	; () banked
 26895  003266  6F7B               	movwf	(bluetoothCRC@loopBytes+1)& (0+255),b
 26896  003268  0E00               	movlw	0
 26897  00326A  6F7A               	movwf	bluetoothCRC@loopBytes& (0+255),b
 26898  00326C  D090               	goto	l13116
 26899  00326E                     l13096:
 26900                           
 26901                           ; BSR set to: 0
 26902                           ;bluetooth.c: 407: for(loopBits = 7; loopBits >= 0; loopBits--){
 26903  00326E  0E00               	movlw	0
 26904  003270  0100               	movlb	0	; () banked
 26905  003272  6F7D               	movwf	(bluetoothCRC@loopBits+1)& (0+255),b
 26906  003274  0E07               	movlw	7
 26907  003276  6F7C               	movwf	bluetoothCRC@loopBits& (0+255),b
 26908  003278                     l13098:
 26909                           
 26910                           ; BSR set to: 0
 26911  003278  0100               	movlb	0	; () banked
 26912  00327A  BF7D               	btfsc	(bluetoothCRC@loopBits+1)& (0+255),7,b
 26913  00327C  D085               	goto	l13114
 26914                           
 26915                           ; BSR set to: 0
 26916                           ;bluetooth.c: 408: testBit = ((intCrc & 0x8000) == 0x8000) ^ ((data[loopBytes] & power(2
      +                          ,loopBits)) == power(2, loopBits));
 26917                           
 26918                           ; BSR set to: 0
 26919                           
 26920                           ; BSR set to: 0
 26921  00327E  0100               	movlb	0	; () banked
 26922  003280  517A               	movf	bluetoothCRC@loopBytes& (0+255),w,b
 26923  003282  0100               	movlb	0	; () banked
 26924  003284  256F               	addwf	bluetoothCRC@data& (0+255),w,b
 26925  003286  6ED9               	movwf	fsr2l,c
 26926  003288  0100               	movlb	0	; () banked
 26927  00328A  517B               	movf	(bluetoothCRC@loopBytes+1)& (0+255),w,b
 26928  00328C  0100               	movlb	0	; () banked
 26929  00328E  2170               	addwfc	(bluetoothCRC@data+1)& (0+255),w,b
 26930  003290  6EDA               	movwf	fsr2h,c
 26931  003292  50DF               	movf	indf2,w,c
 26932  003294  0100               	movlb	0	; () banked
 26933  003296  6F72               	movwf	??_bluetoothCRC& (0+255),b
 26934  003298  0E00               	movlw	0
 26935  00329A  0100               	movlb	0	; () banked
 26936  00329C  6F67               	movwf	(power@base+1)& (0+255),b
 26937  00329E  0E02               	movlw	2
 26938  0032A0  6F66               	movwf	power@base& (0+255),b
 26939  0032A2  C07C  F068         	movff	bluetoothCRC@loopBits,power@exponent
 26940  0032A6  C07D  F069         	movff	bluetoothCRC@loopBits+1,power@exponent+1
 26941  0032AA  EC5F  F031         	call	_power	;wreg free
 26942  0032AE  0100               	movlb	0	; () banked
 26943  0032B0  1572               	andwf	??_bluetoothCRC& (0+255),w,b
 26944  0032B2  0100               	movlb	0	; () banked
 26945  0032B4  6F73               	movwf	(??_bluetoothCRC+1)& (0+255),b
 26946  0032B6  0E00               	movlw	0
 26947  0032B8  0100               	movlb	0	; () banked
 26948  0032BA  6F67               	movwf	(power@base+1)& (0+255),b
 26949  0032BC  0E02               	movlw	2
 26950  0032BE  6F66               	movwf	power@base& (0+255),b
 26951  0032C0  C07C  F068         	movff	bluetoothCRC@loopBits,power@exponent
 26952  0032C4  C07D  F069         	movff	bluetoothCRC@loopBits+1,power@exponent+1
 26953  0032C8  EC5F  F031         	call	_power	;wreg free
 26954  0032CC  0100               	movlb	0	; () banked
 26955  0032CE  1973               	xorwf	(??_bluetoothCRC+1)& (0+255),w,b
 26956  0032D0  A4D8               	btfss	status,2,c
 26957  0032D2  D002               	goto	u9300
 26958  0032D4  0E01               	movlw	1
 26959  0032D6  D001               	goto	u9302
 26960  0032D8                     u9300:
 26961  0032D8  0E00               	movlw	0
 26962  0032DA                     u9302:
 26963  0032DA  0100               	movlb	0	; () banked
 26964  0032DC  6F74               	movwf	(??_bluetoothCRC+2)& (0+255),b
 26965  0032DE  0100               	movlb	0	; () banked
 26966  0032E0  AF7F               	btfss	(bluetoothCRC@intCrc+1)& (0+255),7,b
 26967  0032E2  D002               	goto	u9310
 26968  0032E4  0E01               	movlw	1
 26969  0032E6  D001               	goto	u9312
 26970  0032E8                     u9310:
 26971  0032E8  0E00               	movlw	0
 26972  0032EA                     u9312:
 26973  0032EA  0100               	movlb	0	; () banked
 26974  0032EC  1B74               	xorwf	(??_bluetoothCRC+2)& (0+255),f,b
 26975  0032EE  B4D8               	btfsc	status,2,c
 26976  0032F0  D002               	goto	u9320
 26977  0032F2  0E01               	movlw	1
 26978  0032F4  D001               	goto	u9330
 26979  0032F6                     u9320:
 26980  0032F6  0E00               	movlw	0
 26981  0032F8                     u9330:
 26982  0032F8  0100               	movlb	0	; () banked
 26983  0032FA  6F78               	movwf	bluetoothCRC@testBit& (0+255),b
 26984  0032FC  6B79               	clrf	(bluetoothCRC@testBit+1)& (0+255),b
 26985                           
 26986                           ; BSR set to: 0
 26987                           ;bluetooth.c: 409: if(testBit)
 26988  0032FE  0100               	movlb	0	; () banked
 26989  003300  5178               	movf	bluetoothCRC@testBit& (0+255),w,b
 26990  003302  0100               	movlb	0	; () banked
 26991  003304  1179               	iorwf	(bluetoothCRC@testBit+1)& (0+255),w,b
 26992  003306  B4D8               	btfsc	status,2,c
 26993  003308  D01F               	goto	l13108
 26994                           
 26995                           ; BSR set to: 0
 26996                           ;bluetooth.c: 410: intCrc = (intCrc & 0x7FFF) * 2 ^ 0x1021;
 26997  00330A  0EFF               	movlw	255
 26998  00330C  0100               	movlb	0	; () banked
 26999  00330E  6F72               	movwf	??_bluetoothCRC& (0+255),b
 27000  003310  0E7F               	movlw	127
 27001  003312  0100               	movlb	0	; () banked
 27002  003314  6F73               	movwf	(??_bluetoothCRC+1)& (0+255),b
 27003  003316  C07E  F074         	movff	bluetoothCRC@intCrc,??_bluetoothCRC+2
 27004  00331A  C07F  F075         	movff	bluetoothCRC@intCrc+1,??_bluetoothCRC+3
 27005  00331E  0100               	movlb	0	; () banked
 27006  003320  5172               	movf	??_bluetoothCRC& (0+255),w,b
 27007  003322  0100               	movlb	0	; () banked
 27008  003324  1774               	andwf	(??_bluetoothCRC+2)& (0+255),f,b
 27009  003326  0100               	movlb	0	; () banked
 27010  003328  5173               	movf	(??_bluetoothCRC+1)& (0+255),w,b
 27011  00332A  0100               	movlb	0	; () banked
 27012  00332C  1775               	andwf	(??_bluetoothCRC+3)& (0+255),f,b
 27013  00332E  90D8               	bcf	status,0,c
 27014  003330  0100               	movlb	0	; () banked
 27015  003332  3774               	rlcf	(??_bluetoothCRC+2)& (0+255),f,b
 27016  003334  3775               	rlcf	(??_bluetoothCRC+3)& (0+255),f,b
 27017  003336  0E21               	movlw	33
 27018  003338  0100               	movlb	0	; () banked
 27019  00333A  1974               	xorwf	(??_bluetoothCRC+2)& (0+255),w,b
 27020  00333C  0100               	movlb	0	; () banked
 27021  00333E  6F7E               	movwf	bluetoothCRC@intCrc& (0+255),b
 27022  003340  0E10               	movlw	16
 27023  003342  0100               	movlb	0	; () banked
 27024  003344  1975               	xorwf	(??_bluetoothCRC+3)& (0+255),w,b
 27025  003346  D019               	goto	L21
 27026  003348                     l13108:
 27027                           
 27028                           ; BSR set to: 0
 27029                           ;bluetooth.c: 411: else
 27030                           ;bluetooth.c: 412: intCrc = (intCrc & 0x7FFF) * 2;
 27031  003348  0EFF               	movlw	255
 27032  00334A  0100               	movlb	0	; () banked
 27033  00334C  6F72               	movwf	??_bluetoothCRC& (0+255),b
 27034  00334E  0E7F               	movlw	127
 27035  003350  0100               	movlb	0	; () banked
 27036  003352  6F73               	movwf	(??_bluetoothCRC+1)& (0+255),b
 27037  003354  C07E  F074         	movff	bluetoothCRC@intCrc,??_bluetoothCRC+2
 27038  003358  C07F  F075         	movff	bluetoothCRC@intCrc+1,??_bluetoothCRC+3
 27039  00335C  0100               	movlb	0	; () banked
 27040  00335E  5172               	movf	??_bluetoothCRC& (0+255),w,b
 27041  003360  0100               	movlb	0	; () banked
 27042  003362  1774               	andwf	(??_bluetoothCRC+2)& (0+255),f,b
 27043  003364  0100               	movlb	0	; () banked
 27044  003366  5173               	movf	(??_bluetoothCRC+1)& (0+255),w,b
 27045  003368  0100               	movlb	0	; () banked
 27046  00336A  1775               	andwf	(??_bluetoothCRC+3)& (0+255),f,b
 27047  00336C  90D8               	bcf	status,0,c
 27048  00336E  0100               	movlb	0	; () banked
 27049  003370  3574               	rlcf	(??_bluetoothCRC+2)& (0+255),w,b
 27050  003372  0100               	movlb	0	; () banked
 27051  003374  6F7E               	movwf	bluetoothCRC@intCrc& (0+255),b
 27052  003376  0100               	movlb	0	; () banked
 27053  003378  3575               	rlcf	(??_bluetoothCRC+3)& (0+255),w,b
 27054  00337A                     L21:
 27055  00337A  0100               	movlb	0	; () banked
 27056  00337C  6F7F               	movwf	(bluetoothCRC@intCrc+1)& (0+255),b
 27057                           
 27058                           ; BSR set to: 0
 27059                           
 27060                           ; BSR set to: 0
 27061  00337E  0100               	movlb	0	; () banked
 27062  003380  077C               	decf	bluetoothCRC@loopBits& (0+255),f,b
 27063  003382  A0D8               	btfss	status,0,c
 27064  003384  077D               	decf	(bluetoothCRC@loopBits+1)& (0+255),f,b
 27065  003386  D778               	goto	l13098
 27066  003388                     l13114:
 27067                           
 27068                           ; BSR set to: 0
 27069  003388  0100               	movlb	0	; () banked
 27070  00338A  4B7A               	infsnz	bluetoothCRC@loopBytes& (0+255),f,b
 27071  00338C  2B7B               	incf	(bluetoothCRC@loopBytes+1)& (0+255),f,b
 27072  00338E                     l13116:
 27073                           
 27074                           ; BSR set to: 0
 27075  00338E  0100               	movlb	0	; () banked
 27076  003390  5171               	movf	bluetoothCRC@length& (0+255),w,b
 27077  003392  0100               	movlb	0	; () banked
 27078  003394  6F72               	movwf	??_bluetoothCRC& (0+255),b
 27079  003396  6B73               	clrf	(??_bluetoothCRC+1)& (0+255),b
 27080  003398  0100               	movlb	0	; () banked
 27081  00339A  5172               	movf	??_bluetoothCRC& (0+255),w,b
 27082  00339C  0100               	movlb	0	; () banked
 27083  00339E  5D7A               	subwf	bluetoothCRC@loopBytes& (0+255),w,b
 27084  0033A0  0100               	movlb	0	; () banked
 27085  0033A2  517B               	movf	(bluetoothCRC@loopBytes+1)& (0+255),w,b
 27086  0033A4  0A80               	xorlw	128
 27087  0033A6  0100               	movlb	0	; () banked
 27088  0033A8  6F74               	movwf	(??_bluetoothCRC+2)& (0+255),b
 27089  0033AA  0100               	movlb	0	; () banked
 27090  0033AC  5173               	movf	(??_bluetoothCRC+1)& (0+255),w,b
 27091  0033AE  0A80               	xorlw	128
 27092  0033B0  0100               	movlb	0	; () banked
 27093  0033B2  5974               	subwfb	(??_bluetoothCRC+2)& (0+255),w,b
 27094  0033B4  A0D8               	btfss	status,0,c
 27095  0033B6  D75B               	goto	l13096
 27096                           
 27097                           ; BSR set to: 0
 27098                           ;bluetooth.c: 413: }
 27099                           ;bluetooth.c: 414: }
 27100                           ;bluetooth.c: 415: crc = (unsigned short)intCrc;
 27101  0033B8  C07E  F076         	movff	bluetoothCRC@intCrc,bluetoothCRC@crc
 27102  0033BC  C07F  F077         	movff	bluetoothCRC@intCrc+1,bluetoothCRC@crc+1
 27103                           
 27104                           ;bluetooth.c: 416: return crc;
 27105  0033C0  C076  F06F         	movff	bluetoothCRC@crc,?_bluetoothCRC
 27106  0033C4  C077  F070         	movff	bluetoothCRC@crc+1,?_bluetoothCRC+1
 27107                           
 27108                           ; BSR set to: 0
 27109  0033C8  0012               	return		;funcret
 27110  0033CA                     __end_of_bluetoothCRC:
 27111                           	opt stack 0
 27112                           tblptru	equ	0xFF8
 27113                           tblptrh	equ	0xFF7
 27114                           tblptrl	equ	0xFF6
 27115                           tablat	equ	0xFF5
 27116                           prodh	equ	0xFF4
 27117                           prodl	equ	0xFF3
 27118                           intcon	equ	0xFF2
 27119                           postinc0	equ	0xFEE
 27120                           wreg	equ	0xFE8
 27121                           indf1	equ	0xFE7
 27122                           postinc1	equ	0xFE6
 27123                           postdec1	equ	0xFE5
 27124                           fsr1h	equ	0xFE2
 27125                           fsr1l	equ	0xFE1
 27126                           indf2	equ	0xFDF
 27127                           postinc2	equ	0xFDE
 27128                           postdec2	equ	0xFDD
 27129                           fsr2h	equ	0xFDA
 27130                           fsr2l	equ	0xFD9
 27131                           status	equ	0xFD8
 27132                           
 27133 ;; *************** function _power *****************
 27134 ;; Defined at:
 27135 ;;		line 420 in file "bluetooth.c"
 27136 ;; Parameters:    Size  Location     Type
 27137 ;;  base            2    6[BANK0 ] int 
 27138 ;;  exponent        2    8[BANK0 ] int 
 27139 ;; Auto vars:     Size  Location     Type
 27140 ;;  result          2   13[BANK0 ] unsigned short 
 27141 ;;  i               2   11[BANK0 ] int 
 27142 ;; Return value:  Size  Location     Type
 27143 ;;                  1    wreg      unsigned char 
 27144 ;; Registers used:
 27145 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 27146 ;; Tracked objects:
 27147 ;;		On entry : 0/0
 27148 ;;		On exit  : 0/0
 27149 ;;		Unchanged: 0/0
 27150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27151 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27152 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27153 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27154 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27155 ;;Total ram usage:        9 bytes
 27156 ;; Hardware stack levels used:    1
 27157 ;; Hardware stack levels required when called:    9
 27158 ;; This function calls:
 27159 ;;		___wmul
 27160 ;; This function is called by:
 27161 ;;		_bluetoothCRC
 27162 ;; This function uses a non-reentrant model
 27163 ;;
 27164                           
 27165                           	psect	text138
 27166  0062BE                     __ptext138:
 27167                           	opt stack 0
 27168  0062BE                     _power:
 27169                           	opt stack 16
 27170                           
 27171                           ;bluetooth.c: 421: unsigned short result;
 27172                           ;bluetooth.c: 422: int i;
 27173                           ;bluetooth.c: 423: if(!exponent)
 27174                           
 27175                           ; BSR set to: 0
 27176                           ;incstack = 0
 27177  0062BE  0100               	movlb	0	; () banked
 27178  0062C0  5168               	movf	power@exponent& (0+255),w,b
 27179  0062C2  0100               	movlb	0	; () banked
 27180  0062C4  1169               	iorwf	(power@exponent+1)& (0+255),w,b
 27181  0062C6  A4D8               	btfss	status,2,c
 27182  0062C8  D006               	goto	l2732
 27183                           
 27184                           ; BSR set to: 0
 27185                           ;bluetooth.c: 424: result = 1;
 27186  0062CA  0E00               	movlw	0
 27187  0062CC  0100               	movlb	0	; () banked
 27188  0062CE  6F6E               	movwf	(power@result+1)& (0+255),b
 27189  0062D0  0E01               	movlw	1
 27190  0062D2  6F6D               	movwf	power@result& (0+255),b
 27191  0062D4  D004               	goto	l13000
 27192  0062D6                     l2732:
 27193                           
 27194                           ; BSR set to: 0
 27195                           ;bluetooth.c: 425: else
 27196                           ;bluetooth.c: 426: result = base;
 27197  0062D6  C066  F06D         	movff	power@base,power@result
 27198  0062DA  C067  F06E         	movff	power@base+1,power@result+1
 27199  0062DE                     l13000:
 27200                           
 27201                           ; BSR set to: 0
 27202                           ;bluetooth.c: 427: for (i = 1; i < exponent; i ++){
 27203  0062DE  0E00               	movlw	0
 27204  0062E0  0100               	movlb	0	; () banked
 27205  0062E2  6F6C               	movwf	(power@i+1)& (0+255),b
 27206  0062E4  0E01               	movlw	1
 27207  0062E6  6F6B               	movwf	power@i& (0+255),b
 27208  0062E8  D011               	goto	l13006
 27209  0062EA                     l13002:
 27210                           
 27211                           ; BSR set to: 0
 27212                           ;bluetooth.c: 428: result *= base;
 27213  0062EA  C06D  F060         	movff	power@result,___wmul@multiplier
 27214  0062EE  C06E  F061         	movff	power@result+1,___wmul@multiplier+1
 27215  0062F2  C066  F062         	movff	power@base,___wmul@multiplicand
 27216  0062F6  C067  F063         	movff	power@base+1,___wmul@multiplicand+1
 27217  0062FA  ECB3  F038         	call	___wmul	;wreg free
 27218  0062FE  C060  F06D         	movff	?___wmul,power@result
 27219  006302  C061  F06E         	movff	?___wmul+1,power@result+1
 27220  006306  0100               	movlb	0	; () banked
 27221  006308  4B6B               	infsnz	power@i& (0+255),f,b
 27222  00630A  2B6C               	incf	(power@i+1)& (0+255),f,b
 27223  00630C                     l13006:
 27224                           
 27225                           ; BSR set to: 0
 27226  00630C  0100               	movlb	0	; () banked
 27227  00630E  5168               	movf	power@exponent& (0+255),w,b
 27228  006310  0100               	movlb	0	; () banked
 27229  006312  5D6B               	subwf	power@i& (0+255),w,b
 27230  006314  0100               	movlb	0	; () banked
 27231  006316  516C               	movf	(power@i+1)& (0+255),w,b
 27232  006318  0A80               	xorlw	128
 27233  00631A  0100               	movlb	0	; () banked
 27234  00631C  6F6A               	movwf	??_power& (0+255),b
 27235  00631E  0100               	movlb	0	; () banked
 27236  006320  5169               	movf	(power@exponent+1)& (0+255),w,b
 27237  006322  0A80               	xorlw	128
 27238  006324  0100               	movlb	0	; () banked
 27239  006326  596A               	subwfb	??_power& (0+255),w,b
 27240  006328  A0D8               	btfss	status,0,c
 27241  00632A  D7DF               	goto	l13002
 27242                           
 27243                           ; BSR set to: 0
 27244                           ;bluetooth.c: 429: }
 27245                           ;bluetooth.c: 430: return result;
 27246                           
 27247                           ; BSR set to: 0
 27248  00632C  0100               	movlb	0	; () banked
 27249  00632E  516D               	movf	power@result& (0+255),w,b
 27250  006330  0012               	return	
 27251  006332                     __end_of_power:
 27252                           	opt stack 0
 27253                           tblptru	equ	0xFF8
 27254                           tblptrh	equ	0xFF7
 27255                           tblptrl	equ	0xFF6
 27256                           tablat	equ	0xFF5
 27257                           prodh	equ	0xFF4
 27258                           prodl	equ	0xFF3
 27259                           intcon	equ	0xFF2
 27260                           postinc0	equ	0xFEE
 27261                           wreg	equ	0xFE8
 27262                           indf1	equ	0xFE7
 27263                           postinc1	equ	0xFE6
 27264                           postdec1	equ	0xFE5
 27265                           fsr1h	equ	0xFE2
 27266                           fsr1l	equ	0xFE1
 27267                           indf2	equ	0xFDF
 27268                           postinc2	equ	0xFDE
 27269                           postdec2	equ	0xFDD
 27270                           fsr2h	equ	0xFDA
 27271                           fsr2l	equ	0xFD9
 27272                           status	equ	0xFD8
 27273                           
 27274 ;; *************** function _bluetoothSetupSwitch *****************
 27275 ;; Defined at:
 27276 ;;		line 495 in file "bluetooth.c"
 27277 ;; Parameters:    Size  Location     Type
 27278 ;;		None
 27279 ;; Auto vars:     Size  Location     Type
 27280 ;;		None
 27281 ;; Return value:  Size  Location     Type
 27282 ;;                  1    wreg      void 
 27283 ;; Registers used:
 27284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27285 ;; Tracked objects:
 27286 ;;		On entry : 0/0
 27287 ;;		On exit  : 0/0
 27288 ;;		Unchanged: 0/0
 27289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27294 ;;Total ram usage:        0 bytes
 27295 ;; Hardware stack levels used:    1
 27296 ;; Hardware stack levels required when called:   10
 27297 ;; This function calls:
 27298 ;;		_resetBluetooth
 27299 ;;		_setDeviceName
 27300 ;;		_setSlaveMode
 27301 ;; This function is called by:
 27302 ;;		_bluetooth
 27303 ;; This function uses a non-reentrant model
 27304 ;;
 27305                           
 27306                           	psect	text139
 27307  0070BE                     __ptext139:
 27308                           	opt stack 0
 27309  0070BE                     _bluetoothSetupSwitch:
 27310                           	opt stack 17
 27311                           
 27312                           ;bluetooth.c: 496: switch(setupIndex){
 27313                           
 27314                           ; BSR set to: 0
 27315                           ;incstack = 0
 27316  0070BE  D00C               	goto	l14324
 27317  0070C0                     l14314:
 27318                           
 27319                           ;bluetooth.c: 498: resetBluetooth();
 27320  0070C0  EC83  F03C         	call	_resetBluetooth	;wreg free
 27321                           
 27322                           ;bluetooth.c: 499: break;
 27323  0070C4  0012               	return	
 27324  0070C6                     l14316:
 27325                           
 27326                           ;bluetooth.c: 502: setDeviceName();
 27327  0070C6  ECA2  F01E         	call	_setDeviceName	;wreg free
 27328                           
 27329                           ;bluetooth.c: 503: break;
 27330  0070CA  0012               	return	
 27331  0070CC                     l14318:
 27332                           
 27333                           ;bluetooth.c: 506: resetBluetooth();
 27334  0070CC  EC83  F03C         	call	_resetBluetooth	;wreg free
 27335                           
 27336                           ;bluetooth.c: 507: break;
 27337  0070D0  0012               	return	
 27338  0070D2                     l14320:
 27339                           
 27340                           ;bluetooth.c: 510: setSlaveMode();
 27341  0070D2  EC3F  F03A         	call	_setSlaveMode	;wreg free
 27342                           
 27343                           ;bluetooth.c: 512: }
 27344                           
 27345                           ;bluetooth.c: 511: break;
 27346  0070D6  0012               	return	
 27347  0070D8                     l14324:
 27348  0070D8  0100               	movlb	0	; () banked
 27349  0070DA  51C0               	movf	_setupIndex& (0+255),w,b
 27350                           
 27351                           ; Switch size 1, requested type "space"
 27352                           ; Number of cases is 4, Range of values is 0 to 3
 27353                           ; switch strategies available:
 27354                           ; Name         Instructions Cycles
 27355                           ; simple_byte           13     7 (average)
 27356                           ;	Chosen strategy is simple_byte
 27357  0070DC  0A00               	xorlw	0	; case 0
 27358  0070DE  B4D8               	btfsc	status,2,c
 27359  0070E0  D7EF               	goto	l14314
 27360  0070E2  0A01               	xorlw	1	; case 1
 27361  0070E4  B4D8               	btfsc	status,2,c
 27362  0070E6  D7EF               	goto	l14316
 27363  0070E8  0A03               	xorlw	3	; case 2
 27364  0070EA  B4D8               	btfsc	status,2,c
 27365  0070EC  D7EF               	goto	l14318
 27366  0070EE  0A01               	xorlw	1	; case 3
 27367  0070F0  A4D8               	btfss	status,2,c
 27368  0070F2  0012               	return	
 27369  0070F4  D7EE               	goto	l14320
 27370  0070F6                     __end_of_bluetoothSetupSwitch:
 27371                           	opt stack 0
 27372                           tblptru	equ	0xFF8
 27373                           tblptrh	equ	0xFF7
 27374                           tblptrl	equ	0xFF6
 27375                           tablat	equ	0xFF5
 27376                           prodh	equ	0xFF4
 27377                           prodl	equ	0xFF3
 27378                           intcon	equ	0xFF2
 27379                           postinc0	equ	0xFEE
 27380                           wreg	equ	0xFE8
 27381                           indf1	equ	0xFE7
 27382                           postinc1	equ	0xFE6
 27383                           postdec1	equ	0xFE5
 27384                           fsr1h	equ	0xFE2
 27385                           fsr1l	equ	0xFE1
 27386                           indf2	equ	0xFDF
 27387                           postinc2	equ	0xFDE
 27388                           postdec2	equ	0xFDD
 27389                           fsr2h	equ	0xFDA
 27390                           fsr2l	equ	0xFD9
 27391                           status	equ	0xFD8
 27392                           
 27393 ;; *************** function _setSlaveMode *****************
 27394 ;; Defined at:
 27395 ;;		line 212 in file "bluetooth.c"
 27396 ;; Parameters:    Size  Location     Type
 27397 ;;		None
 27398 ;; Auto vars:     Size  Location     Type
 27399 ;;  txreg          11    8[BANK0 ] unsigned char [11]
 27400 ;; Return value:  Size  Location     Type
 27401 ;;                  1    wreg      void 
 27402 ;; Registers used:
 27403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27404 ;; Tracked objects:
 27405 ;;		On entry : 0/0
 27406 ;;		On exit  : 0/0
 27407 ;;		Unchanged: 0/0
 27408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27410 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27412 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27413 ;;Total ram usage:       11 bytes
 27414 ;; Hardware stack levels used:    1
 27415 ;; Hardware stack levels required when called:    9
 27416 ;; This function calls:
 27417 ;;		_writeEUSART
 27418 ;; This function is called by:
 27419 ;;		_bluetoothSetupSwitch
 27420 ;; This function uses a non-reentrant model
 27421 ;;
 27422                           
 27423                           	psect	text140
 27424  00747E                     __ptext140:
 27425                           	opt stack 0
 27426  00747E                     _setSlaveMode:
 27427                           	opt stack 17
 27428                           
 27429                           ;bluetooth.c: 213: unsigned char txreg[] = "AT+ROLE0\r\n";
 27430                           
 27431                           ;incstack = 0
 27432  00747E  EE20  F0EF         	lfsr	2,setSlaveMode@F17418
 27433  007482  EE10  F068         	lfsr	1,setSlaveMode@txreg
 27434  007486  0E0A               	movlw	10
 27435  007488                     u9781:
 27436  007488  CFDB FFE3          	movff	plusw2,plusw1
 27437  00748C  06E8               	decf	wreg,f,c
 27438  00748E  E2FC               	bc	u9781
 27439                           
 27440                           ;bluetooth.c: 214: bluetoothStatus.dataReceived = 0;
 27441  007490  0100               	movlb	0	; () banked
 27442  007492  95C2               	bcf	_bluetoothStatus& (0+255),2,b
 27443                           
 27444                           ; BSR set to: 0
 27445                           ;bluetooth.c: 215: writeEUSART(txreg, sizeof(txreg)/sizeof(txreg[0]));
 27446  007494  0E68               	movlw	low setSlaveMode@txreg
 27447  007496  0100               	movlb	0	; () banked
 27448  007498  6F60               	movwf	writeEUSART@data& (0+255),b
 27449  00749A  0E00               	movlw	high setSlaveMode@txreg
 27450  00749C  0100               	movlb	0	; () banked
 27451  00749E  6F61               	movwf	(writeEUSART@data+1)& (0+255),b
 27452  0074A0  0E0B               	movlw	11
 27453  0074A2  0100               	movlb	0	; () banked
 27454  0074A4  6F62               	movwf	writeEUSART@size& (0+255),b
 27455  0074A6  EC53  F033         	call	_writeEUSART	;wreg free
 27456  0074AA  0012               	return		;funcret
 27457  0074AC                     __end_of_setSlaveMode:
 27458                           	opt stack 0
 27459                           tblptru	equ	0xFF8
 27460                           tblptrh	equ	0xFF7
 27461                           tblptrl	equ	0xFF6
 27462                           tablat	equ	0xFF5
 27463                           prodh	equ	0xFF4
 27464                           prodl	equ	0xFF3
 27465                           intcon	equ	0xFF2
 27466                           postinc0	equ	0xFEE
 27467                           wreg	equ	0xFE8
 27468                           indf1	equ	0xFE7
 27469                           postinc1	equ	0xFE6
 27470                           postdec1	equ	0xFE5
 27471                           plusw1	equ	0xFE3
 27472                           fsr1h	equ	0xFE2
 27473                           fsr1l	equ	0xFE1
 27474                           indf2	equ	0xFDF
 27475                           postinc2	equ	0xFDE
 27476                           postdec2	equ	0xFDD
 27477                           plusw2	equ	0xFDB
 27478                           fsr2h	equ	0xFDA
 27479                           fsr2l	equ	0xFD9
 27480                           status	equ	0xFD8
 27481                           
 27482 ;; *************** function _setDeviceName *****************
 27483 ;; Defined at:
 27484 ;;		line 219 in file "bluetooth.c"
 27485 ;; Parameters:    Size  Location     Type
 27486 ;;		None
 27487 ;; Auto vars:     Size  Location     Type
 27488 ;;  txreg          22    8[BANK0 ] unsigned char [22]
 27489 ;;  tempSerial      2   30[BANK0 ] unsigned short 
 27490 ;; Return value:  Size  Location     Type
 27491 ;;                  1    wreg      void 
 27492 ;; Registers used:
 27493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27494 ;; Tracked objects:
 27495 ;;		On entry : 0/0
 27496 ;;		On exit  : 0/0
 27497 ;;		Unchanged: 0/0
 27498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27500 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27502 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27503 ;;Total ram usage:       24 bytes
 27504 ;; Hardware stack levels used:    1
 27505 ;; Hardware stack levels required when called:    9
 27506 ;; This function calls:
 27507 ;;		___lwdiv
 27508 ;;		___wmul
 27509 ;;		_writeEUSART
 27510 ;; This function is called by:
 27511 ;;		_bluetoothSetupSwitch
 27512 ;; This function uses a non-reentrant model
 27513 ;;
 27514                           
 27515                           	psect	text141
 27516  003D44                     __ptext141:
 27517                           	opt stack 0
 27518  003D44                     _setDeviceName:
 27519                           	opt stack 17
 27520                           
 27521                           ;bluetooth.c: 220: unsigned char txreg[] = "AT+NAMECBB SN: 0000\r\n";
 27522                           
 27523                           ;incstack = 0
 27524  003D44  EE21  F0E4         	lfsr	2,setDeviceName@F17421
 27525  003D48  EE10  F068         	lfsr	1,setDeviceName@txreg
 27526  003D4C  0E15               	movlw	21
 27527  003D4E                     u9791:
 27528  003D4E  CFDB FFE3          	movff	plusw2,plusw1
 27529  003D52  06E8               	decf	wreg,f,c
 27530  003D54  E2FC               	bc	u9791
 27531                           
 27532                           ;bluetooth.c: 222: unsigned short tempSerial = 0x0008;
 27533  003D56  0E00               	movlw	0
 27534  003D58  0100               	movlb	0	; () banked
 27535  003D5A  6F7F               	movwf	(setDeviceName@tempSerial+1)& (0+255),b
 27536  003D5C  0E08               	movlw	8
 27537  003D5E  6F7E               	movwf	setDeviceName@tempSerial& (0+255),b
 27538                           
 27539                           ; BSR set to: 0
 27540                           ;bluetooth.c: 223: txreg[15] = tempSerial/1000 + 48;
 27541  003D60  C07E  F060         	movff	setDeviceName@tempSerial,___lwdiv@dividend
 27542  003D64  C07F  F061         	movff	setDeviceName@tempSerial+1,___lwdiv@dividend+1
 27543  003D68  0E03               	movlw	3
 27544  003D6A  0100               	movlb	0	; () banked
 27545  003D6C  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 27546  003D6E  0EE8               	movlw	232
 27547  003D70  6F62               	movwf	___lwdiv@divisor& (0+255),b
 27548  003D72  EC23  F031         	call	___lwdiv	;wreg free
 27549  003D76  0100               	movlb	0	; () banked
 27550  003D78  5160               	movf	?___lwdiv& (0+255),w,b
 27551  003D7A  0F30               	addlw	48
 27552  003D7C  0100               	movlb	0	; () banked
 27553  003D7E  6F77               	movwf	(setDeviceName@txreg+15)& (0+255),b
 27554                           
 27555                           ; BSR set to: 0
 27556                           ;bluetooth.c: 224: tempSerial -= (txreg[15] - 48)*1000;
 27557  003D80  0ED0               	movlw	208
 27558  003D82  0100               	movlb	0	; () banked
 27559  003D84  2577               	addwf	(setDeviceName@txreg+15)& (0+255),w,b
 27560  003D86  0100               	movlb	0	; () banked
 27561  003D88  6F60               	movwf	___wmul@multiplier& (0+255),b
 27562  003D8A  0100               	movlb	0	; () banked
 27563  003D8C  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 27564  003D8E  0EFF               	movlw	255
 27565  003D90  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
 27566  003D92  0E03               	movlw	3
 27567  003D94  0100               	movlb	0	; () banked
 27568  003D96  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27569  003D98  0EE8               	movlw	232
 27570  003D9A  6F62               	movwf	___wmul@multiplicand& (0+255),b
 27571  003D9C  ECB3  F038         	call	___wmul	;wreg free
 27572  003DA0  0100               	movlb	0	; () banked
 27573  003DA2  5160               	movf	?___wmul& (0+255),w,b
 27574  003DA4  0100               	movlb	0	; () banked
 27575  003DA6  5F7E               	subwf	setDeviceName@tempSerial& (0+255),f,b
 27576  003DA8  0100               	movlb	0	; () banked
 27577  003DAA  5161               	movf	(?___wmul+1)& (0+255),w,b
 27578  003DAC  0100               	movlb	0	; () banked
 27579  003DAE  5B7F               	subwfb	(setDeviceName@tempSerial+1)& (0+255),f,b
 27580                           
 27581                           ; BSR set to: 0
 27582                           ;bluetooth.c: 225: txreg[16] = tempSerial/100 + 48;
 27583  003DB0  C07E  F060         	movff	setDeviceName@tempSerial,___lwdiv@dividend
 27584  003DB4  C07F  F061         	movff	setDeviceName@tempSerial+1,___lwdiv@dividend+1
 27585  003DB8  0E00               	movlw	0
 27586  003DBA  0100               	movlb	0	; () banked
 27587  003DBC  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 27588  003DBE  0E64               	movlw	100
 27589  003DC0  6F62               	movwf	___lwdiv@divisor& (0+255),b
 27590  003DC2  EC23  F031         	call	___lwdiv	;wreg free
 27591  003DC6  0100               	movlb	0	; () banked
 27592  003DC8  5160               	movf	?___lwdiv& (0+255),w,b
 27593  003DCA  0F30               	addlw	48
 27594  003DCC  0100               	movlb	0	; () banked
 27595  003DCE  6F78               	movwf	(setDeviceName@txreg+16)& (0+255),b
 27596                           
 27597                           ; BSR set to: 0
 27598                           ;bluetooth.c: 226: tempSerial -= (txreg[16] - 48)*100;
 27599  003DD0  0ED0               	movlw	208
 27600  003DD2  0100               	movlb	0	; () banked
 27601  003DD4  2578               	addwf	(setDeviceName@txreg+16)& (0+255),w,b
 27602  003DD6  0100               	movlb	0	; () banked
 27603  003DD8  6F60               	movwf	___wmul@multiplier& (0+255),b
 27604  003DDA  0100               	movlb	0	; () banked
 27605  003DDC  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 27606  003DDE  0EFF               	movlw	255
 27607  003DE0  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
 27608  003DE2  0E00               	movlw	0
 27609  003DE4  0100               	movlb	0	; () banked
 27610  003DE6  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27611  003DE8  0E64               	movlw	100
 27612  003DEA  6F62               	movwf	___wmul@multiplicand& (0+255),b
 27613  003DEC  ECB3  F038         	call	___wmul	;wreg free
 27614  003DF0  0100               	movlb	0	; () banked
 27615  003DF2  5160               	movf	?___wmul& (0+255),w,b
 27616  003DF4  0100               	movlb	0	; () banked
 27617  003DF6  5F7E               	subwf	setDeviceName@tempSerial& (0+255),f,b
 27618  003DF8  0100               	movlb	0	; () banked
 27619  003DFA  5161               	movf	(?___wmul+1)& (0+255),w,b
 27620  003DFC  0100               	movlb	0	; () banked
 27621  003DFE  5B7F               	subwfb	(setDeviceName@tempSerial+1)& (0+255),f,b
 27622                           
 27623                           ; BSR set to: 0
 27624                           ;bluetooth.c: 227: txreg[17] = tempSerial/10 + 48;
 27625  003E00  C07E  F060         	movff	setDeviceName@tempSerial,___lwdiv@dividend
 27626  003E04  C07F  F061         	movff	setDeviceName@tempSerial+1,___lwdiv@dividend+1
 27627  003E08  0E00               	movlw	0
 27628  003E0A  0100               	movlb	0	; () banked
 27629  003E0C  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 27630  003E0E  0E0A               	movlw	10
 27631  003E10  6F62               	movwf	___lwdiv@divisor& (0+255),b
 27632  003E12  EC23  F031         	call	___lwdiv	;wreg free
 27633  003E16  0100               	movlb	0	; () banked
 27634  003E18  5160               	movf	?___lwdiv& (0+255),w,b
 27635  003E1A  0F30               	addlw	48
 27636  003E1C  0100               	movlb	0	; () banked
 27637  003E1E  6F79               	movwf	(setDeviceName@txreg+17)& (0+255),b
 27638                           
 27639                           ; BSR set to: 0
 27640                           ;bluetooth.c: 228: tempSerial -= (txreg[17] - 48)*10;
 27641  003E20  0ED0               	movlw	208
 27642  003E22  0100               	movlb	0	; () banked
 27643  003E24  2579               	addwf	(setDeviceName@txreg+17)& (0+255),w,b
 27644  003E26  0100               	movlb	0	; () banked
 27645  003E28  6F60               	movwf	___wmul@multiplier& (0+255),b
 27646  003E2A  0100               	movlb	0	; () banked
 27647  003E2C  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 27648  003E2E  0EFF               	movlw	255
 27649  003E30  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
 27650  003E32  0E00               	movlw	0
 27651  003E34  0100               	movlb	0	; () banked
 27652  003E36  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27653  003E38  0E0A               	movlw	10
 27654  003E3A  6F62               	movwf	___wmul@multiplicand& (0+255),b
 27655  003E3C  ECB3  F038         	call	___wmul	;wreg free
 27656  003E40  0100               	movlb	0	; () banked
 27657  003E42  5160               	movf	?___wmul& (0+255),w,b
 27658  003E44  0100               	movlb	0	; () banked
 27659  003E46  5F7E               	subwf	setDeviceName@tempSerial& (0+255),f,b
 27660  003E48  0100               	movlb	0	; () banked
 27661  003E4A  5161               	movf	(?___wmul+1)& (0+255),w,b
 27662  003E4C  0100               	movlb	0	; () banked
 27663  003E4E  5B7F               	subwfb	(setDeviceName@tempSerial+1)& (0+255),f,b
 27664                           
 27665                           ; BSR set to: 0
 27666                           ;bluetooth.c: 229: txreg[18] = tempSerial + 48;
 27667  003E50  0100               	movlb	0	; () banked
 27668  003E52  517E               	movf	setDeviceName@tempSerial& (0+255),w,b
 27669  003E54  0F30               	addlw	48
 27670  003E56  0100               	movlb	0	; () banked
 27671  003E58  6F7A               	movwf	(setDeviceName@txreg+18)& (0+255),b
 27672                           
 27673                           ; BSR set to: 0
 27674                           ;bluetooth.c: 230: bluetoothStatus.dataReceived = 0;
 27675  003E5A  0100               	movlb	0	; () banked
 27676  003E5C  95C2               	bcf	_bluetoothStatus& (0+255),2,b
 27677                           
 27678                           ; BSR set to: 0
 27679                           ;bluetooth.c: 231: writeEUSART(txreg, sizeof(txreg)/sizeof(txreg[0]));
 27680  003E5E  0E68               	movlw	low setDeviceName@txreg
 27681  003E60  0100               	movlb	0	; () banked
 27682  003E62  6F60               	movwf	writeEUSART@data& (0+255),b
 27683  003E64  0E00               	movlw	high setDeviceName@txreg
 27684  003E66  0100               	movlb	0	; () banked
 27685  003E68  6F61               	movwf	(writeEUSART@data+1)& (0+255),b
 27686  003E6A  0E16               	movlw	22
 27687  003E6C  0100               	movlb	0	; () banked
 27688  003E6E  6F62               	movwf	writeEUSART@size& (0+255),b
 27689  003E70  EC53  F033         	call	_writeEUSART	;wreg free
 27690  003E74  0012               	return		;funcret
 27691  003E76                     __end_of_setDeviceName:
 27692                           	opt stack 0
 27693                           tblptru	equ	0xFF8
 27694                           tblptrh	equ	0xFF7
 27695                           tblptrl	equ	0xFF6
 27696                           tablat	equ	0xFF5
 27697                           prodh	equ	0xFF4
 27698                           prodl	equ	0xFF3
 27699                           intcon	equ	0xFF2
 27700                           postinc0	equ	0xFEE
 27701                           wreg	equ	0xFE8
 27702                           indf1	equ	0xFE7
 27703                           postinc1	equ	0xFE6
 27704                           postdec1	equ	0xFE5
 27705                           plusw1	equ	0xFE3
 27706                           fsr1h	equ	0xFE2
 27707                           fsr1l	equ	0xFE1
 27708                           indf2	equ	0xFDF
 27709                           postinc2	equ	0xFDE
 27710                           postdec2	equ	0xFDD
 27711                           plusw2	equ	0xFDB
 27712                           fsr2h	equ	0xFDA
 27713                           fsr2l	equ	0xFD9
 27714                           status	equ	0xFD8
 27715                           
 27716 ;; *************** function _writeEUSART *****************
 27717 ;; Defined at:
 27718 ;;		line 93 in file "bluetooth.c"
 27719 ;; Parameters:    Size  Location     Type
 27720 ;;  data            2    0[BANK0 ] PTR unsigned char 
 27721 ;;		 -> setBaudRate@txreg(11), setDeviceName@txreg(22), setSlaveMode@txreg(11), sendAtCommand@txreg(5), 
 27722 ;;		 -> sendPacket@txReg(11), 
 27723 ;;  size            1    2[BANK0 ] unsigned char 
 27724 ;; Auto vars:     Size  Location     Type
 27725 ;;  i               2    6[BANK0 ] int 
 27726 ;; Return value:  Size  Location     Type
 27727 ;;                  1    wreg      void 
 27728 ;; Registers used:
 27729 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27730 ;; Tracked objects:
 27731 ;;		On entry : 0/0
 27732 ;;		On exit  : 0/0
 27733 ;;		Unchanged: 0/0
 27734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27735 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27736 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27737 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27738 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27739 ;;Total ram usage:        8 bytes
 27740 ;; Hardware stack levels used:    1
 27741 ;; Hardware stack levels required when called:    8
 27742 ;; This function calls:
 27743 ;;		Nothing
 27744 ;; This function is called by:
 27745 ;;		_sendPacket
 27746 ;;		_setSlaveMode
 27747 ;;		_setDeviceName
 27748 ;;		_sendAtCommand
 27749 ;;		_setBaudRate
 27750 ;; This function uses a non-reentrant model
 27751 ;;
 27752                           
 27753                           	psect	text142
 27754  0066A6                     __ptext142:
 27755                           	opt stack 0
 27756  0066A6                     _writeEUSART:
 27757                           	opt stack 18
 27758                           
 27759                           ;bluetooth.c: 94: TX3STAbits.TXEN = 1;
 27760                           
 27761                           ;incstack = 0
 27762  0066A6  010E               	movlb	14	; () banked
 27763  0066A8  8BEF               	bsf	239,5,b	;volatile
 27764                           
 27765                           ; BSR set to: 14
 27766                           ;bluetooth.c: 95: for(int i = 0; i < size; i++) {
 27767  0066AA  0E00               	movlw	0
 27768  0066AC  0100               	movlb	0	; () banked
 27769  0066AE  6F67               	movwf	(writeEUSART@i+1)& (0+255),b
 27770  0066B0  0E00               	movlw	0
 27771  0066B2  6F66               	movwf	writeEUSART@i& (0+255),b
 27772  0066B4  D010               	goto	l13092
 27773  0066B6                     l2609:
 27774  0066B6  010E               	movlb	14	; () banked
 27775  0066B8  A3EF               	btfss	239,1,b	;volatile
 27776  0066BA  D7FD               	goto	l2609
 27777                           
 27778                           ; BSR set to: 14
 27779                           ;bluetooth.c: 97: TX3REG = *data;
 27780                           
 27781                           ; BSR set to: 14
 27782  0066BC  C060  FFD9         	movff	writeEUSART@data,fsr2l
 27783  0066C0  C061  FFDA         	movff	writeEUSART@data+1,fsr2h
 27784  0066C4  50DF               	movf	indf2,w,c
 27785  0066C6  010E               	movlb	14	; () banked
 27786  0066C8  6FEB               	movwf	235,b	;volatile
 27787                           
 27788                           ; BSR set to: 14
 27789                           ;bluetooth.c: 98: data++;
 27790  0066CA  0100               	movlb	0	; () banked
 27791  0066CC  4B60               	infsnz	writeEUSART@data& (0+255),f,b
 27792  0066CE  2B61               	incf	(writeEUSART@data+1)& (0+255),f,b
 27793                           
 27794                           ; BSR set to: 0
 27795  0066D0  0100               	movlb	0	; () banked
 27796  0066D2  4B66               	infsnz	writeEUSART@i& (0+255),f,b
 27797  0066D4  2B67               	incf	(writeEUSART@i+1)& (0+255),f,b
 27798  0066D6                     l13092:
 27799                           
 27800                           ; BSR set to: 0
 27801  0066D6  0100               	movlb	0	; () banked
 27802  0066D8  5162               	movf	writeEUSART@size& (0+255),w,b
 27803  0066DA  0100               	movlb	0	; () banked
 27804  0066DC  6F63               	movwf	??_writeEUSART& (0+255),b
 27805  0066DE  6B64               	clrf	(??_writeEUSART+1)& (0+255),b
 27806  0066E0  0100               	movlb	0	; () banked
 27807  0066E2  5163               	movf	??_writeEUSART& (0+255),w,b
 27808  0066E4  0100               	movlb	0	; () banked
 27809  0066E6  5D66               	subwf	writeEUSART@i& (0+255),w,b
 27810  0066E8  0100               	movlb	0	; () banked
 27811  0066EA  5167               	movf	(writeEUSART@i+1)& (0+255),w,b
 27812  0066EC  0A80               	xorlw	128
 27813  0066EE  0100               	movlb	0	; () banked
 27814  0066F0  6F65               	movwf	(??_writeEUSART+2)& (0+255),b
 27815  0066F2  0100               	movlb	0	; () banked
 27816  0066F4  5164               	movf	(??_writeEUSART+1)& (0+255),w,b
 27817  0066F6  0A80               	xorlw	128
 27818  0066F8  0100               	movlb	0	; () banked
 27819  0066FA  5965               	subwfb	(??_writeEUSART+2)& (0+255),w,b
 27820  0066FC  A0D8               	btfss	status,0,c
 27821  0066FE  D7DB               	goto	l2609
 27822  006700                     l2613:
 27823  006700  010E               	movlb	14	; () banked
 27824  006702  A3EF               	btfss	239,1,b	;volatile
 27825  006704  D7FD               	goto	l2613
 27826                           
 27827                           ; BSR set to: 14
 27828                           ;bluetooth.c: 101: TX3STAbits.TXEN = 0;
 27829  006706  010E               	movlb	14	; () banked
 27830  006708  9BEF               	bcf	239,5,b	;volatile
 27831                           
 27832                           ; BSR set to: 14
 27833  00670A  0012               	return		;funcret
 27834  00670C                     __end_of_writeEUSART:
 27835                           	opt stack 0
 27836                           tblptru	equ	0xFF8
 27837                           tblptrh	equ	0xFF7
 27838                           tblptrl	equ	0xFF6
 27839                           tablat	equ	0xFF5
 27840                           prodh	equ	0xFF4
 27841                           prodl	equ	0xFF3
 27842                           intcon	equ	0xFF2
 27843                           postinc0	equ	0xFEE
 27844                           wreg	equ	0xFE8
 27845                           indf1	equ	0xFE7
 27846                           postinc1	equ	0xFE6
 27847                           postdec1	equ	0xFE5
 27848                           plusw1	equ	0xFE3
 27849                           fsr1h	equ	0xFE2
 27850                           fsr1l	equ	0xFE1
 27851                           indf2	equ	0xFDF
 27852                           postinc2	equ	0xFDE
 27853                           postdec2	equ	0xFDD
 27854                           plusw2	equ	0xFDB
 27855                           fsr2h	equ	0xFDA
 27856                           fsr2l	equ	0xFD9
 27857                           status	equ	0xFD8
 27858                           
 27859 ;; *************** function ___lwdiv *****************
 27860 ;; Defined at:
 27861 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
 27862 ;; Parameters:    Size  Location     Type
 27863 ;;  dividend        2    0[BANK0 ] unsigned int 
 27864 ;;  divisor         2    2[BANK0 ] unsigned int 
 27865 ;; Auto vars:     Size  Location     Type
 27866 ;;  quotient        2    5[BANK0 ] unsigned int 
 27867 ;;  counter         1    4[BANK0 ] unsigned char 
 27868 ;; Return value:  Size  Location     Type
 27869 ;;                  2    0[BANK0 ] unsigned int 
 27870 ;; Registers used:
 27871 ;;		wreg, status,2, status,0
 27872 ;; Tracked objects:
 27873 ;;		On entry : 0/0
 27874 ;;		On exit  : 0/0
 27875 ;;		Unchanged: 0/0
 27876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27877 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27878 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27880 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27881 ;;Total ram usage:        7 bytes
 27882 ;; Hardware stack levels used:    1
 27883 ;; Hardware stack levels required when called:    8
 27884 ;; This function calls:
 27885 ;;		Nothing
 27886 ;; This function is called by:
 27887 ;;		_setDeviceName
 27888 ;; This function uses a non-reentrant model
 27889 ;;
 27890                           
 27891                           	psect	text143
 27892  006246                     __ptext143:
 27893                           	opt stack 0
 27894  006246                     ___lwdiv:
 27895                           	opt stack 17
 27896                           
 27897                           ; BSR set to: 14
 27898                           ;incstack = 0
 27899  006246  0E00               	movlw	0
 27900  006248  0100               	movlb	0	; () banked
 27901  00624A  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 27902  00624C  0E00               	movlw	0
 27903  00624E  6F65               	movwf	___lwdiv@quotient& (0+255),b
 27904                           
 27905                           ; BSR set to: 0
 27906  006250  0100               	movlb	0	; () banked
 27907  006252  5162               	movf	___lwdiv@divisor& (0+255),w,b
 27908  006254  0100               	movlb	0	; () banked
 27909  006256  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 27910  006258  B4D8               	btfsc	status,2,c
 27911  00625A  D02C               	goto	l3257
 27912                           
 27913                           ; BSR set to: 0
 27914  00625C  0E01               	movlw	1
 27915  00625E  0100               	movlb	0	; () banked
 27916  006260  6F64               	movwf	___lwdiv@counter& (0+255),b
 27917  006262  D006               	goto	l13148
 27918  006264                     l13146:
 27919                           
 27920                           ; BSR set to: 0
 27921  006264  0100               	movlb	0	; () banked
 27922  006266  90D8               	bcf	status,0,c
 27923  006268  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 27924  00626A  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 27925  00626C  0100               	movlb	0	; () banked
 27926  00626E  2B64               	incf	___lwdiv@counter& (0+255),f,b
 27927  006270                     l13148:
 27928                           
 27929                           ; BSR set to: 0
 27930  006270  0100               	movlb	0	; () banked
 27931  006272  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 27932  006274  D7F7               	goto	l13146
 27933  006276                     l13150:
 27934                           
 27935                           ; BSR set to: 0
 27936  006276  0100               	movlb	0	; () banked
 27937  006278  90D8               	bcf	status,0,c
 27938  00627A  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 27939  00627C  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 27940                           
 27941                           ; BSR set to: 0
 27942  00627E  0100               	movlb	0	; () banked
 27943  006280  5162               	movf	___lwdiv@divisor& (0+255),w,b
 27944  006282  0100               	movlb	0	; () banked
 27945  006284  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 27946  006286  0100               	movlb	0	; () banked
 27947  006288  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 27948  00628A  0100               	movlb	0	; () banked
 27949  00628C  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 27950  00628E  A0D8               	btfss	status,0,c
 27951  006290  D00A               	goto	l13158
 27952                           
 27953                           ; BSR set to: 0
 27954  006292  0100               	movlb	0	; () banked
 27955  006294  5162               	movf	___lwdiv@divisor& (0+255),w,b
 27956  006296  0100               	movlb	0	; () banked
 27957  006298  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 27958  00629A  0100               	movlb	0	; () banked
 27959  00629C  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 27960  00629E  0100               	movlb	0	; () banked
 27961  0062A0  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 27962                           
 27963                           ; BSR set to: 0
 27964  0062A2  0100               	movlb	0	; () banked
 27965  0062A4  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 27966  0062A6                     l13158:
 27967                           
 27968                           ; BSR set to: 0
 27969  0062A6  0100               	movlb	0	; () banked
 27970  0062A8  90D8               	bcf	status,0,c
 27971  0062AA  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 27972  0062AC  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 27973                           
 27974                           ; BSR set to: 0
 27975  0062AE  0100               	movlb	0	; () banked
 27976  0062B0  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 27977  0062B2  D7E1               	goto	l13150
 27978  0062B4                     l3257:
 27979                           
 27980                           ; BSR set to: 0
 27981  0062B4  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 27982  0062B8  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 27983                           
 27984                           ; BSR set to: 0
 27985  0062BC  0012               	return		;funcret
 27986  0062BE                     __end_of___lwdiv:
 27987                           	opt stack 0
 27988                           tblptru	equ	0xFF8
 27989                           tblptrh	equ	0xFF7
 27990                           tblptrl	equ	0xFF6
 27991                           tablat	equ	0xFF5
 27992                           prodh	equ	0xFF4
 27993                           prodl	equ	0xFF3
 27994                           intcon	equ	0xFF2
 27995                           postinc0	equ	0xFEE
 27996                           wreg	equ	0xFE8
 27997                           indf1	equ	0xFE7
 27998                           postinc1	equ	0xFE6
 27999                           postdec1	equ	0xFE5
 28000                           plusw1	equ	0xFE3
 28001                           fsr1h	equ	0xFE2
 28002                           fsr1l	equ	0xFE1
 28003                           indf2	equ	0xFDF
 28004                           postinc2	equ	0xFDE
 28005                           postdec2	equ	0xFDD
 28006                           plusw2	equ	0xFDB
 28007                           fsr2h	equ	0xFDA
 28008                           fsr2l	equ	0xFD9
 28009                           status	equ	0xFD8
 28010                           
 28011 ;; *************** function _resetBluetooth *****************
 28012 ;; Defined at:
 28013 ;;		line 515 in file "bluetooth.c"
 28014 ;; Parameters:    Size  Location     Type
 28015 ;;		None
 28016 ;; Auto vars:     Size  Location     Type
 28017 ;;		None
 28018 ;; Return value:  Size  Location     Type
 28019 ;;                  1    wreg      void 
 28020 ;; Registers used:
 28021 ;;		wreg, status,2, status,0, cstack
 28022 ;; Tracked objects:
 28023 ;;		On entry : 0/0
 28024 ;;		On exit  : 0/0
 28025 ;;		Unchanged: 0/0
 28026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28031 ;;Total ram usage:        0 bytes
 28032 ;; Hardware stack levels used:    1
 28033 ;; Hardware stack levels required when called:    9
 28034 ;; This function calls:
 28035 ;;		__delay_us
 28036 ;; This function is called by:
 28037 ;;		_bluetoothSetupSwitch
 28038 ;; This function uses a non-reentrant model
 28039 ;;
 28040                           
 28041                           	psect	text144
 28042  007906                     __ptext144:
 28043                           	opt stack 0
 28044  007906                     _resetBluetooth:
 28045                           	opt stack 17
 28046                           
 28047                           ;bluetooth.c: 516: LATDbits.LATD3 = 0;
 28048                           
 28049                           ; BSR set to: 0
 28050                           ;incstack = 0
 28051  007906  967C               	bcf	3964,3,c	;volatile
 28052                           
 28053                           ;bluetooth.c: 517: LATGbits.LATG0 = 0;
 28054  007908  907F               	bcf	3967,0,c	;volatile
 28055                           
 28056                           ;bluetooth.c: 518: _delay_us(100);
 28057  00790A  0E64               	movlw	100
 28058  00790C  EC37  F03B         	call	__delay_us
 28059                           
 28060                           ;bluetooth.c: 519: LATGbits.LATG0 = 1;
 28061  007910  807F               	bsf	3967,0,c	;volatile
 28062                           
 28063                           ;bluetooth.c: 520: LATDbits.LATD3 = 1;
 28064  007912  867C               	bsf	3964,3,c	;volatile
 28065                           
 28066                           ;bluetooth.c: 521: _delay_us(100);
 28067  007914  0E64               	movlw	100
 28068  007916  EC37  F03B         	call	__delay_us
 28069                           
 28070                           ;bluetooth.c: 522: bluetoothStatus.dataReceived = 0;
 28071  00791A  0100               	movlb	0	; () banked
 28072  00791C  95C2               	bcf	_bluetoothStatus& (0+255),2,b
 28073                           
 28074                           ; BSR set to: 0
 28075  00791E  0012               	return		;funcret
 28076  007920                     __end_of_resetBluetooth:
 28077                           	opt stack 0
 28078                           tblptru	equ	0xFF8
 28079                           tblptrh	equ	0xFF7
 28080                           tblptrl	equ	0xFF6
 28081                           tablat	equ	0xFF5
 28082                           prodh	equ	0xFF4
 28083                           prodl	equ	0xFF3
 28084                           intcon	equ	0xFF2
 28085                           postinc0	equ	0xFEE
 28086                           wreg	equ	0xFE8
 28087                           indf1	equ	0xFE7
 28088                           postinc1	equ	0xFE6
 28089                           postdec1	equ	0xFE5
 28090                           plusw1	equ	0xFE3
 28091                           fsr1h	equ	0xFE2
 28092                           fsr1l	equ	0xFE1
 28093                           indf2	equ	0xFDF
 28094                           postinc2	equ	0xFDE
 28095                           postdec2	equ	0xFDD
 28096                           plusw2	equ	0xFDB
 28097                           fsr2h	equ	0xFDA
 28098                           fsr2l	equ	0xFD9
 28099                           status	equ	0xFD8
 28100                           
 28101 ;; *************** function __delay_us *****************
 28102 ;; Defined at:
 28103 ;;		line 125 in file "peripherals.c"
 28104 ;; Parameters:    Size  Location     Type
 28105 ;;  us              1    wreg     unsigned char 
 28106 ;; Auto vars:     Size  Location     Type
 28107 ;;  us              1    0[BANK0 ] unsigned char 
 28108 ;; Return value:  Size  Location     Type
 28109 ;;                  1    wreg      void 
 28110 ;; Registers used:
 28111 ;;		wreg, status,2, status,0
 28112 ;; Tracked objects:
 28113 ;;		On entry : 0/0
 28114 ;;		On exit  : 0/0
 28115 ;;		Unchanged: 0/0
 28116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28118 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28120 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28121 ;;Total ram usage:        1 bytes
 28122 ;; Hardware stack levels used:    1
 28123 ;; Hardware stack levels required when called:    8
 28124 ;; This function calls:
 28125 ;;		Nothing
 28126 ;; This function is called by:
 28127 ;;		__delay_ms
 28128 ;;		_readBatteryADC
 28129 ;;		_readBatteryADCSetup
 28130 ;;		_readS1StateADC
 28131 ;;		_readEDDADC
 28132 ;;		_readEDDADCSetup
 28133 ;;		_readS1StateADCSetup
 28134 ;;		_readCableADC
 28135 ;;		_readEarthADCSetup
 28136 ;;		_readEarthADC
 28137 ;;		_readCableADCSetup
 28138 ;;		_resetBluetooth
 28139 ;;		_turnOn24V
 28140 ;; This function uses a non-reentrant model
 28141 ;;
 28142                           
 28143                           	psect	text145
 28144  00766E                     __ptext145:
 28145                           	opt stack 0
 28146  00766E                     __delay_us:
 28147                           	opt stack 17
 28148                           
 28149                           ; BSR set to: 0
 28150                           ;incstack = 0
 28151                           ;__delay_us@us stored from wreg
 28152  00766E  0100               	movlb	0	; () banked
 28153  007670  6F60               	movwf	__delay_us@us& (0+255),b
 28154                           
 28155                           ;peripherals.c: 126: while(us-- > 0){
 28156  007672  D008               	goto	l12842
 28157  007674                     l336:
 28158                           
 28159                           ; BSR set to: 0
 28160                           ;peripherals.c: 127: __nop();
 28161  007674  F000               	nop	
 28162                           
 28163                           ;peripherals.c: 128: __nop();
 28164  007676  F000               	nop	
 28165                           
 28166                           ;peripherals.c: 129: __nop();
 28167  007678  F000               	nop	
 28168                           
 28169                           ;peripherals.c: 130: __nop();
 28170  00767A  F000               	nop	
 28171                           
 28172                           ;peripherals.c: 131: __nop();
 28173  00767C  F000               	nop	
 28174                           
 28175                           ;peripherals.c: 132: __nop();
 28176  00767E  F000               	nop	
 28177                           
 28178                           ;peripherals.c: 133: __nop();
 28179  007680  F000               	nop	
 28180                           
 28181                           ;peripherals.c: 134: __nop();
 28182  007682  F000               	nop	
 28183  007684                     l12842:
 28184  007684  0100               	movlb	0	; () banked
 28185  007686  0760               	decf	__delay_us@us& (0+255),f,b
 28186  007688  0100               	movlb	0	; () banked
 28187  00768A  2960               	incf	__delay_us@us& (0+255),w,b
 28188  00768C  B4D8               	btfsc	status,2,c
 28189  00768E  0012               	return	
 28190  007690  D7F1               	goto	l336
 28191  007692                     __end_of__delay_us:
 28192                           	opt stack 0
 28193                           tblptru	equ	0xFF8
 28194                           tblptrh	equ	0xFF7
 28195                           tblptrl	equ	0xFF6
 28196                           tablat	equ	0xFF5
 28197                           prodh	equ	0xFF4
 28198                           prodl	equ	0xFF3
 28199                           intcon	equ	0xFF2
 28200                           postinc0	equ	0xFEE
 28201                           wreg	equ	0xFE8
 28202                           indf1	equ	0xFE7
 28203                           postinc1	equ	0xFE6
 28204                           postdec1	equ	0xFE5
 28205                           plusw1	equ	0xFE3
 28206                           fsr1h	equ	0xFE2
 28207                           fsr1l	equ	0xFE1
 28208                           indf2	equ	0xFDF
 28209                           postinc2	equ	0xFDE
 28210                           postdec2	equ	0xFDD
 28211                           plusw2	equ	0xFDB
 28212                           fsr2h	equ	0xFDA
 28213                           fsr2l	equ	0xFD9
 28214                           status	equ	0xFD8
 28215                           
 28216 ;; *************** function _addDataToOutgoingQueue *****************
 28217 ;; Defined at:
 28218 ;;		line 39 in file "packetQueueHandler.c"
 28219 ;; Parameters:    Size  Location     Type
 28220 ;;  data            2    6[BANK0 ] PTR unsigned char 
 28221 ;;		 -> ABB_1.det_arrays(909), ABB_1(917), 
 28222 ;;  command         1    8[BANK0 ] unsigned char 
 28223 ;;  size            2    9[BANK0 ] int 
 28224 ;; Auto vars:     Size  Location     Type
 28225 ;;  length_track    1   16[BANK0 ] unsigned char 
 28226 ;;  length          1   15[BANK0 ] unsigned char 
 28227 ;; Return value:  Size  Location     Type
 28228 ;;                  1    wreg      void 
 28229 ;; Registers used:
 28230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28231 ;; Tracked objects:
 28232 ;;		On entry : 0/0
 28233 ;;		On exit  : 0/0
 28234 ;;		Unchanged: 0/0
 28235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28236 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28237 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28238 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28239 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28240 ;;Total ram usage:       11 bytes
 28241 ;; Hardware stack levels used:    1
 28242 ;; Hardware stack levels required when called:    9
 28243 ;; This function calls:
 28244 ;;		___wmul
 28245 ;; This function is called by:
 28246 ;;		_handleIncomingQueuePacket
 28247 ;;		_fire
 28248 ;;		_bluetooth
 28249 ;;		_firePic
 28250 ;; This function uses a non-reentrant model
 28251 ;;
 28252                           
 28253                           	psect	text146
 28254  002D42                     __ptext146:
 28255                           	opt stack 0
 28256  002D42                     _addDataToOutgoingQueue:
 28257                           	opt stack 19
 28258                           
 28259                           ;packetQueueHandler.c: 40: unsigned char length_tracker = 0;
 28260                           
 28261                           ; BSR set to: 0
 28262                           ;incstack = 0
 28263  002D42  0E00               	movlw	0
 28264  002D44  0100               	movlb	0	; () banked
 28265  002D46  6F70               	movwf	addDataToOutgoingQueue@length_tracker& (0+255),b
 28266                           
 28267                           ;packetQueueHandler.c: 41: unsigned char length = 0;
 28268  002D48  0E00               	movlw	0
 28269  002D4A  0100               	movlb	0	; () banked
 28270  002D4C  6F6F               	movwf	addDataToOutgoingQueue@length& (0+255),b
 28271                           
 28272                           ; BSR set to: 0
 28273                           ;packetQueueHandler.c: 43: if(ABB_1.destination == 0xFFFF)
 28274  002D4E  EE27  F051         	lfsr	2,_ABB_1+913
 28275  002D52  28DE               	incf	postinc2,w,c
 28276  002D54  E103               	bnz	l13334
 28277  002D56  28DE               	incf	postinc2,w,c
 28278  002D58  B4D8               	btfsc	status,2,c
 28279  002D5A  0012               	return	
 28280  002D5C                     l13334:
 28281                           
 28282                           ; BSR set to: 0
 28283                           ;packetQueueHandler.c: 46: outgoingQueue.queue_store[outgoingQueue.queue_pointer].data =
      +                           data + size;
 28284  002D5C  0100               	movlb	0	; () banked
 28285  002D5E  5169               	movf	addDataToOutgoingQueue@size& (0+255),w,b
 28286  002D60  0100               	movlb	0	; () banked
 28287  002D62  2566               	addwf	addDataToOutgoingQueue@data& (0+255),w,b
 28288  002D64  0100               	movlb	0	; () banked
 28289  002D66  6F6B               	movwf	??_addDataToOutgoingQueue& (0+255),b
 28290  002D68  0100               	movlb	0	; () banked
 28291  002D6A  516A               	movf	(addDataToOutgoingQueue@size+1)& (0+255),w,b
 28292  002D6C  0100               	movlb	0	; () banked
 28293  002D6E  2167               	addwfc	(addDataToOutgoingQueue@data+1)& (0+255),w,b
 28294  002D70  0100               	movlb	0	; () banked
 28295  002D72  6F6C               	movwf	(??_addDataToOutgoingQueue+1)& (0+255),b
 28296  002D74  D054               	goto	L22
 28297  002D76                     l13336:
 28298                           
 28299                           ; BSR set to: 1
 28300                           ;packetQueueHandler.c: 48: outgoingQueue.queue_store[outgoingQueue.queue_pointer].destin
      +                          ation = ABB_1.destination;
 28301  002D76  EE27  F051         	lfsr	2,_ABB_1+913
 28302  002D7A  0101               	movlb	1	; () banked
 28303  002D7C  5101               	movf	(_outgoingQueue+1)& (0+255),w,b
 28304  002D7E  0D07               	mullw	7
 28305  002D80  0E03               	movlw	3
 28306  002D82  26F3               	addwf	prodl,f,c
 28307  002D84  0E00               	movlw	0
 28308  002D86  22F4               	addwfc	prodh,f,c
 28309  002D88  0E00               	movlw	low _outgoingQueue
 28310  002D8A  24F3               	addwf	prodl,w,c
 28311  002D8C  6EE1               	movwf	fsr1l,c
 28312  002D8E  0E01               	movlw	high _outgoingQueue
 28313  002D90  20F4               	addwfc	prodh,w,c
 28314  002D92  6EE2               	movwf	fsr1h,c
 28315  002D94  CFDE FFE6          	movff	postinc2,postinc1
 28316  002D98  CFDD FFE5          	movff	postdec2,postdec1
 28317                           
 28318                           ;packetQueueHandler.c: 50: while (length_tracker + 60*length < size*ABB_1.dets_length) {
 28319  002D9C  D061               	goto	l13364
 28320  002D9E                     l13338:
 28321                           
 28322                           ;packetQueueHandler.c: 51: length_tracker ++;
 28323  002D9E  0100               	movlb	0	; () banked
 28324  002DA0  2B70               	incf	addDataToOutgoingQueue@length_tracker& (0+255),f,b
 28325                           
 28326                           ; BSR set to: 0
 28327                           ;packetQueueHandler.c: 53: if ( length_tracker == 60 ){
 28328  002DA2  0E3C               	movlw	60
 28329  002DA4  0100               	movlb	0	; () banked
 28330  002DA6  1970               	xorwf	addDataToOutgoingQueue@length_tracker& (0+255),w,b
 28331  002DA8  A4D8               	btfss	status,2,c
 28332  002DAA  D05A               	goto	l13364
 28333                           
 28334                           ; BSR set to: 0
 28335                           ;packetQueueHandler.c: 54: outgoingQueue.queue_store[outgoingQueue.queue_pointer].data_l
      +                          ength = length_tracker;
 28336  002DAC  0101               	movlb	1	; () banked
 28337  002DAE  5101               	movf	(_outgoingQueue+1)& (0+255),w,b
 28338  002DB0  0D07               	mullw	7
 28339  002DB2  0E02               	movlw	2
 28340  002DB4  26F3               	addwf	prodl,f,c
 28341  002DB6  0E00               	movlw	0
 28342  002DB8  22F4               	addwfc	prodh,f,c
 28343  002DBA  0E00               	movlw	low _outgoingQueue
 28344  002DBC  24F3               	addwf	prodl,w,c
 28345  002DBE  6ED9               	movwf	fsr2l,c
 28346  002DC0  0E01               	movlw	high _outgoingQueue
 28347  002DC2  20F4               	addwfc	prodh,w,c
 28348  002DC4  6EDA               	movwf	fsr2h,c
 28349  002DC6  C070  FFDF         	movff	addDataToOutgoingQueue@length_tracker,indf2
 28350                           
 28351                           ; BSR set to: 1
 28352                           ;packetQueueHandler.c: 56: length_tracker = 0;
 28353  002DCA  0E00               	movlw	0
 28354  002DCC  0100               	movlb	0	; () banked
 28355  002DCE  6F70               	movwf	addDataToOutgoingQueue@length_tracker& (0+255),b
 28356                           
 28357                           ; BSR set to: 0
 28358                           ;packetQueueHandler.c: 57: length ++;
 28359  002DD0  0100               	movlb	0	; () banked
 28360  002DD2  2B6F               	incf	addDataToOutgoingQueue@length& (0+255),f,b
 28361                           
 28362                           ; BSR set to: 0
 28363                           ;packetQueueHandler.c: 58: outgoingQueue.queue_pointer++;
 28364  002DD4  0101               	movlb	1	; () banked
 28365  002DD6  2B01               	incf	(_outgoingQueue+1)& (0+255),f,b
 28366                           
 28367                           ; BSR set to: 1
 28368                           ;packetQueueHandler.c: 59: if(outgoingQueue.length < 20)
 28369  002DD8  0E14               	movlw	20
 28370  002DDA  0101               	movlb	1	; () banked
 28371  002DDC  6100               	cpfslt	_outgoingQueue& (0+255),b
 28372  002DDE  D002               	goto	l13354
 28373                           
 28374                           ; BSR set to: 1
 28375                           ;packetQueueHandler.c: 60: outgoingQueue.length++;
 28376  002DE0  0101               	movlb	1	; () banked
 28377  002DE2  2B00               	incf	_outgoingQueue& (0+255),f,b
 28378  002DE4                     l13354:
 28379                           
 28380                           ; BSR set to: 1
 28381                           ;packetQueueHandler.c: 61: if (outgoingQueue.queue_pointer == 20){
 28382  002DE4  0E14               	movlw	20
 28383  002DE6  0101               	movlb	1	; () banked
 28384  002DE8  1901               	xorwf	(_outgoingQueue+1)& (0+255),w,b
 28385  002DEA  A4D8               	btfss	status,2,c
 28386  002DEC  D003               	goto	l13358
 28387                           
 28388                           ; BSR set to: 1
 28389                           ;packetQueueHandler.c: 62: outgoingQueue.queue_pointer = 0;
 28390  002DEE  0E00               	movlw	0
 28391  002DF0  0101               	movlb	1	; () banked
 28392  002DF2  6F01               	movwf	(_outgoingQueue+1)& (0+255),b
 28393  002DF4                     l13358:
 28394                           
 28395                           ; BSR set to: 1
 28396                           ;packetQueueHandler.c: 63: }
 28397                           ;packetQueueHandler.c: 65: outgoingQueue.queue_store[outgoingQueue.queue_pointer].data =
      +                           data + 60*length + size;
 28398  002DF4  0100               	movlb	0	; () banked
 28399  002DF6  516F               	movf	addDataToOutgoingQueue@length& (0+255),w,b
 28400  002DF8  0D3C               	mullw	60
 28401  002DFA  C066  F06B         	movff	addDataToOutgoingQueue@data,??_addDataToOutgoingQueue
 28402  002DFE  C067  F06C         	movff	addDataToOutgoingQueue@data+1,??_addDataToOutgoingQueue+1
 28403  002E02  50F3               	movf	prodl,w,c
 28404  002E04  0100               	movlb	0	; () banked
 28405  002E06  276B               	addwf	??_addDataToOutgoingQueue& (0+255),f,b
 28406  002E08  50F4               	movf	prodh,w,c
 28407  002E0A  0100               	movlb	0	; () banked
 28408  002E0C  236C               	addwfc	(??_addDataToOutgoingQueue+1)& (0+255),f,b
 28409  002E0E  0100               	movlb	0	; () banked
 28410  002E10  5169               	movf	addDataToOutgoingQueue@size& (0+255),w,b
 28411  002E12  0100               	movlb	0	; () banked
 28412  002E14  276B               	addwf	??_addDataToOutgoingQueue& (0+255),f,b
 28413  002E16  0100               	movlb	0	; () banked
 28414  002E18  516A               	movf	(addDataToOutgoingQueue@size+1)& (0+255),w,b
 28415  002E1A  0100               	movlb	0	; () banked
 28416  002E1C  236C               	addwfc	(??_addDataToOutgoingQueue+1)& (0+255),f,b
 28417  002E1E                     L22:
 28418  002E1E  0101               	movlb	1	; () banked
 28419  002E20  5101               	movf	(_outgoingQueue+1)& (0+255),w,b
 28420  002E22  0D07               	mullw	7
 28421  002E24  0E07               	movlw	7
 28422  002E26  26F3               	addwf	prodl,f,c
 28423  002E28  0E00               	movlw	0
 28424  002E2A  22F4               	addwfc	prodh,f,c
 28425  002E2C  0E00               	movlw	low _outgoingQueue
 28426  002E2E  24F3               	addwf	prodl,w,c
 28427  002E30  6ED9               	movwf	fsr2l,c
 28428  002E32  0E01               	movlw	high _outgoingQueue
 28429  002E34  20F4               	addwfc	prodh,w,c
 28430  002E36  6EDA               	movwf	fsr2h,c
 28431  002E38  C06B  FFDE         	movff	??_addDataToOutgoingQueue,postinc2
 28432  002E3C  C06C  FFDD         	movff	??_addDataToOutgoingQueue+1,postdec2
 28433                           
 28434                           ; BSR set to: 1
 28435                           ;packetQueueHandler.c: 66: outgoingQueue.queue_store[outgoingQueue.queue_pointer].comman
      +                          d = command;
 28436  002E40  0101               	movlb	1	; () banked
 28437  002E42  5101               	movf	(_outgoingQueue+1)& (0+255),w,b
 28438  002E44  0D07               	mullw	7
 28439  002E46  0E06               	movlw	6
 28440  002E48  26F3               	addwf	prodl,f,c
 28441  002E4A  0E00               	movlw	0
 28442  002E4C  22F4               	addwfc	prodh,f,c
 28443  002E4E  0E00               	movlw	low _outgoingQueue
 28444  002E50  24F3               	addwf	prodl,w,c
 28445  002E52  6ED9               	movwf	fsr2l,c
 28446  002E54  0E01               	movlw	high _outgoingQueue
 28447  002E56  20F4               	addwfc	prodh,w,c
 28448  002E58  6EDA               	movwf	fsr2h,c
 28449  002E5A  C068  FFDF         	movff	addDataToOutgoingQueue@command,indf2
 28450  002E5E  D78B               	goto	l13336
 28451  002E60                     l13364:
 28452  002E60  C3C0  F06B         	movff	_ABB_1,??_addDataToOutgoingQueue
 28453  002E64  0100               	movlb	0	; () banked
 28454  002E66  516B               	movf	??_addDataToOutgoingQueue& (0+255),w,b
 28455  002E68  0100               	movlb	0	; () banked
 28456  002E6A  6F60               	movwf	___wmul@multiplier& (0+255),b
 28457  002E6C  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 28458  002E6E  C069  F062         	movff	addDataToOutgoingQueue@size,___wmul@multiplicand
 28459  002E72  C06A  F063         	movff	addDataToOutgoingQueue@size+1,___wmul@multiplicand+1
 28460  002E76  ECB3  F038         	call	___wmul	;wreg free
 28461  002E7A  0100               	movlb	0	; () banked
 28462  002E7C  516F               	movf	addDataToOutgoingQueue@length& (0+255),w,b
 28463  002E7E  0D3C               	mullw	60
 28464  002E80  0100               	movlb	0	; () banked
 28465  002E82  5170               	movf	addDataToOutgoingQueue@length_tracker& (0+255),w,b
 28466  002E84  0100               	movlb	0	; () banked
 28467  002E86  6F6C               	movwf	(??_addDataToOutgoingQueue+1)& (0+255),b
 28468  002E88  6B6D               	clrf	(??_addDataToOutgoingQueue+2)& (0+255),b
 28469  002E8A  50F3               	movf	prodl,w,c
 28470  002E8C  0100               	movlb	0	; () banked
 28471  002E8E  276C               	addwf	(??_addDataToOutgoingQueue+1)& (0+255),f,b
 28472  002E90  50F4               	movf	prodh,w,c
 28473  002E92  0100               	movlb	0	; () banked
 28474  002E94  236D               	addwfc	(??_addDataToOutgoingQueue+2)& (0+255),f,b
 28475  002E96  0100               	movlb	0	; () banked
 28476  002E98  5160               	movf	?___wmul& (0+255),w,b
 28477  002E9A  0100               	movlb	0	; () banked
 28478  002E9C  5D6C               	subwf	(??_addDataToOutgoingQueue+1)& (0+255),w,b
 28479  002E9E  0100               	movlb	0	; () banked
 28480  002EA0  516D               	movf	(??_addDataToOutgoingQueue+2)& (0+255),w,b
 28481  002EA2  0A80               	xorlw	128
 28482  002EA4  0100               	movlb	0	; () banked
 28483  002EA6  6F6E               	movwf	(??_addDataToOutgoingQueue+3)& (0+255),b
 28484  002EA8  0100               	movlb	0	; () banked
 28485  002EAA  5161               	movf	(?___wmul+1)& (0+255),w,b
 28486  002EAC  0A80               	xorlw	128
 28487  002EAE  0100               	movlb	0	; () banked
 28488  002EB0  596E               	subwfb	(??_addDataToOutgoingQueue+3)& (0+255),w,b
 28489  002EB2  A0D8               	btfss	status,0,c
 28490  002EB4  D774               	goto	l13338
 28491                           
 28492                           ; BSR set to: 0
 28493                           ;packetQueueHandler.c: 68: }
 28494                           ;packetQueueHandler.c: 69: }
 28495                           ;packetQueueHandler.c: 70: if(length_tracker != 0){
 28496                           
 28497                           ; BSR set to: 0
 28498  002EB6  0100               	movlb	0	; () banked
 28499  002EB8  5170               	movf	addDataToOutgoingQueue@length_tracker& (0+255),w,b
 28500  002EBA  0100               	movlb	0	; () banked
 28501  002EBC  B4D8               	btfsc	status,2,c
 28502  002EBE  0012               	return	
 28503                           
 28504                           ; BSR set to: 0
 28505                           ;packetQueueHandler.c: 71: outgoingQueue.queue_store[outgoingQueue.queue_pointer].data_l
      +                          ength = length_tracker;
 28506  002EC0  0101               	movlb	1	; () banked
 28507  002EC2  5101               	movf	(_outgoingQueue+1)& (0+255),w,b
 28508  002EC4  0D07               	mullw	7
 28509  002EC6  0E02               	movlw	2
 28510  002EC8  26F3               	addwf	prodl,f,c
 28511  002ECA  0E00               	movlw	0
 28512  002ECC  22F4               	addwfc	prodh,f,c
 28513  002ECE  0E00               	movlw	low _outgoingQueue
 28514  002ED0  24F3               	addwf	prodl,w,c
 28515  002ED2  6ED9               	movwf	fsr2l,c
 28516  002ED4  0E01               	movlw	high _outgoingQueue
 28517  002ED6  20F4               	addwfc	prodh,w,c
 28518  002ED8  6EDA               	movwf	fsr2h,c
 28519  002EDA  C070  FFDF         	movff	addDataToOutgoingQueue@length_tracker,indf2
 28520                           
 28521                           ; BSR set to: 1
 28522                           ;packetQueueHandler.c: 73: outgoingQueue.queue_pointer++;
 28523  002EDE  0101               	movlb	1	; () banked
 28524  002EE0  2B01               	incf	(_outgoingQueue+1)& (0+255),f,b
 28525                           
 28526                           ; BSR set to: 1
 28527                           ;packetQueueHandler.c: 74: if(outgoingQueue.length < 20)
 28528  002EE2  0E14               	movlw	20
 28529  002EE4  0101               	movlb	1	; () banked
 28530  002EE6  6100               	cpfslt	_outgoingQueue& (0+255),b
 28531  002EE8  D002               	goto	l13376
 28532                           
 28533                           ; BSR set to: 1
 28534                           ;packetQueueHandler.c: 75: outgoingQueue.length++;
 28535  002EEA  0101               	movlb	1	; () banked
 28536  002EEC  2B00               	incf	_outgoingQueue& (0+255),f,b
 28537  002EEE                     l13376:
 28538                           
 28539                           ; BSR set to: 1
 28540                           ;packetQueueHandler.c: 76: if (outgoingQueue.queue_pointer == 20){
 28541  002EEE  0E14               	movlw	20
 28542  002EF0  0101               	movlb	1	; () banked
 28543  002EF2  1901               	xorwf	(_outgoingQueue+1)& (0+255),w,b
 28544  002EF4  A4D8               	btfss	status,2,c
 28545  002EF6  0012               	return	
 28546                           
 28547                           ; BSR set to: 1
 28548                           ;packetQueueHandler.c: 77: outgoingQueue.queue_pointer = 0;
 28549  002EF8  0E00               	movlw	0
 28550  002EFA  0101               	movlb	1	; () banked
 28551  002EFC  6F01               	movwf	(_outgoingQueue+1)& (0+255),b
 28552                           
 28553                           ; BSR set to: 1
 28554                           
 28555                           ; BSR set to: 1
 28556  002EFE  0012               	return	
 28557  002F00                     __end_of_addDataToOutgoingQueue:
 28558                           	opt stack 0
 28559                           tblptru	equ	0xFF8
 28560                           tblptrh	equ	0xFF7
 28561                           tblptrl	equ	0xFF6
 28562                           tablat	equ	0xFF5
 28563                           prodh	equ	0xFF4
 28564                           prodl	equ	0xFF3
 28565                           intcon	equ	0xFF2
 28566                           postinc0	equ	0xFEE
 28567                           wreg	equ	0xFE8
 28568                           indf1	equ	0xFE7
 28569                           postinc1	equ	0xFE6
 28570                           postdec1	equ	0xFE5
 28571                           plusw1	equ	0xFE3
 28572                           fsr1h	equ	0xFE2
 28573                           fsr1l	equ	0xFE1
 28574                           indf2	equ	0xFDF
 28575                           postinc2	equ	0xFDE
 28576                           postdec2	equ	0xFDD
 28577                           plusw2	equ	0xFDB
 28578                           fsr2h	equ	0xFDA
 28579                           fsr2l	equ	0xFD9
 28580                           status	equ	0xFD8
 28581                           
 28582 ;; *************** function ___wmul *****************
 28583 ;; Defined at:
 28584 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
 28585 ;; Parameters:    Size  Location     Type
 28586 ;;  multiplier      2    0[BANK0 ] unsigned int 
 28587 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 28588 ;; Auto vars:     Size  Location     Type
 28589 ;;  product         2    4[BANK0 ] unsigned int 
 28590 ;; Return value:  Size  Location     Type
 28591 ;;                  2    0[BANK0 ] unsigned int 
 28592 ;; Registers used:
 28593 ;;		wreg, status,2, status,0, prodl, prodh
 28594 ;; Tracked objects:
 28595 ;;		On entry : 0/0
 28596 ;;		On exit  : 0/0
 28597 ;;		Unchanged: 0/0
 28598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28599 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28600 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28602 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28603 ;;Total ram usage:        6 bytes
 28604 ;; Hardware stack levels used:    1
 28605 ;; Hardware stack levels required when called:    8
 28606 ;; This function calls:
 28607 ;;		Nothing
 28608 ;; This function is called by:
 28609 ;;		_variance
 28610 ;;		_checkForExistingUID
 28611 ;;		_testMemory
 28612 ;;		_initialiseDetWindows
 28613 ;;		_initialiseDetMemory
 28614 ;;		_addDataToOutgoingQueue
 28615 ;;		_sleep
 28616 ;;		_setDeviceName
 28617 ;;		_power
 28618 ;;		_getIndexByUID
 28619 ;; This function uses a non-reentrant model
 28620 ;;
 28621                           
 28622                           	psect	text147
 28623  007166                     __ptext147:
 28624                           	opt stack 0
 28625  007166                     ___wmul:
 28626                           	opt stack 21
 28627                           
 28628                           ;incstack = 0
 28629  007166  0100               	movlb	0	; () banked
 28630  007168  5160               	movf	___wmul@multiplier& (0+255),w,b
 28631  00716A  0100               	movlb	0	; () banked
 28632  00716C  0362               	mulwf	___wmul@multiplicand& (0+255),b
 28633  00716E  CFF3 F064          	movff	prodl,___wmul@product
 28634  007172  CFF4 F065          	movff	prodh,___wmul@product+1
 28635  007176  0100               	movlb	0	; () banked
 28636  007178  5160               	movf	___wmul@multiplier& (0+255),w,b
 28637  00717A  0100               	movlb	0	; () banked
 28638  00717C  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 28639  00717E  50F3               	movf	prodl,w,c
 28640  007180  0100               	movlb	0	; () banked
 28641  007182  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 28642  007184  0100               	movlb	0	; () banked
 28643  007186  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 28644  007188  0100               	movlb	0	; () banked
 28645  00718A  0362               	mulwf	___wmul@multiplicand& (0+255),b
 28646  00718C  50F3               	movf	prodl,w,c
 28647  00718E  0100               	movlb	0	; () banked
 28648  007190  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 28649                           
 28650                           ; BSR set to: 0
 28651  007192  C064  F060         	movff	___wmul@product,?___wmul
 28652  007196  C065  F061         	movff	___wmul@product+1,?___wmul+1
 28653  00719A  0012               	return	
 28654  00719C                     __end_of___wmul:
 28655                           	opt stack 0
 28656                           tblptru	equ	0xFF8
 28657                           tblptrh	equ	0xFF7
 28658                           tblptrl	equ	0xFF6
 28659                           tablat	equ	0xFF5
 28660                           prodh	equ	0xFF4
 28661                           prodl	equ	0xFF3
 28662                           intcon	equ	0xFF2
 28663                           postinc0	equ	0xFEE
 28664                           wreg	equ	0xFE8
 28665                           indf1	equ	0xFE7
 28666                           postinc1	equ	0xFE6
 28667                           postdec1	equ	0xFE5
 28668                           plusw1	equ	0xFE3
 28669                           fsr1h	equ	0xFE2
 28670                           fsr1l	equ	0xFE1
 28671                           indf2	equ	0xFDF
 28672                           postinc2	equ	0xFDE
 28673                           postdec2	equ	0xFDD
 28674                           plusw2	equ	0xFDB
 28675                           fsr2h	equ	0xFDA
 28676                           fsr2l	equ	0xFD9
 28677                           status	equ	0xFD8
 28678                           
 28679 ;; *************** function _checkStatusBits *****************
 28680 ;; Defined at:
 28681 ;;		line 430 in file "main.c"
 28682 ;; Parameters:    Size  Location     Type
 28683 ;;		None
 28684 ;; Auto vars:     Size  Location     Type
 28685 ;;  status          2   10[BANK0 ] PTR unsigned short 
 28686 ;;		 -> ABB_1.info.statusBits(2), ABB_1.info(3), 
 28687 ;; Return value:  Size  Location     Type
 28688 ;;                  1    wreg      void 
 28689 ;; Registers used:
 28690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28691 ;; Tracked objects:
 28692 ;;		On entry : 0/0
 28693 ;;		On exit  : 0/0
 28694 ;;		Unchanged: 0/0
 28695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28697 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28698 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28699 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28700 ;;Total ram usage:        4 bytes
 28701 ;; Hardware stack levels used:    1
 28702 ;; Hardware stack levels required when called:    9
 28703 ;; This function calls:
 28704 ;;		_addPacketToOutgoingQueue
 28705 ;; This function is called by:
 28706 ;;		_device
 28707 ;; This function uses a non-reentrant model
 28708 ;;
 28709                           
 28710                           	psect	text148
 28711  006A70                     __ptext148:
 28712                           	opt stack 0
 28713  006A70                     _checkStatusBits:
 28714                           	opt stack 20
 28715                           
 28716                           ;main.c: 431: unsigned short *status;
 28717                           ;main.c: 432: status = &ABB_1.info.statusBits;
 28718                           
 28719                           ; BSR set to: 0
 28720                           ;incstack = 0
 28721  006A70  0EC1               	movlw	low (_ABB_1+1)
 28722  006A72  0100               	movlb	0	; () banked
 28723  006A74  6F6A               	movwf	checkStatusBits@status& (0+255),b
 28724  006A76  0E03               	movlw	high (_ABB_1+1)
 28725  006A78  0100               	movlb	0	; () banked
 28726  006A7A  6F6B               	movwf	(checkStatusBits@status+1)& (0+255),b
 28727                           
 28728                           ; BSR set to: 0
 28729                           ;main.c: 433: if(*status != previousStatus){
 28730  006A7C  C06A  FFD9         	movff	checkStatusBits@status,fsr2l
 28731  006A80  C06B  FFDA         	movff	checkStatusBits@status+1,fsr2h
 28732  006A84  0100               	movlb	0	; () banked
 28733  006A86  51BE               	movf	_previousStatus& (0+255),w,b
 28734  006A88  18DE               	xorwf	postinc2,w,c
 28735  006A8A  E105               	bnz	u11220
 28736  006A8C  0100               	movlb	0	; () banked
 28737  006A8E  51BF               	movf	(_previousStatus+1)& (0+255),w,b
 28738  006A90  18DE               	xorwf	postinc2,w,c
 28739  006A92  B4D8               	btfsc	status,2,c
 28740  006A94  0012               	return	
 28741  006A96                     u11220:
 28742                           
 28743                           ; BSR set to: 0
 28744                           ;main.c: 434: addPacketToOutgoingQueue(0, 0b00001011, 0, ABB_1.destination);
 28745  006A96  0E00               	movlw	0
 28746  006A98  0100               	movlb	0	; () banked
 28747  006A9A  6F60               	movwf	addPacketToOutgoingQueue@data& (0+255),b
 28748  006A9C  0E00               	movlw	0
 28749  006A9E  0100               	movlb	0	; () banked
 28750  006AA0  6F61               	movwf	(addPacketToOutgoingQueue@data+1)& (0+255),b
 28751  006AA2  0E0B               	movlw	11
 28752  006AA4  0100               	movlb	0	; () banked
 28753  006AA6  6F62               	movwf	addPacketToOutgoingQueue@command& (0+255),b
 28754  006AA8  0E00               	movlw	0
 28755  006AAA  0100               	movlb	0	; () banked
 28756  006AAC  6F63               	movwf	addPacketToOutgoingQueue@length& (0+255),b
 28757  006AAE  C751  F064         	movff	_ABB_1+913,addPacketToOutgoingQueue@destination
 28758  006AB2  C752  F065         	movff	_ABB_1+914,addPacketToOutgoingQueue@destination+1
 28759  006AB6  ECFD  F02B         	call	_addPacketToOutgoingQueue	;wreg free
 28760                           
 28761                           ;main.c: 435: previousStatus = *status;
 28762  006ABA  C06A  FFD9         	movff	checkStatusBits@status,fsr2l
 28763  006ABE  C06B  FFDA         	movff	checkStatusBits@status+1,fsr2h
 28764  006AC2  CFDE F0BE          	movff	postinc2,_previousStatus
 28765  006AC6  CFDD F0BF          	movff	postdec2,_previousStatus+1
 28766  006ACA  0012               	return	
 28767  006ACC                     __end_of_checkStatusBits:
 28768                           	opt stack 0
 28769                           tblptru	equ	0xFF8
 28770                           tblptrh	equ	0xFF7
 28771                           tblptrl	equ	0xFF6
 28772                           tablat	equ	0xFF5
 28773                           prodh	equ	0xFF4
 28774                           prodl	equ	0xFF3
 28775                           intcon	equ	0xFF2
 28776                           postinc0	equ	0xFEE
 28777                           wreg	equ	0xFE8
 28778                           indf1	equ	0xFE7
 28779                           postinc1	equ	0xFE6
 28780                           postdec1	equ	0xFE5
 28781                           plusw1	equ	0xFE3
 28782                           fsr1h	equ	0xFE2
 28783                           fsr1l	equ	0xFE1
 28784                           indf2	equ	0xFDF
 28785                           postinc2	equ	0xFDE
 28786                           postdec2	equ	0xFDD
 28787                           plusw2	equ	0xFDB
 28788                           fsr2h	equ	0xFDA
 28789                           fsr2l	equ	0xFD9
 28790                           status	equ	0xFD8
 28791                           
 28792 ;; *************** function _addPacketToOutgoingQueue *****************
 28793 ;; Defined at:
 28794 ;;		line 20 in file "packetQueueHandler.c"
 28795 ;; Parameters:    Size  Location     Type
 28796 ;;  data            2    0[BANK0 ] PTR unsigned char 
 28797 ;;		 -> ABB_1.det_arrays.info(404), ABB_1.det_arrays.UIDs(505), ABB_1.det_arrays(909), NULL(0), 
 28798 ;;  command         1    2[BANK0 ] unsigned char 
 28799 ;;  length          1    3[BANK0 ] unsigned char 
 28800 ;;  destination     2    4[BANK0 ] unsigned short 
 28801 ;; Auto vars:     Size  Location     Type
 28802 ;;		None
 28803 ;; Return value:  Size  Location     Type
 28804 ;;                  1    wreg      void 
 28805 ;; Registers used:
 28806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28807 ;; Tracked objects:
 28808 ;;		On entry : 0/0
 28809 ;;		On exit  : 0/0
 28810 ;;		Unchanged: 0/0
 28811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28812 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28814 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28815 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28816 ;;Total ram usage:        8 bytes
 28817 ;; Hardware stack levels used:    1
 28818 ;; Hardware stack levels required when called:    8
 28819 ;; This function calls:
 28820 ;;		Nothing
 28821 ;; This function is called by:
 28822 ;;		_checkStatusBits
 28823 ;;		_programUIDs
 28824 ;; This function uses a non-reentrant model
 28825 ;;
 28826                           
 28827                           	psect	text149
 28828  0057FA                     __ptext149:
 28829                           	opt stack 0
 28830  0057FA                     _addPacketToOutgoingQueue:
 28831                           	opt stack 19
 28832                           
 28833                           ;packetQueueHandler.c: 21: if(ABB_1.destination == 0xFFFF)
 28834                           
 28835                           ;incstack = 0
 28836  0057FA  EE27  F051         	lfsr	2,_ABB_1+913
 28837  0057FE  28DE               	incf	postinc2,w,c
 28838  005800  E103               	bnz	l13642
 28839  005802  28DE               	incf	postinc2,w,c
 28840  005804  B4D8               	btfsc	status,2,c
 28841  005806  0012               	return	
 28842  005808                     l13642:
 28843                           
 28844                           ;packetQueueHandler.c: 24: outgoingQueue.queue_store[outgoingQueue.queue_pointer].comman
      +                          d = command;
 28845  005808  0101               	movlb	1	; () banked
 28846  00580A  5101               	movf	(_outgoingQueue+1)& (0+255),w,b
 28847  00580C  0D07               	mullw	7
 28848  00580E  0E06               	movlw	6
 28849  005810  26F3               	addwf	prodl,f,c
 28850  005812  0E00               	movlw	0
 28851  005814  22F4               	addwfc	prodh,f,c
 28852  005816  0E00               	movlw	low _outgoingQueue
 28853  005818  24F3               	addwf	prodl,w,c
 28854  00581A  6ED9               	movwf	fsr2l,c
 28855  00581C  0E01               	movlw	high _outgoingQueue
 28856  00581E  20F4               	addwfc	prodh,w,c
 28857  005820  6EDA               	movwf	fsr2h,c
 28858  005822  C062  FFDF         	movff	addPacketToOutgoingQueue@command,indf2
 28859                           
 28860                           ;packetQueueHandler.c: 25: outgoingQueue.queue_store[outgoingQueue.queue_pointer].data =
      +                           data;
 28861  005826  0101               	movlb	1	; () banked
 28862  005828  5101               	movf	(_outgoingQueue+1)& (0+255),w,b
 28863  00582A  0D07               	mullw	7
 28864  00582C  0E07               	movlw	7
 28865  00582E  26F3               	addwf	prodl,f,c
 28866  005830  0E00               	movlw	0
 28867  005832  22F4               	addwfc	prodh,f,c
 28868  005834  0E00               	movlw	low _outgoingQueue
 28869  005836  24F3               	addwf	prodl,w,c
 28870  005838  6ED9               	movwf	fsr2l,c
 28871  00583A  0E01               	movlw	high _outgoingQueue
 28872  00583C  20F4               	addwfc	prodh,w,c
 28873  00583E  6EDA               	movwf	fsr2h,c
 28874  005840  C060  FFDE         	movff	addPacketToOutgoingQueue@data,postinc2
 28875  005844  C061  FFDD         	movff	addPacketToOutgoingQueue@data+1,postdec2
 28876                           
 28877                           ;packetQueueHandler.c: 26: outgoingQueue.queue_store[outgoingQueue.queue_pointer].data_l
      +                          ength = length;
 28878  005848  0101               	movlb	1	; () banked
 28879  00584A  5101               	movf	(_outgoingQueue+1)& (0+255),w,b
 28880  00584C  0D07               	mullw	7
 28881  00584E  0E02               	movlw	2
 28882  005850  26F3               	addwf	prodl,f,c
 28883  005852  0E00               	movlw	0
 28884  005854  22F4               	addwfc	prodh,f,c
 28885  005856  0E00               	movlw	low _outgoingQueue
 28886  005858  24F3               	addwf	prodl,w,c
 28887  00585A  6ED9               	movwf	fsr2l,c
 28888  00585C  0E01               	movlw	high _outgoingQueue
 28889  00585E  20F4               	addwfc	prodh,w,c
 28890  005860  6EDA               	movwf	fsr2h,c
 28891  005862  C063  FFDF         	movff	addPacketToOutgoingQueue@length,indf2
 28892                           
 28893                           ;packetQueueHandler.c: 27: outgoingQueue.queue_store[outgoingQueue.queue_pointer].destin
      +                          ation = destination;
 28894  005866  0101               	movlb	1	; () banked
 28895  005868  5101               	movf	(_outgoingQueue+1)& (0+255),w,b
 28896  00586A  0D07               	mullw	7
 28897  00586C  0E03               	movlw	3
 28898  00586E  26F3               	addwf	prodl,f,c
 28899  005870  0E00               	movlw	0
 28900  005872  22F4               	addwfc	prodh,f,c
 28901  005874  0E00               	movlw	low _outgoingQueue
 28902  005876  24F3               	addwf	prodl,w,c
 28903  005878  6ED9               	movwf	fsr2l,c
 28904  00587A  0E01               	movlw	high _outgoingQueue
 28905  00587C  20F4               	addwfc	prodh,w,c
 28906  00587E  6EDA               	movwf	fsr2h,c
 28907  005880  C064  FFDE         	movff	addPacketToOutgoingQueue@destination,postinc2
 28908  005884  C065  FFDD         	movff	addPacketToOutgoingQueue@destination+1,postdec2
 28909                           
 28910                           ; BSR set to: 1
 28911                           ;packetQueueHandler.c: 28: if(outgoingQueue.length < 20)
 28912  005888  0E14               	movlw	20
 28913  00588A  0101               	movlb	1	; () banked
 28914  00588C  6100               	cpfslt	_outgoingQueue& (0+255),b
 28915  00588E  D002               	goto	l844
 28916                           
 28917                           ; BSR set to: 1
 28918                           ;packetQueueHandler.c: 29: outgoingQueue.length++;
 28919  005890  0101               	movlb	1	; () banked
 28920  005892  2B00               	incf	_outgoingQueue& (0+255),f,b
 28921  005894                     l844:
 28922                           
 28923                           ; BSR set to: 1
 28924                           ;packetQueueHandler.c: 30: outgoingQueue.queue_pointer++;
 28925  005894  0101               	movlb	1	; () banked
 28926  005896  2B01               	incf	(_outgoingQueue+1)& (0+255),f,b
 28927                           
 28928                           ; BSR set to: 1
 28929                           ;packetQueueHandler.c: 31: if (outgoingQueue.queue_pointer == 20){
 28930  005898  0E14               	movlw	20
 28931  00589A  0101               	movlb	1	; () banked
 28932  00589C  1901               	xorwf	(_outgoingQueue+1)& (0+255),w,b
 28933  00589E  A4D8               	btfss	status,2,c
 28934  0058A0  0012               	return	
 28935                           
 28936                           ; BSR set to: 1
 28937                           ;packetQueueHandler.c: 32: outgoingQueue.queue_pointer = 0;
 28938  0058A2  0E00               	movlw	0
 28939  0058A4  0101               	movlb	1	; () banked
 28940  0058A6  6F01               	movwf	(_outgoingQueue+1)& (0+255),b
 28941  0058A8  0012               	return	
 28942  0058AA                     __end_of_addPacketToOutgoingQueue:
 28943                           	opt stack 0
 28944                           tblptru	equ	0xFF8
 28945                           tblptrh	equ	0xFF7
 28946                           tblptrl	equ	0xFF6
 28947                           tablat	equ	0xFF5
 28948                           prodh	equ	0xFF4
 28949                           prodl	equ	0xFF3
 28950                           intcon	equ	0xFF2
 28951                           postinc0	equ	0xFEE
 28952                           wreg	equ	0xFE8
 28953                           indf1	equ	0xFE7
 28954                           postinc1	equ	0xFE6
 28955                           postdec1	equ	0xFE5
 28956                           plusw1	equ	0xFE3
 28957                           fsr1h	equ	0xFE2
 28958                           fsr1l	equ	0xFE1
 28959                           indf2	equ	0xFDF
 28960                           postinc2	equ	0xFDE
 28961                           postdec2	equ	0xFDD
 28962                           plusw2	equ	0xFDB
 28963                           fsr2h	equ	0xFDA
 28964                           fsr2l	equ	0xFD9
 28965                           status	equ	0xFD8
 28966                           
 28967 ;; *************** function _activateBluetooth *****************
 28968 ;; Defined at:
 28969 ;;		line 48 in file "bluetooth.c"
 28970 ;; Parameters:    Size  Location     Type
 28971 ;;		None
 28972 ;; Auto vars:     Size  Location     Type
 28973 ;;		None
 28974 ;; Return value:  Size  Location     Type
 28975 ;;                  1    wreg      void 
 28976 ;; Registers used:
 28977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28978 ;; Tracked objects:
 28979 ;;		On entry : 0/0
 28980 ;;		On exit  : 0/0
 28981 ;;		Unchanged: 0/0
 28982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28987 ;;Total ram usage:        0 bytes
 28988 ;; Hardware stack levels used:    1
 28989 ;; Hardware stack levels required when called:    9
 28990 ;; This function calls:
 28991 ;;		_initialiseState
 28992 ;;		_initialiseUART
 28993 ;; This function is called by:
 28994 ;;		_device
 28995 ;; This function uses a non-reentrant model
 28996 ;;
 28997                           
 28998                           	psect	text150
 28999  00719C                     __ptext150:
 29000                           	opt stack 0
 29001  00719C                     _activateBluetooth:
 29002                           	opt stack 20
 29003                           
 29004                           ;bluetooth.c: 49: initialiseState(&state.bluetooth, 13);
 29005                           
 29006                           ;incstack = 0
 29007  00719C  0EDD               	movlw	low (_state+54)
 29008  00719E  0100               	movlb	0	; () banked
 29009  0071A0  6F60               	movwf	initialiseState@specific& (0+255),b
 29010  0071A2  0E01               	movlw	high (_state+54)
 29011  0071A4  0100               	movlb	0	; () banked
 29012  0071A6  6F61               	movwf	(initialiseState@specific+1)& (0+255),b
 29013  0071A8  0E0D               	movlw	13
 29014  0071AA  0100               	movlb	0	; () banked
 29015  0071AC  6F62               	movwf	initialiseState@number& (0+255),b
 29016  0071AE  ECDB  F034         	call	_initialiseState	;wreg free
 29017                           
 29018                           ;bluetooth.c: 50: initialiseUART();
 29019  0071B2  EC56  F03A         	call	_initialiseUART	;wreg free
 29020                           
 29021                           ;bluetooth.c: 51: LATDbits.LATD3 = 1;
 29022  0071B6  867C               	bsf	3964,3,c	;volatile
 29023                           
 29024                           ;bluetooth.c: 52: FLAGS.bluetooth = 1;
 29025  0071B8  8439               	bsf	_FLAGS+2,2,c
 29026                           
 29027                           ;bluetooth.c: 53: FLAGS.bluetoothTimer = 0;
 29028  0071BA  9639               	bcf	_FLAGS+2,3,c
 29029                           
 29030                           ;bluetooth.c: 54: COUNTERS.bluetoothTimer = 60000;
 29031  0071BC  0EEA               	movlw	234
 29032  0071BE  0100               	movlb	0	; () banked
 29033  0071C0  6FB5               	movwf	(_COUNTERS+18)& (0+255),b
 29034  0071C2  0E60               	movlw	96
 29035  0071C4  6FB4               	movwf	(_COUNTERS+17)& (0+255),b
 29036                           
 29037                           ; BSR set to: 0
 29038                           ;bluetooth.c: 55: bluetoothStatus.bluetoothSetup = 1;
 29039  0071C6  0100               	movlb	0	; () banked
 29040  0071C8  83C2               	bsf	_bluetoothStatus& (0+255),1,b
 29041                           
 29042                           ; BSR set to: 0
 29043                           ;bluetooth.c: 56: setupIndex = 0;
 29044  0071CA  0E00               	movlw	0
 29045  0071CC  0100               	movlb	0	; () banked
 29046  0071CE  6FC0               	movwf	_setupIndex& (0+255),b
 29047                           
 29048                           ; BSR set to: 0
 29049  0071D0  0012               	return		;funcret
 29050  0071D2                     __end_of_activateBluetooth:
 29051                           	opt stack 0
 29052                           tblptru	equ	0xFF8
 29053                           tblptrh	equ	0xFF7
 29054                           tblptrl	equ	0xFF6
 29055                           tablat	equ	0xFF5
 29056                           prodh	equ	0xFF4
 29057                           prodl	equ	0xFF3
 29058                           intcon	equ	0xFF2
 29059                           postinc0	equ	0xFEE
 29060                           wreg	equ	0xFE8
 29061                           indf1	equ	0xFE7
 29062                           postinc1	equ	0xFE6
 29063                           postdec1	equ	0xFE5
 29064                           plusw1	equ	0xFE3
 29065                           fsr1h	equ	0xFE2
 29066                           fsr1l	equ	0xFE1
 29067                           indf2	equ	0xFDF
 29068                           postinc2	equ	0xFDE
 29069                           postdec2	equ	0xFDD
 29070                           plusw2	equ	0xFDB
 29071                           fsr2h	equ	0xFDA
 29072                           fsr2l	equ	0xFD9
 29073                           status	equ	0xFD8
 29074                           
 29075 ;; *************** function _initialiseUART *****************
 29076 ;; Defined at:
 29077 ;;		line 78 in file "bluetooth.c"
 29078 ;; Parameters:    Size  Location     Type
 29079 ;;		None
 29080 ;; Auto vars:     Size  Location     Type
 29081 ;;		None
 29082 ;; Return value:  Size  Location     Type
 29083 ;;                  1    wreg      void 
 29084 ;; Registers used:
 29085 ;;		wreg, status,2
 29086 ;; Tracked objects:
 29087 ;;		On entry : 0/0
 29088 ;;		On exit  : 0/0
 29089 ;;		Unchanged: 0/0
 29090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29095 ;;Total ram usage:        0 bytes
 29096 ;; Hardware stack levels used:    1
 29097 ;; Hardware stack levels required when called:    8
 29098 ;; This function calls:
 29099 ;;		Nothing
 29100 ;; This function is called by:
 29101 ;;		_activateBluetooth
 29102 ;; This function uses a non-reentrant model
 29103 ;;
 29104                           
 29105                           	psect	text151
 29106  0074AC                     __ptext151:
 29107                           	opt stack 0
 29108  0074AC                     _initialiseUART:
 29109                           	opt stack 20
 29110                           
 29111                           ;bluetooth.c: 80: PMD5bits.UART3MD = 0;
 29112                           
 29113                           ; BSR set to: 0
 29114                           ;incstack = 0
 29115  0074AC  010E               	movlb	14	; () banked
 29116  0074AE  9951               	bcf	81,4,b	;volatile
 29117                           
 29118                           ;bluetooth.c: 81: TX3STAbits.BRGH = 1;
 29119  0074B0  010E               	movlb	14	; () banked
 29120  0074B2  85EF               	bsf	239,2,b	;volatile
 29121                           
 29122                           ;bluetooth.c: 82: BAUD3CONbits.BRG16 = 1;
 29123  0074B4  010E               	movlb	14	; () banked
 29124  0074B6  87F0               	bsf	240,3,b	;volatile
 29125                           
 29126                           ; BSR set to: 14
 29127                           ;bluetooth.c: 83: SP3BRGH = 0x06;
 29128  0074B8  0E06               	movlw	6
 29129  0074BA  010E               	movlb	14	; () banked
 29130  0074BC  6FED               	movwf	237,b	;volatile
 29131                           
 29132                           ;bluetooth.c: 84: SP3BRGL = 0x82;
 29133  0074BE  0E82               	movlw	130
 29134  0074C0  010E               	movlb	14	; () banked
 29135  0074C2  6FEC               	movwf	236,b	;volatile
 29136                           
 29137                           ; BSR set to: 14
 29138                           ;bluetooth.c: 85: BAUD3CONbits.ABDEN = 1;
 29139  0074C4  010E               	movlb	14	; () banked
 29140  0074C6  81F0               	bsf	240,0,b	;volatile
 29141                           
 29142                           ; BSR set to: 14
 29143                           ;bluetooth.c: 86: TX3STAbits.SYNC = 0;
 29144  0074C8  010E               	movlb	14	; () banked
 29145  0074CA  99EF               	bcf	239,4,b	;volatile
 29146                           
 29147                           ; BSR set to: 14
 29148                           ;bluetooth.c: 87: RC3STAbits.SPEN = 0;
 29149  0074CC  010E               	movlb	14	; () banked
 29150  0074CE  9FEE               	bcf	238,7,b	;volatile
 29151                           
 29152                           ; BSR set to: 14
 29153                           ;bluetooth.c: 88: TX3STAbits.TXEN = 0;
 29154  0074D0  010E               	movlb	14	; () banked
 29155  0074D2  9BEF               	bcf	239,5,b	;volatile
 29156                           
 29157                           ; BSR set to: 14
 29158                           ;bluetooth.c: 89: RC3STAbits.CREN = 0;
 29159  0074D4  010E               	movlb	14	; () banked
 29160  0074D6  99EE               	bcf	238,4,b	;volatile
 29161                           
 29162                           ; BSR set to: 14
 29163  0074D8  0012               	return		;funcret
 29164  0074DA                     __end_of_initialiseUART:
 29165                           	opt stack 0
 29166                           tblptru	equ	0xFF8
 29167                           tblptrh	equ	0xFF7
 29168                           tblptrl	equ	0xFF6
 29169                           tablat	equ	0xFF5
 29170                           prodh	equ	0xFF4
 29171                           prodl	equ	0xFF3
 29172                           intcon	equ	0xFF2
 29173                           postinc0	equ	0xFEE
 29174                           wreg	equ	0xFE8
 29175                           indf1	equ	0xFE7
 29176                           postinc1	equ	0xFE6
 29177                           postdec1	equ	0xFE5
 29178                           plusw1	equ	0xFE3
 29179                           fsr1h	equ	0xFE2
 29180                           fsr1l	equ	0xFE1
 29181                           indf2	equ	0xFDF
 29182                           postinc2	equ	0xFDE
 29183                           postdec2	equ	0xFDD
 29184                           plusw2	equ	0xFDB
 29185                           fsr2h	equ	0xFDA
 29186                           fsr2l	equ	0xFD9
 29187                           status	equ	0xFD8
 29188                           
 29189 ;; *************** function _initialiseState *****************
 29190 ;; Defined at:
 29191 ;;		line 157 in file "initialise.c"
 29192 ;; Parameters:    Size  Location     Type
 29193 ;;  specific        2    0[BANK0 ] PTR struct .
 29194 ;;		 -> state(61), 
 29195 ;;  number          1    2[BANK0 ] unsigned char 
 29196 ;; Auto vars:     Size  Location     Type
 29197 ;;		None
 29198 ;; Return value:  Size  Location     Type
 29199 ;;                  1    wreg      void 
 29200 ;; Registers used:
 29201 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29202 ;; Tracked objects:
 29203 ;;		On entry : 0/0
 29204 ;;		On exit  : 0/0
 29205 ;;		Unchanged: 0/0
 29206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29207 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29210 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29211 ;;Total ram usage:        3 bytes
 29212 ;; Hardware stack levels used:    1
 29213 ;; Hardware stack levels required when called:    8
 29214 ;; This function calls:
 29215 ;;		Nothing
 29216 ;; This function is called by:
 29217 ;;		_initialiseStates
 29218 ;;		_initialiseReadSupply
 29219 ;;		_initialiseLed
 29220 ;;		_initialiseReadKeyCable
 29221 ;;		_initialiseModem
 29222 ;;		_initialiseShaftTest
 29223 ;;		_activateBluetooth
 29224 ;; This function uses a non-reentrant model
 29225 ;;
 29226                           
 29227                           	psect	text152
 29228  0069B6                     __ptext152:
 29229                           	opt stack 0
 29230  0069B6                     _initialiseState:
 29231                           	opt stack 20
 29232                           
 29233                           ;initialise.c: 158: specific->counter = 0;
 29234                           
 29235                           ; BSR set to: 14
 29236                           ;incstack = 0
 29237  0069B6  0100               	movlb	0	; () banked
 29238  0069B8  EE20 F002          	lfsr	2,2
 29239  0069BC  5160               	movf	initialiseState@specific& (0+255),w,b
 29240  0069BE  26D9               	addwf	fsr2l,f,c
 29241  0069C0  5161               	movf	(initialiseState@specific+1)& (0+255),w,b
 29242  0069C2  22DA               	addwfc	fsr2h,f,c
 29243  0069C4  0E00               	movlw	0
 29244  0069C6  6EDE               	movwf	postinc2,c
 29245  0069C8  0E00               	movlw	0
 29246  0069CA  6EDD               	movwf	postdec2,c
 29247                           
 29248                           ; BSR set to: 0
 29249                           ;initialise.c: 159: specific->current = 1;
 29250  0069CC  C060  FFD9         	movff	initialiseState@specific,fsr2l
 29251  0069D0  C061  FFDA         	movff	initialiseState@specific+1,fsr2h
 29252  0069D4  0E01               	movlw	1
 29253  0069D6  6EDF               	movwf	indf2,c
 29254                           
 29255                           ; BSR set to: 0
 29256                           ;initialise.c: 160: specific->next = 1;
 29257  0069D8  0100               	movlb	0	; () banked
 29258  0069DA  EE20 F001          	lfsr	2,1
 29259  0069DE  5160               	movf	initialiseState@specific& (0+255),w,b
 29260  0069E0  26D9               	addwf	fsr2l,f,c
 29261  0069E2  5161               	movf	(initialiseState@specific+1)& (0+255),w,b
 29262  0069E4  22DA               	addwfc	fsr2h,f,c
 29263  0069E6  0E01               	movlw	1
 29264  0069E8  6EDF               	movwf	indf2,c
 29265                           
 29266                           ; BSR set to: 0
 29267                           ;initialise.c: 161: specific->flag = 0;
 29268  0069EA  0100               	movlb	0	; () banked
 29269  0069EC  EE20 F004          	lfsr	2,4
 29270  0069F0  5160               	movf	initialiseState@specific& (0+255),w,b
 29271  0069F2  26D9               	addwf	fsr2l,f,c
 29272  0069F4  5161               	movf	(initialiseState@specific+1)& (0+255),w,b
 29273  0069F6  22DA               	addwfc	fsr2h,f,c
 29274  0069F8  0E00               	movlw	0
 29275  0069FA  6EDE               	movwf	postinc2,c
 29276  0069FC  0E00               	movlw	0
 29277  0069FE  6EDD               	movwf	postdec2,c
 29278                           
 29279                           ; BSR set to: 0
 29280                           ;initialise.c: 163: specific->id = number;
 29281  006A00  0100               	movlb	0	; () banked
 29282  006A02  EE20 F006          	lfsr	2,6
 29283  006A06  5160               	movf	initialiseState@specific& (0+255),w,b
 29284  006A08  26D9               	addwf	fsr2l,f,c
 29285  006A0A  5161               	movf	(initialiseState@specific+1)& (0+255),w,b
 29286  006A0C  22DA               	addwfc	fsr2h,f,c
 29287  006A0E  C062  FFDF         	movff	initialiseState@number,indf2
 29288                           
 29289                           ; BSR set to: 0
 29290  006A12  0012               	return		;funcret
 29291  006A14                     __end_of_initialiseState:
 29292                           	opt stack 0
 29293                           tblptru	equ	0xFF8
 29294                           tblptrh	equ	0xFF7
 29295                           tblptrl	equ	0xFF6
 29296                           tablat	equ	0xFF5
 29297                           prodh	equ	0xFF4
 29298                           prodl	equ	0xFF3
 29299                           intcon	equ	0xFF2
 29300                           postinc0	equ	0xFEE
 29301                           wreg	equ	0xFE8
 29302                           indf1	equ	0xFE7
 29303                           postinc1	equ	0xFE6
 29304                           postdec1	equ	0xFE5
 29305                           plusw1	equ	0xFE3
 29306                           fsr1h	equ	0xFE2
 29307                           fsr1l	equ	0xFE1
 29308                           indf2	equ	0xFDF
 29309                           postinc2	equ	0xFDE
 29310                           postdec2	equ	0xFDD
 29311                           plusw2	equ	0xFDB
 29312                           fsr2h	equ	0xFDA
 29313                           fsr2l	equ	0xFD9
 29314                           status	equ	0xFD8
 29315                           
 29316 ;; *************** function _isr *****************
 29317 ;; Defined at:
 29318 ;;		line 55 in file "main.c"
 29319 ;; Parameters:    Size  Location     Type
 29320 ;;		None
 29321 ;; Auto vars:     Size  Location     Type
 29322 ;;		None
 29323 ;; Return value:  Size  Location     Type
 29324 ;;                  1    wreg      void 
 29325 ;; Registers used:
 29326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29327 ;; Tracked objects:
 29328 ;;		On entry : 0/0
 29329 ;;		On exit  : 0/0
 29330 ;;		Unchanged: 0/0
 29331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29334 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29335 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29336 ;;Total ram usage:       15 bytes
 29337 ;; Hardware stack levels used:    1
 29338 ;; Hardware stack levels required when called:    7
 29339 ;; This function calls:
 29340 ;;		_RXReadyISRHandlerST7540
 29341 ;;		_SPIISRHandlerST7540
 29342 ;;		_acOr36VISR
 29343 ;;		_msIsr
 29344 ;;		_readEUSART
 29345 ;;		_readTagRoutine
 29346 ;;		_sec4OverflowIsr
 29347 ;;		_us100DelayIsr
 29348 ;;		_us100Isr
 29349 ;;		_us500Isr
 29350 ;; This function is called by:
 29351 ;;		Interrupt level 2
 29352 ;; This function uses a non-reentrant model
 29353 ;;
 29354                           
 29355                           	psect	intcode
 29356  000008                     __pintcode:
 29357                           	opt stack 0
 29358  000008                     _isr:
 29359                           	opt stack 14
 29360                           
 29361                           ; BSR set to: 0
 29362                           ;incstack = 0
 29363  000008  8257               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 29364  00000A  CFFA F01F          	movff	pclath,??_isr+1
 29365  00000E  CFFB F020          	movff	pclatu,??_isr+2
 29366  000012  CFE9 F021          	movff	fsr0l,??_isr+3
 29367  000016  CFEA F022          	movff	fsr0h,??_isr+4
 29368  00001A  CFE1 F023          	movff	fsr1l,??_isr+5
 29369  00001E  CFE2 F024          	movff	fsr1h,??_isr+6
 29370  000022  CFD9 F025          	movff	fsr2l,??_isr+7
 29371  000026  CFDA F026          	movff	fsr2h,??_isr+8
 29372  00002A  CFF3 F027          	movff	prodl,??_isr+9
 29373  00002E  CFF4 F028          	movff	prodh,??_isr+10
 29374  000032  CFF6 F029          	movff	tblptrl,??_isr+11
 29375  000036  CFF7 F02A          	movff	tblptrh,??_isr+12
 29376  00003A  CFF8 F02B          	movff	tblptru,??_isr+13
 29377  00003E  CFF5 F02C          	movff	tablat,??_isr+14
 29378                           
 29379                           ;main.c: 56: if(ABB_1.deviceState== 9 && !FLAGS.fireComplete){
 29380  000042  C754  FFE8         	movff	_ABB_1+916,wreg
 29381  000046  0A09               	xorlw	9
 29382  000048  B4D8               	btfsc	status,2,c
 29383  00004A  B838               	btfsc	_FLAGS+1,4,c
 29384  00004C  D020               	goto	i2l91
 29385                           
 29386                           ;main.c: 57: if(PIR5bits.TMR2IF && PIE5bits.TMR2IE)
 29387  00004E  010E               	movlb	14	; () banked
 29388  000050  A338               	btfss	56,1,b	;volatile
 29389  000052  D004               	goto	i2l12480
 29390                           
 29391                           ; BSR set to: 14
 29392  000054  010E               	movlb	14	; () banked
 29393  000056  B32E               	btfsc	46,1,b	;volatile
 29394                           
 29395                           ; BSR set to: 14
 29396                           ;main.c: 58: us100DelayIsr();
 29397  000058  ECDA  F03D         	call	_us100DelayIsr	;wreg free
 29398  00005C                     i2l12480:
 29399                           
 29400                           ;main.c: 59: if(PIR5bits.TMR8IF && PIE5bits.TMR8IE)
 29401  00005C  010E               	movlb	14	; () banked
 29402  00005E  AF38               	btfss	56,7,b	;volatile
 29403  000060  D004               	goto	i2l12486
 29404                           
 29405                           ; BSR set to: 14
 29406  000062  010E               	movlb	14	; () banked
 29407  000064  BF2E               	btfsc	46,7,b	;volatile
 29408                           
 29409                           ; BSR set to: 14
 29410                           ;main.c: 60: us100Isr();
 29411  000066  ECC5  F03D         	call	_us100Isr	;wreg free
 29412  00006A                     i2l12486:
 29413                           
 29414                           ;main.c: 61: if(PIR5bits.TMR4IF && PIE5bits.TMR4IE)
 29415  00006A  010E               	movlb	14	; () banked
 29416  00006C  A738               	btfss	56,3,b	;volatile
 29417  00006E  D004               	goto	i2l12492
 29418                           
 29419                           ; BSR set to: 14
 29420  000070  010E               	movlb	14	; () banked
 29421  000072  B72E               	btfsc	46,3,b	;volatile
 29422                           
 29423                           ; BSR set to: 14
 29424                           ;main.c: 62: us500Isr();
 29425  000074  ECB5  F03D         	call	_us500Isr	;wreg free
 29426  000078                     i2l12492:
 29427                           
 29428                           ;main.c: 63: if(PIR0bits.INT2IF && PIE0bits.INT2IE){
 29429  000078  010E               	movlb	14	; () banked
 29430  00007A  A533               	btfss	51,2,b	;volatile
 29431  00007C  D062               	goto	i2l96
 29432                           
 29433                           ; BSR set to: 14
 29434  00007E  010E               	movlb	14	; () banked
 29435  000080  A529               	btfss	41,2,b	;volatile
 29436  000082  D05F               	goto	i2l96
 29437                           
 29438                           ; BSR set to: 14
 29439                           ;main.c: 64: acOr36VISR();
 29440  000084  ECFB  F03B         	call	_acOr36VISR	;wreg free
 29441                           
 29442                           ;main.c: 65: PIR0bits.INT2IF = 0;
 29443  000088  010E               	movlb	14	; () banked
 29444  00008A  9533               	bcf	51,2,b	;volatile
 29445                           
 29446                           ; BSR set to: 14
 29447                           ;main.c: 66: }
 29448                           ;main.c: 67: return;
 29449                           
 29450                           ; BSR set to: 14
 29451  00008C  D05A               	goto	i2l96
 29452  00008E                     i2l91:
 29453                           
 29454                           ;main.c: 68: }
 29455                           ;main.c: 69: if(PIR5bits.TMR8IF && PIE5bits.TMR8IE)
 29456  00008E  010E               	movlb	14	; () banked
 29457  000090  AF38               	btfss	56,7,b	;volatile
 29458  000092  D004               	goto	i2l12506
 29459                           
 29460                           ; BSR set to: 14
 29461  000094  010E               	movlb	14	; () banked
 29462  000096  BF2E               	btfsc	46,7,b	;volatile
 29463                           
 29464                           ; BSR set to: 14
 29465                           ;main.c: 70: us100Isr();
 29466  000098  ECC5  F03D         	call	_us100Isr	;wreg free
 29467  00009C                     i2l12506:
 29468                           
 29469                           ;main.c: 71: if(PIR5bits.TMR2IF && PIE5bits.TMR2IE)
 29470  00009C  010E               	movlb	14	; () banked
 29471  00009E  A338               	btfss	56,1,b	;volatile
 29472  0000A0  D004               	goto	i2l12512
 29473                           
 29474                           ; BSR set to: 14
 29475  0000A2  010E               	movlb	14	; () banked
 29476  0000A4  B32E               	btfsc	46,1,b	;volatile
 29477                           
 29478                           ; BSR set to: 14
 29479                           ;main.c: 72: us100DelayIsr();
 29480  0000A6  ECDA  F03D         	call	_us100DelayIsr	;wreg free
 29481  0000AA                     i2l12512:
 29482                           
 29483                           ;main.c: 73: if(PIR5bits.TMR4IF && PIE5bits.TMR4IE)
 29484  0000AA  010E               	movlb	14	; () banked
 29485  0000AC  A738               	btfss	56,3,b	;volatile
 29486  0000AE  D004               	goto	i2l12518
 29487                           
 29488                           ; BSR set to: 14
 29489  0000B0  010E               	movlb	14	; () banked
 29490  0000B2  B72E               	btfsc	46,3,b	;volatile
 29491                           
 29492                           ; BSR set to: 14
 29493                           ;main.c: 74: us500Isr();
 29494  0000B4  ECB5  F03D         	call	_us500Isr	;wreg free
 29495  0000B8                     i2l12518:
 29496                           
 29497                           ;main.c: 75: if(PIR5bits.TMR6IF && PIE5bits.TMR6IE)
 29498  0000B8  010E               	movlb	14	; () banked
 29499  0000BA  AB38               	btfss	56,5,b	;volatile
 29500  0000BC  D004               	goto	i2l12524
 29501                           
 29502                           ; BSR set to: 14
 29503  0000BE  010E               	movlb	14	; () banked
 29504  0000C0  BB2E               	btfsc	46,5,b	;volatile
 29505                           
 29506                           ; BSR set to: 14
 29507                           ;main.c: 76: msIsr();
 29508  0000C2  ECEB  F026         	call	_msIsr	;wreg free
 29509  0000C6                     i2l12524:
 29510                           
 29511                           ;main.c: 77: if(PIR0bits.INT3IF && PIE0bits.INT3IE){
 29512  0000C6  010E               	movlb	14	; () banked
 29513  0000C8  A733               	btfss	51,3,b	;volatile
 29514  0000CA  D007               	goto	i2l12532
 29515                           
 29516                           ; BSR set to: 14
 29517  0000CC  010E               	movlb	14	; () banked
 29518  0000CE  A729               	btfss	41,3,b	;volatile
 29519  0000D0  D004               	goto	i2l12532
 29520                           
 29521                           ; BSR set to: 14
 29522                           ;main.c: 78: readTagRoutine();
 29523  0000D2  EC9A  F030         	call	_readTagRoutine	;wreg free
 29524                           
 29525                           ;main.c: 79: PIR0bits.INT3IF = 0;
 29526  0000D6  010E               	movlb	14	; () banked
 29527  0000D8  9733               	bcf	51,3,b	;volatile
 29528  0000DA                     i2l12532:
 29529                           
 29530                           ; BSR set to: 14
 29531                           ;main.c: 80: }
 29532                           ;main.c: 81: if(PIR0bits.INT2IF && PIE0bits.INT2IE){
 29533  0000DA  010E               	movlb	14	; () banked
 29534  0000DC  A533               	btfss	51,2,b	;volatile
 29535  0000DE  D007               	goto	i2l12540
 29536                           
 29537                           ; BSR set to: 14
 29538  0000E0  010E               	movlb	14	; () banked
 29539  0000E2  A529               	btfss	41,2,b	;volatile
 29540  0000E4  D004               	goto	i2l12540
 29541                           
 29542                           ; BSR set to: 14
 29543                           ;main.c: 82: acOr36VISR();
 29544  0000E6  ECFB  F03B         	call	_acOr36VISR	;wreg free
 29545                           
 29546                           ;main.c: 83: PIR0bits.INT2IF = 0;
 29547  0000EA  010E               	movlb	14	; () banked
 29548  0000EC  9533               	bcf	51,2,b	;volatile
 29549  0000EE                     i2l12540:
 29550                           
 29551                           ; BSR set to: 14
 29552                           ;main.c: 84: }
 29553                           ;main.c: 85: if(PIR3bits.SSP1IF && PIE3bits.SSP1IE)
 29554  0000EE  010E               	movlb	14	; () banked
 29555  0000F0  A136               	btfss	54,0,b	;volatile
 29556  0000F2  D004               	goto	i2l12546
 29557                           
 29558                           ; BSR set to: 14
 29559  0000F4  010E               	movlb	14	; () banked
 29560  0000F6  B12C               	btfsc	44,0,b	;volatile
 29561                           
 29562                           ; BSR set to: 14
 29563                           ;main.c: 86: SPIISRHandlerST7540();
 29564  0000F8  ECB4  F032         	call	_SPIISRHandlerST7540	;wreg free
 29565  0000FC                     i2l12546:
 29566                           
 29567                           ;main.c: 87: if (PIR0bits.INT0IF && PIE0bits.INT0IE){
 29568  0000FC  010E               	movlb	14	; () banked
 29569  0000FE  A133               	btfss	51,0,b	;volatile
 29570  000100  D012               	goto	i2l12556
 29571                           
 29572                           ; BSR set to: 14
 29573  000102  010E               	movlb	14	; () banked
 29574  000104  A129               	btfss	41,0,b	;volatile
 29575  000106  D00F               	goto	i2l12556
 29576                           
 29577                           ; BSR set to: 14
 29578                           ;main.c: 88: RXReadyISRHandlerST7540();
 29579  000108  EC65  F03D         	call	_RXReadyISRHandlerST7540	;wreg free
 29580                           
 29581                           ;main.c: 89: PIR0bits.INT0IF = 0;
 29582  00010C  010E               	movlb	14	; () banked
 29583  00010E  9133               	bcf	51,0,b	;volatile
 29584                           
 29585                           ; BSR set to: 14
 29586                           ;main.c: 90: INTCONbits.INT0EDG = !INTCONbits.INT0EDG;
 29587  000110  B0F2               	btfsc	intcon,0,c	;volatile
 29588  000112  D003               	goto	i2u869_40
 29589  000114  6A1E               	clrf	??_isr& (0+255),c
 29590  000116  2A1E               	incf	??_isr& (0+255),f,c
 29591  000118  D001               	goto	i2u870_48
 29592  00011A                     i2u869_40:
 29593  00011A  6A1E               	clrf	??_isr& (0+255),c
 29594  00011C                     i2u870_48:
 29595  00011C  50F2               	movf	intcon,w,c	;volatile
 29596  00011E  181E               	xorwf	??_isr,w,c
 29597  000120  0BFE               	andlw	-2
 29598  000122  181E               	xorwf	??_isr,w,c
 29599  000124  6EF2               	movwf	intcon,c	;volatile
 29600  000126                     i2l12556:
 29601                           
 29602                           ;main.c: 91: }
 29603                           ;main.c: 92: if(PIR4bits.RC3IF && PIE4bits.RC3IE)
 29604  000126  010E               	movlb	14	; () banked
 29605  000128  A337               	btfss	55,1,b	;volatile
 29606  00012A  D004               	goto	i2l12562
 29607                           
 29608                           ; BSR set to: 14
 29609  00012C  010E               	movlb	14	; () banked
 29610  00012E  B32D               	btfsc	45,1,b	;volatile
 29611                           
 29612                           ; BSR set to: 14
 29613                           ;main.c: 93: readEUSART();
 29614  000130  EC89  F03B         	call	_readEUSART	;wreg free
 29615  000134                     i2l12562:
 29616                           
 29617                           ;main.c: 94: if(PIR0bits.TMR0IF && PIE0bits.TMR0IE)
 29618  000134  010E               	movlb	14	; () banked
 29619  000136  AB33               	btfss	51,5,b	;volatile
 29620  000138  D004               	goto	i2l96
 29621                           
 29622                           ; BSR set to: 14
 29623  00013A  010E               	movlb	14	; () banked
 29624  00013C  BB29               	btfsc	41,5,b	;volatile
 29625                           
 29626                           ; BSR set to: 14
 29627                           ;main.c: 95: sec4OverflowIsr();
 29628  00013E  ECCF  F03C         	call	_sec4OverflowIsr	;wreg free
 29629  000142                     i2l96:
 29630  000142  C02C  FFF5         	movff	??_isr+14,tablat
 29631  000146  C02B  FFF8         	movff	??_isr+13,tblptru
 29632  00014A  C02A  FFF7         	movff	??_isr+12,tblptrh
 29633  00014E  C029  FFF6         	movff	??_isr+11,tblptrl
 29634  000152  C028  FFF4         	movff	??_isr+10,prodh
 29635  000156  C027  FFF3         	movff	??_isr+9,prodl
 29636  00015A  C026  FFDA         	movff	??_isr+8,fsr2h
 29637  00015E  C025  FFD9         	movff	??_isr+7,fsr2l
 29638  000162  C024  FFE2         	movff	??_isr+6,fsr1h
 29639  000166  C023  FFE1         	movff	??_isr+5,fsr1l
 29640  00016A  C022  FFEA         	movff	??_isr+4,fsr0h
 29641  00016E  C021  FFE9         	movff	??_isr+3,fsr0l
 29642  000172  C020  FFFB         	movff	??_isr+2,pclatu
 29643  000176  C01F  FFFA         	movff	??_isr+1,pclath
 29644  00017A  9257               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 29645  00017C  0011               	retfie		f
 29646  00017E                     __end_of_isr:
 29647                           	opt stack 0
 29648                           pclatu	equ	0xFFB
 29649                           pclath	equ	0xFFA
 29650                           tblptru	equ	0xFF8
 29651                           tblptrh	equ	0xFF7
 29652                           tblptrl	equ	0xFF6
 29653                           tablat	equ	0xFF5
 29654                           prodh	equ	0xFF4
 29655                           prodl	equ	0xFF3
 29656                           intcon	equ	0xFF2
 29657                           postinc0	equ	0xFEE
 29658                           fsr0h	equ	0xFEA
 29659                           fsr0l	equ	0xFE9
 29660                           wreg	equ	0xFE8
 29661                           indf1	equ	0xFE7
 29662                           postinc1	equ	0xFE6
 29663                           postdec1	equ	0xFE5
 29664                           plusw1	equ	0xFE3
 29665                           fsr1h	equ	0xFE2
 29666                           fsr1l	equ	0xFE1
 29667                           indf2	equ	0xFDF
 29668                           postinc2	equ	0xFDE
 29669                           postdec2	equ	0xFDD
 29670                           plusw2	equ	0xFDB
 29671                           fsr2h	equ	0xFDA
 29672                           fsr2l	equ	0xFD9
 29673                           status	equ	0xFD8
 29674                           
 29675 ;; *************** function _us500Isr *****************
 29676 ;; Defined at:
 29677 ;;		line 24 in file "peripherals.c"
 29678 ;; Parameters:    Size  Location     Type
 29679 ;;		None
 29680 ;; Auto vars:     Size  Location     Type
 29681 ;;		None
 29682 ;; Return value:  Size  Location     Type
 29683 ;;                  1    wreg      void 
 29684 ;; Registers used:
 29685 ;;		wreg, status,2, status,0, cstack
 29686 ;; Tracked objects:
 29687 ;;		On entry : 0/0
 29688 ;;		On exit  : 0/0
 29689 ;;		Unchanged: 0/0
 29690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29695 ;;Total ram usage:        0 bytes
 29696 ;; Hardware stack levels used:    1
 29697 ;; Hardware stack levels required when called:    2
 29698 ;; This function calls:
 29699 ;;		_eddCommsIsr4
 29700 ;; This function is called by:
 29701 ;;		_isr
 29702 ;; This function uses a non-reentrant model
 29703 ;;
 29704                           
 29705                           	psect	text154
 29706  007B6A                     __ptext154:
 29707                           	opt stack 0
 29708  007B6A                     _us500Isr:
 29709                           	opt stack 18
 29710                           
 29711                           ;peripherals.c: 25: PIR5bits.TMR4IF = 0;
 29712                           
 29713                           ;incstack = 0
 29714  007B6A  010E               	movlb	14	; () banked
 29715  007B6C  9738               	bcf	56,3,b	;volatile
 29716                           
 29717                           ;peripherals.c: 26: FLAGS.us500 = 1;
 29718  007B6E  8437               	bsf	_FLAGS,2,c
 29719                           
 29720                           ; BSR set to: 14
 29721                           ;peripherals.c: 27: eddCommsIsr4();
 29722  007B70  EC13  F03D         	call	_eddCommsIsr4	;wreg free
 29723  007B74  0012               	return		;funcret
 29724  007B76                     __end_of_us500Isr:
 29725                           	opt stack 0
 29726                           pclatu	equ	0xFFB
 29727                           pclath	equ	0xFFA
 29728                           tblptru	equ	0xFF8
 29729                           tblptrh	equ	0xFF7
 29730                           tblptrl	equ	0xFF6
 29731                           tablat	equ	0xFF5
 29732                           prodh	equ	0xFF4
 29733                           prodl	equ	0xFF3
 29734                           intcon	equ	0xFF2
 29735                           postinc0	equ	0xFEE
 29736                           fsr0h	equ	0xFEA
 29737                           fsr0l	equ	0xFE9
 29738                           wreg	equ	0xFE8
 29739                           indf1	equ	0xFE7
 29740                           postinc1	equ	0xFE6
 29741                           postdec1	equ	0xFE5
 29742                           plusw1	equ	0xFE3
 29743                           fsr1h	equ	0xFE2
 29744                           fsr1l	equ	0xFE1
 29745                           indf2	equ	0xFDF
 29746                           postinc2	equ	0xFDE
 29747                           postdec2	equ	0xFDD
 29748                           plusw2	equ	0xFDB
 29749                           fsr2h	equ	0xFDA
 29750                           fsr2l	equ	0xFD9
 29751                           status	equ	0xFD8
 29752                           
 29753 ;; *************** function _eddCommsIsr4 *****************
 29754 ;; Defined at:
 29755 ;;		line 35 in file "eddComms.c"
 29756 ;; Parameters:    Size  Location     Type
 29757 ;;		None
 29758 ;; Auto vars:     Size  Location     Type
 29759 ;;		None
 29760 ;; Return value:  Size  Location     Type
 29761 ;;                  1    wreg      void 
 29762 ;; Registers used:
 29763 ;;		wreg, status,2, status,0, cstack
 29764 ;; Tracked objects:
 29765 ;;		On entry : 0/0
 29766 ;;		On exit  : 0/0
 29767 ;;		Unchanged: 0/0
 29768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29773 ;;Total ram usage:        0 bytes
 29774 ;; Hardware stack levels used:    1
 29775 ;; Hardware stack levels required when called:    1
 29776 ;; This function calls:
 29777 ;;		i2_Set_Line_High
 29778 ;;		i2_Set_Line_Low
 29779 ;; This function is called by:
 29780 ;;		_us500Isr
 29781 ;; This function uses a non-reentrant model
 29782 ;;
 29783                           
 29784                           	psect	text155
 29785  007A26                     __ptext155:
 29786                           	opt stack 0
 29787  007A26                     _eddCommsIsr4:
 29788                           	opt stack 18
 29789                           
 29790                           ;eddComms.c: 36: if (tx)
 29791                           
 29792                           ;incstack = 0
 29793  007A26  503C               	movf	_tx,w,c	;volatile
 29794  007A28  103D               	iorwf	_tx+1,w,c	;volatile
 29795  007A2A  B4D8               	btfsc	status,2,c
 29796  007A2C  D003               	goto	i2l6928
 29797                           
 29798                           ;eddComms.c: 37: Set_Line_High();
 29799  007A2E  ECFE  F03D         	call	i2_Set_Line_High	;wreg free
 29800  007A32  0012               	return	
 29801  007A34                     i2l6928:
 29802                           
 29803                           ;eddComms.c: 38: else
 29804                           ;eddComms.c: 39: Set_Line_Low();
 29805  007A34  ECFC  F03D         	call	i2_Set_Line_Low	;wreg free
 29806  007A38  0012               	return	
 29807  007A3A                     __end_of_eddCommsIsr4:
 29808                           	opt stack 0
 29809                           pclatu	equ	0xFFB
 29810                           pclath	equ	0xFFA
 29811                           tblptru	equ	0xFF8
 29812                           tblptrh	equ	0xFF7
 29813                           tblptrl	equ	0xFF6
 29814                           tablat	equ	0xFF5
 29815                           prodh	equ	0xFF4
 29816                           prodl	equ	0xFF3
 29817                           intcon	equ	0xFF2
 29818                           postinc0	equ	0xFEE
 29819                           fsr0h	equ	0xFEA
 29820                           fsr0l	equ	0xFE9
 29821                           wreg	equ	0xFE8
 29822                           indf1	equ	0xFE7
 29823                           postinc1	equ	0xFE6
 29824                           postdec1	equ	0xFE5
 29825                           plusw1	equ	0xFE3
 29826                           fsr1h	equ	0xFE2
 29827                           fsr1l	equ	0xFE1
 29828                           indf2	equ	0xFDF
 29829                           postinc2	equ	0xFDE
 29830                           postdec2	equ	0xFDD
 29831                           plusw2	equ	0xFDB
 29832                           fsr2h	equ	0xFDA
 29833                           fsr2l	equ	0xFD9
 29834                           status	equ	0xFD8
 29835                           
 29836 ;; *************** function i2_Set_Line_Low *****************
 29837 ;; Defined at:
 29838 ;;		line 113 in file "eddComms.c"
 29839 ;; Parameters:    Size  Location     Type
 29840 ;;		None
 29841 ;; Auto vars:     Size  Location     Type
 29842 ;;		None
 29843 ;; Return value:  Size  Location     Type
 29844 ;;                  1    wreg      void 
 29845 ;; Registers used:
 29846 ;;		None
 29847 ;; Tracked objects:
 29848 ;;		On entry : 0/0
 29849 ;;		On exit  : 0/0
 29850 ;;		Unchanged: 0/0
 29851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29856 ;;Total ram usage:        0 bytes
 29857 ;; Hardware stack levels used:    1
 29858 ;; This function calls:
 29859 ;;		Nothing
 29860 ;; This function is called by:
 29861 ;;		_eddCommsIsr4
 29862 ;; This function uses a non-reentrant model
 29863 ;;
 29864                           
 29865                           	psect	text156
 29866  007BF8                     __ptext156:
 29867                           	opt stack 0
 29868  007BF8                     i2_Set_Line_Low:
 29869                           	opt stack 18
 29870                           
 29871                           ;eddComms.c: 114: LATEbits.LATE6 = 0;
 29872                           
 29873                           ;incstack = 0
 29874  007BF8  9C7D               	bcf	3965,6,c	;volatile
 29875  007BFA  0012               	return		;funcret
 29876  007BFC                     __end_ofi2_Set_Line_Low:
 29877                           	opt stack 0
 29878                           pclatu	equ	0xFFB
 29879                           pclath	equ	0xFFA
 29880                           tblptru	equ	0xFF8
 29881                           tblptrh	equ	0xFF7
 29882                           tblptrl	equ	0xFF6
 29883                           tablat	equ	0xFF5
 29884                           prodh	equ	0xFF4
 29885                           prodl	equ	0xFF3
 29886                           intcon	equ	0xFF2
 29887                           postinc0	equ	0xFEE
 29888                           fsr0h	equ	0xFEA
 29889                           fsr0l	equ	0xFE9
 29890                           wreg	equ	0xFE8
 29891                           indf1	equ	0xFE7
 29892                           postinc1	equ	0xFE6
 29893                           postdec1	equ	0xFE5
 29894                           plusw1	equ	0xFE3
 29895                           fsr1h	equ	0xFE2
 29896                           fsr1l	equ	0xFE1
 29897                           indf2	equ	0xFDF
 29898                           postinc2	equ	0xFDE
 29899                           postdec2	equ	0xFDD
 29900                           plusw2	equ	0xFDB
 29901                           fsr2h	equ	0xFDA
 29902                           fsr2l	equ	0xFD9
 29903                           status	equ	0xFD8
 29904                           
 29905 ;; *************** function i2_Set_Line_High *****************
 29906 ;; Defined at:
 29907 ;;		line 109 in file "eddComms.c"
 29908 ;; Parameters:    Size  Location     Type
 29909 ;;		None
 29910 ;; Auto vars:     Size  Location     Type
 29911 ;;		None
 29912 ;; Return value:  Size  Location     Type
 29913 ;;                  1    wreg      void 
 29914 ;; Registers used:
 29915 ;;		None
 29916 ;; Tracked objects:
 29917 ;;		On entry : 0/0
 29918 ;;		On exit  : 0/0
 29919 ;;		Unchanged: 0/0
 29920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29925 ;;Total ram usage:        0 bytes
 29926 ;; Hardware stack levels used:    1
 29927 ;; This function calls:
 29928 ;;		Nothing
 29929 ;; This function is called by:
 29930 ;;		_eddCommsIsr4
 29931 ;; This function uses a non-reentrant model
 29932 ;;
 29933                           
 29934                           	psect	text157
 29935  007BFC                     __ptext157:
 29936                           	opt stack 0
 29937  007BFC                     i2_Set_Line_High:
 29938                           	opt stack 18
 29939                           
 29940                           ;eddComms.c: 110: LATEbits.LATE6 = 1;
 29941                           
 29942                           ;incstack = 0
 29943  007BFC  8C7D               	bsf	3965,6,c	;volatile
 29944  007BFE  0012               	return		;funcret
 29945  007C00                     __end_ofi2_Set_Line_High:
 29946                           	opt stack 0
 29947                           pclatu	equ	0xFFB
 29948                           pclath	equ	0xFFA
 29949                           tblptru	equ	0xFF8
 29950                           tblptrh	equ	0xFF7
 29951                           tblptrl	equ	0xFF6
 29952                           tablat	equ	0xFF5
 29953                           prodh	equ	0xFF4
 29954                           prodl	equ	0xFF3
 29955                           intcon	equ	0xFF2
 29956                           postinc0	equ	0xFEE
 29957                           fsr0h	equ	0xFEA
 29958                           fsr0l	equ	0xFE9
 29959                           wreg	equ	0xFE8
 29960                           indf1	equ	0xFE7
 29961                           postinc1	equ	0xFE6
 29962                           postdec1	equ	0xFE5
 29963                           plusw1	equ	0xFE3
 29964                           fsr1h	equ	0xFE2
 29965                           fsr1l	equ	0xFE1
 29966                           indf2	equ	0xFDF
 29967                           postinc2	equ	0xFDE
 29968                           postdec2	equ	0xFDD
 29969                           plusw2	equ	0xFDB
 29970                           fsr2h	equ	0xFDA
 29971                           fsr2l	equ	0xFD9
 29972                           status	equ	0xFD8
 29973                           
 29974 ;; *************** function _us100Isr *****************
 29975 ;; Defined at:
 29976 ;;		line 88 in file "peripherals.c"
 29977 ;; Parameters:    Size  Location     Type
 29978 ;;		None
 29979 ;; Auto vars:     Size  Location     Type
 29980 ;;		None
 29981 ;; Return value:  Size  Location     Type
 29982 ;;                  1    wreg      void 
 29983 ;; Registers used:
 29984 ;;		wreg, status,2, status,0, cstack
 29985 ;; Tracked objects:
 29986 ;;		On entry : 0/0
 29987 ;;		On exit  : 0/0
 29988 ;;		Unchanged: 0/0
 29989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29994 ;;Total ram usage:        0 bytes
 29995 ;; Hardware stack levels used:    1
 29996 ;; Hardware stack levels required when called:    1
 29997 ;; This function calls:
 29998 ;;		_eddCommsIsr8
 29999 ;; This function is called by:
 30000 ;;		_isr
 30001 ;; This function uses a non-reentrant model
 30002 ;;
 30003                           
 30004                           	psect	text158
 30005  007B8A                     __ptext158:
 30006                           	opt stack 0
 30007  007B8A                     _us100Isr:
 30008                           	opt stack 19
 30009                           
 30010                           ;peripherals.c: 89: PIR5bits.TMR8IF = 0;
 30011                           
 30012                           ;incstack = 0
 30013  007B8A  010E               	movlb	14	; () banked
 30014  007B8C  9F38               	bcf	56,7,b	;volatile
 30015                           
 30016                           ; BSR set to: 14
 30017                           ;peripherals.c: 90: eddCommsIsr8();
 30018  007B8E  EC98  F02E         	call	_eddCommsIsr8	;wreg free
 30019  007B92  0012               	return		;funcret
 30020  007B94                     __end_of_us100Isr:
 30021                           	opt stack 0
 30022                           pclatu	equ	0xFFB
 30023                           pclath	equ	0xFFA
 30024                           tblptru	equ	0xFF8
 30025                           tblptrh	equ	0xFF7
 30026                           tblptrl	equ	0xFF6
 30027                           tablat	equ	0xFF5
 30028                           prodh	equ	0xFF4
 30029                           prodl	equ	0xFF3
 30030                           intcon	equ	0xFF2
 30031                           postinc0	equ	0xFEE
 30032                           fsr0h	equ	0xFEA
 30033                           fsr0l	equ	0xFE9
 30034                           wreg	equ	0xFE8
 30035                           indf1	equ	0xFE7
 30036                           postinc1	equ	0xFE6
 30037                           postdec1	equ	0xFE5
 30038                           plusw1	equ	0xFE3
 30039                           fsr1h	equ	0xFE2
 30040                           fsr1l	equ	0xFE1
 30041                           indf2	equ	0xFDF
 30042                           postinc2	equ	0xFDE
 30043                           postdec2	equ	0xFDD
 30044                           plusw2	equ	0xFDB
 30045                           fsr2h	equ	0xFDA
 30046                           fsr2l	equ	0xFD9
 30047                           status	equ	0xFD8
 30048                           
 30049 ;; *************** function _eddCommsIsr8 *****************
 30050 ;; Defined at:
 30051 ;;		line 43 in file "eddComms.c"
 30052 ;; Parameters:    Size  Location     Type
 30053 ;;		None
 30054 ;; Auto vars:     Size  Location     Type
 30055 ;;		None
 30056 ;; Return value:  Size  Location     Type
 30057 ;;                  1    wreg      void 
 30058 ;; Registers used:
 30059 ;;		wreg, status,2, status,0
 30060 ;; Tracked objects:
 30061 ;;		On entry : 0/0
 30062 ;;		On exit  : 0/0
 30063 ;;		Unchanged: 0/0
 30064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30069 ;;Total ram usage:        0 bytes
 30070 ;; Hardware stack levels used:    1
 30071 ;; This function calls:
 30072 ;;		Nothing
 30073 ;; This function is called by:
 30074 ;;		_us100Isr
 30075 ;; This function uses a non-reentrant model
 30076 ;;
 30077                           
 30078                           	psect	text159
 30079  005D30                     __ptext159:
 30080                           	opt stack 0
 30081  005D30                     _eddCommsIsr8:
 30082                           	opt stack 19
 30083                           
 30084                           ;eddComms.c: 44: watchCounter ++;
 30085                           
 30086                           ;incstack = 0
 30087  005D30  0100               	movlb	0	; () banked
 30088  005D32  4BBC               	infsnz	_watchCounter& (0+255),f,b
 30089  005D34  2BBD               	incf	(_watchCounter+1)& (0+255),f,b
 30090                           
 30091                           ; BSR set to: 0
 30092                           ;eddComms.c: 45: if(readFlag){
 30093  005D36  0100               	movlb	0	; () banked
 30094  005D38  51B6               	movf	_readFlag& (0+255),w,b	;volatile
 30095  005D3A  0100               	movlb	0	; () banked
 30096  005D3C  11B7               	iorwf	(_readFlag+1)& (0+255),w,b	;volatile
 30097  005D3E  B4D8               	btfsc	status,2,c
 30098  005D40  0012               	return	
 30099                           
 30100                           ; BSR set to: 0
 30101                           ;eddComms.c: 46: if(!period){
 30102  005D42  0100               	movlb	0	; () banked
 30103  005D44  51C6               	movf	_period& (0+255),w,b	;volatile
 30104  005D46  A4D8               	btfss	status,2,c
 30105  005D48  D003               	goto	i2l11598
 30106                           
 30107                           ; BSR set to: 0
 30108                           ;eddComms.c: 47: halfBits ++;
 30109  005D4A  0100               	movlb	0	; () banked
 30110  005D4C  2BC5               	incf	_halfBits& (0+255),f,b
 30111                           
 30112                           ;eddComms.c: 48: }
 30113  005D4E  D015               	goto	i2l11606
 30114  005D50                     i2l11598:
 30115                           
 30116                           ; BSR set to: 0
 30117                           ;eddComms.c: 49: else if(period > 5){
 30118  005D50  0E05               	movlw	5
 30119  005D52  0100               	movlb	0	; () banked
 30120  005D54  65C6               	cpfsgt	_period& (0+255),b	;volatile
 30121  005D56  D011               	goto	i2l11606
 30122                           
 30123                           ; BSR set to: 0
 30124                           ;eddComms.c: 50: halfBits ++;
 30125  005D58  0100               	movlb	0	; () banked
 30126  005D5A  2BC5               	incf	_halfBits& (0+255),f,b
 30127                           
 30128                           ; BSR set to: 0
 30129                           ;eddComms.c: 51: period = 0;
 30130  005D5C  0E00               	movlw	0
 30131  005D5E  0100               	movlb	0	; () banked
 30132  005D60  6FC6               	movwf	_period& (0+255),b	;volatile
 30133                           
 30134                           ; BSR set to: 0
 30135                           ;eddComms.c: 52: eddState = !eddState;
 30136  005D62  0100               	movlb	0	; () banked
 30137  005D64  51B8               	movf	_eddState& (0+255),w,b	;volatile
 30138  005D66  0100               	movlb	0	; () banked
 30139  005D68  11B9               	iorwf	(_eddState+1)& (0+255),w,b	;volatile
 30140  005D6A  A4D8               	btfss	status,2,c
 30141  005D6C  D002               	goto	i2u754_40
 30142  005D6E  0E01               	movlw	1
 30143  005D70  D001               	goto	i2u755_40
 30144  005D72                     i2u754_40:
 30145  005D72  0E00               	movlw	0
 30146  005D74                     i2u755_40:
 30147  005D74  0100               	movlb	0	; () banked
 30148  005D76  6FB8               	movwf	_eddState& (0+255),b	;volatile
 30149  005D78  6BB9               	clrf	(_eddState+1)& (0+255),b	;volatile
 30150  005D7A                     i2l11606:
 30151                           
 30152                           ; BSR set to: 0
 30153                           ;eddComms.c: 53: }
 30154                           ;eddComms.c: 54: if(!period && halfBits % 2){
 30155  005D7A  0100               	movlb	0	; () banked
 30156  005D7C  51C6               	movf	_period& (0+255),w,b	;volatile
 30157  005D7E  A4D8               	btfss	status,2,c
 30158  005D80  D00C               	goto	i2l1757
 30159                           
 30160                           ; BSR set to: 0
 30161  005D82  0100               	movlb	0	; () banked
 30162  005D84  A1C5               	btfss	_halfBits& (0+255),0,b
 30163  005D86  D009               	goto	i2l1757
 30164                           
 30165                           ; BSR set to: 0
 30166                           ;eddComms.c: 55: byteRead = byteRead << 1;
 30167  005D88  0100               	movlb	0	; () banked
 30168  005D8A  51C4               	movf	_byteRead& (0+255),w,b
 30169  005D8C  25C4               	addwf	_byteRead& (0+255),w,b
 30170  005D8E  0100               	movlb	0	; () banked
 30171  005D90  6FC4               	movwf	_byteRead& (0+255),b
 30172                           
 30173                           ;eddComms.c: 56: byteRead += eddState;
 30174  005D92  0100               	movlb	0	; () banked
 30175  005D94  51B8               	movf	_eddState& (0+255),w,b	;volatile
 30176  005D96  0100               	movlb	0	; () banked
 30177  005D98  27C4               	addwf	_byteRead& (0+255),f,b
 30178  005D9A                     i2l1757:
 30179                           
 30180                           ; BSR set to: 0
 30181                           ;eddComms.c: 57: }
 30182                           ;eddComms.c: 58: if(halfBits == 16){
 30183  005D9A  0E10               	movlw	16
 30184  005D9C  0100               	movlb	0	; () banked
 30185  005D9E  19C5               	xorwf	_halfBits& (0+255),w,b
 30186  005DA0  A4D8               	btfss	status,2,c
 30187  005DA2  D00E               	goto	i2l11618
 30188                           
 30189                           ; BSR set to: 0
 30190                           ;eddComms.c: 59: readFlag = 0;
 30191  005DA4  0E00               	movlw	0
 30192  005DA6  0100               	movlb	0	; () banked
 30193  005DA8  6FB7               	movwf	(_readFlag+1)& (0+255),b	;volatile
 30194  005DAA  0E00               	movlw	0
 30195  005DAC  6FB6               	movwf	_readFlag& (0+255),b	;volatile
 30196                           
 30197                           ; BSR set to: 0
 30198                           ;eddComms.c: 60: byteRead = byteRead << 1;
 30199  005DAE  0100               	movlb	0	; () banked
 30200  005DB0  51C4               	movf	_byteRead& (0+255),w,b
 30201  005DB2  25C4               	addwf	_byteRead& (0+255),w,b
 30202  005DB4  0100               	movlb	0	; () banked
 30203  005DB6  6FC4               	movwf	_byteRead& (0+255),b
 30204                           
 30205                           ; BSR set to: 0
 30206                           ;eddComms.c: 61: byteRead += eddState;
 30207  005DB8  0100               	movlb	0	; () banked
 30208  005DBA  51B8               	movf	_eddState& (0+255),w,b	;volatile
 30209  005DBC  0100               	movlb	0	; () banked
 30210  005DBE  27C4               	addwf	_byteRead& (0+255),f,b
 30211  005DC0                     i2l11618:
 30212                           
 30213                           ; BSR set to: 0
 30214                           ;eddComms.c: 62: }
 30215                           ;eddComms.c: 63: period++;
 30216  005DC0  0100               	movlb	0	; () banked
 30217  005DC2  2BC6               	incf	_period& (0+255),f,b	;volatile
 30218  005DC4  0012               	return	
 30219  005DC6                     __end_of_eddCommsIsr8:
 30220                           	opt stack 0
 30221                           pclatu	equ	0xFFB
 30222                           pclath	equ	0xFFA
 30223                           tblptru	equ	0xFF8
 30224                           tblptrh	equ	0xFF7
 30225                           tblptrl	equ	0xFF6
 30226                           tablat	equ	0xFF5
 30227                           prodh	equ	0xFF4
 30228                           prodl	equ	0xFF3
 30229                           intcon	equ	0xFF2
 30230                           postinc0	equ	0xFEE
 30231                           fsr0h	equ	0xFEA
 30232                           fsr0l	equ	0xFE9
 30233                           wreg	equ	0xFE8
 30234                           indf1	equ	0xFE7
 30235                           postinc1	equ	0xFE6
 30236                           postdec1	equ	0xFE5
 30237                           plusw1	equ	0xFE3
 30238                           fsr1h	equ	0xFE2
 30239                           fsr1l	equ	0xFE1
 30240                           indf2	equ	0xFDF
 30241                           postinc2	equ	0xFDE
 30242                           postdec2	equ	0xFDD
 30243                           plusw2	equ	0xFDB
 30244                           fsr2h	equ	0xFDA
 30245                           fsr2l	equ	0xFD9
 30246                           status	equ	0xFD8
 30247                           
 30248 ;; *************** function _us100DelayIsr *****************
 30249 ;; Defined at:
 30250 ;;		line 82 in file "peripherals.c"
 30251 ;; Parameters:    Size  Location     Type
 30252 ;;		None
 30253 ;; Auto vars:     Size  Location     Type
 30254 ;;		None
 30255 ;; Return value:  Size  Location     Type
 30256 ;;                  1    wreg      void 
 30257 ;; Registers used:
 30258 ;;		None
 30259 ;; Tracked objects:
 30260 ;;		On entry : 0/0
 30261 ;;		On exit  : 0/0
 30262 ;;		Unchanged: 0/0
 30263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30268 ;;Total ram usage:        0 bytes
 30269 ;; Hardware stack levels used:    1
 30270 ;; This function calls:
 30271 ;;		Nothing
 30272 ;; This function is called by:
 30273 ;;		_isr
 30274 ;; This function uses a non-reentrant model
 30275 ;;
 30276                           
 30277                           	psect	text160
 30278  007BB4                     __ptext160:
 30279                           	opt stack 0
 30280  007BB4                     _us100DelayIsr:
 30281                           	opt stack 20
 30282                           
 30283                           ;peripherals.c: 83: FLAGS.us100 = 1;
 30284                           
 30285                           ; BSR set to: 0
 30286                           ;incstack = 0
 30287  007BB4  8037               	bsf	_FLAGS,0,c
 30288                           
 30289                           ;peripherals.c: 84: PIR5bits.TMR2IF = 0;
 30290  007BB6  010E               	movlb	14	; () banked
 30291  007BB8  9338               	bcf	56,1,b	;volatile
 30292                           
 30293                           ; BSR set to: 14
 30294  007BBA  0012               	return		;funcret
 30295  007BBC                     __end_of_us100DelayIsr:
 30296                           	opt stack 0
 30297                           pclatu	equ	0xFFB
 30298                           pclath	equ	0xFFA
 30299                           tblptru	equ	0xFF8
 30300                           tblptrh	equ	0xFF7
 30301                           tblptrl	equ	0xFF6
 30302                           tablat	equ	0xFF5
 30303                           prodh	equ	0xFF4
 30304                           prodl	equ	0xFF3
 30305                           intcon	equ	0xFF2
 30306                           postinc0	equ	0xFEE
 30307                           fsr0h	equ	0xFEA
 30308                           fsr0l	equ	0xFE9
 30309                           wreg	equ	0xFE8
 30310                           indf1	equ	0xFE7
 30311                           postinc1	equ	0xFE6
 30312                           postdec1	equ	0xFE5
 30313                           plusw1	equ	0xFE3
 30314                           fsr1h	equ	0xFE2
 30315                           fsr1l	equ	0xFE1
 30316                           indf2	equ	0xFDF
 30317                           postinc2	equ	0xFDE
 30318                           postdec2	equ	0xFDD
 30319                           plusw2	equ	0xFDB
 30320                           fsr2h	equ	0xFDA
 30321                           fsr2l	equ	0xFD9
 30322                           status	equ	0xFD8
 30323                           
 30324 ;; *************** function _sec4OverflowIsr *****************
 30325 ;; Defined at:
 30326 ;;		line 61 in file "acOr36V.c"
 30327 ;; Parameters:    Size  Location     Type
 30328 ;;		None
 30329 ;; Auto vars:     Size  Location     Type
 30330 ;;		None
 30331 ;; Return value:  Size  Location     Type
 30332 ;;                  1    wreg      void 
 30333 ;; Registers used:
 30334 ;;		wreg, fsr2l, fsr2h
 30335 ;; Tracked objects:
 30336 ;;		On entry : 0/0
 30337 ;;		On exit  : 0/0
 30338 ;;		Unchanged: 0/0
 30339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30344 ;;Total ram usage:        0 bytes
 30345 ;; Hardware stack levels used:    1
 30346 ;; This function calls:
 30347 ;;		Nothing
 30348 ;; This function is called by:
 30349 ;;		_isr
 30350 ;; This function uses a non-reentrant model
 30351 ;;
 30352                           
 30353                           	psect	text161
 30354  00799E                     __ptext161:
 30355                           	opt stack 0
 30356  00799E                     _sec4OverflowIsr:
 30357                           	opt stack 20
 30358                           
 30359                           ;acOr36V.c: 62: PIR0bits.TMR0IF = 0;
 30360                           
 30361                           ; BSR set to: 14
 30362                           ;incstack = 0
 30363  00799E  010E               	movlb	14	; () banked
 30364  0079A0  9B33               	bcf	51,5,b	;volatile
 30365                           
 30366                           ;acOr36V.c: 63: if(!PORTBbits.RB2)
 30367  0079A2  B48A               	btfsc	3978,2,c	;volatile
 30368  0079A4  D004               	goto	i2l7502
 30369                           
 30370                           ; BSR set to: 14
 30371                           ;acOr36V.c: 64: ABB_1.info.statusBits.voltage = 0;
 30372  0079A6  EE23  F0C1         	lfsr	2,_ABB_1+1
 30373  0079AA  9ADF               	bcf	indf2,5,c
 30374  0079AC  0012               	return	
 30375  0079AE                     i2l7502:
 30376                           
 30377                           ; BSR set to: 14
 30378                           ;acOr36V.c: 65: else
 30379                           ;acOr36V.c: 66: ABB_1.info.statusBits.voltage = 1;
 30380  0079AE  EE23  F0C1         	lfsr	2,_ABB_1+1
 30381  0079B2  8ADF               	bsf	indf2,5,c
 30382  0079B4  0012               	return	
 30383  0079B6                     __end_of_sec4OverflowIsr:
 30384                           	opt stack 0
 30385                           pclatu	equ	0xFFB
 30386                           pclath	equ	0xFFA
 30387                           tblptru	equ	0xFF8
 30388                           tblptrh	equ	0xFF7
 30389                           tblptrl	equ	0xFF6
 30390                           tablat	equ	0xFF5
 30391                           prodh	equ	0xFF4
 30392                           prodl	equ	0xFF3
 30393                           intcon	equ	0xFF2
 30394                           postinc0	equ	0xFEE
 30395                           fsr0h	equ	0xFEA
 30396                           fsr0l	equ	0xFE9
 30397                           wreg	equ	0xFE8
 30398                           indf1	equ	0xFE7
 30399                           postinc1	equ	0xFE6
 30400                           postdec1	equ	0xFE5
 30401                           plusw1	equ	0xFE3
 30402                           fsr1h	equ	0xFE2
 30403                           fsr1l	equ	0xFE1
 30404                           indf2	equ	0xFDF
 30405                           postinc2	equ	0xFDE
 30406                           postdec2	equ	0xFDD
 30407                           plusw2	equ	0xFDB
 30408                           fsr2h	equ	0xFDA
 30409                           fsr2l	equ	0xFD9
 30410                           status	equ	0xFD8
 30411                           
 30412 ;; *************** function _readTagRoutine *****************
 30413 ;; Defined at:
 30414 ;;		line 596 in file "tagRead.c"
 30415 ;; Parameters:    Size  Location     Type
 30416 ;;		None
 30417 ;; Auto vars:     Size  Location     Type
 30418 ;;  attempts        1   27[COMRAM] unsigned char 
 30419 ;; Return value:  Size  Location     Type
 30420 ;;                  1    wreg      void 
 30421 ;; Registers used:
 30422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30423 ;; Tracked objects:
 30424 ;;		On entry : 0/0
 30425 ;;		On exit  : 0/0
 30426 ;;		Unchanged: 0/0
 30427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30429 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30431 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30432 ;;Total ram usage:        1 bytes
 30433 ;; Hardware stack levels used:    1
 30434 ;; Hardware stack levels required when called:    5
 30435 ;; This function calls:
 30436 ;;		_READ_TAG
 30437 ;;		_READ_TAG_REVERSE
 30438 ;;		_addNewTag
 30439 ;;		_tagFor0
 30440 ;;		_tagFor1
 30441 ;;		i2_setBlueLed
 30442 ;;		i2_tagForInterrupt
 30443 ;; This function is called by:
 30444 ;;		_isr
 30445 ;; This function uses a non-reentrant model
 30446 ;;
 30447                           
 30448                           	psect	text162
 30449  006134                     __ptext162:
 30450                           	opt stack 0
 30451  006134                     _readTagRoutine:
 30452                           	opt stack 15
 30453                           
 30454                           ;tagRead.c: 597: T0CON0bits.T0EN = 0;
 30455                           
 30456                           ; BSR set to: 14
 30457                           ;incstack = 0
 30458  006134  9ED5               	bcf	4053,7,c	;volatile
 30459                           
 30460                           ;tagRead.c: 598: if(ABB_1.info.statusBits.key_switch_status)
 30461  006136  EE23  F0C1         	lfsr	2,_ABB_1+1
 30462  00613A  B0DF               	btfsc	indf2,0,c
 30463  00613C  0012               	return	
 30464                           
 30465                           ;tagRead.c: 600: unsigned char attempts = 0;
 30466                           
 30467                           ;tagRead.c: 599: return;
 30468  00613E  0E00               	movlw	0
 30469  006140  6E1C               	movwf	readTagRoutine@attempts,c
 30470                           
 30471                           ;tagRead.c: 601: FLAGS.sec2 = 0;
 30472  006142  9A37               	bcf	_FLAGS,5,c
 30473                           
 30474                           ;tagRead.c: 602: COUNTERS.sec2 = 2000;
 30475  006144  0E07               	movlw	7
 30476  006146  0100               	movlb	0	; () banked
 30477  006148  6FAC               	movwf	(_COUNTERS+9)& (0+255),b
 30478  00614A  0ED0               	movlw	208
 30479  00614C  6FAB               	movwf	(_COUNTERS+8)& (0+255),b
 30480                           
 30481                           ; BSR set to: 0
 30482                           ;tagRead.c: 603: setBlueLed();
 30483  00614E  ECDE  F03D         	call	i2_setBlueLed	;wreg free
 30484                           
 30485                           ;tagRead.c: 604: tagFor0();
 30486  006152  EC9D  F03C         	call	_tagFor0	;wreg free
 30487                           
 30488                           ;tagRead.c: 605: while(!READ_TAG() && attempts < 5)
 30489  006156  D001               	goto	i2l12040
 30490  006158                     i2l12038:
 30491                           
 30492                           ;tagRead.c: 606: attempts ++;
 30493  006158  2A1C               	incf	readTagRoutine@attempts,f,c
 30494  00615A                     i2l12040:
 30495  00615A  ECD3  F031         	call	_READ_TAG	;wreg free
 30496  00615E  0900               	iorlw	0
 30497  006160  A4D8               	btfss	status,2,c
 30498  006162  D003               	goto	i2l12044
 30499  006164  0E04               	movlw	4
 30500  006166  641C               	cpfsgt	readTagRoutine@attempts,c
 30501  006168  D7F7               	goto	i2l12038
 30502  00616A                     i2l12044:
 30503                           
 30504                           ;tagRead.c: 607: if(attempts < 5){
 30505  00616A  0E05               	movlw	5
 30506  00616C  601C               	cpfslt	readTagRoutine@attempts,c
 30507  00616E  D008               	goto	i2l12054
 30508                           
 30509                           ;tagRead.c: 608: addNewTag();
 30510  006170  ECE5  F019         	call	_addNewTag	;wreg free
 30511                           
 30512                           ;tagRead.c: 609: tagForInterrupt();
 30513  006174  EC09  F03C         	call	i2_tagForInterrupt	;wreg free
 30514                           
 30515                           ;tagRead.c: 610: state.led.next = 14;
 30516  006178  0E0E               	movlw	14
 30517  00617A  0101               	movlb	1	; () banked
 30518  00617C  6FB4               	movwf	(_state+13)& (0+255),b
 30519                           
 30520                           ; BSR set to: 1
 30521                           ;tagRead.c: 611: return;
 30522  00617E  0012               	return	
 30523  006180                     i2l12054:
 30524                           
 30525                           ;tagRead.c: 612: }
 30526                           ;tagRead.c: 613: attempts = 0;
 30527  006180  0E00               	movlw	0
 30528  006182  6E1C               	movwf	readTagRoutine@attempts,c
 30529                           
 30530                           ;tagRead.c: 614: tagFor1();
 30531  006184  EC90  F03C         	call	_tagFor1	;wreg free
 30532                           
 30533                           ;tagRead.c: 615: while(!READ_TAG_REVERSE() && attempts < 5)
 30534  006188  D001               	goto	i2l12060
 30535  00618A                     i2l12058:
 30536                           
 30537                           ;tagRead.c: 616: attempts ++;
 30538  00618A  2A1C               	incf	readTagRoutine@attempts,f,c
 30539  00618C                     i2l12060:
 30540  00618C  EC99  F031         	call	_READ_TAG_REVERSE	;wreg free
 30541  006190  0900               	iorlw	0
 30542  006192  A4D8               	btfss	status,2,c
 30543  006194  D003               	goto	i2l12064
 30544  006196  0E04               	movlw	4
 30545  006198  641C               	cpfsgt	readTagRoutine@attempts,c
 30546  00619A  D7F7               	goto	i2l12058
 30547  00619C                     i2l12064:
 30548                           
 30549                           ;tagRead.c: 617: if(attempts < 5){
 30550  00619C  0E05               	movlw	5
 30551  00619E  601C               	cpfslt	readTagRoutine@attempts,c
 30552  0061A0  D008               	goto	i2l12074
 30553                           
 30554                           ;tagRead.c: 618: addNewTag();
 30555  0061A2  ECE5  F019         	call	_addNewTag	;wreg free
 30556                           
 30557                           ;tagRead.c: 619: tagForInterrupt();
 30558  0061A6  EC09  F03C         	call	i2_tagForInterrupt	;wreg free
 30559                           
 30560                           ;tagRead.c: 620: state.led.next = 14;
 30561  0061AA  0E0E               	movlw	14
 30562  0061AC  0101               	movlb	1	; () banked
 30563  0061AE  6FB4               	movwf	(_state+13)& (0+255),b
 30564                           
 30565                           ; BSR set to: 1
 30566                           ;tagRead.c: 621: return;
 30567  0061B0  0012               	return	
 30568  0061B2                     i2l12074:
 30569                           
 30570                           ;tagRead.c: 622: }
 30571                           ;tagRead.c: 623: tagForInterrupt();
 30572  0061B2  EC09  F03C         	call	i2_tagForInterrupt	;wreg free
 30573                           
 30574                           ;tagRead.c: 624: state.led.next = 15;
 30575  0061B6  0E0F               	movlw	15
 30576  0061B8  0101               	movlb	1	; () banked
 30577  0061BA  6FB4               	movwf	(_state+13)& (0+255),b
 30578  0061BC  0012               	return		;funcret
 30579  0061BE                     __end_of_readTagRoutine:
 30580                           	opt stack 0
 30581                           pclatu	equ	0xFFB
 30582                           pclath	equ	0xFFA
 30583                           tblptru	equ	0xFF8
 30584                           tblptrh	equ	0xFF7
 30585                           tblptrl	equ	0xFF6
 30586                           tablat	equ	0xFF5
 30587                           prodh	equ	0xFF4
 30588                           prodl	equ	0xFF3
 30589                           intcon	equ	0xFF2
 30590                           postinc0	equ	0xFEE
 30591                           fsr0h	equ	0xFEA
 30592                           fsr0l	equ	0xFE9
 30593                           wreg	equ	0xFE8
 30594                           indf1	equ	0xFE7
 30595                           postinc1	equ	0xFE6
 30596                           postdec1	equ	0xFE5
 30597                           plusw1	equ	0xFE3
 30598                           fsr1h	equ	0xFE2
 30599                           fsr1l	equ	0xFE1
 30600                           indf2	equ	0xFDF
 30601                           postinc2	equ	0xFDE
 30602                           postdec2	equ	0xFDD
 30603                           plusw2	equ	0xFDB
 30604                           fsr2h	equ	0xFDA
 30605                           fsr2l	equ	0xFD9
 30606                           status	equ	0xFD8
 30607                           
 30608 ;; *************** function i2_setBlueLed *****************
 30609 ;; Defined at:
 30610 ;;		line 272 in file "led.c"
 30611 ;; Parameters:    Size  Location     Type
 30612 ;;		None
 30613 ;; Auto vars:     Size  Location     Type
 30614 ;;		None
 30615 ;; Return value:  Size  Location     Type
 30616 ;;                  1    wreg      void 
 30617 ;; Registers used:
 30618 ;;		None
 30619 ;; Tracked objects:
 30620 ;;		On entry : 0/0
 30621 ;;		On exit  : 0/0
 30622 ;;		Unchanged: 0/0
 30623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30628 ;;Total ram usage:        0 bytes
 30629 ;; Hardware stack levels used:    1
 30630 ;; This function calls:
 30631 ;;		Nothing
 30632 ;; This function is called by:
 30633 ;;		_readTagRoutine
 30634 ;; This function uses a non-reentrant model
 30635 ;;
 30636                           
 30637                           	psect	text163
 30638  007BBC                     __ptext163:
 30639                           	opt stack 0
 30640  007BBC                     i2_setBlueLed:
 30641                           	opt stack 19
 30642                           
 30643                           ;led.c: 273: LATHbits.LATH0 = 0;
 30644                           
 30645                           ;incstack = 0
 30646  007BBC  9080               	bcf	3968,0,c	;volatile
 30647                           
 30648                           ;led.c: 274: LATAbits.LATA0 = 1;
 30649  007BBE  8079               	bsf	3961,0,c	;volatile
 30650                           
 30651                           ;led.c: 275: LATHbits.LATH1 = 0;
 30652  007BC0  9280               	bcf	3968,1,c	;volatile
 30653  007BC2  0012               	return		;funcret
 30654  007BC4                     __end_ofi2_setBlueLed:
 30655                           	opt stack 0
 30656                           pclatu	equ	0xFFB
 30657                           pclath	equ	0xFFA
 30658                           tblptru	equ	0xFF8
 30659                           tblptrh	equ	0xFF7
 30660                           tblptrl	equ	0xFF6
 30661                           tablat	equ	0xFF5
 30662                           prodh	equ	0xFF4
 30663                           prodl	equ	0xFF3
 30664                           intcon	equ	0xFF2
 30665                           postinc0	equ	0xFEE
 30666                           fsr0h	equ	0xFEA
 30667                           fsr0l	equ	0xFE9
 30668                           wreg	equ	0xFE8
 30669                           indf1	equ	0xFE7
 30670                           postinc1	equ	0xFE6
 30671                           postdec1	equ	0xFE5
 30672                           plusw1	equ	0xFE3
 30673                           fsr1h	equ	0xFE2
 30674                           fsr1l	equ	0xFE1
 30675                           indf2	equ	0xFDF
 30676                           postinc2	equ	0xFDE
 30677                           postdec2	equ	0xFDD
 30678                           plusw2	equ	0xFDB
 30679                           fsr2h	equ	0xFDA
 30680                           fsr2l	equ	0xFD9
 30681                           status	equ	0xFD8
 30682                           
 30683 ;; *************** function _tagFor1 *****************
 30684 ;; Defined at:
 30685 ;;		line 639 in file "tagRead.c"
 30686 ;; Parameters:    Size  Location     Type
 30687 ;;		None
 30688 ;; Auto vars:     Size  Location     Type
 30689 ;;		None
 30690 ;; Return value:  Size  Location     Type
 30691 ;;                  1    wreg      void 
 30692 ;; Registers used:
 30693 ;;		wreg, status,2, status,0, cstack
 30694 ;; Tracked objects:
 30695 ;;		On entry : 0/0
 30696 ;;		On exit  : 0/0
 30697 ;;		Unchanged: 0/0
 30698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30703 ;;Total ram usage:        0 bytes
 30704 ;; Hardware stack levels used:    1
 30705 ;; Hardware stack levels required when called:    2
 30706 ;; This function calls:
 30707 ;;		i2__delay_ms
 30708 ;; This function is called by:
 30709 ;;		_readTagRoutine
 30710 ;; This function uses a non-reentrant model
 30711 ;;
 30712                           
 30713                           	psect	text164
 30714  007920                     __ptext164:
 30715                           	opt stack 0
 30716  007920                     _tagFor1:
 30717                           	opt stack 17
 30718                           
 30719                           ;tagRead.c: 640: TRISEbits.TRISE2 = 0;
 30720                           
 30721                           ;incstack = 0
 30722  007920  9485               	bcf	3973,2,c	;volatile
 30723                           
 30724                           ;tagRead.c: 641: TRISEbits.TRISE3 = 0;
 30725  007922  9685               	bcf	3973,3,c	;volatile
 30726                           
 30727                           ;tagRead.c: 642: WPUEbits.WPUE2 = 0;
 30728  007924  010E               	movlb	14	; () banked
 30729  007926  95AE               	bcf	174,2,b	;volatile
 30730                           
 30731                           ;tagRead.c: 644: LATEbits.LATE3 = 1;
 30732  007928  867D               	bsf	3965,3,c	;volatile
 30733                           
 30734                           ;tagRead.c: 645: LATEbits.LATE2 = 0;
 30735  00792A  947D               	bcf	3965,2,c	;volatile
 30736                           
 30737                           ; BSR set to: 14
 30738                           ;tagRead.c: 646: _delay_ms(2);
 30739  00792C  0E00               	movlw	0
 30740  00792E  6E03               	movwf	i2__delay_ms@delay+1,c
 30741  007930  0E02               	movlw	2
 30742  007932  6E02               	movwf	i2__delay_ms@delay,c
 30743  007934  EC97  F038         	call	i2__delay_ms	;wreg free
 30744  007938  0012               	return		;funcret
 30745  00793A                     __end_of_tagFor1:
 30746                           	opt stack 0
 30747                           pclatu	equ	0xFFB
 30748                           pclath	equ	0xFFA
 30749                           tblptru	equ	0xFF8
 30750                           tblptrh	equ	0xFF7
 30751                           tblptrl	equ	0xFF6
 30752                           tablat	equ	0xFF5
 30753                           prodh	equ	0xFF4
 30754                           prodl	equ	0xFF3
 30755                           intcon	equ	0xFF2
 30756                           postinc0	equ	0xFEE
 30757                           fsr0h	equ	0xFEA
 30758                           fsr0l	equ	0xFE9
 30759                           wreg	equ	0xFE8
 30760                           indf1	equ	0xFE7
 30761                           postinc1	equ	0xFE6
 30762                           postdec1	equ	0xFE5
 30763                           plusw1	equ	0xFE3
 30764                           fsr1h	equ	0xFE2
 30765                           fsr1l	equ	0xFE1
 30766                           indf2	equ	0xFDF
 30767                           postinc2	equ	0xFDE
 30768                           postdec2	equ	0xFDD
 30769                           plusw2	equ	0xFDB
 30770                           fsr2h	equ	0xFDA
 30771                           fsr2l	equ	0xFD9
 30772                           status	equ	0xFD8
 30773                           
 30774 ;; *************** function _tagFor0 *****************
 30775 ;; Defined at:
 30776 ;;		line 629 in file "tagRead.c"
 30777 ;; Parameters:    Size  Location     Type
 30778 ;;		None
 30779 ;; Auto vars:     Size  Location     Type
 30780 ;;		None
 30781 ;; Return value:  Size  Location     Type
 30782 ;;                  1    wreg      void 
 30783 ;; Registers used:
 30784 ;;		wreg, status,2, status,0, cstack
 30785 ;; Tracked objects:
 30786 ;;		On entry : 0/0
 30787 ;;		On exit  : 0/0
 30788 ;;		Unchanged: 0/0
 30789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30794 ;;Total ram usage:        0 bytes
 30795 ;; Hardware stack levels used:    1
 30796 ;; Hardware stack levels required when called:    2
 30797 ;; This function calls:
 30798 ;;		i2__delay_ms
 30799 ;; This function is called by:
 30800 ;;		_readTagRoutine
 30801 ;; This function uses a non-reentrant model
 30802 ;;
 30803                           
 30804                           	psect	text165
 30805  00793A                     __ptext165:
 30806                           	opt stack 0
 30807  00793A                     _tagFor0:
 30808                           	opt stack 17
 30809                           
 30810                           ;tagRead.c: 630: TRISEbits.TRISE2 = 0;
 30811                           
 30812                           ;incstack = 0
 30813  00793A  9485               	bcf	3973,2,c	;volatile
 30814                           
 30815                           ;tagRead.c: 631: TRISEbits.TRISE3 = 0;
 30816  00793C  9685               	bcf	3973,3,c	;volatile
 30817                           
 30818                           ;tagRead.c: 632: WPUEbits.WPUE2 = 0;
 30819  00793E  010E               	movlb	14	; () banked
 30820  007940  95AE               	bcf	174,2,b	;volatile
 30821                           
 30822                           ;tagRead.c: 634: LATEbits.LATE3 = 0;
 30823  007942  967D               	bcf	3965,3,c	;volatile
 30824                           
 30825                           ;tagRead.c: 635: LATEbits.LATE2 = 1;
 30826  007944  847D               	bsf	3965,2,c	;volatile
 30827                           
 30828                           ; BSR set to: 14
 30829                           ;tagRead.c: 636: _delay_ms(2);
 30830  007946  0E00               	movlw	0
 30831  007948  6E03               	movwf	i2__delay_ms@delay+1,c
 30832  00794A  0E02               	movlw	2
 30833  00794C  6E02               	movwf	i2__delay_ms@delay,c
 30834  00794E  EC97  F038         	call	i2__delay_ms	;wreg free
 30835  007952  0012               	return		;funcret
 30836  007954                     __end_of_tagFor0:
 30837                           	opt stack 0
 30838                           pclatu	equ	0xFFB
 30839                           pclath	equ	0xFFA
 30840                           tblptru	equ	0xFF8
 30841                           tblptrh	equ	0xFF7
 30842                           tblptrl	equ	0xFF6
 30843                           tablat	equ	0xFF5
 30844                           prodh	equ	0xFF4
 30845                           prodl	equ	0xFF3
 30846                           intcon	equ	0xFF2
 30847                           postinc0	equ	0xFEE
 30848                           fsr0h	equ	0xFEA
 30849                           fsr0l	equ	0xFE9
 30850                           wreg	equ	0xFE8
 30851                           indf1	equ	0xFE7
 30852                           postinc1	equ	0xFE6
 30853                           postdec1	equ	0xFE5
 30854                           plusw1	equ	0xFE3
 30855                           fsr1h	equ	0xFE2
 30856                           fsr1l	equ	0xFE1
 30857                           indf2	equ	0xFDF
 30858                           postinc2	equ	0xFDE
 30859                           postdec2	equ	0xFDD
 30860                           plusw2	equ	0xFDB
 30861                           fsr2h	equ	0xFDA
 30862                           fsr2l	equ	0xFD9
 30863                           status	equ	0xFD8
 30864                           
 30865 ;; *************** function _addNewTag *****************
 30866 ;; Defined at:
 30867 ;;		line 96 in file "tagRead.c"
 30868 ;; Parameters:    Size  Location     Type
 30869 ;;		None
 30870 ;; Auto vars:     Size  Location     Type
 30871 ;;  i               2   25[COMRAM] int 
 30872 ;; Return value:  Size  Location     Type
 30873 ;;                  1    wreg      void 
 30874 ;; Registers used:
 30875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30876 ;; Tracked objects:
 30877 ;;		On entry : 0/0
 30878 ;;		On exit  : 0/0
 30879 ;;		Unchanged: 0/0
 30880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30882 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30883 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30884 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30885 ;;Total ram usage:        7 bytes
 30886 ;; Hardware stack levels used:    1
 30887 ;; Hardware stack levels required when called:    2
 30888 ;; This function calls:
 30889 ;;		i2_addPacketToOutgoingQueue
 30890 ;;		i2_checkForExistingUID
 30891 ;; This function is called by:
 30892 ;;		_readTagRoutine
 30893 ;; This function uses a non-reentrant model
 30894 ;;
 30895                           
 30896                           	psect	text166
 30897  0033CA                     __ptext166:
 30898                           	opt stack 0
 30899  0033CA                     _addNewTag:
 30900                           	opt stack 17
 30901                           
 30902                           ;tagRead.c: 97: if(checkForExistingUID(TAG_Response + 2) || ABB_1.dets_length >= 10)
 30903                           
 30904                           ;incstack = 0
 30905  0033CA  0E4F               	movlw	low (_TAG_Response+2)
 30906  0033CC  6E07               	movwf	i2checkForExistingUID@receivedUID,c
 30907  0033CE  0E00               	movlw	high (_TAG_Response+2)
 30908  0033D0  6E08               	movwf	i2checkForExistingUID@receivedUID+1,c
 30909  0033D2  EC78  F02F         	call	i2_checkForExistingUID	;wreg free
 30910  0033D6  0900               	iorlw	0
 30911  0033D8  A4D8               	btfss	status,2,c
 30912  0033DA  0012               	return	
 30913  0033DC  EE23  F0C0         	lfsr	2,_ABB_1
 30914  0033E0  0E09               	movlw	9
 30915  0033E2  64DF               	cpfsgt	indf2,c
 30916  0033E4  D001               	goto	i2l11768
 30917  0033E6  0012               	return	
 30918  0033E8                     i2l11768:
 30919                           
 30920                           ;tagRead.c: 100: ABB_1.dets_length++;
 30921  0033E8  C3C0  FFE8         	movff	_ABB_1,wreg
 30922  0033EC  0F01               	addlw	1
 30923  0033EE  CFE8 F3C0          	movff	wreg,_ABB_1
 30924                           
 30925                           ;tagRead.c: 101: ABB_1.det_arrays.info[ABB_1.dets_length].delay = 4000;
 30926  0033F2  0EF9               	movlw	249
 30927  0033F4  6E15               	movwf	??_addNewTag& (0+255),c
 30928  0033F6  0E01               	movlw	1
 30929  0033F8  6E16               	movwf	(??_addNewTag+1)& (0+255),c
 30930  0033FA  C3C0  F017         	movff	_ABB_1,??_addNewTag+2
 30931  0033FE  5017               	movf	??_addNewTag+2,w,c
 30932  003400  0D04               	mullw	4
 30933  003402  5015               	movf	??_addNewTag,w,c
 30934  003404  26F3               	addwf	prodl,f,c
 30935  003406  5016               	movf	??_addNewTag+1,w,c
 30936  003408  22F4               	addwfc	prodh,f,c
 30937  00340A  0EC0               	movlw	low _ABB_1
 30938  00340C  6E18               	movwf	(??_addNewTag+3)& (0+255),c
 30939  00340E  0E03               	movlw	high _ABB_1
 30940  003410  6E19               	movwf	(??_addNewTag+4)& (0+255),c
 30941  003412  0E04               	movlw	4
 30942  003414  2618               	addwf	??_addNewTag+3,f,c
 30943  003416  0E00               	movlw	0
 30944  003418  2219               	addwfc	??_addNewTag+4,f,c
 30945  00341A  50F3               	movf	prodl,w,c
 30946  00341C  2618               	addwf	??_addNewTag+3,f,c
 30947  00341E  50F4               	movf	prodh,w,c
 30948  003420  2219               	addwfc	??_addNewTag+4,f,c
 30949  003422  0E02               	movlw	2
 30950  003424  2418               	addwf	??_addNewTag+3,w,c
 30951  003426  6ED9               	movwf	fsr2l,c
 30952  003428  0E00               	movlw	0
 30953  00342A  2019               	addwfc	??_addNewTag+4,w,c
 30954  00342C  6EDA               	movwf	fsr2h,c
 30955  00342E  0EA0               	movlw	160
 30956  003430  6EDE               	movwf	postinc2,c
 30957  003432  0E0F               	movlw	15
 30958  003434  6EDD               	movwf	postdec2,c
 30959                           
 30960                           ;tagRead.c: 102: for (int i = 0; i < 4; i ++){
 30961  003436  0E00               	movlw	0
 30962  003438  6E1B               	movwf	addNewTag@i+1,c
 30963  00343A  0E00               	movlw	0
 30964  00343C  6E1A               	movwf	addNewTag@i,c
 30965  00343E                     i2l11774:
 30966  00343E  BE1B               	btfsc	addNewTag@i+1,7,c
 30967  003440  D006               	goto	i2l11778
 30968  003442  501B               	movf	addNewTag@i+1,w,c
 30969  003444  E12B               	bnz	i2l11784
 30970  003446  0E04               	movlw	4
 30971  003448  5C1A               	subwf	addNewTag@i,w,c
 30972  00344A  B0D8               	btfsc	status,0,c
 30973  00344C  D027               	goto	i2l11784
 30974  00344E                     i2l11778:
 30975                           
 30976                           ;tagRead.c: 103: ABB_1.det_arrays.UIDs[ABB_1.dets_length].UID[i] = TAG_Response[i + 2];
 30977  00344E  0E02               	movlw	2
 30978  003450  241A               	addwf	addNewTag@i,w,c
 30979  003452  6E15               	movwf	??_addNewTag& (0+255),c
 30980  003454  0E00               	movlw	0
 30981  003456  201B               	addwfc	addNewTag@i+1,w,c
 30982  003458  6E16               	movwf	(??_addNewTag+1)& (0+255),c
 30983  00345A  0E4D               	movlw	low _TAG_Response
 30984  00345C  2415               	addwf	??_addNewTag,w,c
 30985  00345E  6ED9               	movwf	fsr2l,c
 30986  003460  0E00               	movlw	high _TAG_Response
 30987  003462  2016               	addwfc	??_addNewTag+1,w,c
 30988  003464  6EDA               	movwf	fsr2h,c
 30989  003466  C3C0  F017         	movff	_ABB_1,??_addNewTag+2
 30990  00346A  5017               	movf	??_addNewTag+2,w,c
 30991  00346C  0D05               	mullw	5
 30992  00346E  0EC0               	movlw	low _ABB_1
 30993  003470  6E18               	movwf	(??_addNewTag+3)& (0+255),c
 30994  003472  0E03               	movlw	high _ABB_1
 30995  003474  6E19               	movwf	(??_addNewTag+4)& (0+255),c
 30996  003476  0E04               	movlw	4
 30997  003478  2618               	addwf	??_addNewTag+3,f,c
 30998  00347A  0E00               	movlw	0
 30999  00347C  2219               	addwfc	??_addNewTag+4,f,c
 31000  00347E  50F3               	movf	prodl,w,c
 31001  003480  2618               	addwf	??_addNewTag+3,f,c
 31002  003482  50F4               	movf	prodh,w,c
 31003  003484  2219               	addwfc	??_addNewTag+4,f,c
 31004  003486  501A               	movf	addNewTag@i,w,c
 31005  003488  2418               	addwf	??_addNewTag+3,w,c
 31006  00348A  6EE1               	movwf	fsr1l,c
 31007  00348C  501B               	movf	addNewTag@i+1,w,c
 31008  00348E  2019               	addwfc	??_addNewTag+4,w,c
 31009  003490  6EE2               	movwf	fsr1h,c
 31010  003492  CFDF FFE7          	movff	indf2,indf1
 31011  003496  4A1A               	infsnz	addNewTag@i,f,c
 31012  003498  2A1B               	incf	addNewTag@i+1,f,c
 31013  00349A  D7D1               	goto	i2l11774
 31014  00349C                     i2l11784:
 31015                           
 31016                           ;tagRead.c: 104: }
 31017                           ;tagRead.c: 105: ABB_1.det_arrays.info[ABB_1.dets_length].data.tagged = 1;
 31018  00349C  0EF9               	movlw	249
 31019  00349E  6E15               	movwf	??_addNewTag& (0+255),c
 31020  0034A0  0E01               	movlw	1
 31021  0034A2  6E16               	movwf	(??_addNewTag+1)& (0+255),c
 31022  0034A4  C3C0  F017         	movff	_ABB_1,??_addNewTag+2
 31023  0034A8  5017               	movf	??_addNewTag+2,w,c
 31024  0034AA  0D04               	mullw	4
 31025  0034AC  5015               	movf	??_addNewTag,w,c
 31026  0034AE  26F3               	addwf	prodl,f,c
 31027  0034B0  5016               	movf	??_addNewTag+1,w,c
 31028  0034B2  22F4               	addwfc	prodh,f,c
 31029  0034B4  0EC0               	movlw	low _ABB_1
 31030  0034B6  6E18               	movwf	(??_addNewTag+3)& (0+255),c
 31031  0034B8  0E03               	movlw	high _ABB_1
 31032  0034BA  6E19               	movwf	(??_addNewTag+4)& (0+255),c
 31033  0034BC  0E04               	movlw	4
 31034  0034BE  2618               	addwf	??_addNewTag+3,f,c
 31035  0034C0  0E00               	movlw	0
 31036  0034C2  2219               	addwfc	??_addNewTag+4,f,c
 31037  0034C4  50F3               	movf	prodl,w,c
 31038  0034C6  2618               	addwf	??_addNewTag+3,f,c
 31039  0034C8  50F4               	movf	prodh,w,c
 31040  0034CA  2219               	addwfc	??_addNewTag+4,f,c
 31041  0034CC  0E01               	movlw	1
 31042  0034CE  2418               	addwf	??_addNewTag+3,w,c
 31043  0034D0  6ED9               	movwf	fsr2l,c
 31044  0034D2  0E00               	movlw	0
 31045  0034D4  2019               	addwfc	??_addNewTag+4,w,c
 31046  0034D6  6EDA               	movwf	fsr2h,c
 31047  0034D8  84DF               	bsf	indf2,2,c
 31048                           
 31049                           ;tagRead.c: 106: addPacketToOutgoingQueue(&ABB_1.det_arrays.UIDs[ABB_1.dets_length], 0b0
      +                          0001010, sizeof(detonator_UID), ABB_1.destination);
 31050  0034DA  C3C0  F015         	movff	_ABB_1,??_addNewTag
 31051  0034DE  5015               	movf	??_addNewTag,w,c
 31052  0034E0  0D05               	mullw	5
 31053  0034E2  0EC4               	movlw	low (_ABB_1+4)
 31054  0034E4  24F3               	addwf	prodl,w,c
 31055  0034E6  6E01               	movwf	i2addPacketToOutgoingQueue@data,c
 31056  0034E8  0E03               	movlw	high (_ABB_1+4)
 31057  0034EA  20F4               	addwfc	prodh,w,c
 31058  0034EC  6E02               	movwf	i2addPacketToOutgoingQueue@data+1,c
 31059  0034EE  0E0A               	movlw	10
 31060  0034F0  6E03               	movwf	i2addPacketToOutgoingQueue@command,c
 31061  0034F2  0E05               	movlw	5
 31062  0034F4  6E04               	movwf	i2addPacketToOutgoingQueue@length,c
 31063  0034F6  C751  F005         	movff	_ABB_1+913,i2addPacketToOutgoingQueue@destination
 31064  0034FA  C752  F006         	movff	_ABB_1+914,i2addPacketToOutgoingQueue@destination+1
 31065  0034FE  EC55  F02C         	call	i2_addPacketToOutgoingQueue	;wreg free
 31066                           
 31067                           ;tagRead.c: 107: addPacketToOutgoingQueue(&ABB_1.det_arrays.info[ABB_1.dets_length], 0b0
      +                          0001011, sizeof(detonator_data), ABB_1.destination);
 31068  003502  0EF9               	movlw	249
 31069  003504  6E15               	movwf	??_addNewTag& (0+255),c
 31070  003506  0E01               	movlw	1
 31071  003508  6E16               	movwf	(??_addNewTag+1)& (0+255),c
 31072  00350A  C3C0  F017         	movff	_ABB_1,??_addNewTag+2
 31073  00350E  5017               	movf	??_addNewTag+2,w,c
 31074  003510  0D04               	mullw	4
 31075  003512  5015               	movf	??_addNewTag,w,c
 31076  003514  26F3               	addwf	prodl,f,c
 31077  003516  5016               	movf	??_addNewTag+1,w,c
 31078  003518  22F4               	addwfc	prodh,f,c
 31079  00351A  0EC4               	movlw	low (_ABB_1+4)
 31080  00351C  24F3               	addwf	prodl,w,c
 31081  00351E  6E01               	movwf	i2addPacketToOutgoingQueue@data,c
 31082  003520  0E03               	movlw	high (_ABB_1+4)
 31083  003522  20F4               	addwfc	prodh,w,c
 31084  003524  6E02               	movwf	i2addPacketToOutgoingQueue@data+1,c
 31085  003526  0E0B               	movlw	11
 31086  003528  6E03               	movwf	i2addPacketToOutgoingQueue@command,c
 31087  00352A  0E04               	movlw	4
 31088  00352C  6E04               	movwf	i2addPacketToOutgoingQueue@length,c
 31089  00352E  C751  F005         	movff	_ABB_1+913,i2addPacketToOutgoingQueue@destination
 31090  003532  C752  F006         	movff	_ABB_1+914,i2addPacketToOutgoingQueue@destination+1
 31091  003536  EC55  F02C         	call	i2_addPacketToOutgoingQueue	;wreg free
 31092  00353A  0012               	return		;funcret
 31093  00353C                     __end_of_addNewTag:
 31094                           	opt stack 0
 31095                           pclatu	equ	0xFFB
 31096                           pclath	equ	0xFFA
 31097                           tblptru	equ	0xFF8
 31098                           tblptrh	equ	0xFF7
 31099                           tblptrl	equ	0xFF6
 31100                           tablat	equ	0xFF5
 31101                           prodh	equ	0xFF4
 31102                           prodl	equ	0xFF3
 31103                           intcon	equ	0xFF2
 31104                           postinc0	equ	0xFEE
 31105                           fsr0h	equ	0xFEA
 31106                           fsr0l	equ	0xFE9
 31107                           wreg	equ	0xFE8
 31108                           indf1	equ	0xFE7
 31109                           postinc1	equ	0xFE6
 31110                           postdec1	equ	0xFE5
 31111                           plusw1	equ	0xFE3
 31112                           fsr1h	equ	0xFE2
 31113                           fsr1l	equ	0xFE1
 31114                           indf2	equ	0xFDF
 31115                           postinc2	equ	0xFDE
 31116                           postdec2	equ	0xFDD
 31117                           plusw2	equ	0xFDB
 31118                           fsr2h	equ	0xFDA
 31119                           fsr2l	equ	0xFD9
 31120                           status	equ	0xFD8
 31121                           
 31122 ;; *************** function i2_checkForExistingUID *****************
 31123 ;; Defined at:
 31124 ;;		line 190 in file "peripherals.c"
 31125 ;; Parameters:    Size  Location     Type
 31126 ;;  receivedUID     2    6[COMRAM] PTR unsigned long 
 31127 ;;		 -> btPacket.receive(11), btPacket(22), response(4), TAG_Response(10), 
 31128 ;; Auto vars:     Size  Location     Type
 31129 ;;  checkForExis    2   18[COMRAM] int 
 31130 ;;  checkForExis    2   16[COMRAM] PTR unsigned long 
 31131 ;;		 -> ABB_1.det_arrays.UIDs.UID(4), ABB_1.det_arrays.UIDs(505), 
 31132 ;; Return value:  Size  Location     Type
 31133 ;;                  1    wreg      unsigned char 
 31134 ;; Registers used:
 31135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31136 ;; Tracked objects:
 31137 ;;		On entry : 0/0
 31138 ;;		On exit  : 0/0
 31139 ;;		Unchanged: 0/0
 31140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31141 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31142 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31143 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31144 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31145 ;;Total ram usage:       14 bytes
 31146 ;; Hardware stack levels used:    1
 31147 ;; Hardware stack levels required when called:    1
 31148 ;; This function calls:
 31149 ;;		i2___wmul
 31150 ;; This function is called by:
 31151 ;;		_addNewTag
 31152 ;; This function uses a non-reentrant model
 31153 ;;
 31154                           
 31155                           	psect	text167
 31156  005EF0                     __ptext167:
 31157                           	opt stack 0
 31158  005EF0                     i2_checkForExistingUID:
 31159                           	opt stack 17
 31160                           
 31161                           ;peripherals.c: 191: unsigned long *currentUID;
 31162                           ;peripherals.c: 192: for(int i = 0; i < ABB_1.dets_length; i ++){
 31163                           
 31164                           ;incstack = 0
 31165  005EF0  0E00               	movlw	0
 31166  005EF2  6E14               	movwf	i2checkForExistingUID@i+1,c
 31167  005EF4  0E00               	movlw	0
 31168  005EF6  6E13               	movwf	i2checkForExistingUID@i,c
 31169  005EF8  D033               	goto	i2l11246
 31170  005EFA                     i2l11234:
 31171                           
 31172                           ;peripherals.c: 193: currentUID = ABB_1.det_arrays.UIDs[i].UID;
 31173  005EFA  C013  F001         	movff	i2checkForExistingUID@i,i2___wmul@multiplier
 31174  005EFE  C014  F002         	movff	i2checkForExistingUID@i+1,i2___wmul@multiplier+1
 31175  005F02  0E00               	movlw	0
 31176  005F04  6E04               	movwf	i2___wmul@multiplicand+1,c
 31177  005F06  0E05               	movlw	5
 31178  005F08  6E03               	movwf	i2___wmul@multiplicand,c
 31179  005F0A  EC24  F03B         	call	i2___wmul	;wreg free
 31180  005F0E  0EC4               	movlw	low (_ABB_1+4)
 31181  005F10  2401               	addwf	?i2___wmul,w,c
 31182  005F12  6E11               	movwf	i2checkForExistingUID@currentUID,c
 31183  005F14  0E03               	movlw	high (_ABB_1+4)
 31184  005F16  2002               	addwfc	?i2___wmul+1,w,c
 31185  005F18  6E12               	movwf	i2checkForExistingUID@currentUID+1,c
 31186                           
 31187                           ;peripherals.c: 194: if(*currentUID == *receivedUID || !*receivedUID)
 31188  005F1A  C007  FFD9         	movff	i2checkForExistingUID@receivedUID,fsr2l
 31189  005F1E  C008  FFDA         	movff	i2checkForExistingUID@receivedUID+1,fsr2h
 31190  005F22  C011  FFE1         	movff	i2checkForExistingUID@currentUID,fsr1l
 31191  005F26  C012  FFE2         	movff	i2checkForExistingUID@currentUID+1,fsr1h
 31192  005F2A  50DE               	movf	postinc2,w,c
 31193  005F2C  18E6               	xorwf	postinc1,w,c
 31194  005F2E  E10A               	bnz	i2u731_40
 31195  005F30  50DE               	movf	postinc2,w,c
 31196  005F32  18E6               	xorwf	postinc1,w,c
 31197  005F34  E107               	bnz	i2u731_40
 31198  005F36  50DE               	movf	postinc2,w,c
 31199  005F38  18E6               	xorwf	postinc1,w,c
 31200  005F3A  E104               	bnz	i2u731_40
 31201  005F3C  50DE               	movf	postinc2,w,c
 31202  005F3E  18E6               	xorwf	postinc1,w,c
 31203  005F40  B4D8               	btfsc	status,2,c
 31204  005F42  D00A               	goto	i2l11240
 31205  005F44                     i2u731_40:
 31206  005F44  C007  FFD9         	movff	i2checkForExistingUID@receivedUID,fsr2l
 31207  005F48  C008  FFDA         	movff	i2checkForExistingUID@receivedUID+1,fsr2h
 31208  005F4C  50DE               	movf	postinc2,w,c
 31209  005F4E  10DE               	iorwf	postinc2,w,c
 31210  005F50  10DE               	iorwf	postinc2,w,c
 31211  005F52  10DE               	iorwf	postinc2,w,c
 31212  005F54  A4D8               	btfss	status,2,c
 31213  005F56  D002               	goto	i2l11244
 31214  005F58                     i2l11240:
 31215                           
 31216                           ;peripherals.c: 195: return 1;
 31217  005F58  0E01               	movlw	1
 31218  005F5A  0012               	return	
 31219  005F5C                     i2l11244:
 31220  005F5C  4A13               	infsnz	i2checkForExistingUID@i,f,c
 31221  005F5E  2A14               	incf	i2checkForExistingUID@i+1,f,c
 31222  005F60                     i2l11246:
 31223  005F60  EE23  F0C0         	lfsr	2,_ABB_1
 31224  005F64  50DF               	movf	indf2,w,c
 31225  005F66  6E09               	movwf	??i2_checkForExistingUID& (0+255),c
 31226  005F68  6A0A               	clrf	(??i2_checkForExistingUID+1)& (0+255),c
 31227  005F6A  5009               	movf	??i2_checkForExistingUID,w,c
 31228  005F6C  5C13               	subwf	i2checkForExistingUID@i,w,c
 31229  005F6E  5014               	movf	i2checkForExistingUID@i+1,w,c
 31230  005F70  0A80               	xorlw	128
 31231  005F72  6E0B               	movwf	(??i2_checkForExistingUID+2)& (0+255),c
 31232  005F74  500A               	movf	??i2_checkForExistingUID+1,w,c
 31233  005F76  0A80               	xorlw	128
 31234  005F78  580B               	subwfb	(??i2_checkForExistingUID+2)& (0+255),w,c
 31235  005F7A  A0D8               	btfss	status,0,c
 31236  005F7C  D7BE               	goto	i2l11234
 31237                           
 31238                           ;peripherals.c: 196: }
 31239                           ;peripherals.c: 197: return 0;
 31240  005F7E  0E00               	movlw	0
 31241  005F80  0012               	return	
 31242  005F82                     __end_ofi2_checkForExistingUID:
 31243                           	opt stack 0
 31244                           pclatu	equ	0xFFB
 31245                           pclath	equ	0xFFA
 31246                           tblptru	equ	0xFF8
 31247                           tblptrh	equ	0xFF7
 31248                           tblptrl	equ	0xFF6
 31249                           tablat	equ	0xFF5
 31250                           prodh	equ	0xFF4
 31251                           prodl	equ	0xFF3
 31252                           intcon	equ	0xFF2
 31253                           postinc0	equ	0xFEE
 31254                           fsr0h	equ	0xFEA
 31255                           fsr0l	equ	0xFE9
 31256                           wreg	equ	0xFE8
 31257                           indf1	equ	0xFE7
 31258                           postinc1	equ	0xFE6
 31259                           postdec1	equ	0xFE5
 31260                           plusw1	equ	0xFE3
 31261                           fsr1h	equ	0xFE2
 31262                           fsr1l	equ	0xFE1
 31263                           indf2	equ	0xFDF
 31264                           postinc2	equ	0xFDE
 31265                           postdec2	equ	0xFDD
 31266                           plusw2	equ	0xFDB
 31267                           fsr2h	equ	0xFDA
 31268                           fsr2l	equ	0xFD9
 31269                           status	equ	0xFD8
 31270                           
 31271 ;; *************** function i2___wmul *****************
 31272 ;; Defined at:
 31273 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
 31274 ;; Parameters:    Size  Location     Type
 31275 ;;  multiplier      2    0[COMRAM] unsigned int 
 31276 ;;  multiplicand    2    2[COMRAM] unsigned int 
 31277 ;; Auto vars:     Size  Location     Type
 31278 ;;  __wmul          2    4[COMRAM] unsigned int 
 31279 ;; Return value:  Size  Location     Type
 31280 ;;                  2    0[COMRAM] unsigned int 
 31281 ;; Registers used:
 31282 ;;		wreg, status,2, status,0, prodl, prodh
 31283 ;; Tracked objects:
 31284 ;;		On entry : 0/0
 31285 ;;		On exit  : 0/0
 31286 ;;		Unchanged: 0/0
 31287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31288 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31289 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31291 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31292 ;;Total ram usage:        6 bytes
 31293 ;; Hardware stack levels used:    1
 31294 ;; This function calls:
 31295 ;;		Nothing
 31296 ;; This function is called by:
 31297 ;;		i2_checkForExistingUID
 31298 ;; This function uses a non-reentrant model
 31299 ;;
 31300                           
 31301                           	psect	text168
 31302  007648                     __ptext168:
 31303                           	opt stack 0
 31304  007648                     i2___wmul:
 31305                           	opt stack 17
 31306                           
 31307                           ;incstack = 0
 31308  007648  5001               	movf	i2___wmul@multiplier,w,c
 31309  00764A  0203               	mulwf	i2___wmul@multiplicand,c
 31310  00764C  CFF3 F005          	movff	prodl,i2___wmul@product
 31311  007650  CFF4 F006          	movff	prodh,i2___wmul@product+1
 31312  007654  5001               	movf	i2___wmul@multiplier,w,c
 31313  007656  0204               	mulwf	i2___wmul@multiplicand+1,c
 31314  007658  50F3               	movf	prodl,w,c
 31315  00765A  2606               	addwf	i2___wmul@product+1,f,c
 31316  00765C  5002               	movf	i2___wmul@multiplier+1,w,c
 31317  00765E  0203               	mulwf	i2___wmul@multiplicand,c
 31318  007660  50F3               	movf	prodl,w,c
 31319  007662  2606               	addwf	i2___wmul@product+1,f,c
 31320  007664  C005  F001         	movff	i2___wmul@product,?i2___wmul
 31321  007668  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 31322  00766C  0012               	return	
 31323  00766E                     __end_ofi2___wmul:
 31324                           	opt stack 0
 31325                           pclatu	equ	0xFFB
 31326                           pclath	equ	0xFFA
 31327                           tblptru	equ	0xFF8
 31328                           tblptrh	equ	0xFF7
 31329                           tblptrl	equ	0xFF6
 31330                           tablat	equ	0xFF5
 31331                           prodh	equ	0xFF4
 31332                           prodl	equ	0xFF3
 31333                           intcon	equ	0xFF2
 31334                           postinc0	equ	0xFEE
 31335                           fsr0h	equ	0xFEA
 31336                           fsr0l	equ	0xFE9
 31337                           wreg	equ	0xFE8
 31338                           indf1	equ	0xFE7
 31339                           postinc1	equ	0xFE6
 31340                           postdec1	equ	0xFE5
 31341                           plusw1	equ	0xFE3
 31342                           fsr1h	equ	0xFE2
 31343                           fsr1l	equ	0xFE1
 31344                           indf2	equ	0xFDF
 31345                           postinc2	equ	0xFDE
 31346                           postdec2	equ	0xFDD
 31347                           plusw2	equ	0xFDB
 31348                           fsr2h	equ	0xFDA
 31349                           fsr2l	equ	0xFD9
 31350                           status	equ	0xFD8
 31351                           
 31352 ;; *************** function i2_addPacketToOutgoingQueue *****************
 31353 ;; Defined at:
 31354 ;;		line 20 in file "packetQueueHandler.c"
 31355 ;; Parameters:    Size  Location     Type
 31356 ;;  data            2    0[COMRAM] PTR unsigned char 
 31357 ;;		 -> ABB_1.det_arrays.info(404), ABB_1.det_arrays.UIDs(505), ABB_1.det_arrays(909), NULL(0), 
 31358 ;;  command         1    2[COMRAM] unsigned char 
 31359 ;;  length          1    3[COMRAM] unsigned char 
 31360 ;;  destination     2    4[COMRAM] unsigned short 
 31361 ;; Auto vars:     Size  Location     Type
 31362 ;;		None
 31363 ;; Return value:  Size  Location     Type
 31364 ;;                  1    wreg      void 
 31365 ;; Registers used:
 31366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31367 ;; Tracked objects:
 31368 ;;		On entry : 0/0
 31369 ;;		On exit  : 0/0
 31370 ;;		Unchanged: 0/0
 31371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31372 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31374 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31375 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31376 ;;Total ram usage:        8 bytes
 31377 ;; Hardware stack levels used:    1
 31378 ;; This function calls:
 31379 ;;		Nothing
 31380 ;; This function is called by:
 31381 ;;		_addNewTag
 31382 ;; This function uses a non-reentrant model
 31383 ;;
 31384                           
 31385                           	psect	text169
 31386  0058AA                     __ptext169:
 31387                           	opt stack 0
 31388  0058AA                     i2_addPacketToOutgoingQueue:
 31389                           	opt stack 18
 31390                           
 31391                           ;packetQueueHandler.c: 21: if(ABB_1.destination == 0xFFFF)
 31392                           
 31393                           ;incstack = 0
 31394  0058AA  EE27  F051         	lfsr	2,_ABB_1+913
 31395  0058AE  28DE               	incf	postinc2,w,c
 31396  0058B0  E103               	bnz	i2l11272
 31397  0058B2  28DE               	incf	postinc2,w,c
 31398  0058B4  B4D8               	btfsc	status,2,c
 31399  0058B6  0012               	return	
 31400  0058B8                     i2l11272:
 31401                           
 31402                           ;packetQueueHandler.c: 24: outgoingQueue.queue_store[outgoingQueue.queue_pointer].comman
      +                          d = command;
 31403  0058B8  0101               	movlb	1	; () banked
 31404  0058BA  5101               	movf	(_outgoingQueue+1)& (0+255),w,b
 31405  0058BC  0D07               	mullw	7
 31406  0058BE  0E06               	movlw	6
 31407  0058C0  26F3               	addwf	prodl,f,c
 31408  0058C2  0E00               	movlw	0
 31409  0058C4  22F4               	addwfc	prodh,f,c
 31410  0058C6  0E00               	movlw	low _outgoingQueue
 31411  0058C8  24F3               	addwf	prodl,w,c
 31412  0058CA  6ED9               	movwf	fsr2l,c
 31413  0058CC  0E01               	movlw	high _outgoingQueue
 31414  0058CE  20F4               	addwfc	prodh,w,c
 31415  0058D0  6EDA               	movwf	fsr2h,c
 31416  0058D2  C003  FFDF         	movff	i2addPacketToOutgoingQueue@command,indf2
 31417                           
 31418                           ;packetQueueHandler.c: 25: outgoingQueue.queue_store[outgoingQueue.queue_pointer].data =
      +                           data;
 31419  0058D6  0101               	movlb	1	; () banked
 31420  0058D8  5101               	movf	(_outgoingQueue+1)& (0+255),w,b
 31421  0058DA  0D07               	mullw	7
 31422  0058DC  0E07               	movlw	7
 31423  0058DE  26F3               	addwf	prodl,f,c
 31424  0058E0  0E00               	movlw	0
 31425  0058E2  22F4               	addwfc	prodh,f,c
 31426  0058E4  0E00               	movlw	low _outgoingQueue
 31427  0058E6  24F3               	addwf	prodl,w,c
 31428  0058E8  6ED9               	movwf	fsr2l,c
 31429  0058EA  0E01               	movlw	high _outgoingQueue
 31430  0058EC  20F4               	addwfc	prodh,w,c
 31431  0058EE  6EDA               	movwf	fsr2h,c
 31432  0058F0  C001  FFDE         	movff	i2addPacketToOutgoingQueue@data,postinc2
 31433  0058F4  C002  FFDD         	movff	i2addPacketToOutgoingQueue@data+1,postdec2
 31434                           
 31435                           ;packetQueueHandler.c: 26: outgoingQueue.queue_store[outgoingQueue.queue_pointer].data_l
      +                          ength = length;
 31436  0058F8  0101               	movlb	1	; () banked
 31437  0058FA  5101               	movf	(_outgoingQueue+1)& (0+255),w,b
 31438  0058FC  0D07               	mullw	7
 31439  0058FE  0E02               	movlw	2
 31440  005900  26F3               	addwf	prodl,f,c
 31441  005902  0E00               	movlw	0
 31442  005904  22F4               	addwfc	prodh,f,c
 31443  005906  0E00               	movlw	low _outgoingQueue
 31444  005908  24F3               	addwf	prodl,w,c
 31445  00590A  6ED9               	movwf	fsr2l,c
 31446  00590C  0E01               	movlw	high _outgoingQueue
 31447  00590E  20F4               	addwfc	prodh,w,c
 31448  005910  6EDA               	movwf	fsr2h,c
 31449  005912  C004  FFDF         	movff	i2addPacketToOutgoingQueue@length,indf2
 31450                           
 31451                           ;packetQueueHandler.c: 27: outgoingQueue.queue_store[outgoingQueue.queue_pointer].destin
      +                          ation = destination;
 31452  005916  0101               	movlb	1	; () banked
 31453  005918  5101               	movf	(_outgoingQueue+1)& (0+255),w,b
 31454  00591A  0D07               	mullw	7
 31455  00591C  0E03               	movlw	3
 31456  00591E  26F3               	addwf	prodl,f,c
 31457  005920  0E00               	movlw	0
 31458  005922  22F4               	addwfc	prodh,f,c
 31459  005924  0E00               	movlw	low _outgoingQueue
 31460  005926  24F3               	addwf	prodl,w,c
 31461  005928  6ED9               	movwf	fsr2l,c
 31462  00592A  0E01               	movlw	high _outgoingQueue
 31463  00592C  20F4               	addwfc	prodh,w,c
 31464  00592E  6EDA               	movwf	fsr2h,c
 31465  005930  C005  FFDE         	movff	i2addPacketToOutgoingQueue@destination,postinc2
 31466  005934  C006  FFDD         	movff	i2addPacketToOutgoingQueue@destination+1,postdec2
 31467                           
 31468                           ; BSR set to: 1
 31469                           ;packetQueueHandler.c: 28: if(outgoingQueue.length < 20)
 31470  005938  0E14               	movlw	20
 31471  00593A  0101               	movlb	1	; () banked
 31472  00593C  6100               	cpfslt	_outgoingQueue& (0+255),b
 31473  00593E  D002               	goto	i2l844
 31474                           
 31475                           ; BSR set to: 1
 31476                           ;packetQueueHandler.c: 29: outgoingQueue.length++;
 31477  005940  0101               	movlb	1	; () banked
 31478  005942  2B00               	incf	_outgoingQueue& (0+255),f,b
 31479  005944                     i2l844:
 31480                           
 31481                           ; BSR set to: 1
 31482                           ;packetQueueHandler.c: 30: outgoingQueue.queue_pointer++;
 31483  005944  0101               	movlb	1	; () banked
 31484  005946  2B01               	incf	(_outgoingQueue+1)& (0+255),f,b
 31485                           
 31486                           ; BSR set to: 1
 31487                           ;packetQueueHandler.c: 31: if (outgoingQueue.queue_pointer == 20){
 31488  005948  0E14               	movlw	20
 31489  00594A  0101               	movlb	1	; () banked
 31490  00594C  1901               	xorwf	(_outgoingQueue+1)& (0+255),w,b
 31491  00594E  A4D8               	btfss	status,2,c
 31492  005950  0012               	return	
 31493                           
 31494                           ; BSR set to: 1
 31495                           ;packetQueueHandler.c: 32: outgoingQueue.queue_pointer = 0;
 31496  005952  0E00               	movlw	0
 31497  005954  0101               	movlb	1	; () banked
 31498  005956  6F01               	movwf	(_outgoingQueue+1)& (0+255),b
 31499  005958  0012               	return	
 31500  00595A                     __end_ofi2_addPacketToOutgoingQueue:
 31501                           	opt stack 0
 31502                           pclatu	equ	0xFFB
 31503                           pclath	equ	0xFFA
 31504                           tblptru	equ	0xFF8
 31505                           tblptrh	equ	0xFF7
 31506                           tblptrl	equ	0xFF6
 31507                           tablat	equ	0xFF5
 31508                           prodh	equ	0xFF4
 31509                           prodl	equ	0xFF3
 31510                           intcon	equ	0xFF2
 31511                           postinc0	equ	0xFEE
 31512                           fsr0h	equ	0xFEA
 31513                           fsr0l	equ	0xFE9
 31514                           wreg	equ	0xFE8
 31515                           indf1	equ	0xFE7
 31516                           postinc1	equ	0xFE6
 31517                           postdec1	equ	0xFE5
 31518                           plusw1	equ	0xFE3
 31519                           fsr1h	equ	0xFE2
 31520                           fsr1l	equ	0xFE1
 31521                           indf2	equ	0xFDF
 31522                           postinc2	equ	0xFDE
 31523                           postdec2	equ	0xFDD
 31524                           plusw2	equ	0xFDB
 31525                           fsr2h	equ	0xFDA
 31526                           fsr2l	equ	0xFD9
 31527                           status	equ	0xFD8
 31528                           
 31529 ;; *************** function _READ_TAG_REVERSE *****************
 31530 ;; Defined at:
 31531 ;;		line 574 in file "tagRead.c"
 31532 ;; Parameters:    Size  Location     Type
 31533 ;;		None
 31534 ;; Auto vars:     Size  Location     Type
 31535 ;;  i               2   12[COMRAM] int 
 31536 ;; Return value:  Size  Location     Type
 31537 ;;                  1    wreg      unsigned char 
 31538 ;; Registers used:
 31539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31540 ;; Tracked objects:
 31541 ;;		On entry : 0/0
 31542 ;;		On exit  : 0/0
 31543 ;;		Unchanged: 0/0
 31544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31546 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31548 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31549 ;;Total ram usage:        2 bytes
 31550 ;; Hardware stack levels used:    1
 31551 ;; Hardware stack levels required when called:    4
 31552 ;; This function calls:
 31553 ;;		_CHECK_CRC16
 31554 ;;		_SCAN_TAG_1
 31555 ;;		_initialiseTagADC_1
 31556 ;; This function is called by:
 31557 ;;		_readTagRoutine
 31558 ;; This function uses a non-reentrant model
 31559 ;;
 31560                           
 31561                           	psect	text170
 31562  006332                     __ptext170:
 31563                           	opt stack 0
 31564  006332                     _READ_TAG_REVERSE:
 31565                           	opt stack 15
 31566                           
 31567                           ;tagRead.c: 575: TAG_Request[0] = 0x03;
 31568                           
 31569                           ;incstack = 0
 31570  006332  0E03               	movlw	3
 31571  006334  6E2D               	movwf	_TAG_Request,c
 31572                           
 31573                           ;tagRead.c: 576: TAG_Request[1] = 0x01;
 31574  006336  0E01               	movlw	1
 31575  006338  6E2E               	movwf	_TAG_Request+1,c
 31576                           
 31577                           ;tagRead.c: 577: TAG_Request[2] = 0x00;
 31578  00633A  0E00               	movlw	0
 31579  00633C  6E2F               	movwf	_TAG_Request+2,c
 31580                           
 31581                           ;tagRead.c: 578: TAG_Request[3] = 0x01;
 31582  00633E  0E01               	movlw	1
 31583  006340  6E30               	movwf	_TAG_Request+3,c
 31584                           
 31585                           ;tagRead.c: 579: TAG_Request[4] = 0x00;
 31586  006342  0E00               	movlw	0
 31587  006344  6E31               	movwf	_TAG_Request+4,c
 31588                           
 31589                           ;tagRead.c: 580: TAG_Request[5] = 0x01;
 31590  006346  0E01               	movlw	1
 31591  006348  6E32               	movwf	_TAG_Request+5,c
 31592                           
 31593                           ;tagRead.c: 581: TAG_Request[6] = 0x00;
 31594  00634A  0E00               	movlw	0
 31595  00634C  6E33               	movwf	_TAG_Request+6,c
 31596                           
 31597                           ;tagRead.c: 582: initialiseTagADC_1();
 31598  00634E  EC37  F039         	call	_initialiseTagADC_1	;wreg free
 31599                           
 31600                           ;tagRead.c: 583: ANSELEbits.ANSELE3 = 1;
 31601  006352  010E               	movlb	14	; () banked
 31602  006354  87AF               	bsf	175,3,b	;volatile
 31603                           
 31604                           ; BSR set to: 14
 31605                           ;tagRead.c: 584: TAG_Response[0] = SCAN_TAG_1();
 31606  006356  EC0D  F026         	call	_SCAN_TAG_1	;wreg free
 31607  00635A  5009               	movf	?_SCAN_TAG_1,w,c
 31608  00635C  6E4D               	movwf	_TAG_Response,c
 31609                           
 31610                           ;tagRead.c: 585: for(int i = 0; i < 8; i ++){
 31611  00635E  0E00               	movlw	0
 31612  006360  6E0E               	movwf	READ_TAG_REVERSE@i+1,c
 31613  006362  0E00               	movlw	0
 31614  006364  6E0D               	movwf	READ_TAG_REVERSE@i,c
 31615  006366                     i2l11830:
 31616  006366  BE0E               	btfsc	READ_TAG_REVERSE@i+1,7,c
 31617  006368  D006               	goto	i2l11834
 31618  00636A  500E               	movf	READ_TAG_REVERSE@i+1,w,c
 31619  00636C  E113               	bnz	i2l11842
 31620  00636E  0E08               	movlw	8
 31621  006370  5C0D               	subwf	READ_TAG_REVERSE@i,w,c
 31622  006372  B0D8               	btfsc	status,0,c
 31623  006374  D00F               	goto	i2l11842
 31624  006376                     i2l11834:
 31625                           
 31626                           ;tagRead.c: 586: TAG_Request[5] = i + 1;
 31627  006376  280D               	incf	READ_TAG_REVERSE@i,w,c
 31628  006378  6E32               	movwf	_TAG_Request+5,c
 31629                           
 31630                           ;tagRead.c: 587: TAG_Response[i] = SCAN_TAG_1();
 31631  00637A  0E4D               	movlw	low _TAG_Response
 31632  00637C  240D               	addwf	READ_TAG_REVERSE@i,w,c
 31633  00637E  6ED9               	movwf	fsr2l,c
 31634  006380  0E00               	movlw	high _TAG_Response
 31635  006382  200E               	addwfc	READ_TAG_REVERSE@i+1,w,c
 31636  006384  6EDA               	movwf	fsr2h,c
 31637  006386  EC0D  F026         	call	_SCAN_TAG_1	;wreg free
 31638  00638A  5009               	movf	?_SCAN_TAG_1,w,c
 31639  00638C  6EDF               	movwf	indf2,c
 31640  00638E  4A0D               	infsnz	READ_TAG_REVERSE@i,f,c
 31641  006390  2A0E               	incf	READ_TAG_REVERSE@i+1,f,c
 31642  006392  D7E9               	goto	i2l11830
 31643  006394                     i2l11842:
 31644                           
 31645                           ;tagRead.c: 588: }
 31646                           ;tagRead.c: 589: if (CHECK_CRC16()){
 31647  006394  EC7B  F038         	call	_CHECK_CRC16	;wreg free
 31648  006398  0900               	iorlw	0
 31649  00639A  B4D8               	btfsc	status,2,c
 31650  00639C  D002               	goto	i2l11850
 31651                           
 31652                           ;tagRead.c: 590: return 1;
 31653  00639E  0E01               	movlw	1
 31654                           
 31655                           ;tagRead.c: 591: }
 31656  0063A0  0012               	return	
 31657  0063A2                     i2l11850:
 31658                           
 31659                           ;tagRead.c: 592: else
 31660                           ;tagRead.c: 593: return 0;
 31661  0063A2  0E00               	movlw	0
 31662  0063A4  0012               	return	
 31663  0063A6                     __end_of_READ_TAG_REVERSE:
 31664                           	opt stack 0
 31665                           pclatu	equ	0xFFB
 31666                           pclath	equ	0xFFA
 31667                           tblptru	equ	0xFF8
 31668                           tblptrh	equ	0xFF7
 31669                           tblptrl	equ	0xFF6
 31670                           tablat	equ	0xFF5
 31671                           prodh	equ	0xFF4
 31672                           prodl	equ	0xFF3
 31673                           intcon	equ	0xFF2
 31674                           postinc0	equ	0xFEE
 31675                           fsr0h	equ	0xFEA
 31676                           fsr0l	equ	0xFE9
 31677                           wreg	equ	0xFE8
 31678                           indf1	equ	0xFE7
 31679                           postinc1	equ	0xFE6
 31680                           postdec1	equ	0xFE5
 31681                           plusw1	equ	0xFE3
 31682                           fsr1h	equ	0xFE2
 31683                           fsr1l	equ	0xFE1
 31684                           indf2	equ	0xFDF
 31685                           postinc2	equ	0xFDE
 31686                           postdec2	equ	0xFDD
 31687                           plusw2	equ	0xFDB
 31688                           fsr2h	equ	0xFDA
 31689                           fsr2l	equ	0xFD9
 31690                           status	equ	0xFD8
 31691                           
 31692 ;; *************** function _initialiseTagADC_1 *****************
 31693 ;; Defined at:
 31694 ;;		line 538 in file "tagRead.c"
 31695 ;; Parameters:    Size  Location     Type
 31696 ;;		None
 31697 ;; Auto vars:     Size  Location     Type
 31698 ;;		None
 31699 ;; Return value:  Size  Location     Type
 31700 ;;                  1    wreg      void 
 31701 ;; Registers used:
 31702 ;;		wreg, status,2, status,0, cstack
 31703 ;; Tracked objects:
 31704 ;;		On entry : 0/0
 31705 ;;		On exit  : 0/0
 31706 ;;		Unchanged: 0/0
 31707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31712 ;;Total ram usage:        0 bytes
 31713 ;; Hardware stack levels used:    1
 31714 ;; Hardware stack levels required when called:    1
 31715 ;; This function calls:
 31716 ;;		i2__delay_us
 31717 ;; This function is called by:
 31718 ;;		_READ_TAG_REVERSE
 31719 ;; This function uses a non-reentrant model
 31720 ;;
 31721                           
 31722                           	psect	text171
 31723  00726E                     __ptext171:
 31724                           	opt stack 0
 31725  00726E                     _initialiseTagADC_1:
 31726                           	opt stack 17
 31727                           
 31728                           ;tagRead.c: 539: FVRCON = 0b00000010;
 31729                           
 31730                           ;incstack = 0
 31731  00726E  0E02               	movlw	2
 31732  007270  010E               	movlb	14	; () banked
 31733  007272  6FC4               	movwf	196,b	;volatile
 31734                           
 31735                           ; BSR set to: 14
 31736                           ;tagRead.c: 540: FVRCONbits.FVREN = 1;
 31737  007274  010E               	movlb	14	; () banked
 31738  007276  8FC4               	bsf	196,7,b	;volatile
 31739  007278                     i2l1344:
 31740                           
 31741                           ; BSR set to: 14
 31742  007278  010E               	movlb	14	; () banked
 31743  00727A  ADC4               	btfss	196,6,b	;volatile
 31744  00727C  D7FD               	goto	i2l1344
 31745                           
 31746                           ; BSR set to: 14
 31747                           ;tagRead.c: 543: ADCON1 = 0b11110000;
 31748                           
 31749                           ; BSR set to: 14
 31750  00727E  0EF0               	movlw	240
 31751  007280  010F               	movlb	15	; () banked
 31752  007282  6F59               	movwf	89,b	;volatile
 31753                           
 31754                           ;tagRead.c: 544: ADPCH = 0b00100011;
 31755  007284  0E23               	movlw	35
 31756  007286  010F               	movlb	15	; () banked
 31757  007288  6F5F               	movwf	95,b	;volatile
 31758                           
 31759                           ;tagRead.c: 545: ADCLK = 0b00010000;
 31760  00728A  0E10               	movlw	16
 31761  00728C  010F               	movlb	15	; () banked
 31762  00728E  6F57               	movwf	87,b	;volatile
 31763                           
 31764                           ;tagRead.c: 546: ADREF = 0b00000011;
 31765  007290  0E03               	movlw	3
 31766  007292  010F               	movlb	15	; () banked
 31767  007294  6F58               	movwf	88,b	;volatile
 31768                           
 31769                           ; BSR set to: 15
 31770                           ;tagRead.c: 547: ADCON0bits.ADFM = 1;
 31771  007296  8460               	bsf	3936,2,c	;volatile
 31772                           
 31773                           ; BSR set to: 15
 31774                           ;tagRead.c: 548: ADCON0bits.ADON = 1;
 31775  007298  8E60               	bsf	3936,7,c	;volatile
 31776                           
 31777                           ; BSR set to: 15
 31778                           ;tagRead.c: 549: _delay_us(20);
 31779  00729A  0E14               	movlw	20
 31780  00729C  EC98  F03B         	call	i2__delay_us
 31781  0072A0  0012               	return		;funcret
 31782  0072A2                     __end_of_initialiseTagADC_1:
 31783                           	opt stack 0
 31784                           pclatu	equ	0xFFB
 31785                           pclath	equ	0xFFA
 31786                           tblptru	equ	0xFF8
 31787                           tblptrh	equ	0xFF7
 31788                           tblptrl	equ	0xFF6
 31789                           tablat	equ	0xFF5
 31790                           prodh	equ	0xFF4
 31791                           prodl	equ	0xFF3
 31792                           intcon	equ	0xFF2
 31793                           postinc0	equ	0xFEE
 31794                           fsr0h	equ	0xFEA
 31795                           fsr0l	equ	0xFE9
 31796                           wreg	equ	0xFE8
 31797                           indf1	equ	0xFE7
 31798                           postinc1	equ	0xFE6
 31799                           postdec1	equ	0xFE5
 31800                           plusw1	equ	0xFE3
 31801                           fsr1h	equ	0xFE2
 31802                           fsr1l	equ	0xFE1
 31803                           indf2	equ	0xFDF
 31804                           postinc2	equ	0xFDE
 31805                           postdec2	equ	0xFDD
 31806                           plusw2	equ	0xFDB
 31807                           fsr2h	equ	0xFDA
 31808                           fsr2l	equ	0xFD9
 31809                           status	equ	0xFD8
 31810                           
 31811 ;; *************** function _SCAN_TAG_1 *****************
 31812 ;; Defined at:
 31813 ;;		line 192 in file "tagRead.c"
 31814 ;; Parameters:    Size  Location     Type
 31815 ;;		None
 31816 ;; Auto vars:     Size  Location     Type
 31817 ;;		None
 31818 ;; Return value:  Size  Location     Type
 31819 ;;                  2    8[COMRAM] unsigned int 
 31820 ;; Registers used:
 31821 ;;		wreg, status,2, status,0, cstack
 31822 ;; Tracked objects:
 31823 ;;		On entry : 0/0
 31824 ;;		On exit  : 0/0
 31825 ;;		Unchanged: 0/0
 31826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31827 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31829 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31830 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31831 ;;Total ram usage:        3 bytes
 31832 ;; Hardware stack levels used:    1
 31833 ;; Hardware stack levels required when called:    3
 31834 ;; This function calls:
 31835 ;;		_UIO_MAK_1
 31836 ;;		_UIO_SAK_1
 31837 ;;		_UIO_WRITE_1
 31838 ;;		_UIO_noMAK_1
 31839 ;;		_rxWord
 31840 ;;		i2__delay_ms
 31841 ;;		i2__delay_us
 31842 ;; This function is called by:
 31843 ;;		_READ_TAG_REVERSE
 31844 ;; This function uses a non-reentrant model
 31845 ;;
 31846                           
 31847                           	psect	text172
 31848  004C1A                     __ptext172:
 31849                           	opt stack 0
 31850  004C1A                     _SCAN_TAG_1:
 31851                           	opt stack 15
 31852                           
 31853                           ;tagRead.c: 197: UIO_data_out = 0;
 31854                           
 31855                           ;incstack = 0
 31856  004C1A  0E00               	movlw	0
 31857  004C1C  6E43               	movwf	_UIO_data_out+1,c
 31858  004C1E  0E00               	movlw	0
 31859  004C20  6E42               	movwf	_UIO_data_out,c
 31860                           
 31861                           ;tagRead.c: 199: TRISEbits.TRISE3 = 0;
 31862  004C22  9685               	bcf	3973,3,c	;volatile
 31863                           
 31864                           ;tagRead.c: 201: LATEbits.LATE3 = 1;
 31865  004C24  867D               	bsf	3965,3,c	;volatile
 31866                           
 31867                           ;tagRead.c: 202: _delay_ms(2);
 31868  004C26  0E00               	movlw	0
 31869  004C28  6E03               	movwf	i2__delay_ms@delay+1,c
 31870  004C2A  0E02               	movlw	2
 31871  004C2C  6E02               	movwf	i2__delay_ms@delay,c
 31872  004C2E  EC97  F038         	call	i2__delay_ms	;wreg free
 31873                           
 31874                           ;tagRead.c: 203: LATEbits.LATE3 = 0;
 31875  004C32  967D               	bcf	3965,3,c	;volatile
 31876                           
 31877                           ;tagRead.c: 205: _delay_us(100);
 31878  004C34  0E64               	movlw	100
 31879  004C36  EC98  F03B         	call	i2__delay_us
 31880                           
 31881                           ;tagRead.c: 211: UIO_WRITE_1(0x55);
 31882  004C3A  0E55               	movlw	85
 31883  004C3C  EC66  F035         	call	_UIO_WRITE_1
 31884                           
 31885                           ;tagRead.c: 212: UIO_MAK_1();
 31886  004C40  EC38  F03D         	call	_UIO_MAK_1	;wreg free
 31887                           
 31888                           ;tagRead.c: 213: tag_state = UIO_SAK_1();
 31889  004C44  EC9C  F039         	call	_UIO_SAK_1	;wreg free
 31890  004C48  6E47               	movwf	_tag_state,c
 31891                           
 31892                           ;tagRead.c: 214: TRISEbits.TRISE3 = 0;
 31893  004C4A  9685               	bcf	3973,3,c	;volatile
 31894                           
 31895                           ;tagRead.c: 215: UIO_WRITE_1(0xA0);
 31896  004C4C  0EA0               	movlw	160
 31897  004C4E  EC66  F035         	call	_UIO_WRITE_1
 31898                           
 31899                           ;tagRead.c: 216: UIO_MAK_1();
 31900  004C52  EC38  F03D         	call	_UIO_MAK_1	;wreg free
 31901                           
 31902                           ;tagRead.c: 217: tag_state = UIO_SAK_1();
 31903  004C56  EC9C  F039         	call	_UIO_SAK_1	;wreg free
 31904  004C5A  6E47               	movwf	_tag_state,c
 31905                           
 31906                           ;tagRead.c: 219: TRISEbits.TRISE3 = 0;
 31907  004C5C  9685               	bcf	3973,3,c	;volatile
 31908                           
 31909                           ;tagRead.c: 220: UIO_WRITE_1(TAG_Request[0]);
 31910  004C5E  502D               	movf	_TAG_Request,w,c
 31911  004C60  EC66  F035         	call	_UIO_WRITE_1
 31912                           
 31913                           ;tagRead.c: 222: if (TAG_Request[1] == 0x00)
 31914  004C64  502E               	movf	_TAG_Request+1,w,c
 31915  004C66  A4D8               	btfss	status,2,c
 31916  004C68  D00B               	goto	i2l10908
 31917                           
 31918                           ;tagRead.c: 223: {
 31919                           ;tagRead.c: 224: UIO_noMAK_1();
 31920  004C6A  EC2F  F03D         	call	_UIO_noMAK_1	;wreg free
 31921                           
 31922                           ;tagRead.c: 225: tag_state = UIO_SAK_1();
 31923  004C6E  EC9C  F039         	call	_UIO_SAK_1	;wreg free
 31924  004C72  6E47               	movwf	_tag_state,c
 31925                           
 31926                           ;tagRead.c: 226: LATEbits.LATE3 = 0;
 31927  004C74  967D               	bcf	3965,3,c	;volatile
 31928                           
 31929                           ;tagRead.c: 227: return 0;
 31930  004C76  0E00               	movlw	0
 31931  004C78  6E0A               	movwf	?_SCAN_TAG_1+1,c
 31932  004C7A  0E00               	movlw	0
 31933  004C7C  6E09               	movwf	?_SCAN_TAG_1,c
 31934  004C7E  0012               	return	
 31935  004C80                     i2l10908:
 31936                           
 31937                           ;tagRead.c: 229: else
 31938                           ;tagRead.c: 230: {
 31939                           ;tagRead.c: 231: UIO_MAK_1();
 31940  004C80  EC38  F03D         	call	_UIO_MAK_1	;wreg free
 31941                           
 31942                           ;tagRead.c: 232: tag_state = UIO_SAK_1();
 31943  004C84  EC9C  F039         	call	_UIO_SAK_1	;wreg free
 31944  004C88  6E47               	movwf	_tag_state,c
 31945                           
 31946                           ;tagRead.c: 233: TRISEbits.TRISE3 = 0;
 31947  004C8A  9685               	bcf	3973,3,c	;volatile
 31948                           
 31949                           ;tagRead.c: 234: }
 31950                           ;tagRead.c: 236: if (TAG_Request[3] == 0x01)
 31951  004C8C  0430               	decf	_TAG_Request+3,w,c
 31952  004C8E  A4D8               	btfss	status,2,c
 31953  004C90  D011               	goto	i2l10918
 31954                           
 31955                           ;tagRead.c: 237: {
 31956                           ;tagRead.c: 238: UIO_WRITE_1(TAG_Request[4]);
 31957  004C92  5031               	movf	_TAG_Request+4,w,c
 31958  004C94  EC66  F035         	call	_UIO_WRITE_1
 31959                           
 31960                           ;tagRead.c: 239: UIO_MAK_1();
 31961  004C98  EC38  F03D         	call	_UIO_MAK_1	;wreg free
 31962                           
 31963                           ;tagRead.c: 240: tag_state = UIO_SAK_1();
 31964  004C9C  EC9C  F039         	call	_UIO_SAK_1	;wreg free
 31965  004CA0  6E47               	movwf	_tag_state,c
 31966                           
 31967                           ;tagRead.c: 241: TRISEbits.TRISE3 = 0;
 31968  004CA2  9685               	bcf	3973,3,c	;volatile
 31969                           
 31970                           ;tagRead.c: 243: UIO_WRITE_1(TAG_Request[5]);
 31971  004CA4  5032               	movf	_TAG_Request+5,w,c
 31972  004CA6  EC66  F035         	call	_UIO_WRITE_1
 31973                           
 31974                           ;tagRead.c: 244: UIO_MAK_1();
 31975  004CAA  EC38  F03D         	call	_UIO_MAK_1	;wreg free
 31976                           
 31977                           ;tagRead.c: 245: tag_state = UIO_SAK_1();
 31978  004CAE  EC9C  F039         	call	_UIO_SAK_1	;wreg free
 31979  004CB2  6E47               	movwf	_tag_state,c
 31980  004CB4                     i2l10918:
 31981                           
 31982                           ;tagRead.c: 247: }
 31983                           ;tagRead.c: 252: if (TAG_Request[6] == 0x00)
 31984  004CB4  5033               	movf	_TAG_Request+6,w,c
 31985  004CB6  A4D8               	btfss	status,2,c
 31986  004CB8  D00B               	goto	i2l10926
 31987                           
 31988                           ;tagRead.c: 253: {
 31989                           ;tagRead.c: 255: TRISEbits.TRISE3 = 1;
 31990  004CBA  8685               	bsf	3973,3,c	;volatile
 31991                           
 31992                           ;tagRead.c: 256: ANSELEbits.ANSELE3 = 1;
 31993  004CBC  010E               	movlb	14	; () banked
 31994  004CBE  87AF               	bsf	175,3,b	;volatile
 31995                           
 31996                           ; BSR set to: 14
 31997                           ;tagRead.c: 257: UIO_data_out = rxWord();
 31998  004CC0  ECC1  F02F         	call	_rxWord	;wreg free
 31999  004CC4  6E0B               	movwf	??_SCAN_TAG_1& (0+255),c
 32000  004CC6  500B               	movf	??_SCAN_TAG_1,w,c
 32001  004CC8  6E42               	movwf	_UIO_data_out,c
 32002  004CCA  6A43               	clrf	_UIO_data_out+1,c
 32003                           
 32004                           ;tagRead.c: 258: TRISEbits.TRISE3 = 0;
 32005  004CCC  9685               	bcf	3973,3,c	;volatile
 32006                           
 32007                           ;tagRead.c: 259: }
 32008  004CCE  D003               	goto	i2l10928
 32009  004CD0                     i2l10926:
 32010                           
 32011                           ;tagRead.c: 260: else
 32012                           ;tagRead.c: 261: {
 32013                           ;tagRead.c: 262: UIO_WRITE_1(TAG_Request[2]);
 32014  004CD0  502F               	movf	_TAG_Request+2,w,c
 32015  004CD2  EC66  F035         	call	_UIO_WRITE_1
 32016  004CD6                     i2l10928:
 32017                           
 32018                           ;tagRead.c: 263: }
 32019                           ;tagRead.c: 264: TRISEbits.TRISE3 = 0;
 32020  004CD6  9685               	bcf	3973,3,c	;volatile
 32021                           
 32022                           ;tagRead.c: 265: UIO_noMAK_1();
 32023  004CD8  EC2F  F03D         	call	_UIO_noMAK_1	;wreg free
 32024                           
 32025                           ;tagRead.c: 266: tag_state = UIO_SAK_1();
 32026  004CDC  EC9C  F039         	call	_UIO_SAK_1	;wreg free
 32027  004CE0  6E47               	movwf	_tag_state,c
 32028                           
 32029                           ;tagRead.c: 267: _delay_ms(1);
 32030  004CE2  0E00               	movlw	0
 32031  004CE4  6E03               	movwf	i2__delay_ms@delay+1,c
 32032  004CE6  0E01               	movlw	1
 32033  004CE8  6E02               	movwf	i2__delay_ms@delay,c
 32034  004CEA  EC97  F038         	call	i2__delay_ms	;wreg free
 32035                           
 32036                           ;tagRead.c: 269: return UIO_data_out;
 32037  004CEE  C042  F009         	movff	_UIO_data_out,?_SCAN_TAG_1
 32038  004CF2  C043  F00A         	movff	_UIO_data_out+1,?_SCAN_TAG_1+1
 32039  004CF6  0012               	return	
 32040  004CF8                     __end_of_SCAN_TAG_1:
 32041                           	opt stack 0
 32042                           pclatu	equ	0xFFB
 32043                           pclath	equ	0xFFA
 32044                           tblptru	equ	0xFF8
 32045                           tblptrh	equ	0xFF7
 32046                           tblptrl	equ	0xFF6
 32047                           tablat	equ	0xFF5
 32048                           prodh	equ	0xFF4
 32049                           prodl	equ	0xFF3
 32050                           intcon	equ	0xFF2
 32051                           postinc0	equ	0xFEE
 32052                           fsr0h	equ	0xFEA
 32053                           fsr0l	equ	0xFE9
 32054                           wreg	equ	0xFE8
 32055                           indf1	equ	0xFE7
 32056                           postinc1	equ	0xFE6
 32057                           postdec1	equ	0xFE5
 32058                           plusw1	equ	0xFE3
 32059                           fsr1h	equ	0xFE2
 32060                           fsr1l	equ	0xFE1
 32061                           indf2	equ	0xFDF
 32062                           postinc2	equ	0xFDE
 32063                           postdec2	equ	0xFDD
 32064                           plusw2	equ	0xFDB
 32065                           fsr2h	equ	0xFDA
 32066                           fsr2l	equ	0xFD9
 32067                           status	equ	0xFD8
 32068                           
 32069 ;; *************** function _UIO_noMAK_1 *****************
 32070 ;; Defined at:
 32071 ;;		line 415 in file "tagRead.c"
 32072 ;; Parameters:    Size  Location     Type
 32073 ;;		None
 32074 ;; Auto vars:     Size  Location     Type
 32075 ;;		None
 32076 ;; Return value:  Size  Location     Type
 32077 ;;                  1    wreg      void 
 32078 ;; Registers used:
 32079 ;;		wreg, status,2, status,0, cstack
 32080 ;; Tracked objects:
 32081 ;;		On entry : 0/0
 32082 ;;		On exit  : 0/0
 32083 ;;		Unchanged: 0/0
 32084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32089 ;;Total ram usage:        0 bytes
 32090 ;; Hardware stack levels used:    1
 32091 ;; Hardware stack levels required when called:    1
 32092 ;; This function calls:
 32093 ;;		i2__delay_us
 32094 ;; This function is called by:
 32095 ;;		_SCAN_TAG_1
 32096 ;; This function uses a non-reentrant model
 32097 ;;
 32098                           
 32099                           	psect	text173
 32100  007A5E                     __ptext173:
 32101                           	opt stack 0
 32102  007A5E                     _UIO_noMAK_1:
 32103                           	opt stack 16
 32104                           
 32105                           ;tagRead.c: 417: LATEbits.LATE3 = 1;
 32106                           
 32107                           ;incstack = 0
 32108  007A5E  867D               	bsf	3965,3,c	;volatile
 32109                           
 32110                           ;tagRead.c: 418: _delay_us(50);
 32111  007A60  0E32               	movlw	50
 32112  007A62  EC98  F03B         	call	i2__delay_us
 32113                           
 32114                           ;tagRead.c: 419: LATEbits.LATE3 = 0;
 32115  007A66  967D               	bcf	3965,3,c	;volatile
 32116                           
 32117                           ;tagRead.c: 420: _delay_us(50);
 32118  007A68  0E32               	movlw	50
 32119  007A6A  EC98  F03B         	call	i2__delay_us
 32120  007A6E  0012               	return		;funcret
 32121  007A70                     __end_of_UIO_noMAK_1:
 32122                           	opt stack 0
 32123                           pclatu	equ	0xFFB
 32124                           pclath	equ	0xFFA
 32125                           tblptru	equ	0xFF8
 32126                           tblptrh	equ	0xFF7
 32127                           tblptrl	equ	0xFF6
 32128                           tablat	equ	0xFF5
 32129                           prodh	equ	0xFF4
 32130                           prodl	equ	0xFF3
 32131                           intcon	equ	0xFF2
 32132                           postinc0	equ	0xFEE
 32133                           fsr0h	equ	0xFEA
 32134                           fsr0l	equ	0xFE9
 32135                           wreg	equ	0xFE8
 32136                           indf1	equ	0xFE7
 32137                           postinc1	equ	0xFE6
 32138                           postdec1	equ	0xFE5
 32139                           plusw1	equ	0xFE3
 32140                           fsr1h	equ	0xFE2
 32141                           fsr1l	equ	0xFE1
 32142                           indf2	equ	0xFDF
 32143                           postinc2	equ	0xFDE
 32144                           postdec2	equ	0xFDD
 32145                           plusw2	equ	0xFDB
 32146                           fsr2h	equ	0xFDA
 32147                           fsr2l	equ	0xFD9
 32148                           status	equ	0xFD8
 32149                           
 32150 ;; *************** function _UIO_WRITE_1 *****************
 32151 ;; Defined at:
 32152 ;;		line 306 in file "tagRead.c"
 32153 ;; Parameters:    Size  Location     Type
 32154 ;;  cmd             1    wreg     unsigned char 
 32155 ;; Auto vars:     Size  Location     Type
 32156 ;;  cmd             1    3[COMRAM] unsigned char 
 32157 ;;  nDigit          1    5[COMRAM] unsigned char 
 32158 ;;  uio_data        1    4[COMRAM] unsigned char 
 32159 ;; Return value:  Size  Location     Type
 32160 ;;                  1    wreg      void 
 32161 ;; Registers used:
 32162 ;;		wreg, status,2, status,0, cstack
 32163 ;; Tracked objects:
 32164 ;;		On entry : 0/0
 32165 ;;		On exit  : 0/0
 32166 ;;		Unchanged: 0/0
 32167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32169 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32170 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32171 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32172 ;;Total ram usage:        5 bytes
 32173 ;; Hardware stack levels used:    1
 32174 ;; Hardware stack levels required when called:    1
 32175 ;; This function calls:
 32176 ;;		i2__delay_us
 32177 ;; This function is called by:
 32178 ;;		_SCAN_TAG_1
 32179 ;; This function uses a non-reentrant model
 32180 ;;
 32181                           
 32182                           	psect	text174
 32183  006ACC                     __ptext174:
 32184                           	opt stack 0
 32185  006ACC                     _UIO_WRITE_1:
 32186                           	opt stack 16
 32187                           
 32188                           ;incstack = 0
 32189                           ;UIO_WRITE_1@cmd stored from wreg
 32190  006ACC  6E04               	movwf	UIO_WRITE_1@cmd,c
 32191                           
 32192                           ;tagRead.c: 308: unsigned char uio_data;
 32193                           ;tagRead.c: 309: unsigned char nDigit;
 32194                           ;tagRead.c: 310: uio_data = cmd;
 32195  006ACE  C004  F005         	movff	UIO_WRITE_1@cmd,UIO_WRITE_1@uio_data
 32196                           
 32197                           ;tagRead.c: 312: for ( nDigit=8; nDigit>0; nDigit--)
 32198  006AD2  0E08               	movlw	8
 32199  006AD4  6E06               	movwf	UIO_WRITE_1@nDigit,c
 32200  006AD6  5006               	movf	UIO_WRITE_1@nDigit,w,c
 32201  006AD8  B4D8               	btfsc	status,2,c
 32202  006ADA  0012               	return	
 32203  006ADC  D012               	goto	i2l9602
 32204  006ADE                     i2l1255:
 32205                           
 32206                           ;tagRead.c: 317: {
 32207                           ;tagRead.c: 318: LATEbits.LATE3 = 1;
 32208  006ADE  867D               	bsf	3965,3,c	;volatile
 32209                           
 32210                           ;tagRead.c: 319: _delay_us(50);
 32211  006AE0  0E32               	movlw	50
 32212  006AE2  EC98  F03B         	call	i2__delay_us
 32213                           
 32214                           ;tagRead.c: 320: LATEbits.LATE3 = 0;
 32215  006AE6  967D               	bcf	3965,3,c	;volatile
 32216                           
 32217                           ;tagRead.c: 321: _delay_us(50);
 32218  006AE8  0E32               	movlw	50
 32219  006AEA  EC98  F03B         	call	i2__delay_us
 32220                           
 32221                           ;tagRead.c: 322: break;
 32222  006AEE  D016               	goto	i2l9604
 32223  006AF0                     i2l1257:
 32224                           
 32225                           ;tagRead.c: 325: {
 32226                           ;tagRead.c: 326: LATEbits.LATE3 = 0;
 32227  006AF0  967D               	bcf	3965,3,c	;volatile
 32228                           
 32229                           ;tagRead.c: 327: _delay_us(50);
 32230  006AF2  0E32               	movlw	50
 32231  006AF4  EC98  F03B         	call	i2__delay_us
 32232                           
 32233                           ;tagRead.c: 328: LATEbits.LATE3 = 1 ;
 32234  006AF8  867D               	bsf	3965,3,c	;volatile
 32235                           
 32236                           ;tagRead.c: 329: _delay_us(50);
 32237  006AFA  0E32               	movlw	50
 32238  006AFC  EC98  F03B         	call	i2__delay_us
 32239                           
 32240                           ;tagRead.c: 331: }
 32241                           ;tagRead.c: 332: }
 32242                           
 32243                           ;tagRead.c: 330: break;
 32244  006B00  D00D               	goto	i2l9604
 32245  006B02                     i2l9602:
 32246  006B02  5005               	movf	UIO_WRITE_1@uio_data,w,c
 32247  006B04  0B80               	andlw	128
 32248  006B06  6E02               	movwf	??_UIO_WRITE_1& (0+255),c
 32249  006B08  6A03               	clrf	(??_UIO_WRITE_1+1)& (0+255),c
 32250                           
 32251                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32252                           ; Switch size 1, requested type "space"
 32253                           ; Number of cases is 1, Range of values is 0 to 0
 32254                           ; switch strategies available:
 32255                           ; Name         Instructions Cycles
 32256                           ; simple_byte            4     3 (average)
 32257                           ;	Chosen strategy is simple_byte
 32258  006B0A  5003               	movf	??_UIO_WRITE_1+1,w,c
 32259  006B0C  0A00               	xorlw	0	; case 0
 32260  006B0E  A4D8               	btfss	status,2,c
 32261  006B10  D7EF               	goto	i2l1257
 32262                           
 32263                           ; Switch size 1, requested type "space"
 32264                           ; Number of cases is 1, Range of values is 0 to 0
 32265                           ; switch strategies available:
 32266                           ; Name         Instructions Cycles
 32267                           ; simple_byte            4     3 (average)
 32268                           ;	Chosen strategy is simple_byte
 32269  006B12  5002               	movf	??_UIO_WRITE_1,w,c
 32270  006B14  0A00               	xorlw	0	; case 0
 32271  006B16  B4D8               	btfsc	status,2,c
 32272  006B18  D7E2               	goto	i2l1255
 32273  006B1A  D7EA               	goto	i2l1257
 32274  006B1C                     i2l9604:
 32275                           
 32276                           ;tagRead.c: 333: uio_data = (uio_data << 1);
 32277  006B1C  5005               	movf	UIO_WRITE_1@uio_data,w,c
 32278  006B1E  2405               	addwf	UIO_WRITE_1@uio_data,w,c
 32279  006B20  6E05               	movwf	UIO_WRITE_1@uio_data,c
 32280  006B22  0606               	decf	UIO_WRITE_1@nDigit,f,c
 32281  006B24  D7D8               	goto	L23
 32282  006B26                     __end_of_UIO_WRITE_1:
 32283                           	opt stack 0
 32284                           pclatu	equ	0xFFB
 32285                           pclath	equ	0xFFA
 32286                           tblptru	equ	0xFF8
 32287                           tblptrh	equ	0xFF7
 32288                           tblptrl	equ	0xFF6
 32289                           tablat	equ	0xFF5
 32290                           prodh	equ	0xFF4
 32291                           prodl	equ	0xFF3
 32292                           intcon	equ	0xFF2
 32293                           postinc0	equ	0xFEE
 32294                           fsr0h	equ	0xFEA
 32295                           fsr0l	equ	0xFE9
 32296                           wreg	equ	0xFE8
 32297                           indf1	equ	0xFE7
 32298                           postinc1	equ	0xFE6
 32299                           postdec1	equ	0xFE5
 32300                           plusw1	equ	0xFE3
 32301                           fsr1h	equ	0xFE2
 32302                           fsr1l	equ	0xFE1
 32303                           indf2	equ	0xFDF
 32304                           postinc2	equ	0xFDE
 32305                           postdec2	equ	0xFDD
 32306                           plusw2	equ	0xFDB
 32307                           fsr2h	equ	0xFDA
 32308                           fsr2l	equ	0xFD9
 32309                           status	equ	0xFD8
 32310                           
 32311 ;; *************** function _UIO_SAK_1 *****************
 32312 ;; Defined at:
 32313 ;;		line 364 in file "tagRead.c"
 32314 ;; Parameters:    Size  Location     Type
 32315 ;;		None
 32316 ;; Auto vars:     Size  Location     Type
 32317 ;;  SAK             1    1[COMRAM] unsigned char 
 32318 ;; Return value:  Size  Location     Type
 32319 ;;                  1    wreg      unsigned char 
 32320 ;; Registers used:
 32321 ;;		wreg, status,2, status,0, cstack
 32322 ;; Tracked objects:
 32323 ;;		On entry : 0/0
 32324 ;;		On exit  : 0/0
 32325 ;;		Unchanged: 0/0
 32326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32328 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32330 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32331 ;;Total ram usage:        1 bytes
 32332 ;; Hardware stack levels used:    1
 32333 ;; Hardware stack levels required when called:    1
 32334 ;; This function calls:
 32335 ;;		i2__delay_us
 32336 ;; This function is called by:
 32337 ;;		_SCAN_TAG_1
 32338 ;; This function uses a non-reentrant model
 32339 ;;
 32340                           
 32341                           	psect	text175
 32342  007338                     __ptext175:
 32343                           	opt stack 0
 32344  007338                     _UIO_SAK_1:
 32345                           	opt stack 16
 32346                           
 32347                           ;tagRead.c: 366: unsigned char SAK = 0;
 32348                           
 32349                           ;incstack = 0
 32350  007338  0E00               	movlw	0
 32351  00733A  6E02               	movwf	UIO_SAK_1@SAK,c
 32352                           
 32353                           ;tagRead.c: 368: TRISEbits.TRISE3 = 1;
 32354  00733C  8685               	bsf	3973,3,c	;volatile
 32355                           
 32356                           ;tagRead.c: 369: _delay_us(25);
 32357  00733E  0E19               	movlw	25
 32358  007340  EC98  F03B         	call	i2__delay_us
 32359                           
 32360                           ;tagRead.c: 371: if (PORTEbits.RE3) { SAK |= 0x02; }
 32361  007344  A68D               	btfss	3981,3,c	;volatile
 32362  007346  D002               	goto	i2l9630
 32363  007348  8202               	bsf	UIO_SAK_1@SAK,1,c
 32364  00734A  D001               	goto	i2l9632
 32365  00734C                     i2l9630:
 32366                           
 32367                           ;tagRead.c: 372: else { SAK &= ~0x02;}
 32368  00734C  9202               	bcf	UIO_SAK_1@SAK,1,c
 32369  00734E                     i2l9632:
 32370                           
 32371                           ;tagRead.c: 374: _delay_us(50);
 32372  00734E  0E32               	movlw	50
 32373  007350  EC98  F03B         	call	i2__delay_us
 32374                           
 32375                           ;tagRead.c: 376: if (PORTEbits.RE3) { SAK |= 0x01; }
 32376  007354  A68D               	btfss	3981,3,c	;volatile
 32377  007356  D002               	goto	i2l9638
 32378  007358  8002               	bsf	UIO_SAK_1@SAK,0,c
 32379  00735A  D001               	goto	i2l9640
 32380  00735C                     i2l9638:
 32381                           
 32382                           ;tagRead.c: 377: else { SAK &= ~0x01;}
 32383  00735C  9002               	bcf	UIO_SAK_1@SAK,0,c
 32384  00735E                     i2l9640:
 32385                           
 32386                           ;tagRead.c: 379: _delay_us(25);
 32387  00735E  0E19               	movlw	25
 32388  007360  EC98  F03B         	call	i2__delay_us
 32389                           
 32390                           ;tagRead.c: 380: return SAK;
 32391  007364  5002               	movf	UIO_SAK_1@SAK,w,c
 32392  007366  0012               	return	
 32393  007368                     __end_of_UIO_SAK_1:
 32394                           	opt stack 0
 32395                           pclatu	equ	0xFFB
 32396                           pclath	equ	0xFFA
 32397                           tblptru	equ	0xFF8
 32398                           tblptrh	equ	0xFF7
 32399                           tblptrl	equ	0xFF6
 32400                           tablat	equ	0xFF5
 32401                           prodh	equ	0xFF4
 32402                           prodl	equ	0xFF3
 32403                           intcon	equ	0xFF2
 32404                           postinc0	equ	0xFEE
 32405                           fsr0h	equ	0xFEA
 32406                           fsr0l	equ	0xFE9
 32407                           wreg	equ	0xFE8
 32408                           indf1	equ	0xFE7
 32409                           postinc1	equ	0xFE6
 32410                           postdec1	equ	0xFE5
 32411                           plusw1	equ	0xFE3
 32412                           fsr1h	equ	0xFE2
 32413                           fsr1l	equ	0xFE1
 32414                           indf2	equ	0xFDF
 32415                           postinc2	equ	0xFDE
 32416                           postdec2	equ	0xFDD
 32417                           plusw2	equ	0xFDB
 32418                           fsr2h	equ	0xFDA
 32419                           fsr2l	equ	0xFD9
 32420                           status	equ	0xFD8
 32421                           
 32422 ;; *************** function _UIO_MAK_1 *****************
 32423 ;; Defined at:
 32424 ;;		line 395 in file "tagRead.c"
 32425 ;; Parameters:    Size  Location     Type
 32426 ;;		None
 32427 ;; Auto vars:     Size  Location     Type
 32428 ;;		None
 32429 ;; Return value:  Size  Location     Type
 32430 ;;                  1    wreg      void 
 32431 ;; Registers used:
 32432 ;;		wreg, status,2, status,0, cstack
 32433 ;; Tracked objects:
 32434 ;;		On entry : 0/0
 32435 ;;		On exit  : 0/0
 32436 ;;		Unchanged: 0/0
 32437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32442 ;;Total ram usage:        0 bytes
 32443 ;; Hardware stack levels used:    1
 32444 ;; Hardware stack levels required when called:    1
 32445 ;; This function calls:
 32446 ;;		i2__delay_us
 32447 ;; This function is called by:
 32448 ;;		_SCAN_TAG_1
 32449 ;; This function uses a non-reentrant model
 32450 ;;
 32451                           
 32452                           	psect	text176
 32453  007A70                     __ptext176:
 32454                           	opt stack 0
 32455  007A70                     _UIO_MAK_1:
 32456                           	opt stack 16
 32457                           
 32458                           ;tagRead.c: 397: LATEbits.LATE3 = 0;
 32459                           
 32460                           ;incstack = 0
 32461  007A70  967D               	bcf	3965,3,c	;volatile
 32462                           
 32463                           ;tagRead.c: 398: _delay_us(50);
 32464  007A72  0E32               	movlw	50
 32465  007A74  EC98  F03B         	call	i2__delay_us
 32466                           
 32467                           ;tagRead.c: 399: LATEbits.LATE3 = 1;
 32468  007A78  867D               	bsf	3965,3,c	;volatile
 32469                           
 32470                           ;tagRead.c: 400: _delay_us(50);
 32471  007A7A  0E32               	movlw	50
 32472  007A7C  EC98  F03B         	call	i2__delay_us
 32473  007A80  0012               	return		;funcret
 32474  007A82                     __end_of_UIO_MAK_1:
 32475                           	opt stack 0
 32476                           pclatu	equ	0xFFB
 32477                           pclath	equ	0xFFA
 32478                           tblptru	equ	0xFF8
 32479                           tblptrh	equ	0xFF7
 32480                           tblptrl	equ	0xFF6
 32481                           tablat	equ	0xFF5
 32482                           prodh	equ	0xFF4
 32483                           prodl	equ	0xFF3
 32484                           intcon	equ	0xFF2
 32485                           postinc0	equ	0xFEE
 32486                           fsr0h	equ	0xFEA
 32487                           fsr0l	equ	0xFE9
 32488                           wreg	equ	0xFE8
 32489                           indf1	equ	0xFE7
 32490                           postinc1	equ	0xFE6
 32491                           postdec1	equ	0xFE5
 32492                           plusw1	equ	0xFE3
 32493                           fsr1h	equ	0xFE2
 32494                           fsr1l	equ	0xFE1
 32495                           indf2	equ	0xFDF
 32496                           postinc2	equ	0xFDE
 32497                           postdec2	equ	0xFDD
 32498                           plusw2	equ	0xFDB
 32499                           fsr2h	equ	0xFDA
 32500                           fsr2l	equ	0xFD9
 32501                           status	equ	0xFD8
 32502                           
 32503 ;; *************** function _READ_TAG *****************
 32504 ;; Defined at:
 32505 ;;		line 552 in file "tagRead.c"
 32506 ;; Parameters:    Size  Location     Type
 32507 ;;		None
 32508 ;; Auto vars:     Size  Location     Type
 32509 ;;  i               2   12[COMRAM] int 
 32510 ;; Return value:  Size  Location     Type
 32511 ;;                  1    wreg      unsigned char 
 32512 ;; Registers used:
 32513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32514 ;; Tracked objects:
 32515 ;;		On entry : 0/0
 32516 ;;		On exit  : 0/0
 32517 ;;		Unchanged: 0/0
 32518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32520 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32522 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32523 ;;Total ram usage:        2 bytes
 32524 ;; Hardware stack levels used:    1
 32525 ;; Hardware stack levels required when called:    4
 32526 ;; This function calls:
 32527 ;;		_CHECK_CRC16
 32528 ;;		_SCAN_TAG
 32529 ;;		_initialiseTagADC
 32530 ;; This function is called by:
 32531 ;;		_readTagRoutine
 32532 ;; This function uses a non-reentrant model
 32533 ;;
 32534                           
 32535                           	psect	text177
 32536  0063A6                     __ptext177:
 32537                           	opt stack 0
 32538  0063A6                     _READ_TAG:
 32539                           	opt stack 15
 32540                           
 32541                           ;tagRead.c: 553: TAG_Request[0] = 0x03;
 32542                           
 32543                           ;incstack = 0
 32544  0063A6  0E03               	movlw	3
 32545  0063A8  6E2D               	movwf	_TAG_Request,c
 32546                           
 32547                           ;tagRead.c: 554: TAG_Request[1] = 0x01;
 32548  0063AA  0E01               	movlw	1
 32549  0063AC  6E2E               	movwf	_TAG_Request+1,c
 32550                           
 32551                           ;tagRead.c: 555: TAG_Request[2] = 0x00;
 32552  0063AE  0E00               	movlw	0
 32553  0063B0  6E2F               	movwf	_TAG_Request+2,c
 32554                           
 32555                           ;tagRead.c: 556: TAG_Request[3] = 0x01;
 32556  0063B2  0E01               	movlw	1
 32557  0063B4  6E30               	movwf	_TAG_Request+3,c
 32558                           
 32559                           ;tagRead.c: 557: TAG_Request[4] = 0x00;
 32560  0063B6  0E00               	movlw	0
 32561  0063B8  6E31               	movwf	_TAG_Request+4,c
 32562                           
 32563                           ;tagRead.c: 558: TAG_Request[5] = 0x03;
 32564  0063BA  0E03               	movlw	3
 32565  0063BC  6E32               	movwf	_TAG_Request+5,c
 32566                           
 32567                           ;tagRead.c: 559: TAG_Request[6] = 0x00;
 32568  0063BE  0E00               	movlw	0
 32569  0063C0  6E33               	movwf	_TAG_Request+6,c
 32570                           
 32571                           ;tagRead.c: 560: initialiseTagADC();
 32572  0063C2  EC51  F039         	call	_initialiseTagADC	;wreg free
 32573                           
 32574                           ;tagRead.c: 561: ANSELEbits.ANSELE2 = 1;
 32575  0063C6  010E               	movlb	14	; () banked
 32576  0063C8  85AF               	bsf	175,2,b	;volatile
 32577                           
 32578                           ; BSR set to: 14
 32579                           ;tagRead.c: 562: TAG_Response[0] = SCAN_TAG();
 32580  0063CA  EC7C  F026         	call	_SCAN_TAG	;wreg free
 32581  0063CE  5009               	movf	?_SCAN_TAG,w,c
 32582  0063D0  6E4D               	movwf	_TAG_Response,c
 32583                           
 32584                           ;tagRead.c: 563: for(int i = 0; i < 8; i ++){
 32585  0063D2  0E00               	movlw	0
 32586  0063D4  6E0E               	movwf	READ_TAG@i+1,c
 32587  0063D6  0E00               	movlw	0
 32588  0063D8  6E0D               	movwf	READ_TAG@i,c
 32589  0063DA                     i2l11798:
 32590  0063DA  BE0E               	btfsc	READ_TAG@i+1,7,c
 32591  0063DC  D006               	goto	i2l11802
 32592  0063DE  500E               	movf	READ_TAG@i+1,w,c
 32593  0063E0  E113               	bnz	i2l11810
 32594  0063E2  0E08               	movlw	8
 32595  0063E4  5C0D               	subwf	READ_TAG@i,w,c
 32596  0063E6  B0D8               	btfsc	status,0,c
 32597  0063E8  D00F               	goto	i2l11810
 32598  0063EA                     i2l11802:
 32599                           
 32600                           ;tagRead.c: 564: TAG_Request[5] = i + 1;
 32601  0063EA  280D               	incf	READ_TAG@i,w,c
 32602  0063EC  6E32               	movwf	_TAG_Request+5,c
 32603                           
 32604                           ;tagRead.c: 565: TAG_Response[i] = SCAN_TAG();
 32605  0063EE  0E4D               	movlw	low _TAG_Response
 32606  0063F0  240D               	addwf	READ_TAG@i,w,c
 32607  0063F2  6ED9               	movwf	fsr2l,c
 32608  0063F4  0E00               	movlw	high _TAG_Response
 32609  0063F6  200E               	addwfc	READ_TAG@i+1,w,c
 32610  0063F8  6EDA               	movwf	fsr2h,c
 32611  0063FA  EC7C  F026         	call	_SCAN_TAG	;wreg free
 32612  0063FE  5009               	movf	?_SCAN_TAG,w,c
 32613  006400  6EDF               	movwf	indf2,c
 32614  006402  4A0D               	infsnz	READ_TAG@i,f,c
 32615  006404  2A0E               	incf	READ_TAG@i+1,f,c
 32616  006406  D7E9               	goto	i2l11798
 32617  006408                     i2l11810:
 32618                           
 32619                           ;tagRead.c: 566: }
 32620                           ;tagRead.c: 567: if (CHECK_CRC16()){
 32621  006408  EC7B  F038         	call	_CHECK_CRC16	;wreg free
 32622  00640C  0900               	iorlw	0
 32623  00640E  B4D8               	btfsc	status,2,c
 32624  006410  D002               	goto	i2l11818
 32625                           
 32626                           ;tagRead.c: 568: return 1;
 32627  006412  0E01               	movlw	1
 32628                           
 32629                           ;tagRead.c: 569: }
 32630  006414  0012               	return	
 32631  006416                     i2l11818:
 32632                           
 32633                           ;tagRead.c: 570: else
 32634                           ;tagRead.c: 571: return 0;
 32635  006416  0E00               	movlw	0
 32636  006418  0012               	return	
 32637  00641A                     __end_of_READ_TAG:
 32638                           	opt stack 0
 32639                           pclatu	equ	0xFFB
 32640                           pclath	equ	0xFFA
 32641                           tblptru	equ	0xFF8
 32642                           tblptrh	equ	0xFF7
 32643                           tblptrl	equ	0xFF6
 32644                           tablat	equ	0xFF5
 32645                           prodh	equ	0xFF4
 32646                           prodl	equ	0xFF3
 32647                           intcon	equ	0xFF2
 32648                           postinc0	equ	0xFEE
 32649                           fsr0h	equ	0xFEA
 32650                           fsr0l	equ	0xFE9
 32651                           wreg	equ	0xFE8
 32652                           indf1	equ	0xFE7
 32653                           postinc1	equ	0xFE6
 32654                           postdec1	equ	0xFE5
 32655                           plusw1	equ	0xFE3
 32656                           fsr1h	equ	0xFE2
 32657                           fsr1l	equ	0xFE1
 32658                           indf2	equ	0xFDF
 32659                           postinc2	equ	0xFDE
 32660                           postdec2	equ	0xFDD
 32661                           plusw2	equ	0xFDB
 32662                           fsr2h	equ	0xFDA
 32663                           fsr2l	equ	0xFD9
 32664                           status	equ	0xFD8
 32665                           
 32666 ;; *************** function _initialiseTagADC *****************
 32667 ;; Defined at:
 32668 ;;		line 523 in file "tagRead.c"
 32669 ;; Parameters:    Size  Location     Type
 32670 ;;		None
 32671 ;; Auto vars:     Size  Location     Type
 32672 ;;		None
 32673 ;; Return value:  Size  Location     Type
 32674 ;;                  1    wreg      void 
 32675 ;; Registers used:
 32676 ;;		wreg, status,2, status,0, cstack
 32677 ;; Tracked objects:
 32678 ;;		On entry : 0/0
 32679 ;;		On exit  : 0/0
 32680 ;;		Unchanged: 0/0
 32681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32686 ;;Total ram usage:        0 bytes
 32687 ;; Hardware stack levels used:    1
 32688 ;; Hardware stack levels required when called:    1
 32689 ;; This function calls:
 32690 ;;		i2__delay_us
 32691 ;; This function is called by:
 32692 ;;		_READ_TAG
 32693 ;; This function uses a non-reentrant model
 32694 ;;
 32695                           
 32696                           	psect	text178
 32697  0072A2                     __ptext178:
 32698                           	opt stack 0
 32699  0072A2                     _initialiseTagADC:
 32700                           	opt stack 17
 32701                           
 32702                           ;tagRead.c: 524: FVRCON = 0b00000010;
 32703                           
 32704                           ;incstack = 0
 32705  0072A2  0E02               	movlw	2
 32706  0072A4  010E               	movlb	14	; () banked
 32707  0072A6  6FC4               	movwf	196,b	;volatile
 32708                           
 32709                           ; BSR set to: 14
 32710                           ;tagRead.c: 525: FVRCONbits.FVREN = 1;
 32711  0072A8  010E               	movlb	14	; () banked
 32712  0072AA  8FC4               	bsf	196,7,b	;volatile
 32713  0072AC                     i2l1338:
 32714                           
 32715                           ; BSR set to: 14
 32716  0072AC  010E               	movlb	14	; () banked
 32717  0072AE  ADC4               	btfss	196,6,b	;volatile
 32718  0072B0  D7FD               	goto	i2l1338
 32719                           
 32720                           ; BSR set to: 14
 32721                           ;tagRead.c: 528: ADCON1 = 0b11110000;
 32722                           
 32723                           ; BSR set to: 14
 32724  0072B2  0EF0               	movlw	240
 32725  0072B4  010F               	movlb	15	; () banked
 32726  0072B6  6F59               	movwf	89,b	;volatile
 32727                           
 32728                           ;tagRead.c: 529: ADPCH = 0b00100010;
 32729  0072B8  0E22               	movlw	34
 32730  0072BA  010F               	movlb	15	; () banked
 32731  0072BC  6F5F               	movwf	95,b	;volatile
 32732                           
 32733                           ;tagRead.c: 530: ADCLK = 0b00010000;
 32734  0072BE  0E10               	movlw	16
 32735  0072C0  010F               	movlb	15	; () banked
 32736  0072C2  6F57               	movwf	87,b	;volatile
 32737                           
 32738                           ;tagRead.c: 531: ADREF = 0b00000011;
 32739  0072C4  0E03               	movlw	3
 32740  0072C6  010F               	movlb	15	; () banked
 32741  0072C8  6F58               	movwf	88,b	;volatile
 32742                           
 32743                           ; BSR set to: 15
 32744                           ;tagRead.c: 532: ADCON0bits.ADFM = 1;
 32745  0072CA  8460               	bsf	3936,2,c	;volatile
 32746                           
 32747                           ; BSR set to: 15
 32748                           ;tagRead.c: 533: ADCON0bits.ADON = 1;
 32749  0072CC  8E60               	bsf	3936,7,c	;volatile
 32750                           
 32751                           ; BSR set to: 15
 32752                           ;tagRead.c: 534: _delay_us(20);
 32753  0072CE  0E14               	movlw	20
 32754  0072D0  EC98  F03B         	call	i2__delay_us
 32755  0072D4  0012               	return		;funcret
 32756  0072D6                     __end_of_initialiseTagADC:
 32757                           	opt stack 0
 32758                           pclatu	equ	0xFFB
 32759                           pclath	equ	0xFFA
 32760                           tblptru	equ	0xFF8
 32761                           tblptrh	equ	0xFF7
 32762                           tblptrl	equ	0xFF6
 32763                           tablat	equ	0xFF5
 32764                           prodh	equ	0xFF4
 32765                           prodl	equ	0xFF3
 32766                           intcon	equ	0xFF2
 32767                           postinc0	equ	0xFEE
 32768                           fsr0h	equ	0xFEA
 32769                           fsr0l	equ	0xFE9
 32770                           wreg	equ	0xFE8
 32771                           indf1	equ	0xFE7
 32772                           postinc1	equ	0xFE6
 32773                           postdec1	equ	0xFE5
 32774                           plusw1	equ	0xFE3
 32775                           fsr1h	equ	0xFE2
 32776                           fsr1l	equ	0xFE1
 32777                           indf2	equ	0xFDF
 32778                           postinc2	equ	0xFDE
 32779                           postdec2	equ	0xFDD
 32780                           plusw2	equ	0xFDB
 32781                           fsr2h	equ	0xFDA
 32782                           fsr2l	equ	0xFD9
 32783                           status	equ	0xFD8
 32784                           
 32785 ;; *************** function _SCAN_TAG *****************
 32786 ;; Defined at:
 32787 ;;		line 110 in file "tagRead.c"
 32788 ;; Parameters:    Size  Location     Type
 32789 ;;		None
 32790 ;; Auto vars:     Size  Location     Type
 32791 ;;		None
 32792 ;; Return value:  Size  Location     Type
 32793 ;;                  2    8[COMRAM] unsigned int 
 32794 ;; Registers used:
 32795 ;;		wreg, status,2, status,0, cstack
 32796 ;; Tracked objects:
 32797 ;;		On entry : 0/0
 32798 ;;		On exit  : 0/0
 32799 ;;		Unchanged: 0/0
 32800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32801 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32803 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32804 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32805 ;;Total ram usage:        3 bytes
 32806 ;; Hardware stack levels used:    1
 32807 ;; Hardware stack levels required when called:    3
 32808 ;; This function calls:
 32809 ;;		_UIO_MAK
 32810 ;;		_UIO_SAK
 32811 ;;		_UIO_WRITE
 32812 ;;		_UIO_noMAK
 32813 ;;		_rxWord
 32814 ;;		i2__delay_ms
 32815 ;;		i2__delay_us
 32816 ;; This function is called by:
 32817 ;;		_READ_TAG
 32818 ;; This function uses a non-reentrant model
 32819 ;;
 32820                           
 32821                           	psect	text179
 32822  004CF8                     __ptext179:
 32823                           	opt stack 0
 32824  004CF8                     _SCAN_TAG:
 32825                           	opt stack 15
 32826                           
 32827                           ;tagRead.c: 115: UIO_data_out = 0;
 32828                           
 32829                           ;incstack = 0
 32830  004CF8  0E00               	movlw	0
 32831  004CFA  6E43               	movwf	_UIO_data_out+1,c
 32832  004CFC  0E00               	movlw	0
 32833  004CFE  6E42               	movwf	_UIO_data_out,c
 32834                           
 32835                           ;tagRead.c: 117: TRISEbits.TRISE2 = 0;
 32836  004D00  9485               	bcf	3973,2,c	;volatile
 32837                           
 32838                           ;tagRead.c: 119: LATEbits.LATE2 = 1;
 32839  004D02  847D               	bsf	3965,2,c	;volatile
 32840                           
 32841                           ;tagRead.c: 120: _delay_ms(2);
 32842  004D04  0E00               	movlw	0
 32843  004D06  6E03               	movwf	i2__delay_ms@delay+1,c
 32844  004D08  0E02               	movlw	2
 32845  004D0A  6E02               	movwf	i2__delay_ms@delay,c
 32846  004D0C  EC97  F038         	call	i2__delay_ms	;wreg free
 32847                           
 32848                           ;tagRead.c: 121: LATEbits.LATE2 = 0;
 32849  004D10  947D               	bcf	3965,2,c	;volatile
 32850                           
 32851                           ;tagRead.c: 123: _delay_us(100);
 32852  004D12  0E64               	movlw	100
 32853  004D14  EC98  F03B         	call	i2__delay_us
 32854                           
 32855                           ;tagRead.c: 129: UIO_WRITE(0x55);
 32856  004D18  0E55               	movlw	85
 32857  004D1A  EC93  F035         	call	_UIO_WRITE
 32858                           
 32859                           ;tagRead.c: 130: UIO_MAK();
 32860  004D1E  EC4A  F03D         	call	_UIO_MAK	;wreg free
 32861                           
 32862                           ;tagRead.c: 131: tag_state = UIO_SAK();
 32863  004D22  ECB4  F039         	call	_UIO_SAK	;wreg free
 32864  004D26  6E47               	movwf	_tag_state,c
 32865                           
 32866                           ;tagRead.c: 132: TRISEbits.TRISE2 = 0;
 32867  004D28  9485               	bcf	3973,2,c	;volatile
 32868                           
 32869                           ;tagRead.c: 133: UIO_WRITE(0xA0);
 32870  004D2A  0EA0               	movlw	160
 32871  004D2C  EC93  F035         	call	_UIO_WRITE
 32872                           
 32873                           ;tagRead.c: 134: UIO_MAK();
 32874  004D30  EC4A  F03D         	call	_UIO_MAK	;wreg free
 32875                           
 32876                           ;tagRead.c: 135: tag_state = UIO_SAK();
 32877  004D34  ECB4  F039         	call	_UIO_SAK	;wreg free
 32878  004D38  6E47               	movwf	_tag_state,c
 32879                           
 32880                           ;tagRead.c: 137: TRISEbits.TRISE2 = 0;
 32881  004D3A  9485               	bcf	3973,2,c	;volatile
 32882                           
 32883                           ;tagRead.c: 138: UIO_WRITE(TAG_Request[0]);
 32884  004D3C  502D               	movf	_TAG_Request,w,c
 32885  004D3E  EC93  F035         	call	_UIO_WRITE
 32886                           
 32887                           ;tagRead.c: 140: if (TAG_Request[1] == 0x00)
 32888  004D42  502E               	movf	_TAG_Request+1,w,c
 32889  004D44  A4D8               	btfss	status,2,c
 32890  004D46  D00B               	goto	i2l10840
 32891                           
 32892                           ;tagRead.c: 141: {
 32893                           ;tagRead.c: 142: UIO_noMAK();
 32894  004D48  EC41  F03D         	call	_UIO_noMAK	;wreg free
 32895                           
 32896                           ;tagRead.c: 143: tag_state = UIO_SAK();
 32897  004D4C  ECB4  F039         	call	_UIO_SAK	;wreg free
 32898  004D50  6E47               	movwf	_tag_state,c
 32899                           
 32900                           ;tagRead.c: 144: LATEbits.LATE2 = 0;
 32901  004D52  947D               	bcf	3965,2,c	;volatile
 32902                           
 32903                           ;tagRead.c: 145: return 0;
 32904  004D54  0E00               	movlw	0
 32905  004D56  6E0A               	movwf	?_SCAN_TAG+1,c
 32906  004D58  0E00               	movlw	0
 32907  004D5A  6E09               	movwf	?_SCAN_TAG,c
 32908  004D5C  0012               	return	
 32909  004D5E                     i2l10840:
 32910                           
 32911                           ;tagRead.c: 147: else
 32912                           ;tagRead.c: 148: {
 32913                           ;tagRead.c: 149: UIO_MAK();
 32914  004D5E  EC4A  F03D         	call	_UIO_MAK	;wreg free
 32915                           
 32916                           ;tagRead.c: 150: tag_state = UIO_SAK();
 32917  004D62  ECB4  F039         	call	_UIO_SAK	;wreg free
 32918  004D66  6E47               	movwf	_tag_state,c
 32919                           
 32920                           ;tagRead.c: 151: TRISEbits.TRISE2 = 0;
 32921  004D68  9485               	bcf	3973,2,c	;volatile
 32922                           
 32923                           ;tagRead.c: 152: }
 32924                           ;tagRead.c: 154: if (TAG_Request[3] == 0x01)
 32925  004D6A  0430               	decf	_TAG_Request+3,w,c
 32926  004D6C  A4D8               	btfss	status,2,c
 32927  004D6E  D011               	goto	i2l10850
 32928                           
 32929                           ;tagRead.c: 155: {
 32930                           ;tagRead.c: 156: UIO_WRITE(TAG_Request[4]);
 32931  004D70  5031               	movf	_TAG_Request+4,w,c
 32932  004D72  EC93  F035         	call	_UIO_WRITE
 32933                           
 32934                           ;tagRead.c: 157: UIO_MAK();
 32935  004D76  EC4A  F03D         	call	_UIO_MAK	;wreg free
 32936                           
 32937                           ;tagRead.c: 158: tag_state = UIO_SAK();
 32938  004D7A  ECB4  F039         	call	_UIO_SAK	;wreg free
 32939  004D7E  6E47               	movwf	_tag_state,c
 32940                           
 32941                           ;tagRead.c: 159: TRISEbits.TRISE2 = 0;
 32942  004D80  9485               	bcf	3973,2,c	;volatile
 32943                           
 32944                           ;tagRead.c: 161: UIO_WRITE(TAG_Request[5]);
 32945  004D82  5032               	movf	_TAG_Request+5,w,c
 32946  004D84  EC93  F035         	call	_UIO_WRITE
 32947                           
 32948                           ;tagRead.c: 162: UIO_MAK();
 32949  004D88  EC4A  F03D         	call	_UIO_MAK	;wreg free
 32950                           
 32951                           ;tagRead.c: 163: tag_state = UIO_SAK();
 32952  004D8C  ECB4  F039         	call	_UIO_SAK	;wreg free
 32953  004D90  6E47               	movwf	_tag_state,c
 32954  004D92                     i2l10850:
 32955                           
 32956                           ;tagRead.c: 165: }
 32957                           ;tagRead.c: 170: if (TAG_Request[6] == 0x00)
 32958  004D92  5033               	movf	_TAG_Request+6,w,c
 32959  004D94  A4D8               	btfss	status,2,c
 32960  004D96  D00B               	goto	i2l10858
 32961                           
 32962                           ;tagRead.c: 171: {
 32963                           ;tagRead.c: 173: TRISEbits.TRISE2 = 1;
 32964  004D98  8485               	bsf	3973,2,c	;volatile
 32965                           
 32966                           ;tagRead.c: 174: ANSELEbits.ANSELE2 = 1;
 32967  004D9A  010E               	movlb	14	; () banked
 32968  004D9C  85AF               	bsf	175,2,b	;volatile
 32969                           
 32970                           ; BSR set to: 14
 32971                           ;tagRead.c: 175: UIO_data_out = rxWord();
 32972  004D9E  ECC1  F02F         	call	_rxWord	;wreg free
 32973  004DA2  6E0B               	movwf	??_SCAN_TAG& (0+255),c
 32974  004DA4  500B               	movf	??_SCAN_TAG,w,c
 32975  004DA6  6E42               	movwf	_UIO_data_out,c
 32976  004DA8  6A43               	clrf	_UIO_data_out+1,c
 32977                           
 32978                           ;tagRead.c: 177: TRISEbits.TRISE2 = 0;
 32979  004DAA  9485               	bcf	3973,2,c	;volatile
 32980                           
 32981                           ;tagRead.c: 178: }
 32982  004DAC  D003               	goto	i2l10860
 32983  004DAE                     i2l10858:
 32984                           
 32985                           ;tagRead.c: 179: else
 32986                           ;tagRead.c: 180: {
 32987                           ;tagRead.c: 181: UIO_WRITE(TAG_Request[2]);
 32988  004DAE  502F               	movf	_TAG_Request+2,w,c
 32989  004DB0  EC93  F035         	call	_UIO_WRITE
 32990  004DB4                     i2l10860:
 32991                           
 32992                           ;tagRead.c: 182: }
 32993                           ;tagRead.c: 183: TRISEbits.TRISE2 = 0;
 32994  004DB4  9485               	bcf	3973,2,c	;volatile
 32995                           
 32996                           ;tagRead.c: 184: UIO_noMAK();
 32997  004DB6  EC41  F03D         	call	_UIO_noMAK	;wreg free
 32998                           
 32999                           ;tagRead.c: 185: tag_state = UIO_SAK();
 33000  004DBA  ECB4  F039         	call	_UIO_SAK	;wreg free
 33001  004DBE  6E47               	movwf	_tag_state,c
 33002                           
 33003                           ;tagRead.c: 186: _delay_ms(1);
 33004  004DC0  0E00               	movlw	0
 33005  004DC2  6E03               	movwf	i2__delay_ms@delay+1,c
 33006  004DC4  0E01               	movlw	1
 33007  004DC6  6E02               	movwf	i2__delay_ms@delay,c
 33008  004DC8  EC97  F038         	call	i2__delay_ms	;wreg free
 33009                           
 33010                           ;tagRead.c: 188: return UIO_data_out;
 33011  004DCC  C042  F009         	movff	_UIO_data_out,?_SCAN_TAG
 33012  004DD0  C043  F00A         	movff	_UIO_data_out+1,?_SCAN_TAG+1
 33013  004DD4  0012               	return	
 33014  004DD6                     __end_of_SCAN_TAG:
 33015                           	opt stack 0
 33016                           pclatu	equ	0xFFB
 33017                           pclath	equ	0xFFA
 33018                           tblptru	equ	0xFF8
 33019                           tblptrh	equ	0xFF7
 33020                           tblptrl	equ	0xFF6
 33021                           tablat	equ	0xFF5
 33022                           prodh	equ	0xFF4
 33023                           prodl	equ	0xFF3
 33024                           intcon	equ	0xFF2
 33025                           postinc0	equ	0xFEE
 33026                           fsr0h	equ	0xFEA
 33027                           fsr0l	equ	0xFE9
 33028                           wreg	equ	0xFE8
 33029                           indf1	equ	0xFE7
 33030                           postinc1	equ	0xFE6
 33031                           postdec1	equ	0xFE5
 33032                           plusw1	equ	0xFE3
 33033                           fsr1h	equ	0xFE2
 33034                           fsr1l	equ	0xFE1
 33035                           indf2	equ	0xFDF
 33036                           postinc2	equ	0xFDE
 33037                           postdec2	equ	0xFDD
 33038                           plusw2	equ	0xFDB
 33039                           fsr2h	equ	0xFDA
 33040                           fsr2l	equ	0xFD9
 33041                           status	equ	0xFD8
 33042                           
 33043 ;; *************** function _rxWord *****************
 33044 ;; Defined at:
 33045 ;;		line 456 in file "tagRead.c"
 33046 ;; Parameters:    Size  Location     Type
 33047 ;;		None
 33048 ;; Auto vars:     Size  Location     Type
 33049 ;;  watch           1    7[COMRAM] unsigned char 
 33050 ;;  eddReadState    1    6[COMRAM] unsigned char 
 33051 ;;  word            1    5[COMRAM] unsigned char 
 33052 ;;  halfBits        1    4[COMRAM] unsigned char 
 33053 ;; Return value:  Size  Location     Type
 33054 ;;                  1    wreg      unsigned char 
 33055 ;; Registers used:
 33056 ;;		wreg, status,2, status,0, cstack
 33057 ;; Tracked objects:
 33058 ;;		On entry : 0/0
 33059 ;;		On exit  : 0/0
 33060 ;;		Unchanged: 0/0
 33061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33063 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33065 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33066 ;;Total ram usage:        4 bytes
 33067 ;; Hardware stack levels used:    1
 33068 ;; Hardware stack levels required when called:    2
 33069 ;; This function calls:
 33070 ;;		_detectFallingEdge
 33071 ;;		_detectRisingEdge
 33072 ;;		i2__delay_us
 33073 ;; This function is called by:
 33074 ;;		_SCAN_TAG
 33075 ;;		_SCAN_TAG_1
 33076 ;; This function uses a non-reentrant model
 33077 ;;
 33078                           
 33079                           	psect	text180
 33080  005F82                     __ptext180:
 33081                           	opt stack 0
 33082  005F82                     _rxWord:
 33083                           	opt stack 15
 33084                           
 33085                           ;tagRead.c: 457: unsigned char watch, eddReadState, halfBits, word;
 33086                           ;tagRead.c: 458: watch = 0;
 33087                           
 33088                           ;incstack = 0
 33089  005F82  0E00               	movlw	0
 33090  005F84  6E08               	movwf	rxWord@watch,c
 33091                           
 33092                           ;tagRead.c: 459: halfBits = 0;
 33093  005F86  0E00               	movlw	0
 33094  005F88  6E05               	movwf	rxWord@halfBits,c
 33095                           
 33096                           ;tagRead.c: 460: word = 0;
 33097  005F8A  0E00               	movlw	0
 33098  005F8C  6E06               	movwf	rxWord@word,c
 33099                           
 33100                           ;tagRead.c: 461: eddReadState = 1;
 33101  005F8E  0E01               	movlw	1
 33102  005F90  6E07               	movwf	rxWord@eddReadState,c
 33103                           
 33104                           ;tagRead.c: 462: while(halfBits < 16){
 33105  005F92  D03B               	goto	i2l9580
 33106  005F94                     i2l9542:
 33107                           
 33108                           ;tagRead.c: 463: watch = 0;
 33109  005F94  0E00               	movlw	0
 33110  005F96  6E08               	movwf	rxWord@watch,c
 33111                           
 33112                           ;tagRead.c: 464: if(eddReadState){
 33113  005F98  5007               	movf	rxWord@eddReadState,w,c
 33114  005F9A  A4D8               	btfss	status,2,c
 33115  005F9C  D002               	goto	i2l9548
 33116  005F9E  D015               	goto	i2l9562
 33117  005FA0                     i2l9546:
 33118                           
 33119                           ;tagRead.c: 466: watch++;
 33120  005FA0  2A08               	incf	rxWord@watch,f,c
 33121  005FA2                     i2l9548:
 33122  005FA2  EC79  F03B         	call	_detectFallingEdge	;wreg free
 33123  005FA6  0900               	iorlw	0
 33124  005FA8  A4D8               	btfss	status,2,c
 33125  005FAA  D003               	goto	i2l9552
 33126  005FAC  0E05               	movlw	5
 33127  005FAE  6408               	cpfsgt	rxWord@watch,c
 33128  005FB0  D7F7               	goto	i2l9546
 33129  005FB2                     i2l9552:
 33130                           
 33131                           ;tagRead.c: 467: }
 33132                           ;tagRead.c: 468: if(watch >= 6){
 33133  005FB2  0E05               	movlw	5
 33134  005FB4  6408               	cpfsgt	rxWord@watch,c
 33135  005FB6  D006               	goto	i2l9558
 33136                           
 33137                           ;tagRead.c: 469: eddReadState = 1;
 33138  005FB8  0E01               	movlw	1
 33139  005FBA  6E07               	movwf	rxWord@eddReadState,c
 33140                           
 33141                           ;tagRead.c: 470: _delay_us(5);
 33142  005FBC  0E05               	movlw	5
 33143  005FBE  EC98  F03B         	call	i2__delay_us
 33144                           
 33145                           ;tagRead.c: 471: }
 33146  005FC2  D016               	goto	i2l9574
 33147  005FC4                     i2l9558:
 33148                           
 33149                           ;tagRead.c: 473: else{
 33150                           ;tagRead.c: 474: eddReadState = 0;
 33151  005FC4  0E00               	movlw	0
 33152  005FC6  D013               	goto	L24
 33153  005FC8                     i2l9560:
 33154                           
 33155                           ;tagRead.c: 479: watch++;
 33156  005FC8  2A08               	incf	rxWord@watch,f,c
 33157  005FCA                     i2l9562:
 33158  005FCA  EC69  F03B         	call	_detectRisingEdge	;wreg free
 33159  005FCE  0900               	iorlw	0
 33160  005FD0  A4D8               	btfss	status,2,c
 33161  005FD2  D003               	goto	i2l9566
 33162  005FD4  0E05               	movlw	5
 33163  005FD6  6408               	cpfsgt	rxWord@watch,c
 33164  005FD8  D7F7               	goto	i2l9560
 33165  005FDA                     i2l9566:
 33166                           
 33167                           ;tagRead.c: 480: }
 33168                           ;tagRead.c: 481: if(watch >= 6){
 33169  005FDA  0E05               	movlw	5
 33170  005FDC  6408               	cpfsgt	rxWord@watch,c
 33171  005FDE  D006               	goto	i2l9572
 33172                           
 33173                           ;tagRead.c: 482: eddReadState = 0;
 33174  005FE0  0E00               	movlw	0
 33175  005FE2  6E07               	movwf	rxWord@eddReadState,c
 33176                           
 33177                           ;tagRead.c: 483: _delay_us(5);
 33178  005FE4  0E05               	movlw	5
 33179  005FE6  EC98  F03B         	call	i2__delay_us
 33180                           
 33181                           ;tagRead.c: 484: }
 33182  005FEA  D002               	goto	i2l9574
 33183  005FEC                     i2l9572:
 33184                           
 33185                           ;tagRead.c: 485: else{
 33186                           ;tagRead.c: 486: eddReadState = 1;
 33187  005FEC  0E01               	movlw	1
 33188  005FEE                     L24:
 33189  005FEE  6E07               	movwf	rxWord@eddReadState,c
 33190  005FF0                     i2l9574:
 33191                           
 33192                           ;tagRead.c: 487: }
 33193                           ;tagRead.c: 488: }
 33194                           ;tagRead.c: 489: if(halfBits % 2 == 0){
 33195  005FF0  B005               	btfsc	rxWord@halfBits,0,c
 33196  005FF2  D00A               	goto	i2l9578
 33197                           
 33198                           ;tagRead.c: 490: word = word << 1;
 33199  005FF4  5006               	movf	rxWord@word,w,c
 33200  005FF6  2406               	addwf	rxWord@word,w,c
 33201  005FF8  6E06               	movwf	rxWord@word,c
 33202                           
 33203                           ;tagRead.c: 491: word += !eddReadState;
 33204  005FFA  5007               	movf	rxWord@eddReadState,w,c
 33205  005FFC  A4D8               	btfss	status,2,c
 33206  005FFE  D002               	goto	i2u593_40
 33207  006000  0E01               	movlw	1
 33208  006002  D001               	goto	i2u594_40
 33209  006004                     i2u593_40:
 33210  006004  0E00               	movlw	0
 33211  006006                     i2u594_40:
 33212  006006  2606               	addwf	rxWord@word,f,c
 33213  006008                     i2l9578:
 33214                           
 33215                           ;tagRead.c: 492: }
 33216                           ;tagRead.c: 493: halfBits++;
 33217  006008  2A05               	incf	rxWord@halfBits,f,c
 33218  00600A                     i2l9580:
 33219  00600A  0E0F               	movlw	15
 33220  00600C  6405               	cpfsgt	rxWord@halfBits,c
 33221  00600E  D7C2               	goto	i2l9542
 33222                           
 33223                           ;tagRead.c: 494: }
 33224                           ;tagRead.c: 495: return word;
 33225  006010  5006               	movf	rxWord@word,w,c
 33226  006012  0012               	return	
 33227  006014                     __end_of_rxWord:
 33228                           	opt stack 0
 33229                           pclatu	equ	0xFFB
 33230                           pclath	equ	0xFFA
 33231                           tblptru	equ	0xFF8
 33232                           tblptrh	equ	0xFF7
 33233                           tblptrl	equ	0xFF6
 33234                           tablat	equ	0xFF5
 33235                           prodh	equ	0xFF4
 33236                           prodl	equ	0xFF3
 33237                           intcon	equ	0xFF2
 33238                           postinc0	equ	0xFEE
 33239                           fsr0h	equ	0xFEA
 33240                           fsr0l	equ	0xFE9
 33241                           wreg	equ	0xFE8
 33242                           indf1	equ	0xFE7
 33243                           postinc1	equ	0xFE6
 33244                           postdec1	equ	0xFE5
 33245                           plusw1	equ	0xFE3
 33246                           fsr1h	equ	0xFE2
 33247                           fsr1l	equ	0xFE1
 33248                           indf2	equ	0xFDF
 33249                           postinc2	equ	0xFDE
 33250                           postdec2	equ	0xFDD
 33251                           plusw2	equ	0xFDB
 33252                           fsr2h	equ	0xFDA
 33253                           fsr2l	equ	0xFD9
 33254                           status	equ	0xFD8
 33255                           
 33256 ;; *************** function _detectRisingEdge *****************
 33257 ;; Defined at:
 33258 ;;		line 507 in file "tagRead.c"
 33259 ;; Parameters:    Size  Location     Type
 33260 ;;		None
 33261 ;; Auto vars:     Size  Location     Type
 33262 ;;  currentTagAD    2    2[COMRAM] unsigned short 
 33263 ;; Return value:  Size  Location     Type
 33264 ;;                  1    wreg      unsigned char 
 33265 ;; Registers used:
 33266 ;;		wreg, status,2, status,0, cstack
 33267 ;; Tracked objects:
 33268 ;;		On entry : 0/0
 33269 ;;		On exit  : 0/0
 33270 ;;		Unchanged: 0/0
 33271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33273 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33275 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33276 ;;Total ram usage:        2 bytes
 33277 ;; Hardware stack levels used:    1
 33278 ;; Hardware stack levels required when called:    1
 33279 ;; This function calls:
 33280 ;;		_readTagADC
 33281 ;; This function is called by:
 33282 ;;		_rxWord
 33283 ;; This function uses a non-reentrant model
 33284 ;;
 33285                           
 33286                           	psect	text181
 33287  0076D2                     __ptext181:
 33288                           	opt stack 0
 33289  0076D2                     _detectRisingEdge:
 33290                           	opt stack 15
 33291                           
 33292                           ;tagRead.c: 508: unsigned short currentTagADC = readTagADC();
 33293                           
 33294                           ;incstack = 0
 33295  0076D2  ECDB  F03C         	call	_readTagADC	;wreg free
 33296  0076D6  C001  F003         	movff	?_readTagADC,detectRisingEdge@currentTagADC
 33297  0076DA  C002  F004         	movff	?_readTagADC+1,detectRisingEdge@currentTagADC+1
 33298                           
 33299                           ;tagRead.c: 509: if(currentTagADC > 700)
 33300  0076DE  0EBD               	movlw	189
 33301  0076E0  5C03               	subwf	detectRisingEdge@currentTagADC,w,c
 33302  0076E2  0E02               	movlw	2
 33303  0076E4  5804               	subwfb	detectRisingEdge@currentTagADC+1,w,c
 33304  0076E6  A0D8               	btfss	status,0,c
 33305  0076E8  D002               	goto	i2l8856
 33306                           
 33307                           ;tagRead.c: 510: return 1;
 33308  0076EA  0E01               	movlw	1
 33309  0076EC  0012               	return	
 33310  0076EE                     i2l8856:
 33311                           
 33312                           ;tagRead.c: 511: return 0;
 33313  0076EE  0E00               	movlw	0
 33314  0076F0  0012               	return	
 33315  0076F2                     __end_of_detectRisingEdge:
 33316                           	opt stack 0
 33317                           pclatu	equ	0xFFB
 33318                           pclath	equ	0xFFA
 33319                           tblptru	equ	0xFF8
 33320                           tblptrh	equ	0xFF7
 33321                           tblptrl	equ	0xFF6
 33322                           tablat	equ	0xFF5
 33323                           prodh	equ	0xFF4
 33324                           prodl	equ	0xFF3
 33325                           intcon	equ	0xFF2
 33326                           postinc0	equ	0xFEE
 33327                           fsr0h	equ	0xFEA
 33328                           fsr0l	equ	0xFE9
 33329                           wreg	equ	0xFE8
 33330                           indf1	equ	0xFE7
 33331                           postinc1	equ	0xFE6
 33332                           postdec1	equ	0xFE5
 33333                           plusw1	equ	0xFE3
 33334                           fsr1h	equ	0xFE2
 33335                           fsr1l	equ	0xFE1
 33336                           indf2	equ	0xFDF
 33337                           postinc2	equ	0xFDE
 33338                           postdec2	equ	0xFDD
 33339                           plusw2	equ	0xFDB
 33340                           fsr2h	equ	0xFDA
 33341                           fsr2l	equ	0xFD9
 33342                           status	equ	0xFD8
 33343                           
 33344 ;; *************** function _detectFallingEdge *****************
 33345 ;; Defined at:
 33346 ;;		line 499 in file "tagRead.c"
 33347 ;; Parameters:    Size  Location     Type
 33348 ;;		None
 33349 ;; Auto vars:     Size  Location     Type
 33350 ;;  currentTagAD    2    2[COMRAM] unsigned short 
 33351 ;; Return value:  Size  Location     Type
 33352 ;;                  1    wreg      unsigned char 
 33353 ;; Registers used:
 33354 ;;		wreg, status,2, status,0, cstack
 33355 ;; Tracked objects:
 33356 ;;		On entry : 0/0
 33357 ;;		On exit  : 0/0
 33358 ;;		Unchanged: 0/0
 33359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33361 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33363 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33364 ;;Total ram usage:        2 bytes
 33365 ;; Hardware stack levels used:    1
 33366 ;; Hardware stack levels required when called:    1
 33367 ;; This function calls:
 33368 ;;		_readTagADC
 33369 ;; This function is called by:
 33370 ;;		_rxWord
 33371 ;; This function uses a non-reentrant model
 33372 ;;
 33373                           
 33374                           	psect	text182
 33375  0076F2                     __ptext182:
 33376                           	opt stack 0
 33377  0076F2                     _detectFallingEdge:
 33378                           	opt stack 15
 33379                           
 33380                           ;tagRead.c: 500: unsigned short currentTagADC = readTagADC();
 33381                           
 33382                           ;incstack = 0
 33383  0076F2  ECDB  F03C         	call	_readTagADC	;wreg free
 33384  0076F6  C001  F003         	movff	?_readTagADC,detectFallingEdge@currentTagADC
 33385  0076FA  C002  F004         	movff	?_readTagADC+1,detectFallingEdge@currentTagADC+1
 33386                           
 33387                           ;tagRead.c: 501: if(currentTagADC < 200)
 33388  0076FE  5004               	movf	detectFallingEdge@currentTagADC+1,w,c
 33389  007700  E106               	bnz	i2l8844
 33390  007702  0EC8               	movlw	200
 33391  007704  5C03               	subwf	detectFallingEdge@currentTagADC,w,c
 33392  007706  B0D8               	btfsc	status,0,c
 33393  007708  D002               	goto	i2l8844
 33394                           
 33395                           ;tagRead.c: 502: return 1;
 33396  00770A  0E01               	movlw	1
 33397  00770C  0012               	return	
 33398  00770E                     i2l8844:
 33399                           
 33400                           ;tagRead.c: 503: return 0;
 33401  00770E  0E00               	movlw	0
 33402  007710  0012               	return	
 33403  007712                     __end_of_detectFallingEdge:
 33404                           	opt stack 0
 33405                           pclatu	equ	0xFFB
 33406                           pclath	equ	0xFFA
 33407                           tblptru	equ	0xFF8
 33408                           tblptrh	equ	0xFF7
 33409                           tblptrl	equ	0xFF6
 33410                           tablat	equ	0xFF5
 33411                           prodh	equ	0xFF4
 33412                           prodl	equ	0xFF3
 33413                           intcon	equ	0xFF2
 33414                           postinc0	equ	0xFEE
 33415                           fsr0h	equ	0xFEA
 33416                           fsr0l	equ	0xFE9
 33417                           wreg	equ	0xFE8
 33418                           indf1	equ	0xFE7
 33419                           postinc1	equ	0xFE6
 33420                           postdec1	equ	0xFE5
 33421                           plusw1	equ	0xFE3
 33422                           fsr1h	equ	0xFE2
 33423                           fsr1l	equ	0xFE1
 33424                           indf2	equ	0xFDF
 33425                           postinc2	equ	0xFDE
 33426                           postdec2	equ	0xFDD
 33427                           plusw2	equ	0xFDB
 33428                           fsr2h	equ	0xFDA
 33429                           fsr2l	equ	0xFD9
 33430                           status	equ	0xFD8
 33431                           
 33432 ;; *************** function _readTagADC *****************
 33433 ;; Defined at:
 33434 ;;		line 515 in file "tagRead.c"
 33435 ;; Parameters:    Size  Location     Type
 33436 ;;		None
 33437 ;; Auto vars:     Size  Location     Type
 33438 ;;		None
 33439 ;; Return value:  Size  Location     Type
 33440 ;;                  2    0[COMRAM] unsigned short 
 33441 ;; Registers used:
 33442 ;;		wreg, status,2
 33443 ;; Tracked objects:
 33444 ;;		On entry : 0/0
 33445 ;;		On exit  : 0/0
 33446 ;;		Unchanged: 0/0
 33447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33448 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33451 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33452 ;;Total ram usage:        2 bytes
 33453 ;; Hardware stack levels used:    1
 33454 ;; This function calls:
 33455 ;;		Nothing
 33456 ;; This function is called by:
 33457 ;;		_detectFallingEdge
 33458 ;;		_detectRisingEdge
 33459 ;; This function uses a non-reentrant model
 33460 ;;
 33461                           
 33462                           	psect	text183
 33463  0079B6                     __ptext183:
 33464                           	opt stack 0
 33465  0079B6                     _readTagADC:
 33466                           	opt stack 15
 33467                           
 33468                           ;tagRead.c: 516: ADRES = 0;
 33469                           
 33470                           ;incstack = 0
 33471  0079B6  0E00               	movlw	0
 33472  0079B8  6E64               	movwf	3940,c	;volatile
 33473  0079BA  0E00               	movlw	0
 33474  0079BC  6E63               	movwf	3939,c	;volatile
 33475                           
 33476                           ;tagRead.c: 517: ADCON0bits.ADGO = 1;
 33477  0079BE  8060               	bsf	3936,0,c	;volatile
 33478  0079C0                     i2l1332:
 33479  0079C0  B060               	btfsc	3936,0,c	;volatile
 33480  0079C2  D7FE               	goto	i2l1332
 33481                           
 33482                           ;tagRead.c: 519: return ADRES;
 33483  0079C4  CF63 F001          	movff	3939,?_readTagADC	;volatile
 33484  0079C8  CF64 F002          	movff	3940,?_readTagADC+1	;volatile
 33485  0079CC  0012               	return		;funcret
 33486  0079CE                     __end_of_readTagADC:
 33487                           	opt stack 0
 33488                           pclatu	equ	0xFFB
 33489                           pclath	equ	0xFFA
 33490                           tblptru	equ	0xFF8
 33491                           tblptrh	equ	0xFF7
 33492                           tblptrl	equ	0xFF6
 33493                           tablat	equ	0xFF5
 33494                           prodh	equ	0xFF4
 33495                           prodl	equ	0xFF3
 33496                           intcon	equ	0xFF2
 33497                           postinc0	equ	0xFEE
 33498                           fsr0h	equ	0xFEA
 33499                           fsr0l	equ	0xFE9
 33500                           wreg	equ	0xFE8
 33501                           indf1	equ	0xFE7
 33502                           postinc1	equ	0xFE6
 33503                           postdec1	equ	0xFE5
 33504                           plusw1	equ	0xFE3
 33505                           fsr1h	equ	0xFE2
 33506                           fsr1l	equ	0xFE1
 33507                           indf2	equ	0xFDF
 33508                           postinc2	equ	0xFDE
 33509                           postdec2	equ	0xFDD
 33510                           plusw2	equ	0xFDB
 33511                           fsr2h	equ	0xFDA
 33512                           fsr2l	equ	0xFD9
 33513                           status	equ	0xFD8
 33514                           
 33515 ;; *************** function _UIO_noMAK *****************
 33516 ;; Defined at:
 33517 ;;		line 407 in file "tagRead.c"
 33518 ;; Parameters:    Size  Location     Type
 33519 ;;		None
 33520 ;; Auto vars:     Size  Location     Type
 33521 ;;		None
 33522 ;; Return value:  Size  Location     Type
 33523 ;;                  1    wreg      void 
 33524 ;; Registers used:
 33525 ;;		wreg, status,2, status,0, cstack
 33526 ;; Tracked objects:
 33527 ;;		On entry : 0/0
 33528 ;;		On exit  : 0/0
 33529 ;;		Unchanged: 0/0
 33530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33535 ;;Total ram usage:        0 bytes
 33536 ;; Hardware stack levels used:    1
 33537 ;; Hardware stack levels required when called:    1
 33538 ;; This function calls:
 33539 ;;		i2__delay_us
 33540 ;; This function is called by:
 33541 ;;		_SCAN_TAG
 33542 ;; This function uses a non-reentrant model
 33543 ;;
 33544                           
 33545                           	psect	text184
 33546  007A82                     __ptext184:
 33547                           	opt stack 0
 33548  007A82                     _UIO_noMAK:
 33549                           	opt stack 16
 33550                           
 33551                           ;tagRead.c: 409: LATEbits.LATE2 = 1;
 33552                           
 33553                           ;incstack = 0
 33554  007A82  847D               	bsf	3965,2,c	;volatile
 33555                           
 33556                           ;tagRead.c: 410: _delay_us(50);
 33557  007A84  0E32               	movlw	50
 33558  007A86  EC98  F03B         	call	i2__delay_us
 33559                           
 33560                           ;tagRead.c: 411: LATEbits.LATE2 = 0;
 33561  007A8A  947D               	bcf	3965,2,c	;volatile
 33562                           
 33563                           ;tagRead.c: 412: _delay_us(50);
 33564  007A8C  0E32               	movlw	50
 33565  007A8E  EC98  F03B         	call	i2__delay_us
 33566  007A92  0012               	return		;funcret
 33567  007A94                     __end_of_UIO_noMAK:
 33568                           	opt stack 0
 33569                           pclatu	equ	0xFFB
 33570                           pclath	equ	0xFFA
 33571                           tblptru	equ	0xFF8
 33572                           tblptrh	equ	0xFF7
 33573                           tblptrl	equ	0xFF6
 33574                           tablat	equ	0xFF5
 33575                           prodh	equ	0xFF4
 33576                           prodl	equ	0xFF3
 33577                           intcon	equ	0xFF2
 33578                           postinc0	equ	0xFEE
 33579                           fsr0h	equ	0xFEA
 33580                           fsr0l	equ	0xFE9
 33581                           wreg	equ	0xFE8
 33582                           indf1	equ	0xFE7
 33583                           postinc1	equ	0xFE6
 33584                           postdec1	equ	0xFE5
 33585                           plusw1	equ	0xFE3
 33586                           fsr1h	equ	0xFE2
 33587                           fsr1l	equ	0xFE1
 33588                           indf2	equ	0xFDF
 33589                           postinc2	equ	0xFDE
 33590                           postdec2	equ	0xFDD
 33591                           plusw2	equ	0xFDB
 33592                           fsr2h	equ	0xFDA
 33593                           fsr2l	equ	0xFD9
 33594                           status	equ	0xFD8
 33595                           
 33596 ;; *************** function _UIO_WRITE *****************
 33597 ;; Defined at:
 33598 ;;		line 275 in file "tagRead.c"
 33599 ;; Parameters:    Size  Location     Type
 33600 ;;  cmd             1    wreg     unsigned char 
 33601 ;; Auto vars:     Size  Location     Type
 33602 ;;  cmd             1    3[COMRAM] unsigned char 
 33603 ;;  nDigit          1    5[COMRAM] unsigned char 
 33604 ;;  uio_data        1    4[COMRAM] unsigned char 
 33605 ;; Return value:  Size  Location     Type
 33606 ;;                  1    wreg      void 
 33607 ;; Registers used:
 33608 ;;		wreg, status,2, status,0, cstack
 33609 ;; Tracked objects:
 33610 ;;		On entry : 0/0
 33611 ;;		On exit  : 0/0
 33612 ;;		Unchanged: 0/0
 33613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33615 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33616 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33617 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33618 ;;Total ram usage:        5 bytes
 33619 ;; Hardware stack levels used:    1
 33620 ;; Hardware stack levels required when called:    1
 33621 ;; This function calls:
 33622 ;;		i2__delay_us
 33623 ;; This function is called by:
 33624 ;;		_SCAN_TAG
 33625 ;; This function uses a non-reentrant model
 33626 ;;
 33627                           
 33628                           	psect	text185
 33629  006B26                     __ptext185:
 33630                           	opt stack 0
 33631  006B26                     _UIO_WRITE:
 33632                           	opt stack 16
 33633                           
 33634                           ;incstack = 0
 33635                           ;UIO_WRITE@cmd stored from wreg
 33636  006B26  6E04               	movwf	UIO_WRITE@cmd,c
 33637                           
 33638                           ;tagRead.c: 277: unsigned char uio_data;
 33639                           ;tagRead.c: 278: unsigned char nDigit;
 33640                           ;tagRead.c: 279: uio_data = cmd;
 33641  006B28  C004  F005         	movff	UIO_WRITE@cmd,UIO_WRITE@uio_data
 33642                           
 33643                           ;tagRead.c: 281: for ( nDigit=8; nDigit>0; nDigit--)
 33644  006B2C  0E08               	movlw	8
 33645  006B2E  6E06               	movwf	UIO_WRITE@nDigit,c
 33646  006B30  5006               	movf	UIO_WRITE@nDigit,w,c
 33647  006B32  B4D8               	btfsc	status,2,c
 33648  006B34  0012               	return	
 33649  006B36  D012               	goto	i2l9490
 33650  006B38                     i2l1246:
 33651                           
 33652                           ;tagRead.c: 286: {
 33653                           ;tagRead.c: 287: LATEbits.LATE2 = 1;
 33654  006B38  847D               	bsf	3965,2,c	;volatile
 33655                           
 33656                           ;tagRead.c: 288: _delay_us(50);
 33657  006B3A  0E32               	movlw	50
 33658  006B3C  EC98  F03B         	call	i2__delay_us
 33659                           
 33660                           ;tagRead.c: 289: LATEbits.LATE2 = 0;
 33661  006B40  947D               	bcf	3965,2,c	;volatile
 33662                           
 33663                           ;tagRead.c: 290: _delay_us(50);
 33664  006B42  0E32               	movlw	50
 33665  006B44  EC98  F03B         	call	i2__delay_us
 33666                           
 33667                           ;tagRead.c: 291: break;
 33668  006B48  D016               	goto	i2l9492
 33669  006B4A                     i2l1248:
 33670                           
 33671                           ;tagRead.c: 294: {
 33672                           ;tagRead.c: 295: LATEbits.LATE2 = 0;
 33673  006B4A  947D               	bcf	3965,2,c	;volatile
 33674                           
 33675                           ;tagRead.c: 296: _delay_us(50);
 33676  006B4C  0E32               	movlw	50
 33677  006B4E  EC98  F03B         	call	i2__delay_us
 33678                           
 33679                           ;tagRead.c: 297: LATEbits.LATE2 = 1 ;
 33680  006B52  847D               	bsf	3965,2,c	;volatile
 33681                           
 33682                           ;tagRead.c: 298: _delay_us(50);
 33683  006B54  0E32               	movlw	50
 33684  006B56  EC98  F03B         	call	i2__delay_us
 33685                           
 33686                           ;tagRead.c: 300: }
 33687                           ;tagRead.c: 301: }
 33688                           
 33689                           ;tagRead.c: 299: break;
 33690  006B5A  D00D               	goto	i2l9492
 33691  006B5C                     i2l9490:
 33692  006B5C  5005               	movf	UIO_WRITE@uio_data,w,c
 33693  006B5E  0B80               	andlw	128
 33694  006B60  6E02               	movwf	??_UIO_WRITE& (0+255),c
 33695  006B62  6A03               	clrf	(??_UIO_WRITE+1)& (0+255),c
 33696                           
 33697                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33698                           ; Switch size 1, requested type "space"
 33699                           ; Number of cases is 1, Range of values is 0 to 0
 33700                           ; switch strategies available:
 33701                           ; Name         Instructions Cycles
 33702                           ; simple_byte            4     3 (average)
 33703                           ;	Chosen strategy is simple_byte
 33704  006B64  5003               	movf	??_UIO_WRITE+1,w,c
 33705  006B66  0A00               	xorlw	0	; case 0
 33706  006B68  A4D8               	btfss	status,2,c
 33707  006B6A  D7EF               	goto	i2l1248
 33708                           
 33709                           ; Switch size 1, requested type "space"
 33710                           ; Number of cases is 1, Range of values is 0 to 0
 33711                           ; switch strategies available:
 33712                           ; Name         Instructions Cycles
 33713                           ; simple_byte            4     3 (average)
 33714                           ;	Chosen strategy is simple_byte
 33715  006B6C  5002               	movf	??_UIO_WRITE,w,c
 33716  006B6E  0A00               	xorlw	0	; case 0
 33717  006B70  B4D8               	btfsc	status,2,c
 33718  006B72  D7E2               	goto	i2l1246
 33719  006B74  D7EA               	goto	i2l1248
 33720  006B76                     i2l9492:
 33721                           
 33722                           ;tagRead.c: 302: uio_data = (uio_data << 1);
 33723  006B76  5005               	movf	UIO_WRITE@uio_data,w,c
 33724  006B78  2405               	addwf	UIO_WRITE@uio_data,w,c
 33725  006B7A  6E05               	movwf	UIO_WRITE@uio_data,c
 33726  006B7C  0606               	decf	UIO_WRITE@nDigit,f,c
 33727  006B7E  D7D8               	goto	L25
 33728  006B80                     __end_of_UIO_WRITE:
 33729                           	opt stack 0
 33730                           pclatu	equ	0xFFB
 33731                           pclath	equ	0xFFA
 33732                           tblptru	equ	0xFF8
 33733                           tblptrh	equ	0xFF7
 33734                           tblptrl	equ	0xFF6
 33735                           tablat	equ	0xFF5
 33736                           prodh	equ	0xFF4
 33737                           prodl	equ	0xFF3
 33738                           intcon	equ	0xFF2
 33739                           postinc0	equ	0xFEE
 33740                           fsr0h	equ	0xFEA
 33741                           fsr0l	equ	0xFE9
 33742                           wreg	equ	0xFE8
 33743                           indf1	equ	0xFE7
 33744                           postinc1	equ	0xFE6
 33745                           postdec1	equ	0xFE5
 33746                           plusw1	equ	0xFE3
 33747                           fsr1h	equ	0xFE2
 33748                           fsr1l	equ	0xFE1
 33749                           indf2	equ	0xFDF
 33750                           postinc2	equ	0xFDE
 33751                           postdec2	equ	0xFDD
 33752                           plusw2	equ	0xFDB
 33753                           fsr2h	equ	0xFDA
 33754                           fsr2l	equ	0xFD9
 33755                           status	equ	0xFD8
 33756                           
 33757 ;; *************** function _UIO_SAK *****************
 33758 ;; Defined at:
 33759 ;;		line 341 in file "tagRead.c"
 33760 ;; Parameters:    Size  Location     Type
 33761 ;;		None
 33762 ;; Auto vars:     Size  Location     Type
 33763 ;;  SAK             1    1[COMRAM] unsigned char 
 33764 ;; Return value:  Size  Location     Type
 33765 ;;                  1    wreg      unsigned char 
 33766 ;; Registers used:
 33767 ;;		wreg, status,2, status,0, cstack
 33768 ;; Tracked objects:
 33769 ;;		On entry : 0/0
 33770 ;;		On exit  : 0/0
 33771 ;;		Unchanged: 0/0
 33772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33774 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33776 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33777 ;;Total ram usage:        1 bytes
 33778 ;; Hardware stack levels used:    1
 33779 ;; Hardware stack levels required when called:    1
 33780 ;; This function calls:
 33781 ;;		i2__delay_us
 33782 ;; This function is called by:
 33783 ;;		_SCAN_TAG
 33784 ;; This function uses a non-reentrant model
 33785 ;;
 33786                           
 33787                           	psect	text186
 33788  007368                     __ptext186:
 33789                           	opt stack 0
 33790  007368                     _UIO_SAK:
 33791                           	opt stack 16
 33792                           
 33793                           ;tagRead.c: 343: unsigned char SAK = 0;
 33794                           
 33795                           ;incstack = 0
 33796  007368  0E00               	movlw	0
 33797  00736A  6E02               	movwf	UIO_SAK@SAK,c
 33798                           
 33799                           ;tagRead.c: 345: TRISEbits.TRISE2 = 1;
 33800  00736C  8485               	bsf	3973,2,c	;volatile
 33801                           
 33802                           ;tagRead.c: 346: _delay_us(25);
 33803  00736E  0E19               	movlw	25
 33804  007370  EC98  F03B         	call	i2__delay_us
 33805                           
 33806                           ;tagRead.c: 348: if (PORTEbits.RE2)
 33807  007374  A48D               	btfss	3981,2,c	;volatile
 33808  007376  D002               	goto	i2l9518
 33809                           
 33810                           ;tagRead.c: 349: SAK |= 0x02;
 33811  007378  8202               	bsf	UIO_SAK@SAK,1,c
 33812  00737A  D001               	goto	i2l9520
 33813  00737C                     i2l9518:
 33814                           
 33815                           ;tagRead.c: 350: else
 33816                           ;tagRead.c: 351: SAK &= ~0x02;
 33817  00737C  9202               	bcf	UIO_SAK@SAK,1,c
 33818  00737E                     i2l9520:
 33819                           
 33820                           ;tagRead.c: 353: _delay_us(50);
 33821  00737E  0E32               	movlw	50
 33822  007380  EC98  F03B         	call	i2__delay_us
 33823                           
 33824                           ;tagRead.c: 355: if (PORTEbits.RE2)
 33825  007384  A48D               	btfss	3981,2,c	;volatile
 33826  007386  D002               	goto	i2l9526
 33827                           
 33828                           ;tagRead.c: 356: SAK |= 0x01;
 33829  007388  8002               	bsf	UIO_SAK@SAK,0,c
 33830  00738A  D001               	goto	i2l9528
 33831  00738C                     i2l9526:
 33832                           
 33833                           ;tagRead.c: 357: else
 33834                           ;tagRead.c: 358: SAK &= ~0x01;
 33835  00738C  9002               	bcf	UIO_SAK@SAK,0,c
 33836  00738E                     i2l9528:
 33837                           
 33838                           ;tagRead.c: 360: _delay_us(25);
 33839  00738E  0E19               	movlw	25
 33840  007390  EC98  F03B         	call	i2__delay_us
 33841                           
 33842                           ;tagRead.c: 361: return SAK;
 33843  007394  5002               	movf	UIO_SAK@SAK,w,c
 33844  007396  0012               	return	
 33845  007398                     __end_of_UIO_SAK:
 33846                           	opt stack 0
 33847                           pclatu	equ	0xFFB
 33848                           pclath	equ	0xFFA
 33849                           tblptru	equ	0xFF8
 33850                           tblptrh	equ	0xFF7
 33851                           tblptrl	equ	0xFF6
 33852                           tablat	equ	0xFF5
 33853                           prodh	equ	0xFF4
 33854                           prodl	equ	0xFF3
 33855                           intcon	equ	0xFF2
 33856                           postinc0	equ	0xFEE
 33857                           fsr0h	equ	0xFEA
 33858                           fsr0l	equ	0xFE9
 33859                           wreg	equ	0xFE8
 33860                           indf1	equ	0xFE7
 33861                           postinc1	equ	0xFE6
 33862                           postdec1	equ	0xFE5
 33863                           plusw1	equ	0xFE3
 33864                           fsr1h	equ	0xFE2
 33865                           fsr1l	equ	0xFE1
 33866                           indf2	equ	0xFDF
 33867                           postinc2	equ	0xFDE
 33868                           postdec2	equ	0xFDD
 33869                           plusw2	equ	0xFDB
 33870                           fsr2h	equ	0xFDA
 33871                           fsr2l	equ	0xFD9
 33872                           status	equ	0xFD8
 33873                           
 33874 ;; *************** function _UIO_MAK *****************
 33875 ;; Defined at:
 33876 ;;		line 387 in file "tagRead.c"
 33877 ;; Parameters:    Size  Location     Type
 33878 ;;		None
 33879 ;; Auto vars:     Size  Location     Type
 33880 ;;		None
 33881 ;; Return value:  Size  Location     Type
 33882 ;;                  1    wreg      void 
 33883 ;; Registers used:
 33884 ;;		wreg, status,2, status,0, cstack
 33885 ;; Tracked objects:
 33886 ;;		On entry : 0/0
 33887 ;;		On exit  : 0/0
 33888 ;;		Unchanged: 0/0
 33889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33894 ;;Total ram usage:        0 bytes
 33895 ;; Hardware stack levels used:    1
 33896 ;; Hardware stack levels required when called:    1
 33897 ;; This function calls:
 33898 ;;		i2__delay_us
 33899 ;; This function is called by:
 33900 ;;		_SCAN_TAG
 33901 ;; This function uses a non-reentrant model
 33902 ;;
 33903                           
 33904                           	psect	text187
 33905  007A94                     __ptext187:
 33906                           	opt stack 0
 33907  007A94                     _UIO_MAK:
 33908                           	opt stack 16
 33909                           
 33910                           ;tagRead.c: 389: LATEbits.LATE2 = 0;
 33911                           
 33912                           ;incstack = 0
 33913  007A94  947D               	bcf	3965,2,c	;volatile
 33914                           
 33915                           ;tagRead.c: 390: _delay_us(50);
 33916  007A96  0E32               	movlw	50
 33917  007A98  EC98  F03B         	call	i2__delay_us
 33918                           
 33919                           ;tagRead.c: 391: LATEbits.LATE2 = 1;
 33920  007A9C  847D               	bsf	3965,2,c	;volatile
 33921                           
 33922                           ;tagRead.c: 392: _delay_us(50);
 33923  007A9E  0E32               	movlw	50
 33924  007AA0  EC98  F03B         	call	i2__delay_us
 33925  007AA4  0012               	return		;funcret
 33926  007AA6                     __end_of_UIO_MAK:
 33927                           	opt stack 0
 33928                           pclatu	equ	0xFFB
 33929                           pclath	equ	0xFFA
 33930                           tblptru	equ	0xFF8
 33931                           tblptrh	equ	0xFF7
 33932                           tblptrl	equ	0xFF6
 33933                           tablat	equ	0xFF5
 33934                           prodh	equ	0xFF4
 33935                           prodl	equ	0xFF3
 33936                           intcon	equ	0xFF2
 33937                           postinc0	equ	0xFEE
 33938                           fsr0h	equ	0xFEA
 33939                           fsr0l	equ	0xFE9
 33940                           wreg	equ	0xFE8
 33941                           indf1	equ	0xFE7
 33942                           postinc1	equ	0xFE6
 33943                           postdec1	equ	0xFE5
 33944                           plusw1	equ	0xFE3
 33945                           fsr1h	equ	0xFE2
 33946                           fsr1l	equ	0xFE1
 33947                           indf2	equ	0xFDF
 33948                           postinc2	equ	0xFDE
 33949                           postdec2	equ	0xFDD
 33950                           plusw2	equ	0xFDB
 33951                           fsr2h	equ	0xFDA
 33952                           fsr2l	equ	0xFD9
 33953                           status	equ	0xFD8
 33954                           
 33955 ;; *************** function _CHECK_CRC16 *****************
 33956 ;; Defined at:
 33957 ;;		line 423 in file "tagRead.c"
 33958 ;; Parameters:    Size  Location     Type
 33959 ;;		None
 33960 ;; Auto vars:     Size  Location     Type
 33961 ;;  crc             2   10[COMRAM] unsigned short 
 33962 ;; Return value:  Size  Location     Type
 33963 ;;                  1    wreg      unsigned char 
 33964 ;; Registers used:
 33965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33966 ;; Tracked objects:
 33967 ;;		On entry : 0/0
 33968 ;;		On exit  : 0/0
 33969 ;;		Unchanged: 0/0
 33970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33972 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33974 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33975 ;;Total ram usage:        2 bytes
 33976 ;; Hardware stack levels used:    1
 33977 ;; Hardware stack levels required when called:    1
 33978 ;; This function calls:
 33979 ;;		_calcrc
 33980 ;; This function is called by:
 33981 ;;		_READ_TAG
 33982 ;;		_READ_TAG_REVERSE
 33983 ;; This function uses a non-reentrant model
 33984 ;;
 33985                           
 33986                           	psect	text188
 33987  0070F6                     __ptext188:
 33988                           	opt stack 0
 33989  0070F6                     _CHECK_CRC16:
 33990                           	opt stack 17
 33991                           
 33992                           ;tagRead.c: 425: unsigned short crc;
 33993                           ;tagRead.c: 426: TAG_Response[0] = 0XAA;
 33994                           
 33995                           ;incstack = 0
 33996  0070F6  0EAA               	movlw	170
 33997  0070F8  6E4D               	movwf	_TAG_Response,c
 33998                           
 33999                           ;tagRead.c: 427: crc = calcrc(TAG_Response, 6);
 34000  0070FA  0E4D               	movlw	low _TAG_Response
 34001  0070FC  6E01               	movwf	calcrc@ptr,c
 34002  0070FE  0E00               	movlw	high _TAG_Response
 34003  007100  6E02               	movwf	calcrc@ptr+1,c
 34004  007102  0E00               	movlw	0
 34005  007104  6E04               	movwf	calcrc@count+1,c
 34006  007106  0E06               	movlw	6
 34007  007108  6E03               	movwf	calcrc@count,c
 34008  00710A  EC45  F032         	call	_calcrc	;wreg free
 34009  00710E  C001  F00B         	movff	?_calcrc,CHECK_CRC16@crc
 34010  007112  C002  F00C         	movff	?_calcrc+1,CHECK_CRC16@crc+1
 34011                           
 34012                           ;tagRead.c: 428: if ((TAG_Response[6] == (unsigned char)(crc >> 8)) && (TAG_Response[7] 
      +                          == (unsigned char)(crc)))
 34013  007116  500C               	movf	CHECK_CRC16@crc+1,w,c
 34014  007118  1853               	xorwf	_TAG_Response+6,w,c
 34015  00711A  A4D8               	btfss	status,2,c
 34016  00711C  D006               	goto	i2l10946
 34017  00711E  500B               	movf	CHECK_CRC16@crc,w,c
 34018  007120  1854               	xorwf	_TAG_Response+7,w,c
 34019  007122  A4D8               	btfss	status,2,c
 34020  007124  D002               	goto	i2l10946
 34021                           
 34022                           ;tagRead.c: 429: { return 1; }
 34023  007126  0E01               	movlw	1
 34024  007128  0012               	return	
 34025  00712A                     i2l10946:
 34026                           
 34027                           ;tagRead.c: 430: return 0;
 34028  00712A  0E00               	movlw	0
 34029  00712C  0012               	return	
 34030  00712E                     __end_of_CHECK_CRC16:
 34031                           	opt stack 0
 34032                           pclatu	equ	0xFFB
 34033                           pclath	equ	0xFFA
 34034                           tblptru	equ	0xFF8
 34035                           tblptrh	equ	0xFF7
 34036                           tblptrl	equ	0xFF6
 34037                           tablat	equ	0xFF5
 34038                           prodh	equ	0xFF4
 34039                           prodl	equ	0xFF3
 34040                           intcon	equ	0xFF2
 34041                           postinc0	equ	0xFEE
 34042                           fsr0h	equ	0xFEA
 34043                           fsr0l	equ	0xFE9
 34044                           wreg	equ	0xFE8
 34045                           indf1	equ	0xFE7
 34046                           postinc1	equ	0xFE6
 34047                           postdec1	equ	0xFE5
 34048                           plusw1	equ	0xFE3
 34049                           fsr1h	equ	0xFE2
 34050                           fsr1l	equ	0xFE1
 34051                           indf2	equ	0xFDF
 34052                           postinc2	equ	0xFDE
 34053                           postdec2	equ	0xFDD
 34054                           plusw2	equ	0xFDB
 34055                           fsr2h	equ	0xFDA
 34056                           fsr2l	equ	0xFD9
 34057                           status	equ	0xFD8
 34058                           
 34059 ;; *************** function _calcrc *****************
 34060 ;; Defined at:
 34061 ;;		line 435 in file "tagRead.c"
 34062 ;; Parameters:    Size  Location     Type
 34063 ;;  ptr             2    0[COMRAM] PTR unsigned char 
 34064 ;;		 -> TAG_Response(10), 
 34065 ;;  count           2    2[COMRAM] int 
 34066 ;; Auto vars:     Size  Location     Type
 34067 ;;  crc             2    8[COMRAM] unsigned int 
 34068 ;;  i               1    7[COMRAM] unsigned char 
 34069 ;; Return value:  Size  Location     Type
 34070 ;;                  2    0[COMRAM] unsigned int 
 34071 ;; Registers used:
 34072 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34073 ;; Tracked objects:
 34074 ;;		On entry : 0/0
 34075 ;;		On exit  : 0/0
 34076 ;;		Unchanged: 0/0
 34077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34078 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34079 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34080 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34081 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34082 ;;Total ram usage:       10 bytes
 34083 ;; Hardware stack levels used:    1
 34084 ;; This function calls:
 34085 ;;		Nothing
 34086 ;; This function is called by:
 34087 ;;		_CHECK_CRC16
 34088 ;; This function uses a non-reentrant model
 34089 ;;
 34090                           
 34091                           	psect	text189
 34092  00648A                     __ptext189:
 34093                           	opt stack 0
 34094  00648A                     _calcrc:
 34095                           	opt stack 17
 34096                           
 34097                           ;tagRead.c: 436: unsigned int crc;
 34098                           ;tagRead.c: 437: unsigned char i;
 34099                           ;tagRead.c: 439: crc = 0;
 34100                           
 34101                           ;incstack = 0
 34102  00648A  0E00               	movlw	0
 34103  00648C  6E0A               	movwf	calcrc@crc+1,c
 34104  00648E  0E00               	movlw	0
 34105  006490  6E09               	movwf	calcrc@crc,c
 34106                           
 34107                           ;tagRead.c: 440: while (--count >= 0)
 34108  006492  D029               	goto	i2l9668
 34109  006494                     i2l9654:
 34110                           
 34111                           ;tagRead.c: 441: {
 34112                           ;tagRead.c: 442: crc = crc ^ (int) *ptr++ << 8;
 34113  006494  C001  FFD9         	movff	calcrc@ptr,fsr2l
 34114  006498  C002  FFDA         	movff	calcrc@ptr+1,fsr2h
 34115  00649C  50DF               	movf	indf2,w,c
 34116  00649E  6E05               	movwf	??_calcrc& (0+255),c
 34117  0064A0  5005               	movf	??_calcrc,w,c
 34118  0064A2  6E07               	movwf	(??_calcrc+2)& (0+255),c
 34119  0064A4  6A06               	clrf	(??_calcrc+1)& (0+255),c
 34120  0064A6  5009               	movf	calcrc@crc,w,c
 34121  0064A8  1806               	xorwf	??_calcrc+1,w,c
 34122  0064AA  6E09               	movwf	calcrc@crc,c
 34123  0064AC  500A               	movf	calcrc@crc+1,w,c
 34124  0064AE  1807               	xorwf	??_calcrc+2,w,c
 34125  0064B0  6E0A               	movwf	calcrc@crc+1,c
 34126  0064B2  4A01               	infsnz	calcrc@ptr,f,c
 34127  0064B4  2A02               	incf	calcrc@ptr+1,f,c
 34128                           
 34129                           ;tagRead.c: 443: i = 8;
 34130  0064B6  0E08               	movlw	8
 34131  0064B8  6E08               	movwf	calcrc@i,c
 34132  0064BA                     i2l9660:
 34133                           
 34134                           ;tagRead.c: 445: {
 34135                           ;tagRead.c: 446: if (crc & 0x8000)
 34136  0064BA  AE0A               	btfss	calcrc@crc+1,7,c
 34137  0064BC  D00D               	goto	i2l9664
 34138                           
 34139                           ;tagRead.c: 447: crc = crc << 1 ^ 0x1021;
 34140  0064BE  C009  F005         	movff	calcrc@crc,??_calcrc
 34141  0064C2  C00A  F006         	movff	calcrc@crc+1,??_calcrc+1
 34142  0064C6  90D8               	bcf	status,0,c
 34143  0064C8  3605               	rlcf	??_calcrc,f,c
 34144  0064CA  3606               	rlcf	??_calcrc+1,f,c
 34145  0064CC  0E21               	movlw	33
 34146  0064CE  1805               	xorwf	??_calcrc,w,c
 34147  0064D0  6E09               	movwf	calcrc@crc,c
 34148  0064D2  0E10               	movlw	16
 34149  0064D4  1806               	xorwf	??_calcrc+1,w,c
 34150  0064D6  D004               	goto	L26
 34151  0064D8                     i2l9664:
 34152                           
 34153                           ;tagRead.c: 448: else
 34154                           ;tagRead.c: 449: crc = crc << 1;
 34155  0064D8  90D8               	bcf	status,0,c
 34156  0064DA  3409               	rlcf	calcrc@crc,w,c
 34157  0064DC  6E09               	movwf	calcrc@crc,c
 34158  0064DE  340A               	rlcf	calcrc@crc+1,w,c
 34159  0064E0                     L26:
 34160  0064E0  6E0A               	movwf	calcrc@crc+1,c
 34161                           
 34162                           ;tagRead.c: 450: } while(--i);
 34163  0064E2  2E08               	decfsz	calcrc@i,f,c
 34164  0064E4  D7EA               	goto	i2l9660
 34165  0064E6                     i2l9668:
 34166  0064E6  0603               	decf	calcrc@count,f,c
 34167  0064E8  A0D8               	btfss	status,0,c
 34168  0064EA  0604               	decf	calcrc@count+1,f,c
 34169  0064EC  AE04               	btfss	calcrc@count+1,7,c
 34170  0064EE  D7D2               	goto	i2l9654
 34171                           
 34172                           ;tagRead.c: 451: }
 34173                           ;tagRead.c: 452: return (crc);
 34174  0064F0  C009  F001         	movff	calcrc@crc,?_calcrc
 34175  0064F4  C00A  F002         	movff	calcrc@crc+1,?_calcrc+1
 34176  0064F8  0012               	return		;funcret
 34177  0064FA                     __end_of_calcrc:
 34178                           	opt stack 0
 34179                           pclatu	equ	0xFFB
 34180                           pclath	equ	0xFFA
 34181                           tblptru	equ	0xFF8
 34182                           tblptrh	equ	0xFF7
 34183                           tblptrl	equ	0xFF6
 34184                           tablat	equ	0xFF5
 34185                           prodh	equ	0xFF4
 34186                           prodl	equ	0xFF3
 34187                           intcon	equ	0xFF2
 34188                           postinc0	equ	0xFEE
 34189                           fsr0h	equ	0xFEA
 34190                           fsr0l	equ	0xFE9
 34191                           wreg	equ	0xFE8
 34192                           indf1	equ	0xFE7
 34193                           postinc1	equ	0xFE6
 34194                           postdec1	equ	0xFE5
 34195                           plusw1	equ	0xFE3
 34196                           fsr1h	equ	0xFE2
 34197                           fsr1l	equ	0xFE1
 34198                           indf2	equ	0xFDF
 34199                           postinc2	equ	0xFDE
 34200                           postdec2	equ	0xFDD
 34201                           plusw2	equ	0xFDB
 34202                           fsr2h	equ	0xFDA
 34203                           fsr2l	equ	0xFD9
 34204                           status	equ	0xFD8
 34205                           
 34206 ;; *************** function _readEUSART *****************
 34207 ;; Defined at:
 34208 ;;		line 124 in file "bluetooth.c"
 34209 ;; Parameters:    Size  Location     Type
 34210 ;;		None
 34211 ;; Auto vars:     Size  Location     Type
 34212 ;;		None
 34213 ;; Return value:  Size  Location     Type
 34214 ;;                  1    wreg      void 
 34215 ;; Registers used:
 34216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34217 ;; Tracked objects:
 34218 ;;		On entry : 0/0
 34219 ;;		On exit  : 0/0
 34220 ;;		Unchanged: 0/0
 34221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34226 ;;Total ram usage:        0 bytes
 34227 ;; Hardware stack levels used:    1
 34228 ;; Hardware stack levels required when called:    1
 34229 ;; This function calls:
 34230 ;;		_receiveBluetooth
 34231 ;;		_receiveBluetoothSetup
 34232 ;; This function is called by:
 34233 ;;		_isr
 34234 ;; This function uses a non-reentrant model
 34235 ;;
 34236                           
 34237                           	psect	text190
 34238  007712                     __ptext190:
 34239                           	opt stack 0
 34240  007712                     _readEUSART:
 34241                           	opt stack 19
 34242                           
 34243                           ;bluetooth.c: 125: COUNTERS.bluetoothTimer = 60000;
 34244                           
 34245                           ;incstack = 0
 34246  007712  0EEA               	movlw	234
 34247  007714  0100               	movlb	0	; () banked
 34248  007716  6FB5               	movwf	(_COUNTERS+18)& (0+255),b
 34249  007718  0E60               	movlw	96
 34250  00771A  6FB4               	movwf	(_COUNTERS+17)& (0+255),b
 34251                           
 34252                           ; BSR set to: 0
 34253                           ;bluetooth.c: 126: FLAGS.bluetoothTimer = 60000;
 34254  00771C  9639               	bcf	_FLAGS+2,3,c
 34255                           
 34256                           ; BSR set to: 0
 34257                           ;bluetooth.c: 127: if(bluetoothStatus.bluetoothSetup)
 34258  00771E  0100               	movlb	0	; () banked
 34259  007720  A3C2               	btfss	_bluetoothStatus& (0+255),1,b
 34260  007722  D003               	goto	i2l12122
 34261                           
 34262                           ; BSR set to: 0
 34263                           ;bluetooth.c: 128: receiveBluetoothSetup();
 34264  007724  ECCE  F037         	call	_receiveBluetoothSetup	;wreg free
 34265  007728  0012               	return	
 34266  00772A                     i2l12122:
 34267                           
 34268                           ;bluetooth.c: 129: else
 34269                           ;bluetooth.c: 130: receiveBluetooth();
 34270  00772A  ECC5  F029         	call	_receiveBluetooth	;wreg free
 34271  00772E  0012               	return	
 34272  007730                     __end_of_readEUSART:
 34273                           	opt stack 0
 34274                           pclatu	equ	0xFFB
 34275                           pclath	equ	0xFFA
 34276                           tblptru	equ	0xFF8
 34277                           tblptrh	equ	0xFF7
 34278                           tblptrl	equ	0xFF6
 34279                           tablat	equ	0xFF5
 34280                           prodh	equ	0xFF4
 34281                           prodl	equ	0xFF3
 34282                           intcon	equ	0xFF2
 34283                           postinc0	equ	0xFEE
 34284                           fsr0h	equ	0xFEA
 34285                           fsr0l	equ	0xFE9
 34286                           wreg	equ	0xFE8
 34287                           indf1	equ	0xFE7
 34288                           postinc1	equ	0xFE6
 34289                           postdec1	equ	0xFE5
 34290                           plusw1	equ	0xFE3
 34291                           fsr1h	equ	0xFE2
 34292                           fsr1l	equ	0xFE1
 34293                           indf2	equ	0xFDF
 34294                           postinc2	equ	0xFDE
 34295                           postdec2	equ	0xFDD
 34296                           plusw2	equ	0xFDB
 34297                           fsr2h	equ	0xFDA
 34298                           fsr2l	equ	0xFD9
 34299                           status	equ	0xFD8
 34300                           
 34301 ;; *************** function _receiveBluetoothSetup *****************
 34302 ;; Defined at:
 34303 ;;		line 440 in file "bluetooth.c"
 34304 ;; Parameters:    Size  Location     Type
 34305 ;;		None
 34306 ;; Auto vars:     Size  Location     Type
 34307 ;;		None
 34308 ;; Return value:  Size  Location     Type
 34309 ;;                  1    wreg      void 
 34310 ;; Registers used:
 34311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34312 ;; Tracked objects:
 34313 ;;		On entry : 0/0
 34314 ;;		On exit  : 0/0
 34315 ;;		Unchanged: 0/0
 34316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34321 ;;Total ram usage:        0 bytes
 34322 ;; Hardware stack levels used:    1
 34323 ;; This function calls:
 34324 ;;		Nothing
 34325 ;; This function is called by:
 34326 ;;		_readEUSART
 34327 ;; This function uses a non-reentrant model
 34328 ;;
 34329                           
 34330                           	psect	text191
 34331  006F9C                     __ptext191:
 34332                           	opt stack 0
 34333  006F9C                     _receiveBluetoothSetup:
 34334                           	opt stack 19
 34335                           
 34336                           ;bluetooth.c: 441: index ++;
 34337                           
 34338                           ;incstack = 0
 34339  006F9C  2A44               	incf	_index,f,c
 34340                           
 34341                           ;bluetooth.c: 442: dataR[index] = RC3REG;
 34342  006F9E  5044               	movf	_index,w,c
 34343  006FA0  0D01               	mullw	1
 34344  006FA2  0E8E               	movlw	low _dataR
 34345  006FA4  24F3               	addwf	prodl,w,c
 34346  006FA6  6ED9               	movwf	fsr2l,c
 34347  006FA8  0E01               	movlw	high _dataR
 34348  006FAA  20F4               	addwfc	prodh,w,c
 34349  006FAC  6EDA               	movwf	fsr2h,c
 34350  006FAE  CEEA FFDF          	movff	3818,indf2	;volatile
 34351                           
 34352                           ;bluetooth.c: 443: if(RC3REG == '\n'){
 34353  006FB2  0E0A               	movlw	10
 34354  006FB4  010E               	movlb	14	; () banked
 34355  006FB6  19EA               	xorwf	234,w,b	;volatile
 34356  006FB8  A4D8               	btfss	status,2,c
 34357  006FBA  0012               	return	
 34358                           
 34359                           ; BSR set to: 14
 34360                           ;bluetooth.c: 444: bluetoothStatus.dataReceived = 1;
 34361  006FBC  0100               	movlb	0	; () banked
 34362  006FBE  85C2               	bsf	_bluetoothStatus& (0+255),2,b
 34363                           
 34364                           ; BSR set to: 0
 34365                           ;bluetooth.c: 445: if(setupIndex == 3){
 34366  006FC0  0E03               	movlw	3
 34367  006FC2  0100               	movlb	0	; () banked
 34368  006FC4  19C0               	xorwf	_setupIndex& (0+255),w,b
 34369  006FC6  A4D8               	btfss	status,2,c
 34370  006FC8  D005               	goto	i2l2744
 34371                           
 34372                           ; BSR set to: 0
 34373                           ;bluetooth.c: 446: bluetoothStatus.bluetoothSetup = 0;
 34374  006FCA  0100               	movlb	0	; () banked
 34375  006FCC  93C2               	bcf	_bluetoothStatus& (0+255),1,b
 34376                           
 34377                           ; BSR set to: 0
 34378                           ;bluetooth.c: 447: state.led.next = 6;
 34379  006FCE  0E06               	movlw	6
 34380  006FD0  0101               	movlb	1	; () banked
 34381  006FD2  6FB4               	movwf	(_state+13)& (0+255),b
 34382  006FD4                     i2l2744:
 34383                           
 34384                           ;bluetooth.c: 448: }
 34385                           ;bluetooth.c: 449: index = 0;
 34386  006FD4  0E00               	movlw	0
 34387  006FD6  6E44               	movwf	_index,c
 34388  006FD8  0012               	return	
 34389  006FDA                     __end_of_receiveBluetoothSetup:
 34390                           	opt stack 0
 34391                           pclatu	equ	0xFFB
 34392                           pclath	equ	0xFFA
 34393                           tblptru	equ	0xFF8
 34394                           tblptrh	equ	0xFF7
 34395                           tblptrl	equ	0xFF6
 34396                           tablat	equ	0xFF5
 34397                           prodh	equ	0xFF4
 34398                           prodl	equ	0xFF3
 34399                           intcon	equ	0xFF2
 34400                           postinc0	equ	0xFEE
 34401                           fsr0h	equ	0xFEA
 34402                           fsr0l	equ	0xFE9
 34403                           wreg	equ	0xFE8
 34404                           indf1	equ	0xFE7
 34405                           postinc1	equ	0xFE6
 34406                           postdec1	equ	0xFE5
 34407                           plusw1	equ	0xFE3
 34408                           fsr1h	equ	0xFE2
 34409                           fsr1l	equ	0xFE1
 34410                           indf2	equ	0xFDF
 34411                           postinc2	equ	0xFDE
 34412                           postdec2	equ	0xFDD
 34413                           plusw2	equ	0xFDB
 34414                           fsr2h	equ	0xFDA
 34415                           fsr2l	equ	0xFD9
 34416                           status	equ	0xFD8
 34417                           
 34418 ;; *************** function _receiveBluetooth *****************
 34419 ;; Defined at:
 34420 ;;		line 454 in file "bluetooth.c"
 34421 ;; Parameters:    Size  Location     Type
 34422 ;;		None
 34423 ;; Auto vars:     Size  Location     Type
 34424 ;;		None
 34425 ;; Return value:  Size  Location     Type
 34426 ;;                  1    wreg      void 
 34427 ;; Registers used:
 34428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34429 ;; Tracked objects:
 34430 ;;		On entry : 0/0
 34431 ;;		On exit  : 0/0
 34432 ;;		Unchanged: 0/0
 34433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34436 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34437 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34438 ;;Total ram usage:        6 bytes
 34439 ;; Hardware stack levels used:    1
 34440 ;; This function calls:
 34441 ;;		Nothing
 34442 ;; This function is called by:
 34443 ;;		_readEUSART
 34444 ;; This function uses a non-reentrant model
 34445 ;;
 34446                           
 34447                           	psect	text192
 34448  00538A                     __ptext192:
 34449                           	opt stack 0
 34450  00538A                     _receiveBluetooth:
 34451                           	opt stack 19
 34452                           
 34453                           ;bluetooth.c: 455: dataR[index] = RC3REG;
 34454                           
 34455                           ;incstack = 0
 34456  00538A  5044               	movf	_index,w,c
 34457  00538C  0D01               	mullw	1
 34458  00538E  0E8E               	movlw	low _dataR
 34459  005390  24F3               	addwf	prodl,w,c
 34460  005392  6ED9               	movwf	fsr2l,c
 34461  005394  0E01               	movlw	high _dataR
 34462  005396  20F4               	addwfc	prodh,w,c
 34463  005398  6EDA               	movwf	fsr2h,c
 34464  00539A  CEEA FFDF          	movff	3818,indf2	;volatile
 34465                           
 34466                           ;bluetooth.c: 456: if(!bluetoothStatus.startFound){
 34467  00539E  0100               	movlb	0	; () banked
 34468  0053A0  B1C2               	btfsc	_bluetoothStatus& (0+255),0,b
 34469  0053A2  D04B               	goto	i2l11928
 34470                           
 34471                           ; BSR set to: 0
 34472                           ;bluetooth.c: 457: if(RC3REG == 0xAA)
 34473  0053A4  0EAA               	movlw	170
 34474  0053A6  010E               	movlb	14	; () banked
 34475  0053A8  19EA               	xorwf	234,w,b	;volatile
 34476  0053AA  A4D8               	btfss	status,2,c
 34477  0053AC  D002               	goto	i2l11912
 34478                           
 34479                           ; BSR set to: 14
 34480                           ;bluetooth.c: 458: bluetoothStatus.startFound = 1;
 34481  0053AE  0100               	movlb	0	; () banked
 34482  0053B0  81C2               	bsf	_bluetoothStatus& (0+255),0,b
 34483  0053B2                     i2l11912:
 34484                           
 34485                           ;bluetooth.c: 459: index = 0;
 34486  0053B2  0E00               	movlw	0
 34487  0053B4  6E44               	movwf	_index,c
 34488                           
 34489                           ;bluetooth.c: 460: }
 34490  0053B6  D049               	goto	i2l11930
 34491  0053B8                     i2l2752:
 34492                           
 34493                           ;bluetooth.c: 464: btPacket.receive.size = RC3REG;
 34494  0053B8  CEEA F0D6          	movff	3818,_btPacket+12	;volatile
 34495                           
 34496                           ;bluetooth.c: 465: break;
 34497  0053BC  D046               	goto	i2l11930
 34498  0053BE                     i2l2754:
 34499                           
 34500                           ;bluetooth.c: 468: btPacket.receive.command = RC3REG;
 34501  0053BE  CEEA F0D7          	movff	3818,_btPacket+13	;volatile
 34502                           
 34503                           ;bluetooth.c: 469: break;
 34504  0053C2  D043               	goto	i2l11930
 34505  0053C4                     i2l11914:
 34506                           
 34507                           ;bluetooth.c: 474: btPacket.receive.crc |= RC3REG;
 34508  0053C4  010E               	movlb	14	; () banked
 34509  0053C6  51EA               	movf	234,w,b	;volatile
 34510  0053C8  0100               	movlb	0	; () banked
 34511  0053CA  13DE               	iorwf	(_btPacket+20)& (0+255),f,b
 34512                           
 34513                           ; BSR set to: 0
 34514                           ;bluetooth.c: 475: bluetoothStatus.startFound = 0;
 34515  0053CC  0100               	movlb	0	; () banked
 34516  0053CE  91C2               	bcf	_bluetoothStatus& (0+255),0,b
 34517                           
 34518                           ; BSR set to: 0
 34519                           ;bluetooth.c: 476: bluetoothStatus.dataReceived = 1;
 34520  0053D0  0100               	movlb	0	; () banked
 34521  0053D2  85C2               	bsf	_bluetoothStatus& (0+255),2,b
 34522                           
 34523                           ;bluetooth.c: 477: break;
 34524  0053D4  D03A               	goto	i2l11930
 34525  0053D6                     i2l11920:
 34526                           
 34527                           ; BSR set to: 0
 34528                           ;bluetooth.c: 480: btPacket.receive.crc = (unsigned short)RC3REG << 8;
 34529  0053D6  010E               	movlb	14	; () banked
 34530  0053D8  51EA               	movf	234,w,b	;volatile
 34531  0053DA  0100               	movlb	0	; () banked
 34532  0053DC  6FDF               	movwf	(_btPacket+21)& (0+255),b
 34533  0053DE  6BDE               	clrf	(_btPacket+20)& (0+255),b
 34534                           
 34535                           ;bluetooth.c: 481: break;
 34536  0053E0  D034               	goto	i2l11930
 34537  0053E2                     i2l11922:
 34538                           
 34539                           ; BSR set to: 0
 34540                           ;bluetooth.c: 484: btPacket.receive.data[index - 3] = RC3REG;
 34541  0053E2  0ED5               	movlw	low (_btPacket+11)
 34542  0053E4  2444               	addwf	_index,w,c
 34543  0053E6  6ED9               	movwf	fsr2l,c
 34544  0053E8  6ADA               	clrf	fsr2h,c
 34545  0053EA  0E00               	movlw	high (_btPacket+11)
 34546  0053EC  22DA               	addwfc	fsr2h,f,c
 34547  0053EE  CEEA FFDF          	movff	3818,indf2	;volatile
 34548                           
 34549                           ; BSR set to: 0
 34550                           ;bluetooth.c: 486: }
 34551                           
 34552                           ;bluetooth.c: 485: break;
 34553  0053F2  D02B               	goto	i2l11930
 34554  0053F4                     i2l11926:
 34555  0053F4  0EFF               	movlw	255
 34556  0053F6  6E01               	movwf	??_receiveBluetooth& (0+255),c
 34557  0053F8  0EFF               	movlw	255
 34558  0053FA  6E02               	movwf	(??_receiveBluetooth+1)& (0+255),c
 34559  0053FC  5044               	movf	_index,w,c
 34560  0053FE  6E03               	movwf	(??_receiveBluetooth+2)& (0+255),c
 34561  005400  6A04               	clrf	(??_receiveBluetooth+3)& (0+255),c
 34562  005402  1E03               	comf	??_receiveBluetooth+2,f,c
 34563  005404  1E04               	comf	??_receiveBluetooth+3,f,c
 34564  005406  4A03               	infsnz	??_receiveBluetooth+2,f,c
 34565  005408  2A04               	incf	??_receiveBluetooth+3,f,c
 34566  00540A  0100               	movlb	0	; () banked
 34567  00540C  51D6               	movf	(_btPacket+12)& (0+255),w,b
 34568  00540E  6E05               	movwf	(??_receiveBluetooth+4)& (0+255),c
 34569  005410  6A06               	clrf	(??_receiveBluetooth+5)& (0+255),c
 34570  005412  5003               	movf	??_receiveBluetooth+2,w,c
 34571  005414  2605               	addwf	??_receiveBluetooth+4,f,c
 34572  005416  5004               	movf	??_receiveBluetooth+3,w,c
 34573  005418  2206               	addwfc	??_receiveBluetooth+5,f,c
 34574  00541A  5001               	movf	??_receiveBluetooth,w,c
 34575  00541C  2605               	addwf	??_receiveBluetooth+4,f,c
 34576  00541E  5002               	movf	??_receiveBluetooth+1,w,c
 34577  005420  2206               	addwfc	??_receiveBluetooth+5,f,c
 34578                           
 34579                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34580                           ; Switch size 1, requested type "space"
 34581                           ; Number of cases is 1, Range of values is 0 to 0
 34582                           ; switch strategies available:
 34583                           ; Name         Instructions Cycles
 34584                           ; simple_byte            4     3 (average)
 34585                           ;	Chosen strategy is simple_byte
 34586  005422  5006               	movf	??_receiveBluetooth+5,w,c
 34587  005424  0A00               	xorlw	0	; case 0
 34588  005426  A4D8               	btfss	status,2,c
 34589  005428  D7DC               	goto	i2l11922
 34590                           
 34591                           ; BSR set to: 0
 34592                           ; Switch size 1, requested type "space"
 34593                           ; Number of cases is 2, Range of values is 0 to 1
 34594                           ; switch strategies available:
 34595                           ; Name         Instructions Cycles
 34596                           ; simple_byte            7     4 (average)
 34597                           ;	Chosen strategy is simple_byte
 34598  00542A  5005               	movf	??_receiveBluetooth+4,w,c
 34599  00542C  0A00               	xorlw	0	; case 0
 34600  00542E  B4D8               	btfsc	status,2,c
 34601  005430  D7C9               	goto	i2l11914
 34602  005432  0A01               	xorlw	1	; case 1
 34603  005434  B4D8               	btfsc	status,2,c
 34604  005436  D7CF               	goto	i2l11920
 34605  005438  D7D4               	goto	i2l11922
 34606  00543A                     i2l11928:
 34607  00543A  5044               	movf	_index,w,c
 34608                           
 34609                           ; Switch size 1, requested type "space"
 34610                           ; Number of cases is 2, Range of values is 1 to 2
 34611                           ; switch strategies available:
 34612                           ; Name         Instructions Cycles
 34613                           ; simple_byte            7     4 (average)
 34614                           ;	Chosen strategy is simple_byte
 34615  00543C  0A01               	xorlw	1	; case 1
 34616  00543E  B4D8               	btfsc	status,2,c
 34617  005440  D7BB               	goto	i2l2752
 34618  005442  0A03               	xorlw	3	; case 2
 34619  005444  B4D8               	btfsc	status,2,c
 34620  005446  D7BB               	goto	i2l2754
 34621  005448  D7D5               	goto	i2l11926
 34622  00544A                     i2l11930:
 34623                           
 34624                           ;bluetooth.c: 489: }
 34625                           ;bluetooth.c: 490: index ++;
 34626  00544A  2A44               	incf	_index,f,c
 34627  00544C  0012               	return		;funcret
 34628  00544E                     __end_of_receiveBluetooth:
 34629                           	opt stack 0
 34630                           pclatu	equ	0xFFB
 34631                           pclath	equ	0xFFA
 34632                           tblptru	equ	0xFF8
 34633                           tblptrh	equ	0xFF7
 34634                           tblptrl	equ	0xFF6
 34635                           tablat	equ	0xFF5
 34636                           prodh	equ	0xFF4
 34637                           prodl	equ	0xFF3
 34638                           intcon	equ	0xFF2
 34639                           postinc0	equ	0xFEE
 34640                           fsr0h	equ	0xFEA
 34641                           fsr0l	equ	0xFE9
 34642                           wreg	equ	0xFE8
 34643                           indf1	equ	0xFE7
 34644                           postinc1	equ	0xFE6
 34645                           postdec1	equ	0xFE5
 34646                           plusw1	equ	0xFE3
 34647                           fsr1h	equ	0xFE2
 34648                           fsr1l	equ	0xFE1
 34649                           indf2	equ	0xFDF
 34650                           postinc2	equ	0xFDE
 34651                           postdec2	equ	0xFDD
 34652                           plusw2	equ	0xFDB
 34653                           fsr2h	equ	0xFDA
 34654                           fsr2l	equ	0xFD9
 34655                           status	equ	0xFD8
 34656                           
 34657 ;; *************** function _msIsr *****************
 34658 ;; Defined at:
 34659 ;;		line 31 in file "peripherals.c"
 34660 ;; Parameters:    Size  Location     Type
 34661 ;;		None
 34662 ;; Auto vars:     Size  Location     Type
 34663 ;;		None
 34664 ;; Return value:  Size  Location     Type
 34665 ;;                  1    wreg      void 
 34666 ;; Registers used:
 34667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34668 ;; Tracked objects:
 34669 ;;		On entry : 0/0
 34670 ;;		On exit  : 0/0
 34671 ;;		Unchanged: 0/0
 34672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34677 ;;Total ram usage:        0 bytes
 34678 ;; Hardware stack levels used:    1
 34679 ;; Hardware stack levels required when called:    3
 34680 ;; This function calls:
 34681 ;;		_checkOutgoingMessages
 34682 ;;		_stateCounterHandler
 34683 ;; This function is called by:
 34684 ;;		_isr
 34685 ;; This function uses a non-reentrant model
 34686 ;;
 34687                           
 34688                           	psect	text193
 34689  004DD6                     __ptext193:
 34690                           	opt stack 0
 34691  004DD6                     _msIsr:
 34692                           	opt stack 17
 34693                           
 34694                           ;peripherals.c: 32: PIR5bits.TMR6IF = 0;
 34695                           
 34696                           ;incstack = 0
 34697  004DD6  010E               	movlb	14	; () banked
 34698  004DD8  9B38               	bcf	56,5,b	;volatile
 34699                           
 34700                           ;peripherals.c: 33: FLAGS.ms = 1;
 34701  004DDA  8637               	bsf	_FLAGS,3,c
 34702                           
 34703                           ; BSR set to: 14
 34704                           ;peripherals.c: 34: stateCounterHandler();
 34705  004DDC  EC53  F030         	call	_stateCounterHandler	;wreg free
 34706                           
 34707                           ;peripherals.c: 36: if(!COUNTERS.sec3)
 34708  004DE0  0100               	movlb	0	; () banked
 34709  004DE2  51AD               	movf	(_COUNTERS+10)& (0+255),w,b
 34710  004DE4  0100               	movlb	0	; () banked
 34711  004DE6  11AE               	iorwf	(_COUNTERS+11)& (0+255),w,b
 34712  004DE8  A4D8               	btfss	status,2,c
 34713  004DEA  D002               	goto	i2l11980
 34714                           
 34715                           ; BSR set to: 0
 34716                           ;peripherals.c: 37: FLAGS.sec3 = 1;
 34717  004DEC  8C37               	bsf	_FLAGS,6,c
 34718  004DEE  D004               	goto	i2l11982
 34719  004DF0                     i2l11980:
 34720                           
 34721                           ; BSR set to: 0
 34722                           ;peripherals.c: 38: else
 34723                           ;peripherals.c: 39: COUNTERS.sec3--;
 34724  004DF0  0100               	movlb	0	; () banked
 34725  004DF2  07AD               	decf	(_COUNTERS+10)& (0+255),f,b
 34726  004DF4  A0D8               	btfss	status,0,c
 34727  004DF6  07AE               	decf	(_COUNTERS+11)& (0+255),f,b
 34728  004DF8                     i2l11982:
 34729                           
 34730                           ; BSR set to: 0
 34731                           ;peripherals.c: 41: if(!COUNTERS.sec2)
 34732  004DF8  0100               	movlb	0	; () banked
 34733  004DFA  51AB               	movf	(_COUNTERS+8)& (0+255),w,b
 34734  004DFC  0100               	movlb	0	; () banked
 34735  004DFE  11AC               	iorwf	(_COUNTERS+9)& (0+255),w,b
 34736  004E00  A4D8               	btfss	status,2,c
 34737  004E02  D002               	goto	i2l11986
 34738                           
 34739                           ; BSR set to: 0
 34740                           ;peripherals.c: 42: FLAGS.sec2 = 1;
 34741  004E04  8A37               	bsf	_FLAGS,5,c
 34742  004E06  D004               	goto	i2l11988
 34743  004E08                     i2l11986:
 34744                           
 34745                           ; BSR set to: 0
 34746                           ;peripherals.c: 43: else
 34747                           ;peripherals.c: 44: COUNTERS.sec2 --;
 34748  004E08  0100               	movlb	0	; () banked
 34749  004E0A  07AB               	decf	(_COUNTERS+8)& (0+255),f,b
 34750  004E0C  A0D8               	btfss	status,0,c
 34751  004E0E  07AC               	decf	(_COUNTERS+9)& (0+255),f,b
 34752  004E10                     i2l11988:
 34753                           
 34754                           ; BSR set to: 0
 34755                           ;peripherals.c: 46: if(!COUNTERS.sec1)
 34756  004E10  0100               	movlb	0	; () banked
 34757  004E12  51A9               	movf	(_COUNTERS+6)& (0+255),w,b
 34758  004E14  0100               	movlb	0	; () banked
 34759  004E16  11AA               	iorwf	(_COUNTERS+7)& (0+255),w,b
 34760  004E18  A4D8               	btfss	status,2,c
 34761  004E1A  D002               	goto	i2l11992
 34762                           
 34763                           ; BSR set to: 0
 34764                           ;peripherals.c: 47: FLAGS.sec1 = 1;
 34765  004E1C  8837               	bsf	_FLAGS,4,c
 34766  004E1E  D004               	goto	i2l11994
 34767  004E20                     i2l11992:
 34768                           
 34769                           ; BSR set to: 0
 34770                           ;peripherals.c: 48: else
 34771                           ;peripherals.c: 49: COUNTERS.sec1 --;
 34772  004E20  0100               	movlb	0	; () banked
 34773  004E22  07A9               	decf	(_COUNTERS+6)& (0+255),f,b
 34774  004E24  A0D8               	btfss	status,0,c
 34775  004E26  07AA               	decf	(_COUNTERS+7)& (0+255),f,b
 34776  004E28                     i2l11994:
 34777                           
 34778                           ; BSR set to: 0
 34779                           ;peripherals.c: 51: if(!COUNTERS.min)
 34780  004E28  0100               	movlb	0	; () banked
 34781  004E2A  51A3               	movf	_COUNTERS& (0+255),w,b
 34782  004E2C  0100               	movlb	0	; () banked
 34783  004E2E  11A4               	iorwf	(_COUNTERS+1)& (0+255),w,b
 34784  004E30  A4D8               	btfss	status,2,c
 34785  004E32  D002               	goto	i2l11998
 34786                           
 34787                           ; BSR set to: 0
 34788                           ;peripherals.c: 52: FLAGS.min = 1;
 34789  004E34  8E37               	bsf	_FLAGS,7,c
 34790  004E36  D004               	goto	i2l12000
 34791  004E38                     i2l11998:
 34792                           
 34793                           ; BSR set to: 0
 34794                           ;peripherals.c: 53: else
 34795                           ;peripherals.c: 54: COUNTERS.min --;
 34796  004E38  0100               	movlb	0	; () banked
 34797  004E3A  07A3               	decf	_COUNTERS& (0+255),f,b
 34798  004E3C  A0D8               	btfss	status,0,c
 34799  004E3E  07A4               	decf	(_COUNTERS+1)& (0+255),f,b
 34800  004E40                     i2l12000:
 34801                           
 34802                           ; BSR set to: 0
 34803                           ;peripherals.c: 56: if(!COUNTERS.min10){
 34804  004E40  0100               	movlb	0	; () banked
 34805  004E42  51A5               	movf	(_COUNTERS+2)& (0+255),w,b
 34806  004E44  0100               	movlb	0	; () banked
 34807  004E46  11A6               	iorwf	(_COUNTERS+3)& (0+255),w,b
 34808  004E48  0100               	movlb	0	; () banked
 34809  004E4A  11A7               	iorwf	(_COUNTERS+4)& (0+255),w,b
 34810  004E4C  0100               	movlb	0	; () banked
 34811  004E4E  11A8               	iorwf	(_COUNTERS+5)& (0+255),w,b
 34812  004E50  A4D8               	btfss	status,2,c
 34813  004E52  D002               	goto	i2l12004
 34814                           
 34815                           ; BSR set to: 0
 34816                           ;peripherals.c: 57: FLAGS.min10 = 1;
 34817  004E54  8038               	bsf	_FLAGS+1,0,c
 34818                           
 34819                           ;peripherals.c: 58: }
 34820  004E56  D006               	goto	i2l293
 34821  004E58                     i2l12004:
 34822                           
 34823                           ; BSR set to: 0
 34824                           ;peripherals.c: 59: else
 34825                           ;peripherals.c: 60: COUNTERS.min10 --;
 34826  004E58  0100               	movlb	0	; () banked
 34827  004E5A  07A5               	decf	(_COUNTERS+2)& (0+255),f,b
 34828  004E5C  0E00               	movlw	0
 34829  004E5E  5BA6               	subwfb	(_COUNTERS+3)& (0+255),f,b
 34830  004E60  5BA7               	subwfb	(_COUNTERS+4)& (0+255),f,b
 34831  004E62  5BA8               	subwfb	(_COUNTERS+5)& (0+255),f,b
 34832  004E64                     i2l293:
 34833                           
 34834                           ; BSR set to: 0
 34835                           ;peripherals.c: 62: if(!COUNTERS.bluetoothTimer){
 34836  004E64  0100               	movlb	0	; () banked
 34837  004E66  51B4               	movf	(_COUNTERS+17)& (0+255),w,b
 34838  004E68  0100               	movlb	0	; () banked
 34839  004E6A  11B5               	iorwf	(_COUNTERS+18)& (0+255),w,b
 34840  004E6C  A4D8               	btfss	status,2,c
 34841  004E6E  D002               	goto	i2l12008
 34842                           
 34843                           ; BSR set to: 0
 34844                           ;peripherals.c: 63: FLAGS.bluetoothTimer = 1;
 34845  004E70  8639               	bsf	_FLAGS+2,3,c
 34846                           
 34847                           ;peripherals.c: 64: }
 34848  004E72  D004               	goto	i2l12010
 34849  004E74                     i2l12008:
 34850                           
 34851                           ; BSR set to: 0
 34852                           ;peripherals.c: 65: else
 34853                           ;peripherals.c: 66: COUNTERS.bluetoothTimer --;
 34854  004E74  0100               	movlb	0	; () banked
 34855  004E76  07B4               	decf	(_COUNTERS+17)& (0+255),f,b
 34856  004E78  A0D8               	btfss	status,0,c
 34857  004E7A  07B5               	decf	(_COUNTERS+18)& (0+255),f,b
 34858  004E7C                     i2l12010:
 34859                           
 34860                           ; BSR set to: 0
 34861                           ;peripherals.c: 68: if(!COUNTERS.communicationStatus){
 34862  004E7C  0100               	movlb	0	; () banked
 34863  004E7E  51AF               	movf	(_COUNTERS+12)& (0+255),w,b
 34864  004E80  0100               	movlb	0	; () banked
 34865  004E82  11B0               	iorwf	(_COUNTERS+13)& (0+255),w,b
 34866  004E84  A4D8               	btfss	status,2,c
 34867  004E86  D00F               	goto	i2l12022
 34868                           
 34869                           ; BSR set to: 0
 34870                           ;peripherals.c: 69: if(!FLAGS.communication_status)
 34871  004E88  B239               	btfsc	_FLAGS+2,1,c
 34872  004E8A  D004               	goto	i2l12016
 34873                           
 34874                           ; BSR set to: 0
 34875                           ;peripherals.c: 70: ABB_1.info.statusBits.communication_status = 0;
 34876  004E8C  EE23  F0C2         	lfsr	2,_ABB_1+2
 34877  004E90  96DF               	bcf	indf2,3,c
 34878  004E92  D002               	goto	i2l12018
 34879  004E94                     i2l12016:
 34880                           
 34881                           ; BSR set to: 0
 34882                           ;peripherals.c: 72: else
 34883                           ;peripherals.c: 73: checkOutgoingMessages();
 34884  004E94  ECE2  F03D         	call	_checkOutgoingMessages	;wreg free
 34885  004E98                     i2l12018:
 34886                           
 34887                           ;peripherals.c: 74: FLAGS.communication_status = 0;
 34888  004E98  9239               	bcf	_FLAGS+2,1,c
 34889                           
 34890                           ;peripherals.c: 75: COUNTERS.communicationStatus = 4000;
 34891  004E9A  0E0F               	movlw	15
 34892  004E9C  0100               	movlb	0	; () banked
 34893  004E9E  6FB0               	movwf	(_COUNTERS+13)& (0+255),b
 34894  004EA0  0EA0               	movlw	160
 34895  004EA2  6FAF               	movwf	(_COUNTERS+12)& (0+255),b
 34896                           
 34897                           ;peripherals.c: 76: }
 34898  004EA4  0012               	return	
 34899  004EA6                     i2l12022:
 34900                           
 34901                           ; BSR set to: 0
 34902                           ;peripherals.c: 77: else
 34903                           ;peripherals.c: 78: COUNTERS.communicationStatus--;
 34904  004EA6  0100               	movlb	0	; () banked
 34905  004EA8  07AF               	decf	(_COUNTERS+12)& (0+255),f,b
 34906  004EAA  A0D8               	btfss	status,0,c
 34907  004EAC  07B0               	decf	(_COUNTERS+13)& (0+255),f,b
 34908  004EAE  0012               	return	
 34909  004EB0                     __end_of_msIsr:
 34910                           	opt stack 0
 34911                           pclatu	equ	0xFFB
 34912                           pclath	equ	0xFFA
 34913                           tblptru	equ	0xFF8
 34914                           tblptrh	equ	0xFF7
 34915                           tblptrl	equ	0xFF6
 34916                           tablat	equ	0xFF5
 34917                           prodh	equ	0xFF4
 34918                           prodl	equ	0xFF3
 34919                           intcon	equ	0xFF2
 34920                           postinc0	equ	0xFEE
 34921                           fsr0h	equ	0xFEA
 34922                           fsr0l	equ	0xFE9
 34923                           wreg	equ	0xFE8
 34924                           indf1	equ	0xFE7
 34925                           postinc1	equ	0xFE6
 34926                           postdec1	equ	0xFE5
 34927                           plusw1	equ	0xFE3
 34928                           fsr1h	equ	0xFE2
 34929                           fsr1l	equ	0xFE1
 34930                           indf2	equ	0xFDF
 34931                           postinc2	equ	0xFDE
 34932                           postdec2	equ	0xFDD
 34933                           plusw2	equ	0xFDB
 34934                           fsr2h	equ	0xFDA
 34935                           fsr2l	equ	0xFD9
 34936                           status	equ	0xFD8
 34937                           
 34938 ;; *************** function _stateCounterHandler *****************
 34939 ;; Defined at:
 34940 ;;		line 122 in file "currentStateHandler.c"
 34941 ;; Parameters:    Size  Location     Type
 34942 ;;		None
 34943 ;; Auto vars:     Size  Location     Type
 34944 ;;		None
 34945 ;; Return value:  Size  Location     Type
 34946 ;;                  1    wreg      void 
 34947 ;; Registers used:
 34948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34949 ;; Tracked objects:
 34950 ;;		On entry : 0/0
 34951 ;;		On exit  : 0/0
 34952 ;;		Unchanged: 0/0
 34953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34958 ;;Total ram usage:        0 bytes
 34959 ;; Hardware stack levels used:    1
 34960 ;; Hardware stack levels required when called:    2
 34961 ;; This function calls:
 34962 ;;		_checkCounter
 34963 ;; This function is called by:
 34964 ;;		_msIsr
 34965 ;; This function uses a non-reentrant model
 34966 ;;
 34967                           
 34968                           	psect	text194
 34969  0060A6                     __ptext194:
 34970                           	opt stack 0
 34971  0060A6                     _stateCounterHandler:
 34972                           	opt stack 17
 34973                           
 34974                           ;currentStateHandler.c: 123: switch(ABB_1.deviceState){
 34975                           
 34976                           ; BSR set to: 0
 34977                           ;incstack = 0
 34978  0060A6  D036               	goto	i2l11584
 34979  0060A8                     i2l11570:
 34980                           
 34981                           ;currentStateHandler.c: 129: checkCounter(&state.readSupply);
 34982  0060A8  0EC1               	movlw	low (_state+26)
 34983  0060AA  6E01               	movwf	checkCounter@specific,c
 34984  0060AC  0E01               	movlw	high (_state+26)
 34985  0060AE  6E02               	movwf	checkCounter@specific+1,c
 34986  0060B0  EC2E  F02F         	call	_checkCounter	;wreg free
 34987                           
 34988                           ;currentStateHandler.c: 136: break;
 34989                           
 34990                           ;currentStateHandler.c: 135: case 8 :
 34991                           
 34992                           ;currentStateHandler.c: 133: break;
 34993                           
 34994                           ;currentStateHandler.c: 132: case 9 :
 34995                           
 34996                           ;currentStateHandler.c: 130: break;
 34997  0060B4  0012               	return	
 34998  0060B6                     i2l11572:
 34999                           
 35000                           ;currentStateHandler.c: 139: checkCounter(&state.outgoingMessages);
 35001  0060B6  0EC8               	movlw	low (_state+33)
 35002  0060B8  6E01               	movwf	checkCounter@specific,c
 35003  0060BA  0E01               	movlw	high (_state+33)
 35004  0060BC  6E02               	movwf	checkCounter@specific+1,c
 35005  0060BE  EC2E  F02F         	call	_checkCounter	;wreg free
 35006                           
 35007                           ;currentStateHandler.c: 140: checkCounter(&state.incomingCommands);
 35008  0060C2  0ECF               	movlw	low (_state+40)
 35009  0060C4  6E01               	movwf	checkCounter@specific,c
 35010  0060C6  0E01               	movlw	high (_state+40)
 35011  0060C8  6E02               	movwf	checkCounter@specific+1,c
 35012  0060CA  EC2E  F02F         	call	_checkCounter	;wreg free
 35013                           
 35014                           ;currentStateHandler.c: 141: checkCounter(&state.readSupply);
 35015  0060CE  0EC1               	movlw	low (_state+26)
 35016  0060D0  6E01               	movwf	checkCounter@specific,c
 35017  0060D2  0E01               	movlw	high (_state+26)
 35018  0060D4  6E02               	movwf	checkCounter@specific+1,c
 35019  0060D6  EC2E  F02F         	call	_checkCounter	;wreg free
 35020                           
 35021                           ;currentStateHandler.c: 142: checkCounter(&state.led);
 35022  0060DA  0EB3               	movlw	low (_state+12)
 35023  0060DC  6E01               	movwf	checkCounter@specific,c
 35024  0060DE  0E01               	movlw	high (_state+12)
 35025  0060E0  6E02               	movwf	checkCounter@specific+1,c
 35026  0060E2  EC2E  F02F         	call	_checkCounter	;wreg free
 35027                           
 35028                           ;currentStateHandler.c: 143: checkCounter(&state.readKeyCable);
 35029  0060E6  0EBA               	movlw	low (_state+19)
 35030  0060E8  6E01               	movwf	checkCounter@specific,c
 35031  0060EA  0E01               	movlw	high (_state+19)
 35032  0060EC  6E02               	movwf	checkCounter@specific+1,c
 35033  0060EE  EC2E  F02F         	call	_checkCounter	;wreg free
 35034                           
 35035                           ;currentStateHandler.c: 144: if(FLAGS.bluetooth)
 35036  0060F2  A439               	btfss	_FLAGS+2,2,c
 35037  0060F4  D006               	goto	i2l11578
 35038                           
 35039                           ;currentStateHandler.c: 145: checkCounter(&state.bluetooth);
 35040  0060F6  0EDD               	movlw	low (_state+54)
 35041  0060F8  6E01               	movwf	checkCounter@specific,c
 35042  0060FA  0E01               	movlw	high (_state+54)
 35043  0060FC  6E02               	movwf	checkCounter@specific+1,c
 35044  0060FE  EC2E  F02F         	call	_checkCounter	;wreg free
 35045  006102                     i2l11578:
 35046                           
 35047                           ;currentStateHandler.c: 146: if(FLAGS.shaftCheck)
 35048  006102  AA38               	btfss	_FLAGS+1,5,c
 35049  006104  0012               	return	
 35050                           
 35051                           ;currentStateHandler.c: 147: checkCounter(&state.shaftTest);
 35052  006106  0ED6               	movlw	low (_state+47)
 35053  006108  6E01               	movwf	checkCounter@specific,c
 35054  00610A  0E01               	movlw	high (_state+47)
 35055  00610C  6E02               	movwf	checkCounter@specific+1,c
 35056  00610E  EC2E  F02F         	call	_checkCounter	;wreg free
 35057                           
 35058                           ;currentStateHandler.c: 151: }
 35059                           
 35060                           ;currentStateHandler.c: 149: break;
 35061  006112  0012               	return	
 35062  006114                     i2l11584:
 35063  006114  EE27  F054         	lfsr	2,_ABB_1+916
 35064  006118  50DF               	movf	indf2,w,c
 35065                           
 35066                           ; Switch size 1, requested type "space"
 35067                           ; Number of cases is 4, Range of values is 0 to 9
 35068                           ; switch strategies available:
 35069                           ; Name         Instructions Cycles
 35070                           ; simple_byte           13     7 (average)
 35071                           ;	Chosen strategy is simple_byte
 35072  00611A  0A00               	xorlw	0	; case 0
 35073  00611C  B4D8               	btfsc	status,2,c
 35074  00611E  0012               	return	
 35075  006120  0A05               	xorlw	5	; case 5
 35076  006122  B4D8               	btfsc	status,2,c
 35077  006124  D7C1               	goto	i2l11570
 35078  006126  0A0D               	xorlw	13	; case 8
 35079  006128  B4D8               	btfsc	status,2,c
 35080  00612A  0012               	return	
 35081  00612C  0A01               	xorlw	1	; case 9
 35082  00612E  B4D8               	btfsc	status,2,c
 35083  006130  0012               	return		;funcret
 35084  006132  D7C1               	goto	i2l11572
 35085  006134                     __end_of_stateCounterHandler:
 35086                           	opt stack 0
 35087                           pclatu	equ	0xFFB
 35088                           pclath	equ	0xFFA
 35089                           tblptru	equ	0xFF8
 35090                           tblptrh	equ	0xFF7
 35091                           tblptrl	equ	0xFF6
 35092                           tablat	equ	0xFF5
 35093                           prodh	equ	0xFF4
 35094                           prodl	equ	0xFF3
 35095                           intcon	equ	0xFF2
 35096                           postinc0	equ	0xFEE
 35097                           fsr0h	equ	0xFEA
 35098                           fsr0l	equ	0xFE9
 35099                           wreg	equ	0xFE8
 35100                           indf1	equ	0xFE7
 35101                           postinc1	equ	0xFE6
 35102                           postdec1	equ	0xFE5
 35103                           plusw1	equ	0xFE3
 35104                           fsr1h	equ	0xFE2
 35105                           fsr1l	equ	0xFE1
 35106                           indf2	equ	0xFDF
 35107                           postinc2	equ	0xFDE
 35108                           postdec2	equ	0xFDD
 35109                           plusw2	equ	0xFDB
 35110                           fsr2h	equ	0xFDA
 35111                           fsr2l	equ	0xFD9
 35112                           status	equ	0xFD8
 35113                           
 35114 ;; *************** function _checkCounter *****************
 35115 ;; Defined at:
 35116 ;;		line 157 in file "currentStateHandler.c"
 35117 ;; Parameters:    Size  Location     Type
 35118 ;;  specific        2    0[COMRAM] PTR struct .
 35119 ;;		 -> state(61), 
 35120 ;; Auto vars:     Size  Location     Type
 35121 ;;		None
 35122 ;; Return value:  Size  Location     Type
 35123 ;;                  1    wreg      void 
 35124 ;; Registers used:
 35125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35126 ;; Tracked objects:
 35127 ;;		On entry : 0/0
 35128 ;;		On exit  : 0/0
 35129 ;;		Unchanged: 0/0
 35130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35131 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35133 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35134 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35135 ;;Total ram usage:        4 bytes
 35136 ;; Hardware stack levels used:    1
 35137 ;; Hardware stack levels required when called:    1
 35138 ;; This function calls:
 35139 ;;		_updateStateIds
 35140 ;; This function is called by:
 35141 ;;		_stateCounterHandler
 35142 ;; This function uses a non-reentrant model
 35143 ;;
 35144                           
 35145                           	psect	text195
 35146  005E5C                     __ptext195:
 35147                           	opt stack 0
 35148  005E5C                     _checkCounter:
 35149                           	opt stack 17
 35150                           
 35151                           ;currentStateHandler.c: 158: if(!specific->flag){
 35152                           
 35153                           ;incstack = 0
 35154  005E5C  EE20 F004          	lfsr	2,4
 35155  005E60  5001               	movf	checkCounter@specific,w,c
 35156  005E62  26D9               	addwf	fsr2l,f,c
 35157  005E64  5002               	movf	checkCounter@specific+1,w,c
 35158  005E66  22DA               	addwfc	fsr2h,f,c
 35159  005E68  50DE               	movf	postinc2,w,c
 35160  005E6A  10DE               	iorwf	postinc2,w,c
 35161  005E6C  A4D8               	btfss	status,2,c
 35162  005E6E  0012               	return	
 35163                           
 35164                           ;currentStateHandler.c: 159: if(!specific->counter){
 35165  005E70  EE20 F002          	lfsr	2,2
 35166  005E74  5001               	movf	checkCounter@specific,w,c
 35167  005E76  26D9               	addwf	fsr2l,f,c
 35168  005E78  5002               	movf	checkCounter@specific+1,w,c
 35169  005E7A  22DA               	addwfc	fsr2h,f,c
 35170  005E7C  50DE               	movf	postinc2,w,c
 35171  005E7E  10DE               	iorwf	postinc2,w,c
 35172  005E80  A4D8               	btfss	status,2,c
 35173  005E82  D02C               	goto	i2l10792
 35174                           
 35175                           ;currentStateHandler.c: 160: updateStateIds();
 35176  005E84  EC6D  F03A         	call	_updateStateIds	;wreg free
 35177                           
 35178                           ;currentStateHandler.c: 161: specific->current = specific->next;
 35179  005E88  EE20 F001          	lfsr	2,1
 35180  005E8C  5001               	movf	checkCounter@specific,w,c
 35181  005E8E  26D9               	addwf	fsr2l,f,c
 35182  005E90  5002               	movf	checkCounter@specific+1,w,c
 35183  005E92  22DA               	addwfc	fsr2h,f,c
 35184  005E94  C001  FFE1         	movff	checkCounter@specific,fsr1l
 35185  005E98  C002  FFE2         	movff	checkCounter@specific+1,fsr1h
 35186  005E9C  CFDF FFE7          	movff	indf2,indf1
 35187                           
 35188                           ;currentStateHandler.c: 162: specific->flag = 1;
 35189  005EA0  EE20 F004          	lfsr	2,4
 35190  005EA4  5001               	movf	checkCounter@specific,w,c
 35191  005EA6  26D9               	addwf	fsr2l,f,c
 35192  005EA8  5002               	movf	checkCounter@specific+1,w,c
 35193  005EAA  22DA               	addwfc	fsr2h,f,c
 35194  005EAC  0E01               	movlw	1
 35195  005EAE  6EDE               	movwf	postinc2,c
 35196  005EB0  0E00               	movlw	0
 35197  005EB2  6EDD               	movwf	postdec2,c
 35198                           
 35199                           ;currentStateHandler.c: 163: state.stateQueue[state.queuePointer] = specific->id;
 35200  005EB4  EE20 F006          	lfsr	2,6
 35201  005EB8  5001               	movf	checkCounter@specific,w,c
 35202  005EBA  26D9               	addwf	fsr2l,f,c
 35203  005EBC  5002               	movf	checkCounter@specific+1,w,c
 35204  005EBE  22DA               	addwfc	fsr2h,f,c
 35205  005EC0  0101               	movlb	1	; () banked
 35206  005EC2  51B1               	movf	(_state+10)& (0+255),w,b
 35207  005EC4  0D01               	mullw	1
 35208  005EC6  0EA7               	movlw	low _state
 35209  005EC8  24F3               	addwf	prodl,w,c
 35210  005ECA  6EE1               	movwf	fsr1l,c
 35211  005ECC  0E01               	movlw	high _state
 35212  005ECE  20F4               	addwfc	prodh,w,c
 35213  005ED0  6EE2               	movwf	fsr1h,c
 35214  005ED2  CFDF FFE7          	movff	indf2,indf1
 35215                           
 35216                           ; BSR set to: 1
 35217                           ;currentStateHandler.c: 164: state.queuePointer++;
 35218  005ED6  0101               	movlb	1	; () banked
 35219  005ED8  2BB1               	incf	(_state+10)& (0+255),f,b
 35220                           
 35221                           ;currentStateHandler.c: 165: }
 35222  005EDA  0012               	return	
 35223  005EDC                     i2l10792:
 35224                           
 35225                           ;currentStateHandler.c: 166: else
 35226                           ;currentStateHandler.c: 167: specific->counter--;
 35227  005EDC  EE20 F002          	lfsr	2,2
 35228  005EE0  5001               	movf	checkCounter@specific,w,c
 35229  005EE2  26D9               	addwf	fsr2l,f,c
 35230  005EE4  5002               	movf	checkCounter@specific+1,w,c
 35231  005EE6  22DA               	addwfc	fsr2h,f,c
 35232  005EE8  06DE               	decf	postinc2,f,c
 35233  005EEA  0E00               	movlw	0
 35234  005EEC  5ADD               	subwfb	postdec2,f,c
 35235  005EEE  0012               	return	
 35236  005EF0                     __end_of_checkCounter:
 35237                           	opt stack 0
 35238                           pclatu	equ	0xFFB
 35239                           pclath	equ	0xFFA
 35240                           tblptru	equ	0xFF8
 35241                           tblptrh	equ	0xFF7
 35242                           tblptrl	equ	0xFF6
 35243                           tablat	equ	0xFF5
 35244                           prodh	equ	0xFF4
 35245                           prodl	equ	0xFF3
 35246                           intcon	equ	0xFF2
 35247                           postinc0	equ	0xFEE
 35248                           fsr0h	equ	0xFEA
 35249                           fsr0l	equ	0xFE9
 35250                           wreg	equ	0xFE8
 35251                           indf1	equ	0xFE7
 35252                           postinc1	equ	0xFE6
 35253                           postdec1	equ	0xFE5
 35254                           plusw1	equ	0xFE3
 35255                           fsr1h	equ	0xFE2
 35256                           fsr1l	equ	0xFE1
 35257                           indf2	equ	0xFDF
 35258                           postinc2	equ	0xFDE
 35259                           postdec2	equ	0xFDD
 35260                           plusw2	equ	0xFDB
 35261                           fsr2h	equ	0xFDA
 35262                           fsr2l	equ	0xFD9
 35263                           status	equ	0xFD8
 35264                           
 35265 ;; *************** function _updateStateIds *****************
 35266 ;; Defined at:
 35267 ;;		line 171 in file "currentStateHandler.c"
 35268 ;; Parameters:    Size  Location     Type
 35269 ;;		None
 35270 ;; Auto vars:     Size  Location     Type
 35271 ;;		None
 35272 ;; Return value:  Size  Location     Type
 35273 ;;                  1    wreg      void 
 35274 ;; Registers used:
 35275 ;;		wreg, status,2
 35276 ;; Tracked objects:
 35277 ;;		On entry : 0/0
 35278 ;;		On exit  : 0/0
 35279 ;;		Unchanged: 0/0
 35280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35285 ;;Total ram usage:        0 bytes
 35286 ;; Hardware stack levels used:    1
 35287 ;; This function calls:
 35288 ;;		Nothing
 35289 ;; This function is called by:
 35290 ;;		_checkCounter
 35291 ;; This function uses a non-reentrant model
 35292 ;;
 35293                           
 35294                           	psect	text196
 35295  0074DA                     __ptext196:
 35296                           	opt stack 0
 35297  0074DA                     _updateStateIds:
 35298                           	opt stack 17
 35299                           
 35300                           ;currentStateHandler.c: 172: state.bluetooth.id = 13;
 35301                           
 35302                           ;incstack = 0
 35303  0074DA  0E0D               	movlw	13
 35304  0074DC  0101               	movlb	1	; () banked
 35305  0074DE  6FE3               	movwf	(_state+60)& (0+255),b
 35306                           
 35307                           ;currentStateHandler.c: 173: state.incomingCommands.id = 3;
 35308  0074E0  0E03               	movlw	3
 35309  0074E2  0101               	movlb	1	; () banked
 35310  0074E4  6FD5               	movwf	(_state+46)& (0+255),b
 35311                           
 35312                           ;currentStateHandler.c: 174: state.led.id = 4;
 35313  0074E6  0E04               	movlw	4
 35314  0074E8  0101               	movlb	1	; () banked
 35315  0074EA  6FB9               	movwf	(_state+18)& (0+255),b
 35316                           
 35317                           ;currentStateHandler.c: 175: state.outgoingMessages.id = 5;
 35318  0074EC  0E05               	movlw	5
 35319  0074EE  0101               	movlb	1	; () banked
 35320  0074F0  6FCE               	movwf	(_state+39)& (0+255),b
 35321                           
 35322                           ;currentStateHandler.c: 176: state.readKeyCable.id = 1;
 35323  0074F2  0E01               	movlw	1
 35324  0074F4  0101               	movlb	1	; () banked
 35325  0074F6  6FC0               	movwf	(_state+25)& (0+255),b
 35326                           
 35327                           ;currentStateHandler.c: 177: state.readSupply.id = 9;
 35328  0074F8  0E09               	movlw	9
 35329  0074FA  0101               	movlb	1	; () banked
 35330  0074FC  6FC7               	movwf	(_state+32)& (0+255),b
 35331                           
 35332                           ;currentStateHandler.c: 178: state.shaftTest.id = 11;
 35333  0074FE  0E0B               	movlw	11
 35334  007500  0101               	movlb	1	; () banked
 35335  007502  6FDC               	movwf	(_state+53)& (0+255),b
 35336                           
 35337                           ; BSR set to: 1
 35338  007504  0012               	return		;funcret
 35339  007506                     __end_of_updateStateIds:
 35340                           	opt stack 0
 35341                           pclatu	equ	0xFFB
 35342                           pclath	equ	0xFFA
 35343                           tblptru	equ	0xFF8
 35344                           tblptrh	equ	0xFF7
 35345                           tblptrl	equ	0xFF6
 35346                           tablat	equ	0xFF5
 35347                           prodh	equ	0xFF4
 35348                           prodl	equ	0xFF3
 35349                           intcon	equ	0xFF2
 35350                           postinc0	equ	0xFEE
 35351                           fsr0h	equ	0xFEA
 35352                           fsr0l	equ	0xFE9
 35353                           wreg	equ	0xFE8
 35354                           indf1	equ	0xFE7
 35355                           postinc1	equ	0xFE6
 35356                           postdec1	equ	0xFE5
 35357                           plusw1	equ	0xFE3
 35358                           fsr1h	equ	0xFE2
 35359                           fsr1l	equ	0xFE1
 35360                           indf2	equ	0xFDF
 35361                           postinc2	equ	0xFDE
 35362                           postdec2	equ	0xFDD
 35363                           plusw2	equ	0xFDB
 35364                           fsr2h	equ	0xFDA
 35365                           fsr2l	equ	0xFD9
 35366                           status	equ	0xFD8
 35367                           
 35368 ;; *************** function _checkOutgoingMessages *****************
 35369 ;; Defined at:
 35370 ;;		line 103 in file "outgoingMessages.c"
 35371 ;; Parameters:    Size  Location     Type
 35372 ;;		None
 35373 ;; Auto vars:     Size  Location     Type
 35374 ;;		None
 35375 ;; Return value:  Size  Location     Type
 35376 ;;                  1    wreg      void 
 35377 ;; Registers used:
 35378 ;;		None
 35379 ;; Tracked objects:
 35380 ;;		On entry : 0/0
 35381 ;;		On exit  : 0/0
 35382 ;;		Unchanged: 0/0
 35383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35388 ;;Total ram usage:        0 bytes
 35389 ;; Hardware stack levels used:    1
 35390 ;; This function calls:
 35391 ;;		Nothing
 35392 ;; This function is called by:
 35393 ;;		_msIsr
 35394 ;; This function uses a non-reentrant model
 35395 ;;
 35396                           
 35397                           	psect	text197
 35398  007BC4                     __ptext197:
 35399                           	opt stack 0
 35400  007BC4                     _checkOutgoingMessages:
 35401                           	opt stack 19
 35402                           
 35403                           ;outgoingMessages.c: 104: if(FLAGS.acknowledgeCCB)
 35404                           
 35405                           ; BSR set to: 1
 35406                           ;incstack = 0
 35407  007BC4  A839               	btfss	_FLAGS+2,4,c
 35408  007BC6  0012               	return	
 35409                           
 35410                           ;outgoingMessages.c: 105: FLAGS.acknowledgeCCB = 0;
 35411  007BC8  9839               	bcf	_FLAGS+2,4,c
 35412  007BCA  0012               	return	
 35413  007BCC                     __end_of_checkOutgoingMessages:
 35414                           	opt stack 0
 35415                           pclatu	equ	0xFFB
 35416                           pclath	equ	0xFFA
 35417                           tblptru	equ	0xFF8
 35418                           tblptrh	equ	0xFF7
 35419                           tblptrl	equ	0xFF6
 35420                           tablat	equ	0xFF5
 35421                           prodh	equ	0xFF4
 35422                           prodl	equ	0xFF3
 35423                           intcon	equ	0xFF2
 35424                           postinc0	equ	0xFEE
 35425                           fsr0h	equ	0xFEA
 35426                           fsr0l	equ	0xFE9
 35427                           wreg	equ	0xFE8
 35428                           indf1	equ	0xFE7
 35429                           postinc1	equ	0xFE6
 35430                           postdec1	equ	0xFE5
 35431                           plusw1	equ	0xFE3
 35432                           fsr1h	equ	0xFE2
 35433                           fsr1l	equ	0xFE1
 35434                           indf2	equ	0xFDF
 35435                           postinc2	equ	0xFDE
 35436                           postdec2	equ	0xFDD
 35437                           plusw2	equ	0xFDB
 35438                           fsr2h	equ	0xFDA
 35439                           fsr2l	equ	0xFD9
 35440                           status	equ	0xFD8
 35441                           
 35442 ;; *************** function _acOr36VISR *****************
 35443 ;; Defined at:
 35444 ;;		line 28 in file "acOr36V.c"
 35445 ;; Parameters:    Size  Location     Type
 35446 ;;		None
 35447 ;; Auto vars:     Size  Location     Type
 35448 ;;		None
 35449 ;; Return value:  Size  Location     Type
 35450 ;;                  1    wreg      void 
 35451 ;; Registers used:
 35452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35453 ;; Tracked objects:
 35454 ;;		On entry : 0/0
 35455 ;;		On exit  : 0/0
 35456 ;;		Unchanged: 0/0
 35457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35462 ;;Total ram usage:        0 bytes
 35463 ;; Hardware stack levels used:    1
 35464 ;; Hardware stack levels required when called:    6
 35465 ;; This function calls:
 35466 ;;		_checkPulse
 35467 ;;		_wake
 35468 ;; This function is called by:
 35469 ;;		_isr
 35470 ;; This function uses a non-reentrant model
 35471 ;;
 35472                           
 35473                           	psect	text198
 35474  0077F6                     __ptext198:
 35475                           	opt stack 0
 35476  0077F6                     _acOr36VISR:
 35477                           	opt stack 14
 35478                           
 35479                           ;acOr36V.c: 29: switch(ABB_1.deviceState){
 35480                           
 35481                           ;incstack = 0
 35482  0077F6  D006               	goto	i2l11970
 35483  0077F8                     i2l11964:
 35484                           
 35485                           ;acOr36V.c: 31: wake();
 35486  0077F8  ECAE  F037         	call	_wake	;wreg free
 35487                           
 35488                           ;acOr36V.c: 32: break;
 35489  0077FC  0012               	return	
 35490  0077FE                     i2l11966:
 35491                           
 35492                           ;acOr36V.c: 34: checkPulse();
 35493  0077FE  EC26  F037         	call	_checkPulse	;wreg free
 35494                           
 35495                           ;acOr36V.c: 36: }
 35496                           
 35497                           ;acOr36V.c: 35: break;
 35498  007802  0012               	return	
 35499  007804                     i2l11970:
 35500  007804  EE27  F054         	lfsr	2,_ABB_1+916
 35501  007808  50DF               	movf	indf2,w,c
 35502                           
 35503                           ; Switch size 1, requested type "space"
 35504                           ; Number of cases is 1, Range of values is 0 to 0
 35505                           ; switch strategies available:
 35506                           ; Name         Instructions Cycles
 35507                           ; simple_byte            4     3 (average)
 35508                           ;	Chosen strategy is simple_byte
 35509  00780A  0A00               	xorlw	0	; case 0
 35510  00780C  B4D8               	btfsc	status,2,c
 35511  00780E  D7F4               	goto	i2l11964
 35512  007810  D7F6               	goto	i2l11966
 35513  007812                     __end_of_acOr36VISR:
 35514                           	opt stack 0
 35515                           pclatu	equ	0xFFB
 35516                           pclath	equ	0xFFA
 35517                           tblptru	equ	0xFF8
 35518                           tblptrh	equ	0xFF7
 35519                           tblptrl	equ	0xFF6
 35520                           tablat	equ	0xFF5
 35521                           prodh	equ	0xFF4
 35522                           prodl	equ	0xFF3
 35523                           intcon	equ	0xFF2
 35524                           postinc0	equ	0xFEE
 35525                           fsr0h	equ	0xFEA
 35526                           fsr0l	equ	0xFE9
 35527                           wreg	equ	0xFE8
 35528                           indf1	equ	0xFE7
 35529                           postinc1	equ	0xFE6
 35530                           postdec1	equ	0xFE5
 35531                           plusw1	equ	0xFE3
 35532                           fsr1h	equ	0xFE2
 35533                           fsr1l	equ	0xFE1
 35534                           indf2	equ	0xFDF
 35535                           postinc2	equ	0xFDE
 35536                           postdec2	equ	0xFDD
 35537                           plusw2	equ	0xFDB
 35538                           fsr2h	equ	0xFDA
 35539                           fsr2l	equ	0xFD9
 35540                           status	equ	0xFD8
 35541                           
 35542 ;; *************** function _wake *****************
 35543 ;; Defined at:
 35544 ;;		line 58 in file "sleep.c"
 35545 ;; Parameters:    Size  Location     Type
 35546 ;;		None
 35547 ;; Auto vars:     Size  Location     Type
 35548 ;;		None
 35549 ;; Return value:  Size  Location     Type
 35550 ;;                  1    wreg      void 
 35551 ;; Registers used:
 35552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35553 ;; Tracked objects:
 35554 ;;		On entry : 0/0
 35555 ;;		On exit  : 0/0
 35556 ;;		Unchanged: 0/0
 35557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35562 ;;Total ram usage:        0 bytes
 35563 ;; Hardware stack levels used:    1
 35564 ;; Hardware stack levels required when called:    5
 35565 ;; This function calls:
 35566 ;;		i2__delay_ms
 35567 ;;		i2_initialiseModem
 35568 ;;		i2_initialiseStates
 35569 ;;		i2_reset4SecTimer
 35570 ;;		i2_tagForInterrupt
 35571 ;; This function is called by:
 35572 ;;		_acOr36VISR
 35573 ;; This function uses a non-reentrant model
 35574 ;;
 35575                           
 35576                           	psect	text199
 35577  006F5C                     __ptext199:
 35578                           	opt stack 0
 35579  006F5C                     _wake:
 35580                           	opt stack 14
 35581                           
 35582                           ;incstack = 0
 35583  006F5C  00FF               	reset		;# 
 35584                           
 35585                           ;sleep.c: 60: INTCONbits.GIE = 0;
 35586  006F5E  9EF2               	bcf	intcon,7,c	;volatile
 35587                           
 35588                           ;sleep.c: 61: ABB_1.deviceState = 1;
 35589  006F60  0E01               	movlw	1
 35590  006F62  CFE8 F754          	movff	wreg,_ABB_1+916
 35591                           
 35592                           ;sleep.c: 62: INTCONbits.INT2EDG = 0;
 35593  006F66  94F2               	bcf	intcon,2,c	;volatile
 35594                           
 35595                           ;sleep.c: 63: reset4SecTimer();
 35596  006F68  EC53  F03D         	call	i2_reset4SecTimer	;wreg free
 35597                           
 35598                           ;sleep.c: 64: LATGbits.LATG1 = 1;
 35599  006F6C  827F               	bsf	3967,1,c	;volatile
 35600                           
 35601                           ;sleep.c: 65: _delay_ms(100);
 35602  006F6E  0E00               	movlw	0
 35603  006F70  6E03               	movwf	i2__delay_ms@delay+1,c
 35604  006F72  0E64               	movlw	100
 35605  006F74  6E02               	movwf	i2__delay_ms@delay,c
 35606  006F76  EC97  F038         	call	i2__delay_ms	;wreg free
 35607                           
 35608                           ;sleep.c: 66: initialiseModem();
 35609  006F7A  ECDD  F036         	call	i2_initialiseModem	;wreg free
 35610                           
 35611                           ;sleep.c: 67: tagForInterrupt();
 35612  006F7E  EC09  F03C         	call	i2_tagForInterrupt	;wreg free
 35613                           
 35614                           ;sleep.c: 68: initialiseStates();
 35615  006F82  ECE3  F02E         	call	i2_initialiseStates	;wreg free
 35616                           
 35617                           ;sleep.c: 69: INTCONbits.GIE = 1;
 35618  006F86  8EF2               	bsf	intcon,7,c	;volatile
 35619                           
 35620                           ;sleep.c: 70: T6CONbits.T6ON = 1;
 35621  006F88  8EB1               	bsf	4017,7,c	;volatile
 35622                           
 35623                           ;sleep.c: 71: INTCONbits.PEIE = 1;
 35624  006F8A  8CF2               	bsf	intcon,6,c	;volatile
 35625                           
 35626                           ;sleep.c: 72: ABB_1.info.statusBits.voltage = 1;
 35627  006F8C  EE23  F0C1         	lfsr	2,_ABB_1+1
 35628  006F90  8ADF               	bsf	indf2,5,c
 35629                           
 35630                           ;sleep.c: 73: FLAGS.shaftCheck = 0;
 35631  006F92  9A38               	bcf	_FLAGS+1,5,c
 35632                           
 35633                           ;sleep.c: 74: FLAGS.shaftComplete = 0;
 35634  006F94  9C38               	bcf	_FLAGS+1,6,c
 35635                           
 35636                           ;sleep.c: 75: WDTCON0bits.SEN = 1;
 35637  006F96  010E               	movlb	14	; () banked
 35638  006F98  813D               	bsf	61,0,b	;volatile
 35639                           
 35640                           ; BSR set to: 14
 35641  006F9A  0012               	return		;funcret
 35642  006F9C                     __end_of_wake:
 35643                           	opt stack 0
 35644                           pclatu	equ	0xFFB
 35645                           pclath	equ	0xFFA
 35646                           tblptru	equ	0xFF8
 35647                           tblptrh	equ	0xFF7
 35648                           tblptrl	equ	0xFF6
 35649                           tablat	equ	0xFF5
 35650                           prodh	equ	0xFF4
 35651                           prodl	equ	0xFF3
 35652                           intcon	equ	0xFF2
 35653                           postinc0	equ	0xFEE
 35654                           fsr0h	equ	0xFEA
 35655                           fsr0l	equ	0xFE9
 35656                           wreg	equ	0xFE8
 35657                           indf1	equ	0xFE7
 35658                           postinc1	equ	0xFE6
 35659                           postdec1	equ	0xFE5
 35660                           plusw1	equ	0xFE3
 35661                           fsr1h	equ	0xFE2
 35662                           fsr1l	equ	0xFE1
 35663                           indf2	equ	0xFDF
 35664                           postinc2	equ	0xFDE
 35665                           postdec2	equ	0xFDD
 35666                           plusw2	equ	0xFDB
 35667                           fsr2h	equ	0xFDA
 35668                           fsr2l	equ	0xFD9
 35669                           status	equ	0xFD8
 35670                           
 35671 ;; *************** function i2_tagForInterrupt *****************
 35672 ;; Defined at:
 35673 ;;		line 79 in file "tagRead.c"
 35674 ;; Parameters:    Size  Location     Type
 35675 ;;		None
 35676 ;; Auto vars:     Size  Location     Type
 35677 ;;		None
 35678 ;; Return value:  Size  Location     Type
 35679 ;;                  1    wreg      void 
 35680 ;; Registers used:
 35681 ;;		None
 35682 ;; Tracked objects:
 35683 ;;		On entry : 0/0
 35684 ;;		On exit  : 0/0
 35685 ;;		Unchanged: 0/0
 35686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35691 ;;Total ram usage:        0 bytes
 35692 ;; Hardware stack levels used:    1
 35693 ;; This function calls:
 35694 ;;		Nothing
 35695 ;; This function is called by:
 35696 ;;		_readTagRoutine
 35697 ;;		_wake
 35698 ;; This function uses a non-reentrant model
 35699 ;;
 35700                           
 35701                           	psect	text200
 35702  007812                     __ptext200:
 35703                           	opt stack 0
 35704  007812                     i2_tagForInterrupt:
 35705                           	opt stack 19
 35706                           
 35707                           ;tagRead.c: 80: ANSELEbits.ANSELE2 = 0;
 35708                           
 35709                           ; BSR set to: 14
 35710                           ;incstack = 0
 35711  007812  010E               	movlb	14	; () banked
 35712  007814  95AF               	bcf	175,2,b	;volatile
 35713                           
 35714                           ;tagRead.c: 81: TRISEbits.TRISE2 = 1;
 35715  007816  8485               	bsf	3973,2,c	;volatile
 35716                           
 35717                           ;tagRead.c: 82: WPUEbits.WPUE2 = 1;
 35718  007818  010E               	movlb	14	; () banked
 35719  00781A  85AE               	bsf	174,2,b	;volatile
 35720                           
 35721                           ;tagRead.c: 84: ANSELEbits.ANSELE3 = 0;
 35722  00781C  010E               	movlb	14	; () banked
 35723  00781E  97AF               	bcf	175,3,b	;volatile
 35724                           
 35725                           ;tagRead.c: 85: TRISEbits.TRISE3 = 0;
 35726  007820  9685               	bcf	3973,3,c	;volatile
 35727                           
 35728                           ;tagRead.c: 86: LATEbits.LATE3 = 0;
 35729  007822  967D               	bcf	3965,3,c	;volatile
 35730                           
 35731                           ;tagRead.c: 88: ADCON0bits.ADON = 0;
 35732  007824  9E60               	bcf	3936,7,c	;volatile
 35733                           
 35734                           ;tagRead.c: 89: FVRCONbits.FVREN = 0;
 35735  007826  010E               	movlb	14	; () banked
 35736  007828  9FC4               	bcf	196,7,b	;volatile
 35737                           
 35738                           ;tagRead.c: 91: T0CON0bits.T0EN = 1;
 35739  00782A  8ED5               	bsf	4053,7,c	;volatile
 35740                           
 35741                           ; BSR set to: 14
 35742  00782C  0012               	return		;funcret
 35743  00782E                     __end_ofi2_tagForInterrupt:
 35744                           	opt stack 0
 35745                           pclatu	equ	0xFFB
 35746                           pclath	equ	0xFFA
 35747                           tblptru	equ	0xFF8
 35748                           tblptrh	equ	0xFF7
 35749                           tblptrl	equ	0xFF6
 35750                           tablat	equ	0xFF5
 35751                           prodh	equ	0xFF4
 35752                           prodl	equ	0xFF3
 35753                           intcon	equ	0xFF2
 35754                           postinc0	equ	0xFEE
 35755                           fsr0h	equ	0xFEA
 35756                           fsr0l	equ	0xFE9
 35757                           wreg	equ	0xFE8
 35758                           indf1	equ	0xFE7
 35759                           postinc1	equ	0xFE6
 35760                           postdec1	equ	0xFE5
 35761                           plusw1	equ	0xFE3
 35762                           fsr1h	equ	0xFE2
 35763                           fsr1l	equ	0xFE1
 35764                           indf2	equ	0xFDF
 35765                           postinc2	equ	0xFDE
 35766                           postdec2	equ	0xFDD
 35767                           plusw2	equ	0xFDB
 35768                           fsr2h	equ	0xFDA
 35769                           fsr2l	equ	0xFD9
 35770                           status	equ	0xFD8
 35771                           
 35772 ;; *************** function i2_initialiseStates *****************
 35773 ;; Defined at:
 35774 ;;		line 185 in file "initialise.c"
 35775 ;; Parameters:    Size  Location     Type
 35776 ;;		None
 35777 ;; Auto vars:     Size  Location     Type
 35778 ;;  initialiseSt    2    3[COMRAM] int 
 35779 ;; Return value:  Size  Location     Type
 35780 ;;                  1    wreg      void 
 35781 ;; Registers used:
 35782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35783 ;; Tracked objects:
 35784 ;;		On entry : 0/0
 35785 ;;		On exit  : 0/0
 35786 ;;		Unchanged: 0/0
 35787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35789 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35791 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35792 ;;Total ram usage:        2 bytes
 35793 ;; Hardware stack levels used:    1
 35794 ;; Hardware stack levels required when called:    1
 35795 ;; This function calls:
 35796 ;;		i2_initialiseState
 35797 ;; This function is called by:
 35798 ;;		_wake
 35799 ;; This function uses a non-reentrant model
 35800 ;;
 35801                           
 35802                           	psect	text201
 35803  005DC6                     __ptext201:
 35804                           	opt stack 0
 35805  005DC6                     i2_initialiseStates:
 35806                           	opt stack 17
 35807                           
 35808                           ;initialise.c: 186: initialiseState(&state.incomingCommands, 3);
 35809                           
 35810                           ; BSR set to: 14
 35811                           ;incstack = 0
 35812  005DC6  0ECF               	movlw	low (_state+40)
 35813  005DC8  6E01               	movwf	i2initialiseState@specific,c
 35814  005DCA  0E01               	movlw	high (_state+40)
 35815  005DCC  6E02               	movwf	i2initialiseState@specific+1,c
 35816  005DCE  0E03               	movlw	3
 35817  005DD0  6E03               	movwf	i2initialiseState@number,c
 35818  005DD2  ECEB  F035         	call	i2_initialiseState	;wreg free
 35819                           
 35820                           ;initialise.c: 187: initialiseState(&state.outgoingMessages, 5);
 35821  005DD6  0EC8               	movlw	low (_state+33)
 35822  005DD8  6E01               	movwf	i2initialiseState@specific,c
 35823  005DDA  0E01               	movlw	high (_state+33)
 35824  005DDC  6E02               	movwf	i2initialiseState@specific+1,c
 35825  005DDE  0E05               	movlw	5
 35826  005DE0  6E03               	movwf	i2initialiseState@number,c
 35827  005DE2  ECEB  F035         	call	i2_initialiseState	;wreg free
 35828                           
 35829                           ;initialise.c: 188: initialiseState(&state.led, 4);
 35830  005DE6  0EB3               	movlw	low (_state+12)
 35831  005DE8  6E01               	movwf	i2initialiseState@specific,c
 35832  005DEA  0E01               	movlw	high (_state+12)
 35833  005DEC  6E02               	movwf	i2initialiseState@specific+1,c
 35834  005DEE  0E04               	movlw	4
 35835  005DF0  6E03               	movwf	i2initialiseState@number,c
 35836  005DF2  ECEB  F035         	call	i2_initialiseState	;wreg free
 35837                           
 35838                           ;initialise.c: 189: initialiseState(&state.shaftTest, 11);
 35839  005DF6  0ED6               	movlw	low (_state+47)
 35840  005DF8  6E01               	movwf	i2initialiseState@specific,c
 35841  005DFA  0E01               	movlw	high (_state+47)
 35842  005DFC  6E02               	movwf	i2initialiseState@specific+1,c
 35843  005DFE  0E0B               	movlw	11
 35844  005E00  6E03               	movwf	i2initialiseState@number,c
 35845  005E02  ECEB  F035         	call	i2_initialiseState	;wreg free
 35846                           
 35847                           ;initialise.c: 190: initialiseState(&state.bluetooth, 13);
 35848  005E06  0EDD               	movlw	low (_state+54)
 35849  005E08  6E01               	movwf	i2initialiseState@specific,c
 35850  005E0A  0E01               	movlw	high (_state+54)
 35851  005E0C  6E02               	movwf	i2initialiseState@specific+1,c
 35852  005E0E  0E0D               	movlw	13
 35853  005E10  6E03               	movwf	i2initialiseState@number,c
 35854  005E12  ECEB  F035         	call	i2_initialiseState	;wreg free
 35855                           
 35856                           ;initialise.c: 191: initialiseState(&state.readSupply, 9);
 35857  005E16  0EC1               	movlw	low (_state+26)
 35858  005E18  6E01               	movwf	i2initialiseState@specific,c
 35859  005E1A  0E01               	movlw	high (_state+26)
 35860  005E1C  6E02               	movwf	i2initialiseState@specific+1,c
 35861  005E1E  0E09               	movlw	9
 35862  005E20  6E03               	movwf	i2initialiseState@number,c
 35863  005E22  ECEB  F035         	call	i2_initialiseState	;wreg free
 35864                           
 35865                           ;initialise.c: 192: state.queuePointer = 0;
 35866  005E26  0E00               	movlw	0
 35867  005E28  0101               	movlb	1	; () banked
 35868  005E2A  6FB1               	movwf	(_state+10)& (0+255),b
 35869                           
 35870                           ; BSR set to: 1
 35871                           ;initialise.c: 193: for (int i = 0; i < 10; i ++){
 35872  005E2C  0E00               	movlw	0
 35873  005E2E  6E05               	movwf	i2initialiseStates@i+1,c
 35874  005E30  0E00               	movlw	0
 35875  005E32  6E04               	movwf	i2initialiseStates@i,c
 35876  005E34                     i2l11258:
 35877                           
 35878                           ; BSR set to: 1
 35879  005E34  BE05               	btfsc	i2initialiseStates@i+1,7,c
 35880  005E36  D006               	goto	i2l11262
 35881  005E38  5005               	movf	i2initialiseStates@i+1,w,c
 35882  005E3A  E10F               	bnz	i2l603
 35883  005E3C  0E0A               	movlw	10
 35884  005E3E  5C04               	subwf	i2initialiseStates@i,w,c
 35885  005E40  B0D8               	btfsc	status,0,c
 35886  005E42  0012               	return	
 35887  005E44                     i2l11262:
 35888                           
 35889                           ;initialise.c: 194: state.stateQueue[i] = 0;
 35890  005E44  0EA7               	movlw	low _state
 35891  005E46  2404               	addwf	i2initialiseStates@i,w,c
 35892  005E48  6ED9               	movwf	fsr2l,c
 35893  005E4A  0E01               	movlw	high _state
 35894  005E4C  2005               	addwfc	i2initialiseStates@i+1,w,c
 35895  005E4E  6EDA               	movwf	fsr2h,c
 35896  005E50  0E00               	movlw	0
 35897  005E52  6EDF               	movwf	indf2,c
 35898  005E54  4A04               	infsnz	i2initialiseStates@i,f,c
 35899  005E56  2A05               	incf	i2initialiseStates@i+1,f,c
 35900  005E58  D7ED               	goto	i2l11258
 35901  005E5A                     i2l603:
 35902  005E5A  0012               	return		;funcret
 35903  005E5C                     __end_ofi2_initialiseStates:
 35904                           	opt stack 0
 35905                           pclatu	equ	0xFFB
 35906                           pclath	equ	0xFFA
 35907                           tblptru	equ	0xFF8
 35908                           tblptrh	equ	0xFF7
 35909                           tblptrl	equ	0xFF6
 35910                           tablat	equ	0xFF5
 35911                           prodh	equ	0xFF4
 35912                           prodl	equ	0xFF3
 35913                           intcon	equ	0xFF2
 35914                           postinc0	equ	0xFEE
 35915                           fsr0h	equ	0xFEA
 35916                           fsr0l	equ	0xFE9
 35917                           wreg	equ	0xFE8
 35918                           indf1	equ	0xFE7
 35919                           postinc1	equ	0xFE6
 35920                           postdec1	equ	0xFE5
 35921                           plusw1	equ	0xFE3
 35922                           fsr1h	equ	0xFE2
 35923                           fsr1l	equ	0xFE1
 35924                           indf2	equ	0xFDF
 35925                           postinc2	equ	0xFDE
 35926                           postdec2	equ	0xFDD
 35927                           plusw2	equ	0xFDB
 35928                           fsr2h	equ	0xFDA
 35929                           fsr2l	equ	0xFD9
 35930                           status	equ	0xFD8
 35931                           
 35932 ;; *************** function i2_initialiseModem *****************
 35933 ;; Defined at:
 35934 ;;		line 22 in file "outgoingMessages.c"
 35935 ;; Parameters:    Size  Location     Type
 35936 ;;		None
 35937 ;; Auto vars:     Size  Location     Type
 35938 ;;  initialiseMo    1   28[COMRAM] unsigned char 
 35939 ;; Return value:  Size  Location     Type
 35940 ;;                  1    wreg      void 
 35941 ;; Registers used:
 35942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35943 ;; Tracked objects:
 35944 ;;		On entry : 0/0
 35945 ;;		On exit  : 0/0
 35946 ;;		Unchanged: 0/0
 35947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35949 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35951 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35952 ;;Total ram usage:        1 bytes
 35953 ;; Hardware stack levels used:    1
 35954 ;; Hardware stack levels required when called:    4
 35955 ;; This function calls:
 35956 ;;		i2_InitST7540
 35957 ;;		i2_initialiseQueues
 35958 ;;		i2_initialiseState
 35959 ;; This function is called by:
 35960 ;;		_wake
 35961 ;; This function uses a non-reentrant model
 35962 ;;
 35963                           
 35964                           	psect	text202
 35965  006DBA                     __ptext202:
 35966                           	opt stack 0
 35967  006DBA                     i2_initialiseModem:
 35968                           	opt stack 14
 35969                           
 35970                           ;outgoingMessages.c: 23: unsigned char attempts = 0;
 35971                           
 35972                           ;incstack = 0
 35973  006DBA  0E00               	movlw	0
 35974  006DBC  6E1D               	movwf	i2initialiseModem@attempts,c
 35975                           
 35976                           ;outgoingMessages.c: 24: PIE3bits.SSP1IE = 0;
 35977  006DBE  010E               	movlb	14	; () banked
 35978  006DC0  912C               	bcf	44,0,b	;volatile
 35979                           
 35980                           ; BSR set to: 14
 35981                           ;outgoingMessages.c: 25: initialiseState(&state.outgoingMessages, 5);
 35982  006DC2  0EC8               	movlw	low (_state+33)
 35983  006DC4  6E01               	movwf	i2initialiseState@specific,c
 35984  006DC6  0E01               	movlw	high (_state+33)
 35985  006DC8  6E02               	movwf	i2initialiseState@specific+1,c
 35986  006DCA  0E05               	movlw	5
 35987  006DCC  6E03               	movwf	i2initialiseState@number,c
 35988  006DCE  ECEB  F035         	call	i2_initialiseState	;wreg free
 35989                           
 35990                           ;outgoingMessages.c: 26: initialiseState(&state.incomingCommands, 3);
 35991  006DD2  0ECF               	movlw	low (_state+40)
 35992  006DD4  6E01               	movwf	i2initialiseState@specific,c
 35993  006DD6  0E01               	movlw	high (_state+40)
 35994  006DD8  6E02               	movwf	i2initialiseState@specific+1,c
 35995  006DDA  0E03               	movlw	3
 35996  006DDC  6E03               	movwf	i2initialiseState@number,c
 35997  006DDE  ECEB  F035         	call	i2_initialiseState	;wreg free
 35998                           
 35999                           ;outgoingMessages.c: 27: initialiseQueues();
 36000  006DE2  ECAA  F03C         	call	i2_initialiseQueues	;wreg free
 36001                           
 36002                           ;outgoingMessages.c: 28: while(!InitST7540() && attempts < 5){
 36003  006DE6  D001               	goto	i2l11296
 36004  006DE8                     i2l11294:
 36005                           
 36006                           ;outgoingMessages.c: 29: attempts++;
 36007  006DE8  2A1D               	incf	i2initialiseModem@attempts,f,c
 36008  006DEA                     i2l11296:
 36009  006DEA  EC88  F02A         	call	i2_InitST7540	;wreg free
 36010  006DEE  0900               	iorlw	0
 36011  006DF0  A4D8               	btfss	status,2,c
 36012  006DF2  D003               	goto	i2l2103
 36013  006DF4  0E04               	movlw	4
 36014  006DF6  641D               	cpfsgt	i2initialiseModem@attempts,c
 36015  006DF8  D7F7               	goto	i2l11294
 36016  006DFA                     i2l2103:
 36017                           
 36018                           ;outgoingMessages.c: 30: }
 36019                           ;outgoingMessages.c: 31: TRISBbits.TRISB6 = 0;
 36020  006DFA  9C82               	bcf	3970,6,c	;volatile
 36021                           
 36022                           ;outgoingMessages.c: 32: LATBbits.LATB6 = 0;
 36023  006DFC  9C7A               	bcf	3962,6,c	;volatile
 36024                           
 36025                           ;outgoingMessages.c: 33: TRISBbits.TRISB7 = 0;
 36026  006DFE  9E82               	bcf	3970,7,c	;volatile
 36027                           
 36028                           ;outgoingMessages.c: 34: LATBbits.LATB7 = 0;
 36029  006E00  9E7A               	bcf	3962,7,c	;volatile
 36030  006E02  0012               	return		;funcret
 36031  006E04                     __end_ofi2_initialiseModem:
 36032                           	opt stack 0
 36033                           pclatu	equ	0xFFB
 36034                           pclath	equ	0xFFA
 36035                           tblptru	equ	0xFF8
 36036                           tblptrh	equ	0xFF7
 36037                           tblptrl	equ	0xFF6
 36038                           tablat	equ	0xFF5
 36039                           prodh	equ	0xFF4
 36040                           prodl	equ	0xFF3
 36041                           intcon	equ	0xFF2
 36042                           postinc0	equ	0xFEE
 36043                           fsr0h	equ	0xFEA
 36044                           fsr0l	equ	0xFE9
 36045                           wreg	equ	0xFE8
 36046                           indf1	equ	0xFE7
 36047                           postinc1	equ	0xFE6
 36048                           postdec1	equ	0xFE5
 36049                           plusw1	equ	0xFE3
 36050                           fsr1h	equ	0xFE2
 36051                           fsr1l	equ	0xFE1
 36052                           indf2	equ	0xFDF
 36053                           postinc2	equ	0xFDE
 36054                           postdec2	equ	0xFDD
 36055                           plusw2	equ	0xFDB
 36056                           fsr2h	equ	0xFDA
 36057                           fsr2l	equ	0xFD9
 36058                           status	equ	0xFD8
 36059                           
 36060 ;; *************** function i2_initialiseState *****************
 36061 ;; Defined at:
 36062 ;;		line 157 in file "initialise.c"
 36063 ;; Parameters:    Size  Location     Type
 36064 ;;  specific        2    0[COMRAM] PTR struct .
 36065 ;;		 -> state(61), 
 36066 ;;  number          1    2[COMRAM] unsigned char 
 36067 ;; Auto vars:     Size  Location     Type
 36068 ;;		None
 36069 ;; Return value:  Size  Location     Type
 36070 ;;                  1    wreg      void 
 36071 ;; Registers used:
 36072 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36073 ;; Tracked objects:
 36074 ;;		On entry : 0/0
 36075 ;;		On exit  : 0/0
 36076 ;;		Unchanged: 0/0
 36077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36078 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36081 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36082 ;;Total ram usage:        3 bytes
 36083 ;; Hardware stack levels used:    1
 36084 ;; This function calls:
 36085 ;;		Nothing
 36086 ;; This function is called by:
 36087 ;;		i2_initialiseStates
 36088 ;;		i2_initialiseModem
 36089 ;; This function uses a non-reentrant model
 36090 ;;
 36091                           
 36092                           	psect	text203
 36093  006BD6                     __ptext203:
 36094                           	opt stack 0
 36095  006BD6                     i2_initialiseState:
 36096                           	opt stack 17
 36097                           
 36098                           ;initialise.c: 158: specific->counter = 0;
 36099                           
 36100                           ;incstack = 0
 36101  006BD6  EE20 F002          	lfsr	2,2
 36102  006BDA  5001               	movf	i2initialiseState@specific,w,c
 36103  006BDC  26D9               	addwf	fsr2l,f,c
 36104  006BDE  5002               	movf	i2initialiseState@specific+1,w,c
 36105  006BE0  22DA               	addwfc	fsr2h,f,c
 36106  006BE2  0E00               	movlw	0
 36107  006BE4  6EDE               	movwf	postinc2,c
 36108  006BE6  0E00               	movlw	0
 36109  006BE8  6EDD               	movwf	postdec2,c
 36110                           
 36111                           ;initialise.c: 159: specific->current = 1;
 36112  006BEA  C001  FFD9         	movff	i2initialiseState@specific,fsr2l
 36113  006BEE  C002  FFDA         	movff	i2initialiseState@specific+1,fsr2h
 36114  006BF2  0E01               	movlw	1
 36115  006BF4  6EDF               	movwf	indf2,c
 36116                           
 36117                           ;initialise.c: 160: specific->next = 1;
 36118  006BF6  EE20 F001          	lfsr	2,1
 36119  006BFA  5001               	movf	i2initialiseState@specific,w,c
 36120  006BFC  26D9               	addwf	fsr2l,f,c
 36121  006BFE  5002               	movf	i2initialiseState@specific+1,w,c
 36122  006C00  22DA               	addwfc	fsr2h,f,c
 36123  006C02  0E01               	movlw	1
 36124  006C04  6EDF               	movwf	indf2,c
 36125                           
 36126                           ;initialise.c: 161: specific->flag = 0;
 36127  006C06  EE20 F004          	lfsr	2,4
 36128  006C0A  5001               	movf	i2initialiseState@specific,w,c
 36129  006C0C  26D9               	addwf	fsr2l,f,c
 36130  006C0E  5002               	movf	i2initialiseState@specific+1,w,c
 36131  006C10  22DA               	addwfc	fsr2h,f,c
 36132  006C12  0E00               	movlw	0
 36133  006C14  6EDE               	movwf	postinc2,c
 36134  006C16  0E00               	movlw	0
 36135  006C18  6EDD               	movwf	postdec2,c
 36136                           
 36137                           ;initialise.c: 163: specific->id = number;
 36138  006C1A  EE20 F006          	lfsr	2,6
 36139  006C1E  5001               	movf	i2initialiseState@specific,w,c
 36140  006C20  26D9               	addwf	fsr2l,f,c
 36141  006C22  5002               	movf	i2initialiseState@specific+1,w,c
 36142  006C24  22DA               	addwfc	fsr2h,f,c
 36143  006C26  C003  FFDF         	movff	i2initialiseState@number,indf2
 36144  006C2A  0012               	return		;funcret
 36145  006C2C                     __end_ofi2_initialiseState:
 36146                           	opt stack 0
 36147                           pclatu	equ	0xFFB
 36148                           pclath	equ	0xFFA
 36149                           tblptru	equ	0xFF8
 36150                           tblptrh	equ	0xFF7
 36151                           tblptrl	equ	0xFF6
 36152                           tablat	equ	0xFF5
 36153                           prodh	equ	0xFF4
 36154                           prodl	equ	0xFF3
 36155                           intcon	equ	0xFF2
 36156                           postinc0	equ	0xFEE
 36157                           fsr0h	equ	0xFEA
 36158                           fsr0l	equ	0xFE9
 36159                           wreg	equ	0xFE8
 36160                           indf1	equ	0xFE7
 36161                           postinc1	equ	0xFE6
 36162                           postdec1	equ	0xFE5
 36163                           plusw1	equ	0xFE3
 36164                           fsr1h	equ	0xFE2
 36165                           fsr1l	equ	0xFE1
 36166                           indf2	equ	0xFDF
 36167                           postinc2	equ	0xFDE
 36168                           postdec2	equ	0xFDD
 36169                           plusw2	equ	0xFDB
 36170                           fsr2h	equ	0xFDA
 36171                           fsr2l	equ	0xFD9
 36172                           status	equ	0xFD8
 36173                           
 36174 ;; *************** function i2_initialiseQueues *****************
 36175 ;; Defined at:
 36176 ;;		line 96 in file "outgoingMessages.c"
 36177 ;; Parameters:    Size  Location     Type
 36178 ;;		None
 36179 ;; Auto vars:     Size  Location     Type
 36180 ;;		None
 36181 ;; Return value:  Size  Location     Type
 36182 ;;                  1    wreg      void 
 36183 ;; Registers used:
 36184 ;;		wreg, status,2
 36185 ;; Tracked objects:
 36186 ;;		On entry : 0/0
 36187 ;;		On exit  : 0/0
 36188 ;;		Unchanged: 0/0
 36189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36194 ;;Total ram usage:        0 bytes
 36195 ;; Hardware stack levels used:    1
 36196 ;; This function calls:
 36197 ;;		Nothing
 36198 ;; This function is called by:
 36199 ;;		i2_initialiseModem
 36200 ;; This function uses a non-reentrant model
 36201 ;;
 36202                           
 36203                           	psect	text204
 36204  007954                     __ptext204:
 36205                           	opt stack 0
 36206  007954                     i2_initialiseQueues:
 36207                           	opt stack 17
 36208                           
 36209                           ;outgoingMessages.c: 97: outgoingQueue.queue_pointer = 0;
 36210                           
 36211                           ;incstack = 0
 36212  007954  0E00               	movlw	0
 36213  007956  0101               	movlb	1	; () banked
 36214  007958  6F01               	movwf	(_outgoingQueue+1)& (0+255),b
 36215                           
 36216                           ;outgoingMessages.c: 98: outgoingQueue.length = 0;
 36217  00795A  0E00               	movlw	0
 36218  00795C  0101               	movlb	1	; () banked
 36219  00795E  6F00               	movwf	_outgoingQueue& (0+255),b
 36220                           
 36221                           ;outgoingMessages.c: 99: incomingQueue.queue_pointer = 0;
 36222  007960  0E00               	movlw	0
 36223  007962  0103               	movlb	3	; () banked
 36224  007964  6F01               	movwf	(_incomingQueue+1)& (0+255),b
 36225                           
 36226                           ;outgoingMessages.c: 100: incomingQueue.length = 0;
 36227  007966  0E00               	movlw	0
 36228  007968  0103               	movlb	3	; () banked
 36229  00796A  6F00               	movwf	_incomingQueue& (0+255),b
 36230                           
 36231                           ; BSR set to: 3
 36232  00796C  0012               	return		;funcret
 36233  00796E                     __end_ofi2_initialiseQueues:
 36234                           	opt stack 0
 36235                           pclatu	equ	0xFFB
 36236                           pclath	equ	0xFFA
 36237                           tblptru	equ	0xFF8
 36238                           tblptrh	equ	0xFF7
 36239                           tblptrl	equ	0xFF6
 36240                           tablat	equ	0xFF5
 36241                           prodh	equ	0xFF4
 36242                           prodl	equ	0xFF3
 36243                           intcon	equ	0xFF2
 36244                           postinc0	equ	0xFEE
 36245                           fsr0h	equ	0xFEA
 36246                           fsr0l	equ	0xFE9
 36247                           wreg	equ	0xFE8
 36248                           indf1	equ	0xFE7
 36249                           postinc1	equ	0xFE6
 36250                           postdec1	equ	0xFE5
 36251                           plusw1	equ	0xFE3
 36252                           fsr1h	equ	0xFE2
 36253                           fsr1l	equ	0xFE1
 36254                           indf2	equ	0xFDF
 36255                           postinc2	equ	0xFDE
 36256                           postdec2	equ	0xFDD
 36257                           plusw2	equ	0xFDB
 36258                           fsr2h	equ	0xFDA
 36259                           fsr2l	equ	0xFD9
 36260                           status	equ	0xFD8
 36261                           
 36262 ;; *************** function i2_InitST7540 *****************
 36263 ;; Defined at:
 36264 ;;		line 72 in file "ST7540.c"
 36265 ;; Parameters:    Size  Location     Type
 36266 ;;		None
 36267 ;; Auto vars:     Size  Location     Type
 36268 ;;  InitST7540      3   25[COMRAM] unsigned um
 36269 ;;  InitST7540      3   22[COMRAM] unsigned um
 36270 ;;  InitST7540      3   19[COMRAM] unsigned um
 36271 ;;  InitST7540      3   16[COMRAM] unsigned um
 36272 ;; Return value:  Size  Location     Type
 36273 ;;                  1    wreg      unsigned char 
 36274 ;; Registers used:
 36275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36276 ;; Tracked objects:
 36277 ;;		On entry : 0/0
 36278 ;;		On exit  : 0/0
 36279 ;;		Unchanged: 0/0
 36280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36282 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36284 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36285 ;;Total ram usage:       12 bytes
 36286 ;; Hardware stack levels used:    1
 36287 ;; Hardware stack levels required when called:    3
 36288 ;; This function calls:
 36289 ;;		i2_InitST7540Pins
 36290 ;;		i2_ReadConfigST7540
 36291 ;;		i2_WriteConfigST7540
 36292 ;;		i2_initST7540Interrupts
 36293 ;; This function is called by:
 36294 ;;		i2_initialiseModem
 36295 ;; This function uses a non-reentrant model
 36296 ;;
 36297                           
 36298                           	psect	text205
 36299  005510                     __ptext205:
 36300                           	opt stack 0
 36301  005510                     i2_InitST7540:
 36302                           	opt stack 14
 36303                           
 36304                           ;ST7540.c: 73: unsigned long short frameDataTXUS;
 36305                           ;ST7540.c: 74: unsigned long short frameDataRXUS = 0;
 36306                           
 36307                           ; BSR set to: 3
 36308                           ;incstack = 0
 36309  005510  0E00               	movlw	0
 36310  005512  6E11               	movwf	i2InitST7540@frameDataRXUS,c
 36311  005514  0E00               	movlw	0
 36312  005516  6E12               	movwf	i2InitST7540@frameDataRXUS+1,c
 36313  005518  0E00               	movlw	0
 36314  00551A  6E13               	movwf	i2InitST7540@frameDataRXUS+2,c
 36315                           
 36316                           ;ST7540.c: 75: unsigned long short configDataTXUS;
 36317                           ;ST7540.c: 76: unsigned long short configDataRXUS = 0;
 36318  00551C  0E00               	movlw	0
 36319  00551E  6E14               	movwf	i2InitST7540@configDataRXUS,c
 36320  005520  0E00               	movlw	0
 36321  005522  6E15               	movwf	i2InitST7540@configDataRXUS+1,c
 36322  005524  0E00               	movlw	0
 36323  005526  6E16               	movwf	i2InitST7540@configDataRXUS+2,c
 36324                           
 36325                           ;ST7540.c: 78: InitST7540Pins();
 36326  005528  ECEA  F03A         	call	i2_InitST7540Pins	;wreg free
 36327                           
 36328                           ;ST7540.c: 80: frameDataTXUS = (unsigned long short) 0x9b58;
 36329  00552C  0E58               	movlw	88
 36330  00552E  6E17               	movwf	i2InitST7540@frameDataTXUS,c
 36331  005530  0E9B               	movlw	155
 36332  005532  6E18               	movwf	i2InitST7540@frameDataTXUS+1,c
 36333  005534  0E00               	movlw	0
 36334  005536  6E19               	movwf	i2InitST7540@frameDataTXUS+2,c
 36335                           
 36336                           ;ST7540.c: 81: configDataTXUS = 0b000000000000000000000110 |
 36337                           ;ST7540.c: 82: 0b000000000000000000010000 |
 36338                           ;ST7540.c: 83: 0b000000000000000000000000 |
 36339                           ;ST7540.c: 84: 0b000000000000000000000000 |
 36340                           ;ST7540.c: 85: 0b000000000000000010000000 |
 36341                           ;ST7540.c: 86: 0b000000000000001000000000 |
 36342                           ;ST7540.c: 87: 0b000000000001000000000000 |
 36343                           ;ST7540.c: 88: 0b000000000000000000000000 |
 36344                           ;ST7540.c: 89: 0b000000011000000000000000 |
 36345                           ;ST7540.c: 90: 0b000000100000000000000000 |
 36346                           ;ST7540.c: 91: 0b000001000000000000000000 |
 36347                           ;ST7540.c: 92: 0b000000000000000000000000 |
 36348  005538  0E96               	movlw	150
 36349  00553A  6E1A               	movwf	i2InitST7540@configDataTXUS,c
 36350  00553C  0E92               	movlw	146
 36351  00553E  6E1B               	movwf	i2InitST7540@configDataTXUS+1,c
 36352  005540  0E77               	movlw	119
 36353  005542  6E1C               	movwf	i2InitST7540@configDataTXUS+2,c
 36354                           
 36355                           ;ST7540.c: 98: SSP1STATbits.CKE = 1;
 36356  005544  8C94               	bsf	3988,6,c	;volatile
 36357                           
 36358                           ;ST7540.c: 99: SSP1CON1bits.SSPM = 0b0101;
 36359  005546  5095               	movf	3989,w,c	;volatile
 36360  005548  0BF0               	andlw	-16
 36361  00554A  0905               	iorlw	5
 36362  00554C  6E95               	movwf	3989,c	;volatile
 36363                           
 36364                           ;ST7540.c: 101: WriteConfigST7540(frameDataTXUS, configDataTXUS);
 36365  00554E  C017  F006         	movff	i2InitST7540@frameDataTXUS,i2WriteConfigST7540@frameDataUS
 36366  005552  C018  F007         	movff	i2InitST7540@frameDataTXUS+1,i2WriteConfigST7540@frameDataUS+1
 36367  005556  C019  F008         	movff	i2InitST7540@frameDataTXUS+2,i2WriteConfigST7540@frameDataUS+2
 36368  00555A  C01A  F009         	movff	i2InitST7540@configDataTXUS,i2WriteConfigST7540@configDataUS
 36369  00555E  C01B  F00A         	movff	i2InitST7540@configDataTXUS+1,i2WriteConfigST7540@configDataUS+1
 36370  005562  C01C  F00B         	movff	i2InitST7540@configDataTXUS+2,i2WriteConfigST7540@configDataUS+2
 36371  005566  EC0A  F030         	call	i2_WriteConfigST7540	;wreg free
 36372                           
 36373                           ;ST7540.c: 102: WriteConfigST7540(frameDataTXUS, configDataTXUS);
 36374  00556A  C017  F006         	movff	i2InitST7540@frameDataTXUS,i2WriteConfigST7540@frameDataUS
 36375  00556E  C018  F007         	movff	i2InitST7540@frameDataTXUS+1,i2WriteConfigST7540@frameDataUS+1
 36376  005572  C019  F008         	movff	i2InitST7540@frameDataTXUS+2,i2WriteConfigST7540@frameDataUS+2
 36377  005576  C01A  F009         	movff	i2InitST7540@configDataTXUS,i2WriteConfigST7540@configDataUS
 36378  00557A  C01B  F00A         	movff	i2InitST7540@configDataTXUS+1,i2WriteConfigST7540@configDataUS+1
 36379  00557E  C01C  F00B         	movff	i2InitST7540@configDataTXUS+2,i2WriteConfigST7540@configDataUS+2
 36380  005582  EC0A  F030         	call	i2_WriteConfigST7540	;wreg free
 36381                           
 36382                           ;ST7540.c: 103: ReadConfigST7540(&frameDataRXUS, &configDataRXUS);
 36383  005586  0E11               	movlw	low i2InitST7540@frameDataRXUS
 36384  005588  6E01               	movwf	i2ReadConfigST7540@frameDataUS,c
 36385  00558A  0E00               	movlw	high i2InitST7540@frameDataRXUS
 36386  00558C  6E02               	movwf	i2ReadConfigST7540@frameDataUS+1,c
 36387  00558E  0E14               	movlw	low i2InitST7540@configDataRXUS
 36388  005590  6E03               	movwf	i2ReadConfigST7540@configDataUS,c
 36389  005592  0E00               	movlw	high i2InitST7540@configDataRXUS
 36390  005594  6E04               	movwf	i2ReadConfigST7540@configDataUS+1,c
 36391  005596  ECEB  F020         	call	i2_ReadConfigST7540	;wreg free
 36392                           
 36393                           ;ST7540.c: 104: if((frameDataTXUS != frameDataRXUS) && (configDataTXUS != configDataRXUS
      +                          ))
 36394  00559A  5011               	movf	i2InitST7540@frameDataRXUS,w,c
 36395  00559C  1817               	xorwf	i2InitST7540@frameDataTXUS,w,c
 36396  00559E  E107               	bnz	i2u652_40
 36397  0055A0  5012               	movf	i2InitST7540@frameDataRXUS+1,w,c
 36398  0055A2  1818               	xorwf	i2InitST7540@frameDataTXUS+1,w,c
 36399  0055A4  E104               	bnz	i2u652_40
 36400  0055A6  5013               	movf	i2InitST7540@frameDataRXUS+2,w,c
 36401  0055A8  1819               	xorwf	i2InitST7540@frameDataTXUS+2,w,c
 36402  0055AA  B4D8               	btfsc	status,2,c
 36403  0055AC  D00C               	goto	i2l10108
 36404  0055AE                     i2u652_40:
 36405  0055AE  5014               	movf	i2InitST7540@configDataRXUS,w,c
 36406  0055B0  181A               	xorwf	i2InitST7540@configDataTXUS,w,c
 36407  0055B2  E107               	bnz	i2u653_40
 36408  0055B4  5015               	movf	i2InitST7540@configDataRXUS+1,w,c
 36409  0055B6  181B               	xorwf	i2InitST7540@configDataTXUS+1,w,c
 36410  0055B8  E104               	bnz	i2u653_40
 36411  0055BA  5016               	movf	i2InitST7540@configDataRXUS+2,w,c
 36412  0055BC  181C               	xorwf	i2InitST7540@configDataTXUS+2,w,c
 36413  0055BE  B4D8               	btfsc	status,2,c
 36414  0055C0  D002               	goto	i2l10108
 36415  0055C2                     i2u653_40:
 36416                           
 36417                           ;ST7540.c: 105: return 0;
 36418  0055C2  0E00               	movlw	0
 36419  0055C4  0012               	return	
 36420  0055C6                     i2l10108:
 36421                           
 36422                           ;ST7540.c: 107: initST7540Interrupts();
 36423  0055C6  ECE7  F03C         	call	i2_initST7540Interrupts	;wreg free
 36424                           
 36425                           ;ST7540.c: 109: return 1;
 36426  0055CA  0E01               	movlw	1
 36427  0055CC  0012               	return	
 36428  0055CE                     __end_ofi2_InitST7540:
 36429                           	opt stack 0
 36430                           pclatu	equ	0xFFB
 36431                           pclath	equ	0xFFA
 36432                           tblptru	equ	0xFF8
 36433                           tblptrh	equ	0xFF7
 36434                           tblptrl	equ	0xFF6
 36435                           tablat	equ	0xFF5
 36436                           prodh	equ	0xFF4
 36437                           prodl	equ	0xFF3
 36438                           intcon	equ	0xFF2
 36439                           postinc0	equ	0xFEE
 36440                           fsr0h	equ	0xFEA
 36441                           fsr0l	equ	0xFE9
 36442                           wreg	equ	0xFE8
 36443                           indf1	equ	0xFE7
 36444                           postinc1	equ	0xFE6
 36445                           postdec1	equ	0xFE5
 36446                           plusw1	equ	0xFE3
 36447                           fsr1h	equ	0xFE2
 36448                           fsr1l	equ	0xFE1
 36449                           indf2	equ	0xFDF
 36450                           postinc2	equ	0xFDE
 36451                           postdec2	equ	0xFDD
 36452                           plusw2	equ	0xFDB
 36453                           fsr2h	equ	0xFDA
 36454                           fsr2l	equ	0xFD9
 36455                           status	equ	0xFD8
 36456                           
 36457 ;; *************** function i2_initST7540Interrupts *****************
 36458 ;; Defined at:
 36459 ;;		line 364 in file "ST7540.c"
 36460 ;; Parameters:    Size  Location     Type
 36461 ;;		None
 36462 ;; Auto vars:     Size  Location     Type
 36463 ;;		None
 36464 ;; Return value:  Size  Location     Type
 36465 ;;                  1    wreg      void 
 36466 ;; Registers used:
 36467 ;;		None
 36468 ;; Tracked objects:
 36469 ;;		On entry : 0/0
 36470 ;;		On exit  : 0/0
 36471 ;;		Unchanged: 0/0
 36472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36477 ;;Total ram usage:        0 bytes
 36478 ;; Hardware stack levels used:    1
 36479 ;; This function calls:
 36480 ;;		Nothing
 36481 ;; This function is called by:
 36482 ;;		i2_InitST7540
 36483 ;; This function uses a non-reentrant model
 36484 ;;
 36485                           
 36486                           	psect	text206
 36487  0079CE                     __ptext206:
 36488                           	opt stack 0
 36489  0079CE                     i2_initST7540Interrupts:
 36490                           	opt stack 16
 36491                           
 36492                           ;ST7540.c: 365: INTCONbits.INT0EDG = 0;
 36493                           
 36494                           ;incstack = 0
 36495  0079CE  90F2               	bcf	intcon,0,c	;volatile
 36496                           
 36497                           ;ST7540.c: 366: PIE0bits.INT0IE = 1;
 36498  0079D0  010E               	movlb	14	; () banked
 36499  0079D2  8129               	bsf	41,0,b	;volatile
 36500                           
 36501                           ;ST7540.c: 367: PIR0bits.INT0IF = 0;
 36502  0079D4  010E               	movlb	14	; () banked
 36503  0079D6  9133               	bcf	51,0,b	;volatile
 36504                           
 36505                           ;ST7540.c: 369: PIE3bits.SSP1IE = 1;
 36506  0079D8  010E               	movlb	14	; () banked
 36507  0079DA  812C               	bsf	44,0,b	;volatile
 36508                           
 36509                           ;ST7540.c: 370: PIR3bits.SSP1IF = 0;
 36510  0079DC  010E               	movlb	14	; () banked
 36511  0079DE  9136               	bcf	54,0,b	;volatile
 36512                           
 36513                           ;ST7540.c: 371: IPR3bits.SSP1IP = 1;
 36514  0079E0  010E               	movlb	14	; () banked
 36515  0079E2  8122               	bsf	34,0,b	;volatile
 36516                           
 36517                           ; BSR set to: 14
 36518  0079E4  0012               	return		;funcret
 36519  0079E6                     __end_ofi2_initST7540Interrupts:
 36520                           	opt stack 0
 36521                           pclatu	equ	0xFFB
 36522                           pclath	equ	0xFFA
 36523                           tblptru	equ	0xFF8
 36524                           tblptrh	equ	0xFF7
 36525                           tblptrl	equ	0xFF6
 36526                           tablat	equ	0xFF5
 36527                           prodh	equ	0xFF4
 36528                           prodl	equ	0xFF3
 36529                           intcon	equ	0xFF2
 36530                           postinc0	equ	0xFEE
 36531                           fsr0h	equ	0xFEA
 36532                           fsr0l	equ	0xFE9
 36533                           wreg	equ	0xFE8
 36534                           indf1	equ	0xFE7
 36535                           postinc1	equ	0xFE6
 36536                           postdec1	equ	0xFE5
 36537                           plusw1	equ	0xFE3
 36538                           fsr1h	equ	0xFE2
 36539                           fsr1l	equ	0xFE1
 36540                           indf2	equ	0xFDF
 36541                           postinc2	equ	0xFDE
 36542                           postdec2	equ	0xFDD
 36543                           plusw2	equ	0xFDB
 36544                           fsr2h	equ	0xFDA
 36545                           fsr2l	equ	0xFD9
 36546                           status	equ	0xFD8
 36547                           
 36548 ;; *************** function i2_WriteConfigST7540 *****************
 36549 ;; Defined at:
 36550 ;;		line 112 in file "ST7540.c"
 36551 ;; Parameters:    Size  Location     Type
 36552 ;;  frameDataUS     3    5[COMRAM] unsigned um
 36553 ;;  configDataUS    3    8[COMRAM] unsigned um
 36554 ;; Auto vars:     Size  Location     Type
 36555 ;;  WriteConfigS    1   15[COMRAM] unsigned char 
 36556 ;;  WriteConfigS    1   14[COMRAM] unsigned char 
 36557 ;; Return value:  Size  Location     Type
 36558 ;;                  1    wreg      void 
 36559 ;; Registers used:
 36560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36561 ;; Tracked objects:
 36562 ;;		On entry : 0/0
 36563 ;;		On exit  : 0/0
 36564 ;;		Unchanged: 0/0
 36565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36566 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36567 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36568 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36569 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36570 ;;Total ram usage:       11 bytes
 36571 ;; Hardware stack levels used:    1
 36572 ;; Hardware stack levels required when called:    2
 36573 ;; This function calls:
 36574 ;;		i2__delay_ms
 36575 ;; This function is called by:
 36576 ;;		i2_InitST7540
 36577 ;; This function uses a non-reentrant model
 36578 ;;
 36579                           
 36580                           	psect	text207
 36581  006014                     __ptext207:
 36582                           	opt stack 0
 36583  006014                     i2_WriteConfigST7540:
 36584                           	opt stack 14
 36585                           
 36586                           ;ST7540.c: 113: unsigned char discardUC;
 36587                           ;ST7540.c: 114: unsigned char bitsSentUC;
 36588                           ;ST7540.c: 116: bufferTXST7540UCA[0] = (frameDataUS & 0b111111110000000000000000) >> 16;
 36589                           
 36590                           ; BSR set to: 14
 36591                           ;incstack = 0
 36592  006014  C008  F200         	movff	i2WriteConfigST7540@frameDataUS+2,_bufferTXST7540UCA
 36593                           
 36594                           ;ST7540.c: 117: bufferTXST7540UCA[1] = (frameDataUS & 0b000000001111111100000000) >> 8;
 36595  006018  C006  F00C         	movff	i2WriteConfigST7540@frameDataUS,??i2_WriteConfigST7540
 36596  00601C  C007  F00D         	movff	i2WriteConfigST7540@frameDataUS+1,??i2_WriteConfigST7540+1
 36597  006020  C008  F00E         	movff	i2WriteConfigST7540@frameDataUS+2,??i2_WriteConfigST7540+2
 36598  006024  C00D  F00C         	movff	??i2_WriteConfigST7540+1,??i2_WriteConfigST7540
 36599  006028  C00E  F00D         	movff	??i2_WriteConfigST7540+2,??i2_WriteConfigST7540+1
 36600  00602C  6A0E               	clrf	??i2_WriteConfigST7540+2,c
 36601  00602E  500C               	movf	??i2_WriteConfigST7540,w,c
 36602  006030  0102               	movlb	2	; () banked
 36603  006032  6F01               	movwf	(_bufferTXST7540UCA+1)& (0+255),b
 36604                           
 36605                           ; BSR set to: 2
 36606                           ;ST7540.c: 118: bufferTXST7540UCA[2] = frameDataUS & 0b000000000000000011111111;
 36607  006034  C006  F202         	movff	i2WriteConfigST7540@frameDataUS,_bufferTXST7540UCA+2
 36608                           
 36609                           ; BSR set to: 2
 36610                           ;ST7540.c: 119: bufferTXST7540UCA[3] = (configDataUS & 0b111111110000000000000000) >> 16
      +                          ;
 36611  006038  C00B  F203         	movff	i2WriteConfigST7540@configDataUS+2,_bufferTXST7540UCA+3
 36612                           
 36613                           ;ST7540.c: 120: bufferTXST7540UCA[4] = (configDataUS & 0b000000001111111100000000) >> 8;
 36614  00603C  C009  F00C         	movff	i2WriteConfigST7540@configDataUS,??i2_WriteConfigST7540
 36615  006040  C00A  F00D         	movff	i2WriteConfigST7540@configDataUS+1,??i2_WriteConfigST7540+1
 36616  006044  C00B  F00E         	movff	i2WriteConfigST7540@configDataUS+2,??i2_WriteConfigST7540+2
 36617  006048  C00D  F00C         	movff	??i2_WriteConfigST7540+1,??i2_WriteConfigST7540
 36618  00604C  C00E  F00D         	movff	??i2_WriteConfigST7540+2,??i2_WriteConfigST7540+1
 36619  006050  6A0E               	clrf	??i2_WriteConfigST7540+2,c
 36620  006052  500C               	movf	??i2_WriteConfigST7540,w,c
 36621  006054  0102               	movlb	2	; () banked
 36622  006056  6F04               	movwf	(_bufferTXST7540UCA+4)& (0+255),b
 36623                           
 36624                           ; BSR set to: 2
 36625                           ;ST7540.c: 121: bufferTXST7540UCA[5] = configDataUS & 0b000000000000000011111111;
 36626  006058  C009  F205         	movff	i2WriteConfigST7540@configDataUS,_bufferTXST7540UCA+5
 36627                           
 36628                           ; BSR set to: 2
 36629                           ;ST7540.c: 123: LATCbits.LATC1 = 1;
 36630  00605C  827B               	bsf	3963,1,c	;volatile
 36631                           
 36632                           ; BSR set to: 2
 36633                           ;ST7540.c: 124: LATCbits.LATC6 = 0;
 36634  00605E  9C7B               	bcf	3963,6,c	;volatile
 36635  006060                     i2l705:
 36636  006060  B68B               	btfsc	3979,3,c	;volatile
 36637  006062  D7FE               	goto	i2l705
 36638                           
 36639                           ;ST7540.c: 126: SSP1CON1bits.SSPEN = 1;
 36640  006064  8A95               	bsf	3989,5,c	;volatile
 36641                           
 36642                           ;ST7540.c: 128: for(bitsSentUC = 0; bitsSentUC < 6; bitsSentUC++){
 36643  006066  0E00               	movlw	0
 36644  006068  6E10               	movwf	i2WriteConfigST7540@bitsSentUC,c
 36645  00606A                     i2l9114:
 36646  00606A  0E05               	movlw	5
 36647  00606C  6410               	cpfsgt	i2WriteConfigST7540@bitsSentUC,c
 36648  00606E  D001               	goto	i2l708
 36649  006070  D010               	goto	i2l709
 36650  006072                     i2l708:
 36651                           
 36652                           ;ST7540.c: 129: discardUC = SSP1BUF;
 36653  006072  CF91 F00F          	movff	3985,i2WriteConfigST7540@discardUC	;volatile
 36654                           
 36655                           ;ST7540.c: 130: SSP1BUF = bufferTXST7540UCA[bitsSentUC];
 36656  006076  5010               	movf	i2WriteConfigST7540@bitsSentUC,w,c
 36657  006078  0D01               	mullw	1
 36658  00607A  0E00               	movlw	low _bufferTXST7540UCA
 36659  00607C  24F3               	addwf	prodl,w,c
 36660  00607E  6ED9               	movwf	fsr2l,c
 36661  006080  0E02               	movlw	high _bufferTXST7540UCA
 36662  006082  20F4               	addwfc	prodh,w,c
 36663  006084  6EDA               	movwf	fsr2h,c
 36664  006086  50DF               	movf	indf2,w,c
 36665  006088  6E91               	movwf	3985,c	;volatile
 36666  00608A                     i2l710:
 36667  00608A  A094               	btfss	3988,0,c	;volatile
 36668  00608C  D7FE               	goto	i2l710
 36669  00608E  2A10               	incf	i2WriteConfigST7540@bitsSentUC,f,c
 36670  006090  D7EC               	goto	i2l9114
 36671  006092                     i2l709:
 36672                           
 36673                           ;ST7540.c: 132: }
 36674                           ;ST7540.c: 134: LATCbits.LATC1 = 0;
 36675  006092  927B               	bcf	3963,1,c	;volatile
 36676                           
 36677                           ;ST7540.c: 135: LATCbits.LATC6 = 1;
 36678  006094  8C7B               	bsf	3963,6,c	;volatile
 36679                           
 36680                           ;ST7540.c: 136: SSP1CON1bits.SSPEN = 0;
 36681  006096  9A95               	bcf	3989,5,c	;volatile
 36682                           
 36683                           ;ST7540.c: 137: _delay_ms(2);
 36684  006098  0E00               	movlw	0
 36685  00609A  6E03               	movwf	i2__delay_ms@delay+1,c
 36686  00609C  0E02               	movlw	2
 36687  00609E  6E02               	movwf	i2__delay_ms@delay,c
 36688  0060A0  EC97  F038         	call	i2__delay_ms	;wreg free
 36689  0060A4  0012               	return		;funcret
 36690  0060A6                     __end_ofi2_WriteConfigST7540:
 36691                           	opt stack 0
 36692                           pclatu	equ	0xFFB
 36693                           pclath	equ	0xFFA
 36694                           tblptru	equ	0xFF8
 36695                           tblptrh	equ	0xFF7
 36696                           tblptrl	equ	0xFF6
 36697                           tablat	equ	0xFF5
 36698                           prodh	equ	0xFF4
 36699                           prodl	equ	0xFF3
 36700                           intcon	equ	0xFF2
 36701                           postinc0	equ	0xFEE
 36702                           fsr0h	equ	0xFEA
 36703                           fsr0l	equ	0xFE9
 36704                           wreg	equ	0xFE8
 36705                           indf1	equ	0xFE7
 36706                           postinc1	equ	0xFE6
 36707                           postdec1	equ	0xFE5
 36708                           plusw1	equ	0xFE3
 36709                           fsr1h	equ	0xFE2
 36710                           fsr1l	equ	0xFE1
 36711                           indf2	equ	0xFDF
 36712                           postinc2	equ	0xFDE
 36713                           postdec2	equ	0xFDD
 36714                           plusw2	equ	0xFDB
 36715                           fsr2h	equ	0xFDA
 36716                           fsr2l	equ	0xFD9
 36717                           status	equ	0xFD8
 36718                           
 36719 ;; *************** function i2__delay_ms *****************
 36720 ;; Defined at:
 36721 ;;		line 139 in file "peripherals.c"
 36722 ;; Parameters:    Size  Location     Type
 36723 ;;  delay           2    1[COMRAM] unsigned int 
 36724 ;; Auto vars:     Size  Location     Type
 36725 ;;  _delay_ms       2    3[COMRAM] int 
 36726 ;; Return value:  Size  Location     Type
 36727 ;;                  1    wreg      void 
 36728 ;; Registers used:
 36729 ;;		wreg, status,2, status,0, cstack
 36730 ;; Tracked objects:
 36731 ;;		On entry : 0/0
 36732 ;;		On exit  : 0/0
 36733 ;;		Unchanged: 0/0
 36734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36735 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36736 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36738 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36739 ;;Total ram usage:        4 bytes
 36740 ;; Hardware stack levels used:    1
 36741 ;; Hardware stack levels required when called:    1
 36742 ;; This function calls:
 36743 ;;		i2__delay_us
 36744 ;; This function is called by:
 36745 ;;		_SCAN_TAG
 36746 ;;		_SCAN_TAG_1
 36747 ;;		_tagFor0
 36748 ;;		_tagFor1
 36749 ;;		_wake
 36750 ;;		i2_WriteConfigST7540
 36751 ;; This function uses a non-reentrant model
 36752 ;;
 36753                           
 36754                           	psect	text208
 36755  00712E                     __ptext208:
 36756                           	opt stack 0
 36757  00712E                     i2__delay_ms:
 36758                           	opt stack 17
 36759                           
 36760                           ;peripherals.c: 140: while(delay-- > 0){
 36761                           
 36762                           ;incstack = 0
 36763  00712E  D012               	goto	i2l8586
 36764  007130                     i2l8574:
 36765                           
 36766                           ;peripherals.c: 141: for (int i = 0; i < 10; i ++){
 36767  007130  0E00               	movlw	0
 36768  007132  6E05               	movwf	i2__delay_ms@i+1,c
 36769  007134  0E00               	movlw	0
 36770  007136  6E04               	movwf	i2__delay_ms@i,c
 36771  007138                     i2l8576:
 36772  007138  BE05               	btfsc	i2__delay_ms@i+1,7,c
 36773  00713A  D006               	goto	i2l8580
 36774  00713C  5005               	movf	i2__delay_ms@i+1,w,c
 36775  00713E  E10A               	bnz	i2l8586
 36776  007140  0E0A               	movlw	10
 36777  007142  5C04               	subwf	i2__delay_ms@i,w,c
 36778  007144  B0D8               	btfsc	status,0,c
 36779  007146  D006               	goto	i2l8586
 36780  007148                     i2l8580:
 36781                           
 36782                           ;peripherals.c: 142: _delay_us(100);
 36783  007148  0E64               	movlw	100
 36784  00714A  EC98  F03B         	call	i2__delay_us
 36785  00714E  4A04               	infsnz	i2__delay_ms@i,f,c
 36786  007150  2A05               	incf	i2__delay_ms@i+1,f,c
 36787  007152  D7F2               	goto	i2l8576
 36788  007154                     i2l8586:
 36789  007154  0602               	decf	i2__delay_ms@delay,f,c
 36790  007156  A0D8               	btfss	status,0,c
 36791  007158  0603               	decf	i2__delay_ms@delay+1,f,c
 36792  00715A  2802               	incf	i2__delay_ms@delay,w,c
 36793  00715C  E1E9               	bnz	i2l8574
 36794  00715E  2803               	incf	i2__delay_ms@delay+1,w,c
 36795  007160  B4D8               	btfsc	status,2,c
 36796  007162  0012               	return	
 36797  007164  D7E5               	goto	i2l8574
 36798  007166                     __end_ofi2__delay_ms:
 36799                           	opt stack 0
 36800                           pclatu	equ	0xFFB
 36801                           pclath	equ	0xFFA
 36802                           tblptru	equ	0xFF8
 36803                           tblptrh	equ	0xFF7
 36804                           tblptrl	equ	0xFF6
 36805                           tablat	equ	0xFF5
 36806                           prodh	equ	0xFF4
 36807                           prodl	equ	0xFF3
 36808                           intcon	equ	0xFF2
 36809                           postinc0	equ	0xFEE
 36810                           fsr0h	equ	0xFEA
 36811                           fsr0l	equ	0xFE9
 36812                           wreg	equ	0xFE8
 36813                           indf1	equ	0xFE7
 36814                           postinc1	equ	0xFE6
 36815                           postdec1	equ	0xFE5
 36816                           plusw1	equ	0xFE3
 36817                           fsr1h	equ	0xFE2
 36818                           fsr1l	equ	0xFE1
 36819                           indf2	equ	0xFDF
 36820                           postinc2	equ	0xFDE
 36821                           postdec2	equ	0xFDD
 36822                           plusw2	equ	0xFDB
 36823                           fsr2h	equ	0xFDA
 36824                           fsr2l	equ	0xFD9
 36825                           status	equ	0xFD8
 36826                           
 36827 ;; *************** function i2__delay_us *****************
 36828 ;; Defined at:
 36829 ;;		line 125 in file "peripherals.c"
 36830 ;; Parameters:    Size  Location     Type
 36831 ;;  us              1    wreg     unsigned char 
 36832 ;; Auto vars:     Size  Location     Type
 36833 ;;  us              1    0[COMRAM] unsigned char 
 36834 ;; Return value:  Size  Location     Type
 36835 ;;                  1    wreg      void 
 36836 ;; Registers used:
 36837 ;;		wreg, status,2, status,0
 36838 ;; Tracked objects:
 36839 ;;		On entry : 0/0
 36840 ;;		On exit  : 0/0
 36841 ;;		Unchanged: 0/0
 36842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36844 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36846 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36847 ;;Total ram usage:        1 bytes
 36848 ;; Hardware stack levels used:    1
 36849 ;; This function calls:
 36850 ;;		Nothing
 36851 ;; This function is called by:
 36852 ;;		_SCAN_TAG
 36853 ;;		_SCAN_TAG_1
 36854 ;;		_UIO_WRITE
 36855 ;;		_UIO_WRITE_1
 36856 ;;		_UIO_SAK
 36857 ;;		_UIO_SAK_1
 36858 ;;		_UIO_MAK
 36859 ;;		_UIO_MAK_1
 36860 ;;		_UIO_noMAK
 36861 ;;		_UIO_noMAK_1
 36862 ;;		_rxWord
 36863 ;;		_initialiseTagADC
 36864 ;;		_initialiseTagADC_1
 36865 ;;		i2__delay_ms
 36866 ;; This function uses a non-reentrant model
 36867 ;;
 36868                           
 36869                           	psect	text209
 36870  007730                     __ptext209:
 36871                           	opt stack 0
 36872  007730                     i2__delay_us:
 36873                           	opt stack 17
 36874                           
 36875                           ;incstack = 0
 36876                           ;i2__delay_us@us stored from wreg
 36877  007730  6E01               	movwf	i2__delay_us@us,c
 36878                           
 36879                           ;peripherals.c: 126: while(us-- > 0){
 36880  007732  D008               	goto	i2l8388
 36881  007734                     i2l336:
 36882                           
 36883                           ;peripherals.c: 127: __nop();
 36884  007734  F000               	nop	
 36885                           
 36886                           ;peripherals.c: 128: __nop();
 36887  007736  F000               	nop	
 36888                           
 36889                           ;peripherals.c: 129: __nop();
 36890  007738  F000               	nop	
 36891                           
 36892                           ;peripherals.c: 130: __nop();
 36893  00773A  F000               	nop	
 36894                           
 36895                           ;peripherals.c: 131: __nop();
 36896  00773C  F000               	nop	
 36897                           
 36898                           ;peripherals.c: 132: __nop();
 36899  00773E  F000               	nop	
 36900                           
 36901                           ;peripherals.c: 133: __nop();
 36902  007740  F000               	nop	
 36903                           
 36904                           ;peripherals.c: 134: __nop();
 36905  007742  F000               	nop	
 36906  007744                     i2l8388:
 36907  007744  0601               	decf	i2__delay_us@us,f,c
 36908  007746  2801               	incf	i2__delay_us@us,w,c
 36909  007748  B4D8               	btfsc	status,2,c
 36910  00774A  0012               	return	
 36911  00774C  D7F3               	goto	i2l336
 36912  00774E                     __end_ofi2__delay_us:
 36913                           	opt stack 0
 36914                           pclatu	equ	0xFFB
 36915                           pclath	equ	0xFFA
 36916                           tblptru	equ	0xFF8
 36917                           tblptrh	equ	0xFF7
 36918                           tblptrl	equ	0xFF6
 36919                           tablat	equ	0xFF5
 36920                           prodh	equ	0xFF4
 36921                           prodl	equ	0xFF3
 36922                           intcon	equ	0xFF2
 36923                           postinc0	equ	0xFEE
 36924                           fsr0h	equ	0xFEA
 36925                           fsr0l	equ	0xFE9
 36926                           wreg	equ	0xFE8
 36927                           indf1	equ	0xFE7
 36928                           postinc1	equ	0xFE6
 36929                           postdec1	equ	0xFE5
 36930                           plusw1	equ	0xFE3
 36931                           fsr1h	equ	0xFE2
 36932                           fsr1l	equ	0xFE1
 36933                           indf2	equ	0xFDF
 36934                           postinc2	equ	0xFDE
 36935                           postdec2	equ	0xFDD
 36936                           plusw2	equ	0xFDB
 36937                           fsr2h	equ	0xFDA
 36938                           fsr2l	equ	0xFD9
 36939                           status	equ	0xFD8
 36940                           
 36941 ;; *************** function i2_ReadConfigST7540 *****************
 36942 ;; Defined at:
 36943 ;;		line 140 in file "ST7540.c"
 36944 ;; Parameters:    Size  Location     Type
 36945 ;;  frameDataUS     2    0[COMRAM] PTR unsigned um
 36946 ;;		 -> InitST7540@frameDataRXUS(3), 
 36947 ;;  configDataUS    2    2[COMRAM] PTR unsigned um
 36948 ;;		 -> InitST7540@configDataRXUS(3), 
 36949 ;; Auto vars:     Size  Location     Type
 36950 ;;  ReadConfigST    1    8[COMRAM] unsigned char 
 36951 ;;  ReadConfigST    1    7[COMRAM] unsigned char 
 36952 ;; Return value:  Size  Location     Type
 36953 ;;                  1    wreg      void 
 36954 ;; Registers used:
 36955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36956 ;; Tracked objects:
 36957 ;;		On entry : 0/0
 36958 ;;		On exit  : 0/0
 36959 ;;		Unchanged: 0/0
 36960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36961 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36962 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36963 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36964 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36965 ;;Total ram usage:        9 bytes
 36966 ;; Hardware stack levels used:    1
 36967 ;; This function calls:
 36968 ;;		Nothing
 36969 ;; This function is called by:
 36970 ;;		i2_InitST7540
 36971 ;; This function uses a non-reentrant model
 36972 ;;
 36973                           
 36974                           	psect	text210
 36975  0041D6                     __ptext210:
 36976                           	opt stack 0
 36977  0041D6                     i2_ReadConfigST7540:
 36978                           	opt stack 16
 36979                           
 36980                           ;ST7540.c: 141: unsigned char bitsReceivedUC;
 36981                           ;ST7540.c: 142: unsigned char discardUC;
 36982                           ;ST7540.c: 144: LATCbits.LATC1 = 1;
 36983                           
 36984                           ;incstack = 0
 36985  0041D6  827B               	bsf	3963,1,c	;volatile
 36986                           
 36987                           ;ST7540.c: 145: LATCbits.LATC6 = 1;
 36988  0041D8  8C7B               	bsf	3963,6,c	;volatile
 36989  0041DA                     i2l716:
 36990  0041DA  B68B               	btfsc	3979,3,c	;volatile
 36991  0041DC  D7FE               	goto	i2l716
 36992                           
 36993                           ;ST7540.c: 147: SSP1CON1bits.SSPEN = 1;
 36994  0041DE  8A95               	bsf	3989,5,c	;volatile
 36995                           
 36996                           ;ST7540.c: 149: discardUC = SSP1BUF;
 36997  0041E0  CF91 F008          	movff	3985,i2ReadConfigST7540@discardUC	;volatile
 36998                           
 36999                           ;ST7540.c: 150: SSP1BUF = 0;
 37000  0041E4  0E00               	movlw	0
 37001  0041E6  6E91               	movwf	3985,c	;volatile
 37002                           
 37003                           ;ST7540.c: 151: for(bitsReceivedUC = 0; bitsReceivedUC < 6; bitsReceivedUC++){
 37004  0041E8  0E00               	movlw	0
 37005  0041EA  6E09               	movwf	i2ReadConfigST7540@bitsReceivedUC,c
 37006  0041EC                     i2l9130:
 37007  0041EC  0E05               	movlw	5
 37008  0041EE  6409               	cpfsgt	i2ReadConfigST7540@bitsReceivedUC,c
 37009  0041F0  D001               	goto	i2l721
 37010  0041F2  D010               	goto	i2l720
 37011  0041F4                     i2l721:
 37012  0041F4  A094               	btfss	3988,0,c	;volatile
 37013  0041F6  D7FE               	goto	i2l721
 37014                           
 37015                           ;ST7540.c: 153: bufferRXST7540UCA[bitsReceivedUC] = SSP1BUF;
 37016  0041F8  5009               	movf	i2ReadConfigST7540@bitsReceivedUC,w,c
 37017  0041FA  0D01               	mullw	1
 37018  0041FC  0E4F               	movlw	low _bufferRXST7540UCA
 37019  0041FE  24F3               	addwf	prodl,w,c
 37020  004200  6ED9               	movwf	fsr2l,c
 37021  004202  0E02               	movlw	high _bufferRXST7540UCA
 37022  004204  20F4               	addwfc	prodh,w,c
 37023  004206  6EDA               	movwf	fsr2h,c
 37024  004208  CF91 FFDF          	movff	3985,indf2	;volatile
 37025                           
 37026                           ;ST7540.c: 154: SSP1BUF = 0;
 37027  00420C  0E00               	movlw	0
 37028  00420E  6E91               	movwf	3985,c	;volatile
 37029  004210  2A09               	incf	i2ReadConfigST7540@bitsReceivedUC,f,c
 37030  004212  D7EC               	goto	i2l9130
 37031  004214                     i2l720:
 37032                           
 37033                           ;ST7540.c: 155: }
 37034                           ;ST7540.c: 157: LATCbits.LATC1 = 0;
 37035  004214  927B               	bcf	3963,1,c	;volatile
 37036                           
 37037                           ;ST7540.c: 158: SSP1CON1bits.SSPEN = 0;
 37038  004216  9A95               	bcf	3989,5,c	;volatile
 37039                           
 37040                           ;ST7540.c: 160: *frameDataUS |= ((unsigned long short) bufferRXST7540UCA[0] << 16);
 37041  004218  0102               	movlb	2	; () banked
 37042  00421A  514F               	movf	_bufferRXST7540UCA& (0+255),w,b
 37043  00421C  6E07               	movwf	(??i2_ReadConfigST7540+2)& (0+255),c
 37044  00421E  6A06               	clrf	(??i2_ReadConfigST7540+1)& (0+255),c
 37045  004220  6A05               	clrf	??i2_ReadConfigST7540& (0+255),c
 37046  004222  C001  FFD9         	movff	i2ReadConfigST7540@frameDataUS,fsr2l
 37047  004226  C002  FFDA         	movff	i2ReadConfigST7540@frameDataUS+1,fsr2h
 37048  00422A  5005               	movf	??i2_ReadConfigST7540,w,c
 37049  00422C  12DE               	iorwf	postinc2,f,c
 37050  00422E  5006               	movf	??i2_ReadConfigST7540+1,w,c
 37051  004230  12DE               	iorwf	postinc2,f,c
 37052  004232  5007               	movf	??i2_ReadConfigST7540+2,w,c
 37053  004234  12DE               	iorwf	postinc2,f,c
 37054                           
 37055                           ; BSR set to: 2
 37056                           ;ST7540.c: 161: *frameDataUS |= ((unsigned long short) bufferRXST7540UCA[1] << 8);
 37057  004236  0102               	movlb	2	; () banked
 37058  004238  5150               	movf	(_bufferRXST7540UCA+1)& (0+255),w,b
 37059  00423A  6E05               	movwf	??i2_ReadConfigST7540& (0+255),c
 37060  00423C  6A06               	clrf	(??i2_ReadConfigST7540+1)& (0+255),c
 37061  00423E  6A07               	clrf	(??i2_ReadConfigST7540+2)& (0+255),c
 37062  004240  C006  F007         	movff	??i2_ReadConfigST7540+1,??i2_ReadConfigST7540+2
 37063  004244  C005  F006         	movff	??i2_ReadConfigST7540,??i2_ReadConfigST7540+1
 37064  004248  6A05               	clrf	??i2_ReadConfigST7540,c
 37065  00424A  C001  FFD9         	movff	i2ReadConfigST7540@frameDataUS,fsr2l
 37066  00424E  C002  FFDA         	movff	i2ReadConfigST7540@frameDataUS+1,fsr2h
 37067  004252  5005               	movf	??i2_ReadConfigST7540,w,c
 37068  004254  12DE               	iorwf	postinc2,f,c
 37069  004256  5006               	movf	??i2_ReadConfigST7540+1,w,c
 37070  004258  12DE               	iorwf	postinc2,f,c
 37071  00425A  5007               	movf	??i2_ReadConfigST7540+2,w,c
 37072  00425C  12DE               	iorwf	postinc2,f,c
 37073                           
 37074                           ; BSR set to: 2
 37075                           ;ST7540.c: 162: *frameDataUS |= bufferRXST7540UCA[2];
 37076  00425E  0102               	movlb	2	; () banked
 37077  004260  5151               	movf	(_bufferRXST7540UCA+2)& (0+255),w,b
 37078  004262  6E05               	movwf	??i2_ReadConfigST7540& (0+255),c
 37079  004264  6A06               	clrf	(??i2_ReadConfigST7540+1)& (0+255),c
 37080  004266  6A07               	clrf	(??i2_ReadConfigST7540+2)& (0+255),c
 37081  004268  C001  FFD9         	movff	i2ReadConfigST7540@frameDataUS,fsr2l
 37082  00426C  C002  FFDA         	movff	i2ReadConfigST7540@frameDataUS+1,fsr2h
 37083  004270  5005               	movf	??i2_ReadConfigST7540,w,c
 37084  004272  12DE               	iorwf	postinc2,f,c
 37085  004274  5006               	movf	??i2_ReadConfigST7540+1,w,c
 37086  004276  12DE               	iorwf	postinc2,f,c
 37087  004278  5007               	movf	??i2_ReadConfigST7540+2,w,c
 37088  00427A  12DE               	iorwf	postinc2,f,c
 37089                           
 37090                           ;ST7540.c: 163: *configDataUS |= ((unsigned long short) bufferRXST7540UCA[3] << 16);
 37091  00427C  0102               	movlb	2	; () banked
 37092  00427E  5152               	movf	(_bufferRXST7540UCA+3)& (0+255),w,b
 37093  004280  6E07               	movwf	(??i2_ReadConfigST7540+2)& (0+255),c
 37094  004282  6A06               	clrf	(??i2_ReadConfigST7540+1)& (0+255),c
 37095  004284  6A05               	clrf	??i2_ReadConfigST7540& (0+255),c
 37096  004286  C003  FFD9         	movff	i2ReadConfigST7540@configDataUS,fsr2l
 37097  00428A  C004  FFDA         	movff	i2ReadConfigST7540@configDataUS+1,fsr2h
 37098  00428E  5005               	movf	??i2_ReadConfigST7540,w,c
 37099  004290  12DE               	iorwf	postinc2,f,c
 37100  004292  5006               	movf	??i2_ReadConfigST7540+1,w,c
 37101  004294  12DE               	iorwf	postinc2,f,c
 37102  004296  5007               	movf	??i2_ReadConfigST7540+2,w,c
 37103  004298  12DE               	iorwf	postinc2,f,c
 37104                           
 37105                           ; BSR set to: 2
 37106                           ;ST7540.c: 164: *configDataUS |= ((unsigned long short) bufferRXST7540UCA[4] << 8);
 37107  00429A  0102               	movlb	2	; () banked
 37108  00429C  5153               	movf	(_bufferRXST7540UCA+4)& (0+255),w,b
 37109  00429E  6E05               	movwf	??i2_ReadConfigST7540& (0+255),c
 37110  0042A0  6A06               	clrf	(??i2_ReadConfigST7540+1)& (0+255),c
 37111  0042A2  6A07               	clrf	(??i2_ReadConfigST7540+2)& (0+255),c
 37112  0042A4  C006  F007         	movff	??i2_ReadConfigST7540+1,??i2_ReadConfigST7540+2
 37113  0042A8  C005  F006         	movff	??i2_ReadConfigST7540,??i2_ReadConfigST7540+1
 37114  0042AC  6A05               	clrf	??i2_ReadConfigST7540,c
 37115  0042AE  C003  FFD9         	movff	i2ReadConfigST7540@configDataUS,fsr2l
 37116  0042B2  C004  FFDA         	movff	i2ReadConfigST7540@configDataUS+1,fsr2h
 37117  0042B6  5005               	movf	??i2_ReadConfigST7540,w,c
 37118  0042B8  12DE               	iorwf	postinc2,f,c
 37119  0042BA  5006               	movf	??i2_ReadConfigST7540+1,w,c
 37120  0042BC  12DE               	iorwf	postinc2,f,c
 37121  0042BE  5007               	movf	??i2_ReadConfigST7540+2,w,c
 37122  0042C0  12DE               	iorwf	postinc2,f,c
 37123                           
 37124                           ; BSR set to: 2
 37125                           ;ST7540.c: 165: *configDataUS |= bufferRXST7540UCA[5];
 37126  0042C2  0102               	movlb	2	; () banked
 37127  0042C4  5154               	movf	(_bufferRXST7540UCA+5)& (0+255),w,b
 37128  0042C6  6E05               	movwf	??i2_ReadConfigST7540& (0+255),c
 37129  0042C8  6A06               	clrf	(??i2_ReadConfigST7540+1)& (0+255),c
 37130  0042CA  6A07               	clrf	(??i2_ReadConfigST7540+2)& (0+255),c
 37131  0042CC  C003  FFD9         	movff	i2ReadConfigST7540@configDataUS,fsr2l
 37132  0042D0  C004  FFDA         	movff	i2ReadConfigST7540@configDataUS+1,fsr2h
 37133  0042D4  5005               	movf	??i2_ReadConfigST7540,w,c
 37134  0042D6  12DE               	iorwf	postinc2,f,c
 37135  0042D8  5006               	movf	??i2_ReadConfigST7540+1,w,c
 37136  0042DA  12DE               	iorwf	postinc2,f,c
 37137  0042DC  5007               	movf	??i2_ReadConfigST7540+2,w,c
 37138  0042DE  12DE               	iorwf	postinc2,f,c
 37139                           
 37140                           ; BSR set to: 2
 37141  0042E0  0012               	return		;funcret
 37142  0042E2                     __end_ofi2_ReadConfigST7540:
 37143                           	opt stack 0
 37144                           pclatu	equ	0xFFB
 37145                           pclath	equ	0xFFA
 37146                           tblptru	equ	0xFF8
 37147                           tblptrh	equ	0xFF7
 37148                           tblptrl	equ	0xFF6
 37149                           tablat	equ	0xFF5
 37150                           prodh	equ	0xFF4
 37151                           prodl	equ	0xFF3
 37152                           intcon	equ	0xFF2
 37153                           postinc0	equ	0xFEE
 37154                           fsr0h	equ	0xFEA
 37155                           fsr0l	equ	0xFE9
 37156                           wreg	equ	0xFE8
 37157                           indf1	equ	0xFE7
 37158                           postinc1	equ	0xFE6
 37159                           postdec1	equ	0xFE5
 37160                           plusw1	equ	0xFE3
 37161                           fsr1h	equ	0xFE2
 37162                           fsr1l	equ	0xFE1
 37163                           indf2	equ	0xFDF
 37164                           postinc2	equ	0xFDE
 37165                           postdec2	equ	0xFDD
 37166                           plusw2	equ	0xFDB
 37167                           fsr2h	equ	0xFDA
 37168                           fsr2l	equ	0xFD9
 37169                           status	equ	0xFD8
 37170                           
 37171 ;; *************** function i2_InitST7540Pins *****************
 37172 ;; Defined at:
 37173 ;;		line 326 in file "ST7540.c"
 37174 ;; Parameters:    Size  Location     Type
 37175 ;;		None
 37176 ;; Auto vars:     Size  Location     Type
 37177 ;;		None
 37178 ;; Return value:  Size  Location     Type
 37179 ;;                  1    wreg      void 
 37180 ;; Registers used:
 37181 ;;		wreg, status,2, cstack
 37182 ;; Tracked objects:
 37183 ;;		On entry : 0/0
 37184 ;;		On exit  : 0/0
 37185 ;;		Unchanged: 0/0
 37186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37191 ;;Total ram usage:        0 bytes
 37192 ;; Hardware stack levels used:    1
 37193 ;; Hardware stack levels required when called:    2
 37194 ;; This function calls:
 37195 ;;		i2_initST7540PPS
 37196 ;; This function is called by:
 37197 ;;		i2_InitST7540
 37198 ;; This function uses a non-reentrant model
 37199 ;;
 37200                           
 37201                           	psect	text211
 37202  0075D4                     __ptext211:
 37203                           	opt stack 0
 37204  0075D4                     i2_InitST7540Pins:
 37205                           	opt stack 14
 37206                           
 37207                           ;ST7540.c: 328: initST7540PPS();
 37208                           
 37209                           ; BSR set to: 2
 37210                           ;incstack = 0
 37211  0075D4  EC17  F03C         	call	i2_initST7540PPS	;wreg free
 37212                           
 37213                           ;ST7540.c: 330: TRISAbits.TRISA4 = 1;
 37214  0075D8  8881               	bsf	3969,4,c	;volatile
 37215                           
 37216                           ;ST7540.c: 331: ANSELAbits.ANSELA4 = 0;
 37217  0075DA  010E               	movlb	14	; () banked
 37218  0075DC  9992               	bcf	146,4,b	;volatile
 37219                           
 37220                           ; BSR set to: 14
 37221                           ;ST7540.c: 333: TRISCbits.TRISC1 = 0;
 37222  0075DE  9283               	bcf	3971,1,c	;volatile
 37223                           
 37224                           ; BSR set to: 14
 37225                           ;ST7540.c: 334: LATCbits.LATC1 = 0;
 37226  0075E0  927B               	bcf	3963,1,c	;volatile
 37227                           
 37228                           ; BSR set to: 14
 37229                           ;ST7540.c: 336: TRISCbits.TRISC0 = 1;
 37230  0075E2  8083               	bsf	3971,0,c	;volatile
 37231                           
 37232                           ; BSR set to: 14
 37233                           ;ST7540.c: 338: TRISCbits.TRISC7 = 0;
 37234  0075E4  9E83               	bcf	3971,7,c	;volatile
 37235                           
 37236                           ; BSR set to: 14
 37237                           ;ST7540.c: 339: LATCbits.LATC7 = 0;
 37238  0075E6  9E7B               	bcf	3963,7,c	;volatile
 37239                           
 37240                           ; BSR set to: 14
 37241                           ;ST7540.c: 341: TRISCbits.TRISC6 = 0;
 37242  0075E8  9C83               	bcf	3971,6,c	;volatile
 37243                           
 37244                           ; BSR set to: 14
 37245                           ;ST7540.c: 342: LATCbits.LATC6 = 1;
 37246  0075EA  8C7B               	bsf	3963,6,c	;volatile
 37247                           
 37248                           ; BSR set to: 14
 37249                           ;ST7540.c: 344: TRISCbits.TRISC2 = 1;
 37250  0075EC  8483               	bsf	3971,2,c	;volatile
 37251                           
 37252                           ; BSR set to: 14
 37253                           ;ST7540.c: 346: TRISCbits.TRISC3 = 1;
 37254  0075EE  8683               	bsf	3971,3,c	;volatile
 37255                           
 37256                           ; BSR set to: 14
 37257                           ;ST7540.c: 348: TRISAbits.TRISA5 = 1;
 37258  0075F0  8A81               	bsf	3969,5,c	;volatile
 37259                           
 37260                           ; BSR set to: 14
 37261                           ;ST7540.c: 349: ANSELAbits.ANSELA5 = 0;
 37262  0075F2  010E               	movlb	14	; () banked
 37263  0075F4  9B92               	bcf	146,5,b	;volatile
 37264                           
 37265                           ; BSR set to: 14
 37266                           ;ST7540.c: 351: TRISCbits.TRISC5 = 0;
 37267  0075F6  9A83               	bcf	3971,5,c	;volatile
 37268                           
 37269                           ; BSR set to: 14
 37270                           ;ST7540.c: 352: LATCbits.LATC5 = 0;
 37271  0075F8  9A7B               	bcf	3963,5,c	;volatile
 37272                           
 37273                           ; BSR set to: 14
 37274  0075FA  0012               	return		;funcret
 37275  0075FC                     __end_ofi2_InitST7540Pins:
 37276                           	opt stack 0
 37277                           pclatu	equ	0xFFB
 37278                           pclath	equ	0xFFA
 37279                           tblptru	equ	0xFF8
 37280                           tblptrh	equ	0xFF7
 37281                           tblptrl	equ	0xFF6
 37282                           tablat	equ	0xFF5
 37283                           prodh	equ	0xFF4
 37284                           prodl	equ	0xFF3
 37285                           intcon	equ	0xFF2
 37286                           postinc0	equ	0xFEE
 37287                           fsr0h	equ	0xFEA
 37288                           fsr0l	equ	0xFE9
 37289                           wreg	equ	0xFE8
 37290                           indf1	equ	0xFE7
 37291                           postinc1	equ	0xFE6
 37292                           postdec1	equ	0xFE5
 37293                           plusw1	equ	0xFE3
 37294                           fsr1h	equ	0xFE2
 37295                           fsr1l	equ	0xFE1
 37296                           indf2	equ	0xFDF
 37297                           postinc2	equ	0xFDE
 37298                           postdec2	equ	0xFDD
 37299                           plusw2	equ	0xFDB
 37300                           fsr2h	equ	0xFDA
 37301                           fsr2l	equ	0xFD9
 37302                           status	equ	0xFD8
 37303                           
 37304 ;; *************** function i2_initST7540PPS *****************
 37305 ;; Defined at:
 37306 ;;		line 356 in file "ST7540.c"
 37307 ;; Parameters:    Size  Location     Type
 37308 ;;		None
 37309 ;; Auto vars:     Size  Location     Type
 37310 ;;		None
 37311 ;; Return value:  Size  Location     Type
 37312 ;;                  1    wreg      void 
 37313 ;; Registers used:
 37314 ;;		wreg, status,2, cstack
 37315 ;; Tracked objects:
 37316 ;;		On entry : 0/0
 37317 ;;		On exit  : 0/0
 37318 ;;		Unchanged: 0/0
 37319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37324 ;;Total ram usage:        0 bytes
 37325 ;; Hardware stack levels used:    1
 37326 ;; Hardware stack levels required when called:    1
 37327 ;; This function calls:
 37328 ;;		i2_ppsLock
 37329 ;;		i2_ppsUnlock
 37330 ;; This function is called by:
 37331 ;;		i2_InitST7540Pins
 37332 ;; This function uses a non-reentrant model
 37333 ;;
 37334                           
 37335                           	psect	text212
 37336  00782E                     __ptext212:
 37337                           	opt stack 0
 37338  00782E                     i2_initST7540PPS:
 37339                           	opt stack 14
 37340                           
 37341                           ;ST7540.c: 357: ppsUnlock();
 37342                           
 37343                           ; BSR set to: 14
 37344                           ;incstack = 0
 37345  00782E  EC25  F03C         	call	i2_ppsUnlock	;wreg free
 37346                           
 37347                           ;ST7540.c: 358: INT0PPS = 0b00000101;
 37348  007832  0E05               	movlw	5
 37349  007834  010D               	movlb	13	; () banked
 37350  007836  6FF0               	movwf	240,b	;volatile
 37351                           
 37352                           ; BSR set to: 13
 37353                           ;ST7540.c: 359: SSP1DATPPS = 0b00010000;
 37354  007838  0E10               	movlw	16
 37355  00783A  010E               	movlb	14	; () banked
 37356  00783C  6F1A               	movwf	26,b	;volatile
 37357                           
 37358                           ; BSR set to: 14
 37359                           ;ST7540.c: 360: RC7PPS = 0x1A;
 37360  00783E  0E1A               	movlw	26
 37361  007840  010E               	movlb	14	; () banked
 37362  007842  6F69               	movwf	105,b	;volatile
 37363                           
 37364                           ; BSR set to: 14
 37365                           ;ST7540.c: 361: ppsLock();
 37366  007844  EC33  F03C         	call	i2_ppsLock	;wreg free
 37367  007848  0012               	return		;funcret
 37368  00784A                     __end_ofi2_initST7540PPS:
 37369                           	opt stack 0
 37370                           pclatu	equ	0xFFB
 37371                           pclath	equ	0xFFA
 37372                           tblptru	equ	0xFF8
 37373                           tblptrh	equ	0xFF7
 37374                           tblptrl	equ	0xFF6
 37375                           tablat	equ	0xFF5
 37376                           prodh	equ	0xFF4
 37377                           prodl	equ	0xFF3
 37378                           intcon	equ	0xFF2
 37379                           postinc0	equ	0xFEE
 37380                           fsr0h	equ	0xFEA
 37381                           fsr0l	equ	0xFE9
 37382                           wreg	equ	0xFE8
 37383                           indf1	equ	0xFE7
 37384                           postinc1	equ	0xFE6
 37385                           postdec1	equ	0xFE5
 37386                           plusw1	equ	0xFE3
 37387                           fsr1h	equ	0xFE2
 37388                           fsr1l	equ	0xFE1
 37389                           indf2	equ	0xFDF
 37390                           postinc2	equ	0xFDE
 37391                           postdec2	equ	0xFDD
 37392                           plusw2	equ	0xFDB
 37393                           fsr2h	equ	0xFDA
 37394                           fsr2l	equ	0xFD9
 37395                           status	equ	0xFD8
 37396                           
 37397 ;; *************** function i2_ppsUnlock *****************
 37398 ;; Defined at:
 37399 ;;		line 160 in file "peripherals.c"
 37400 ;; Parameters:    Size  Location     Type
 37401 ;;		None
 37402 ;; Auto vars:     Size  Location     Type
 37403 ;;		None
 37404 ;; Return value:  Size  Location     Type
 37405 ;;                  1    wreg      void 
 37406 ;; Registers used:
 37407 ;;		wreg, status,2
 37408 ;; Tracked objects:
 37409 ;;		On entry : 0/0
 37410 ;;		On exit  : 0/0
 37411 ;;		Unchanged: 0/0
 37412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37417 ;;Total ram usage:        0 bytes
 37418 ;; Hardware stack levels used:    1
 37419 ;; This function calls:
 37420 ;;		Nothing
 37421 ;; This function is called by:
 37422 ;;		i2_initST7540PPS
 37423 ;; This function uses a non-reentrant model
 37424 ;;
 37425                           
 37426                           	psect	text213
 37427  00784A                     __ptext213:
 37428                           	opt stack 0
 37429  00784A                     i2_ppsUnlock:
 37430                           	opt stack 14
 37431                           
 37432                           ;peripherals.c: 161: INTCONbits.GIE = 0;
 37433                           
 37434                           ;incstack = 0
 37435  00784A  9EF2               	bcf	intcon,7,c	;volatile
 37436                           
 37437                           ;peripherals.c: 162: PPSLOCK = 0x55;
 37438  00784C  0E55               	movlw	85
 37439  00784E  010D               	movlb	13	; () banked
 37440  007850  6FEF               	movwf	239,b	;volatile
 37441                           
 37442                           ; BSR set to: 13
 37443                           ;peripherals.c: 163: __nop();
 37444  007852  F000               	nop	
 37445                           
 37446                           ;peripherals.c: 164: __nop();
 37447  007854  F000               	nop	
 37448                           
 37449                           ;peripherals.c: 165: PPSLOCK = 0xAA;
 37450  007856  0EAA               	movlw	170
 37451  007858  010D               	movlb	13	; () banked
 37452  00785A  6FEF               	movwf	239,b	;volatile
 37453                           
 37454                           ; BSR set to: 13
 37455                           ;peripherals.c: 166: __nop();
 37456  00785C  F000               	nop	
 37457                           
 37458                           ;peripherals.c: 167: __nop();
 37459  00785E  F000               	nop	
 37460                           
 37461                           ;peripherals.c: 168: PPSLOCKbits.PPSLOCKED = 0;
 37462  007860  010D               	movlb	13	; () banked
 37463  007862  91EF               	bcf	239,0,b	;volatile
 37464                           
 37465                           ; BSR set to: 13
 37466  007864  0012               	return		;funcret
 37467  007866                     __end_ofi2_ppsUnlock:
 37468                           	opt stack 0
 37469                           pclatu	equ	0xFFB
 37470                           pclath	equ	0xFFA
 37471                           tblptru	equ	0xFF8
 37472                           tblptrh	equ	0xFF7
 37473                           tblptrl	equ	0xFF6
 37474                           tablat	equ	0xFF5
 37475                           prodh	equ	0xFF4
 37476                           prodl	equ	0xFF3
 37477                           intcon	equ	0xFF2
 37478                           postinc0	equ	0xFEE
 37479                           fsr0h	equ	0xFEA
 37480                           fsr0l	equ	0xFE9
 37481                           wreg	equ	0xFE8
 37482                           indf1	equ	0xFE7
 37483                           postinc1	equ	0xFE6
 37484                           postdec1	equ	0xFE5
 37485                           plusw1	equ	0xFE3
 37486                           fsr1h	equ	0xFE2
 37487                           fsr1l	equ	0xFE1
 37488                           indf2	equ	0xFDF
 37489                           postinc2	equ	0xFDE
 37490                           postdec2	equ	0xFDD
 37491                           plusw2	equ	0xFDB
 37492                           fsr2h	equ	0xFDA
 37493                           fsr2l	equ	0xFD9
 37494                           status	equ	0xFD8
 37495                           
 37496 ;; *************** function i2_ppsLock *****************
 37497 ;; Defined at:
 37498 ;;		line 148 in file "peripherals.c"
 37499 ;; Parameters:    Size  Location     Type
 37500 ;;		None
 37501 ;; Auto vars:     Size  Location     Type
 37502 ;;		None
 37503 ;; Return value:  Size  Location     Type
 37504 ;;                  1    wreg      void 
 37505 ;; Registers used:
 37506 ;;		wreg, status,2
 37507 ;; Tracked objects:
 37508 ;;		On entry : 0/0
 37509 ;;		On exit  : 0/0
 37510 ;;		Unchanged: 0/0
 37511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37516 ;;Total ram usage:        0 bytes
 37517 ;; Hardware stack levels used:    1
 37518 ;; This function calls:
 37519 ;;		Nothing
 37520 ;; This function is called by:
 37521 ;;		i2_initST7540PPS
 37522 ;; This function uses a non-reentrant model
 37523 ;;
 37524                           
 37525                           	psect	text214
 37526  007866                     __ptext214:
 37527                           	opt stack 0
 37528  007866                     i2_ppsLock:
 37529                           	opt stack 14
 37530                           
 37531                           ;peripherals.c: 149: INTCONbits.GIE = 0;
 37532                           
 37533                           ; BSR set to: 13
 37534                           ;incstack = 0
 37535  007866  9EF2               	bcf	intcon,7,c	;volatile
 37536                           
 37537                           ;peripherals.c: 150: PPSLOCK = 0x55;
 37538  007868  0E55               	movlw	85
 37539  00786A  010D               	movlb	13	; () banked
 37540  00786C  6FEF               	movwf	239,b	;volatile
 37541                           
 37542                           ; BSR set to: 13
 37543                           ;peripherals.c: 151: __nop();
 37544  00786E  F000               	nop	
 37545                           
 37546                           ;peripherals.c: 152: __nop();
 37547  007870  F000               	nop	
 37548                           
 37549                           ;peripherals.c: 153: PPSLOCK = 0xAA;
 37550  007872  0EAA               	movlw	170
 37551  007874  010D               	movlb	13	; () banked
 37552  007876  6FEF               	movwf	239,b	;volatile
 37553                           
 37554                           ; BSR set to: 13
 37555                           ;peripherals.c: 154: __nop();
 37556  007878  F000               	nop	
 37557                           
 37558                           ;peripherals.c: 155: __nop();
 37559  00787A  F000               	nop	
 37560                           
 37561                           ;peripherals.c: 156: PPSLOCKbits.PPSLOCKED = 1;
 37562  00787C  010D               	movlb	13	; () banked
 37563  00787E  81EF               	bsf	239,0,b	;volatile
 37564                           
 37565                           ; BSR set to: 13
 37566  007880  0012               	return		;funcret
 37567  007882                     __end_ofi2_ppsLock:
 37568                           	opt stack 0
 37569                           pclatu	equ	0xFFB
 37570                           pclath	equ	0xFFA
 37571                           tblptru	equ	0xFF8
 37572                           tblptrh	equ	0xFF7
 37573                           tblptrl	equ	0xFF6
 37574                           tablat	equ	0xFF5
 37575                           prodh	equ	0xFF4
 37576                           prodl	equ	0xFF3
 37577                           intcon	equ	0xFF2
 37578                           postinc0	equ	0xFEE
 37579                           fsr0h	equ	0xFEA
 37580                           fsr0l	equ	0xFE9
 37581                           wreg	equ	0xFE8
 37582                           indf1	equ	0xFE7
 37583                           postinc1	equ	0xFE6
 37584                           postdec1	equ	0xFE5
 37585                           plusw1	equ	0xFE3
 37586                           fsr1h	equ	0xFE2
 37587                           fsr1l	equ	0xFE1
 37588                           indf2	equ	0xFDF
 37589                           postinc2	equ	0xFDE
 37590                           postdec2	equ	0xFDD
 37591                           plusw2	equ	0xFDB
 37592                           fsr2h	equ	0xFDA
 37593                           fsr2l	equ	0xFD9
 37594                           status	equ	0xFD8
 37595                           
 37596 ;; *************** function _checkPulse *****************
 37597 ;; Defined at:
 37598 ;;		line 41 in file "acOr36V.c"
 37599 ;; Parameters:    Size  Location     Type
 37600 ;;		None
 37601 ;; Auto vars:     Size  Location     Type
 37602 ;;		None
 37603 ;; Return value:  Size  Location     Type
 37604 ;;                  1    wreg      void 
 37605 ;; Registers used:
 37606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37607 ;; Tracked objects:
 37608 ;;		On entry : 0/0
 37609 ;;		On exit  : 0/0
 37610 ;;		Unchanged: 0/0
 37611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37616 ;;Total ram usage:        0 bytes
 37617 ;; Hardware stack levels used:    1
 37618 ;; Hardware stack levels required when called:    1
 37619 ;; This function calls:
 37620 ;;		_reset13msTimer
 37621 ;;		i2_reset4SecTimer
 37622 ;; This function is called by:
 37623 ;;		_acOr36VISR
 37624 ;; This function uses a non-reentrant model
 37625 ;;
 37626                           
 37627                           	psect	text215
 37628  006E4C                     __ptext215:
 37629                           	opt stack 0
 37630  006E4C                     _checkPulse:
 37631                           	opt stack 18
 37632                           
 37633                           ;acOr36V.c: 42: if(PIR5bits.TMR1IF){
 37634                           
 37635                           ; BSR set to: 13
 37636                           ;incstack = 0
 37637  006E4C  010E               	movlb	14	; () banked
 37638  006E4E  A138               	btfss	56,0,b	;volatile
 37639  006E50  D013               	goto	i2l11948
 37640                           
 37641                           ; BSR set to: 14
 37642                           ;acOr36V.c: 43: if(COUNTERS.acPulses >= 20){
 37643  006E52  0E13               	movlw	19
 37644  006E54  0100               	movlb	0	; () banked
 37645  006E56  65B3               	cpfsgt	(_COUNTERS+16)& (0+255),b
 37646  006E58  D003               	goto	i2l11944
 37647                           
 37648                           ; BSR set to: 0
 37649                           ;acOr36V.c: 44: COUNTERS.missingPulses++;
 37650  006E5A  0100               	movlb	0	; () banked
 37651  006E5C  2BB2               	incf	(_COUNTERS+15)& (0+255),f,b
 37652                           
 37653                           ;acOr36V.c: 45: }
 37654  006E5E  D008               	goto	i2l2836
 37655  006E60                     i2l11944:
 37656                           
 37657                           ; BSR set to: 0
 37658                           ;acOr36V.c: 46: else if(ABB_1.deviceState != 9)
 37659  006E60  C754  FFE8         	movff	_ABB_1+916,wreg
 37660  006E64  0A09               	xorlw	9
 37661  006E66  B4D8               	btfsc	status,2,c
 37662  006E68  D003               	goto	i2l2836
 37663                           
 37664                           ; BSR set to: 0
 37665                           ;acOr36V.c: 47: COUNTERS.missingPulses = 0;
 37666  006E6A  0E00               	movlw	0
 37667  006E6C  0100               	movlb	0	; () banked
 37668  006E6E  6FB2               	movwf	(_COUNTERS+15)& (0+255),b
 37669  006E70                     i2l2836:
 37670                           
 37671                           ; BSR set to: 0
 37672                           ;acOr36V.c: 48: COUNTERS.acPulses = 0;
 37673  006E70  0E00               	movlw	0
 37674  006E72  0100               	movlb	0	; () banked
 37675  006E74  6FB3               	movwf	(_COUNTERS+16)& (0+255),b
 37676                           
 37677                           ;acOr36V.c: 49: }
 37678  006E76  D002               	goto	i2l11950
 37679  006E78                     i2l11948:
 37680                           
 37681                           ;acOr36V.c: 50: else{
 37682                           ;acOr36V.c: 51: COUNTERS.acPulses++;
 37683  006E78  0100               	movlb	0	; () banked
 37684  006E7A  2BB3               	incf	(_COUNTERS+16)& (0+255),f,b
 37685  006E7C                     i2l11950:
 37686                           
 37687                           ; BSR set to: 0
 37688                           ;acOr36V.c: 52: }
 37689                           ;acOr36V.c: 53: if(ABB_1.deviceState != 9)
 37690  006E7C  C754  FFE8         	movff	_ABB_1+916,wreg
 37691  006E80  0A09               	xorlw	9
 37692  006E82  A4D8               	btfss	status,2,c
 37693                           
 37694                           ; BSR set to: 0
 37695                           ;acOr36V.c: 54: reset4SecTimer();
 37696  006E84  EC53  F03D         	call	i2_reset4SecTimer	;wreg free
 37697                           
 37698                           ;acOr36V.c: 55: reset13msTimer();
 37699  006E88  EC5C  F03D         	call	_reset13msTimer	;wreg free
 37700                           
 37701                           ;acOr36V.c: 56: ABB_1.info.statusBits.voltage = 1;
 37702  006E8C  EE23  F0C1         	lfsr	2,_ABB_1+1
 37703  006E90  8ADF               	bsf	indf2,5,c
 37704  006E92  0012               	return		;funcret
 37705  006E94                     __end_of_checkPulse:
 37706                           	opt stack 0
 37707                           pclatu	equ	0xFFB
 37708                           pclath	equ	0xFFA
 37709                           tblptru	equ	0xFF8
 37710                           tblptrh	equ	0xFF7
 37711                           tblptrl	equ	0xFF6
 37712                           tablat	equ	0xFF5
 37713                           prodh	equ	0xFF4
 37714                           prodl	equ	0xFF3
 37715                           intcon	equ	0xFF2
 37716                           postinc0	equ	0xFEE
 37717                           fsr0h	equ	0xFEA
 37718                           fsr0l	equ	0xFE9
 37719                           wreg	equ	0xFE8
 37720                           indf1	equ	0xFE7
 37721                           postinc1	equ	0xFE6
 37722                           postdec1	equ	0xFE5
 37723                           plusw1	equ	0xFE3
 37724                           fsr1h	equ	0xFE2
 37725                           fsr1l	equ	0xFE1
 37726                           indf2	equ	0xFDF
 37727                           postinc2	equ	0xFDE
 37728                           postdec2	equ	0xFDD
 37729                           plusw2	equ	0xFDB
 37730                           fsr2h	equ	0xFDA
 37731                           fsr2l	equ	0xFD9
 37732                           status	equ	0xFD8
 37733                           
 37734 ;; *************** function i2_reset4SecTimer *****************
 37735 ;; Defined at:
 37736 ;;		line 70 in file "acOr36V.c"
 37737 ;; Parameters:    Size  Location     Type
 37738 ;;		None
 37739 ;; Auto vars:     Size  Location     Type
 37740 ;;		None
 37741 ;; Return value:  Size  Location     Type
 37742 ;;                  1    wreg      void 
 37743 ;; Registers used:
 37744 ;;		wreg, status,2
 37745 ;; Tracked objects:
 37746 ;;		On entry : 0/0
 37747 ;;		On exit  : 0/0
 37748 ;;		Unchanged: 0/0
 37749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37754 ;;Total ram usage:        0 bytes
 37755 ;; Hardware stack levels used:    1
 37756 ;; This function calls:
 37757 ;;		Nothing
 37758 ;; This function is called by:
 37759 ;;		_wake
 37760 ;;		_checkPulse
 37761 ;; This function uses a non-reentrant model
 37762 ;;
 37763                           
 37764                           	psect	text216
 37765  007AA6                     __ptext216:
 37766                           	opt stack 0
 37767  007AA6                     i2_reset4SecTimer:
 37768                           	opt stack 18
 37769                           
 37770                           ;acOr36V.c: 71: PIE0bits.TMR0IE = 0;
 37771                           
 37772                           ;incstack = 0
 37773  007AA6  010E               	movlb	14	; () banked
 37774  007AA8  9B29               	bcf	41,5,b	;volatile
 37775                           
 37776                           ;acOr36V.c: 72: T0CON0bits.T0EN = 0;
 37777  007AAA  9ED5               	bcf	4053,7,c	;volatile
 37778                           
 37779                           ; BSR set to: 14
 37780                           ;acOr36V.c: 73: TMR0 = 0;
 37781  007AAC  0E00               	movlw	0
 37782  007AAE  6ED3               	movwf	4051,c	;volatile
 37783                           
 37784                           ; BSR set to: 14
 37785                           ;acOr36V.c: 74: T0CON0bits.T0EN = 1;
 37786  007AB0  8ED5               	bsf	4053,7,c	;volatile
 37787                           
 37788                           ; BSR set to: 14
 37789                           ;acOr36V.c: 75: PIE0bits.TMR0IE = 1;
 37790  007AB2  010E               	movlb	14	; () banked
 37791  007AB4  8B29               	bsf	41,5,b	;volatile
 37792                           
 37793                           ; BSR set to: 14
 37794  007AB6  0012               	return		;funcret
 37795  007AB8                     __end_ofi2_reset4SecTimer:
 37796                           	opt stack 0
 37797                           pclatu	equ	0xFFB
 37798                           pclath	equ	0xFFA
 37799                           tblptru	equ	0xFF8
 37800                           tblptrh	equ	0xFF7
 37801                           tblptrl	equ	0xFF6
 37802                           tablat	equ	0xFF5
 37803                           prodh	equ	0xFF4
 37804                           prodl	equ	0xFF3
 37805                           intcon	equ	0xFF2
 37806                           postinc0	equ	0xFEE
 37807                           fsr0h	equ	0xFEA
 37808                           fsr0l	equ	0xFE9
 37809                           wreg	equ	0xFE8
 37810                           indf1	equ	0xFE7
 37811                           postinc1	equ	0xFE6
 37812                           postdec1	equ	0xFE5
 37813                           plusw1	equ	0xFE3
 37814                           fsr1h	equ	0xFE2
 37815                           fsr1l	equ	0xFE1
 37816                           indf2	equ	0xFDF
 37817                           postinc2	equ	0xFDE
 37818                           postdec2	equ	0xFDD
 37819                           plusw2	equ	0xFDB
 37820                           fsr2h	equ	0xFDA
 37821                           fsr2l	equ	0xFD9
 37822                           status	equ	0xFD8
 37823                           
 37824 ;; *************** function _reset13msTimer *****************
 37825 ;; Defined at:
 37826 ;;		line 79 in file "acOr36V.c"
 37827 ;; Parameters:    Size  Location     Type
 37828 ;;		None
 37829 ;; Auto vars:     Size  Location     Type
 37830 ;;		None
 37831 ;; Return value:  Size  Location     Type
 37832 ;;                  1    wreg      void 
 37833 ;; Registers used:
 37834 ;;		wreg, status,2
 37835 ;; Tracked objects:
 37836 ;;		On entry : 0/0
 37837 ;;		On exit  : 0/0
 37838 ;;		Unchanged: 0/0
 37839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37844 ;;Total ram usage:        0 bytes
 37845 ;; Hardware stack levels used:    1
 37846 ;; This function calls:
 37847 ;;		Nothing
 37848 ;; This function is called by:
 37849 ;;		_checkPulse
 37850 ;; This function uses a non-reentrant model
 37851 ;;
 37852                           
 37853                           	psect	text217
 37854  007AB8                     __ptext217:
 37855                           	opt stack 0
 37856  007AB8                     _reset13msTimer:
 37857                           	opt stack 18
 37858                           
 37859                           ;acOr36V.c: 80: T1CONbits.ON = 0;
 37860                           
 37861                           ; BSR set to: 14
 37862                           ;incstack = 0
 37863  007AB8  90CF               	bcf	4047,0,c	;volatile
 37864                           
 37865                           ;acOr36V.c: 81: PIR5bits.TMR1IF = 0;
 37866  007ABA  010E               	movlb	14	; () banked
 37867  007ABC  9138               	bcf	56,0,b	;volatile
 37868                           
 37869                           ; BSR set to: 14
 37870                           ;acOr36V.c: 82: TMR1 = 0xA23F;
 37871  007ABE  0EA2               	movlw	162
 37872  007AC0  6ECE               	movwf	4046,c	;volatile
 37873  007AC2  0E3F               	movlw	63
 37874  007AC4  6ECD               	movwf	4045,c	;volatile
 37875                           
 37876                           ; BSR set to: 14
 37877                           ;acOr36V.c: 83: T1CONbits.ON = 1;
 37878  007AC6  80CF               	bsf	4047,0,c	;volatile
 37879                           
 37880                           ; BSR set to: 14
 37881  007AC8  0012               	return		;funcret
 37882  007ACA                     __end_of_reset13msTimer:
 37883                           	opt stack 0
 37884                           pclatu	equ	0xFFB
 37885                           pclath	equ	0xFFA
 37886                           tblptru	equ	0xFF8
 37887                           tblptrh	equ	0xFF7
 37888                           tblptrl	equ	0xFF6
 37889                           tablat	equ	0xFF5
 37890                           prodh	equ	0xFF4
 37891                           prodl	equ	0xFF3
 37892                           intcon	equ	0xFF2
 37893                           postinc0	equ	0xFEE
 37894                           fsr0h	equ	0xFEA
 37895                           fsr0l	equ	0xFE9
 37896                           wreg	equ	0xFE8
 37897                           indf1	equ	0xFE7
 37898                           postinc1	equ	0xFE6
 37899                           postdec1	equ	0xFE5
 37900                           plusw1	equ	0xFE3
 37901                           fsr1h	equ	0xFE2
 37902                           fsr1l	equ	0xFE1
 37903                           indf2	equ	0xFDF
 37904                           postinc2	equ	0xFDE
 37905                           postdec2	equ	0xFDD
 37906                           plusw2	equ	0xFDB
 37907                           fsr2h	equ	0xFDA
 37908                           fsr2l	equ	0xFD9
 37909                           status	equ	0xFD8
 37910                           
 37911 ;; *************** function _SPIISRHandlerST7540 *****************
 37912 ;; Defined at:
 37913 ;;		line 168 in file "ST7540.c"
 37914 ;; Parameters:    Size  Location     Type
 37915 ;;		None
 37916 ;; Auto vars:     Size  Location     Type
 37917 ;;  dataReadUC      1    0[COMRAM] unsigned char 
 37918 ;; Return value:  Size  Location     Type
 37919 ;;                  1    wreg      void 
 37920 ;; Registers used:
 37921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37922 ;; Tracked objects:
 37923 ;;		On entry : 0/0
 37924 ;;		On exit  : 0/0
 37925 ;;		Unchanged: 0/0
 37926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37930 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37931 ;;Total ram usage:        1 bytes
 37932 ;; Hardware stack levels used:    1
 37933 ;; This function calls:
 37934 ;;		Nothing
 37935 ;; This function is called by:
 37936 ;;		_isr
 37937 ;; This function uses a non-reentrant model
 37938 ;;
 37939                           
 37940                           	psect	text218
 37941  006568                     __ptext218:
 37942                           	opt stack 0
 37943  006568                     _SPIISRHandlerST7540:
 37944                           	opt stack 20
 37945                           
 37946                           ;ST7540.c: 169: unsigned char dataReadUC;
 37947                           ;ST7540.c: 171: dataReadUC = SSP1BUF;
 37948                           
 37949                           ; BSR set to: 14
 37950                           ;incstack = 0
 37951  006568  CF91 F001          	movff	3985,SPIISRHandlerST7540@dataReadUC	;volatile
 37952                           
 37953                           ;ST7540.c: 172: SSP1BUF = 0;
 37954  00656C  0E00               	movlw	0
 37955  00656E  6E91               	movwf	3985,c	;volatile
 37956                           
 37957                           ;ST7540.c: 174: if(flagST7540 & 1){
 37958  006570  A04C               	btfss	_flagST7540,0,c
 37959  006572  D016               	goto	i2l727
 37960                           
 37961                           ;ST7540.c: 175: if(bufferTXNextUCA > bufferTXLenUCA){
 37962  006574  504A               	movf	_bufferTXNextUCA,w,c
 37963  006576  5C4B               	subwf	_bufferTXLenUCA,w,c
 37964  006578  B0D8               	btfsc	status,0,c
 37965  00657A  D006               	goto	i2l12096
 37966                           
 37967                           ;ST7540.c: 176: flagST7540 &= ~1;
 37968  00657C  904C               	bcf	_flagST7540,0,c
 37969                           
 37970                           ;ST7540.c: 177: SSP1CON1bits.SSPEN = 0;
 37971  00657E  9A95               	bcf	3989,5,c	;volatile
 37972                           
 37973                           ;ST7540.c: 178: PIR3bits.SSP1IF = 0;
 37974  006580  010E               	movlb	14	; () banked
 37975  006582  9136               	bcf	54,0,b	;volatile
 37976                           
 37977                           ; BSR set to: 14
 37978                           ;ST7540.c: 179: LATCbits.LATC6 = 1;
 37979  006584  8C7B               	bsf	3963,6,c	;volatile
 37980                           
 37981                           ; BSR set to: 14
 37982                           ;ST7540.c: 180: return;
 37983  006586  0012               	return	
 37984  006588                     i2l12096:
 37985                           
 37986                           ;ST7540.c: 181: }
 37987                           ;ST7540.c: 182: SSP1BUF = bufferTXST7540UCA[bufferTXNextUCA++];
 37988  006588  504A               	movf	_bufferTXNextUCA,w,c
 37989  00658A  0D01               	mullw	1
 37990  00658C  0E00               	movlw	low _bufferTXST7540UCA
 37991  00658E  24F3               	addwf	prodl,w,c
 37992  006590  6ED9               	movwf	fsr2l,c
 37993  006592  0E02               	movlw	high _bufferTXST7540UCA
 37994  006594  20F4               	addwfc	prodh,w,c
 37995  006596  6EDA               	movwf	fsr2h,c
 37996  006598  50DF               	movf	indf2,w,c
 37997  00659A  6E91               	movwf	3985,c	;volatile
 37998  00659C  2A4A               	incf	_bufferTXNextUCA,f,c
 37999                           
 38000                           ;ST7540.c: 183: }else if(flagST7540 & 2){
 38001  00659E  D018               	goto	i2l730
 38002  0065A0                     i2l727:
 38003  0065A0  A24C               	btfss	_flagST7540,1,c
 38004  0065A2  D016               	goto	i2l730
 38005                           
 38006                           ;ST7540.c: 184: bufferRXST7540UCA[bufferRXNextUCA++] = dataReadUC;
 38007  0065A4  5048               	movf	_bufferRXNextUCA,w,c
 38008  0065A6  0D01               	mullw	1
 38009  0065A8  0E4F               	movlw	low _bufferRXST7540UCA
 38010  0065AA  24F3               	addwf	prodl,w,c
 38011  0065AC  6ED9               	movwf	fsr2l,c
 38012  0065AE  0E02               	movlw	high _bufferRXST7540UCA
 38013  0065B0  20F4               	addwfc	prodh,w,c
 38014  0065B2  6EDA               	movwf	fsr2h,c
 38015  0065B4  C001  FFDF         	movff	SPIISRHandlerST7540@dataReadUC,indf2
 38016  0065B8  2A48               	incf	_bufferRXNextUCA,f,c
 38017                           
 38018                           ;ST7540.c: 185: if(bufferRXST7540UCA[0] == bufferRXNextUCA){
 38019  0065BA  5048               	movf	_bufferRXNextUCA,w,c
 38020  0065BC  0102               	movlb	2	; () banked
 38021  0065BE  194F               	xorwf	_bufferRXST7540UCA& (0+255),w,b
 38022  0065C0  A4D8               	btfss	status,2,c
 38023  0065C2  D006               	goto	i2l730
 38024                           
 38025                           ; BSR set to: 2
 38026                           ;ST7540.c: 186: flagST7540 |= 4;
 38027  0065C4  844C               	bsf	_flagST7540,2,c
 38028                           
 38029                           ;ST7540.c: 187: flagST7540 &= ~2;
 38030  0065C6  924C               	bcf	_flagST7540,1,c
 38031                           
 38032                           ; BSR set to: 2
 38033                           ;ST7540.c: 188: SSP1CON1bits.SSPEN = 0;
 38034  0065C8  9A95               	bcf	3989,5,c	;volatile
 38035                           
 38036                           ; BSR set to: 2
 38037                           ;ST7540.c: 189: PIR3bits.SSP1IF = 0;
 38038  0065CA  010E               	movlb	14	; () banked
 38039  0065CC  9136               	bcf	54,0,b	;volatile
 38040                           
 38041                           ; BSR set to: 14
 38042                           ;ST7540.c: 190: return;
 38043  0065CE  0012               	return	
 38044  0065D0                     i2l730:
 38045                           
 38046                           ;ST7540.c: 191: }
 38047                           ;ST7540.c: 192: }
 38048                           ;ST7540.c: 193: PIR3bits.SSP1IF = 0;
 38049  0065D0  010E               	movlb	14	; () banked
 38050  0065D2  9136               	bcf	54,0,b	;volatile
 38051                           
 38052                           ; BSR set to: 14
 38053  0065D4  0012               	return		;funcret
 38054  0065D6                     __end_of_SPIISRHandlerST7540:
 38055                           	opt stack 0
 38056                           pclatu	equ	0xFFB
 38057                           pclath	equ	0xFFA
 38058                           tblptru	equ	0xFF8
 38059                           tblptrh	equ	0xFF7
 38060                           tblptrl	equ	0xFF6
 38061                           tablat	equ	0xFF5
 38062                           prodh	equ	0xFF4
 38063                           prodl	equ	0xFF3
 38064                           intcon	equ	0xFF2
 38065                           postinc0	equ	0xFEE
 38066                           fsr0h	equ	0xFEA
 38067                           fsr0l	equ	0xFE9
 38068                           wreg	equ	0xFE8
 38069                           indf1	equ	0xFE7
 38070                           postinc1	equ	0xFE6
 38071                           postdec1	equ	0xFE5
 38072                           plusw1	equ	0xFE3
 38073                           fsr1h	equ	0xFE2
 38074                           fsr1l	equ	0xFE1
 38075                           indf2	equ	0xFDF
 38076                           postinc2	equ	0xFDE
 38077                           postdec2	equ	0xFDD
 38078                           plusw2	equ	0xFDB
 38079                           fsr2h	equ	0xFDA
 38080                           fsr2l	equ	0xFD9
 38081                           status	equ	0xFD8
 38082                           
 38083 ;; *************** function _RXReadyISRHandlerST7540 *****************
 38084 ;; Defined at:
 38085 ;;		line 196 in file "ST7540.c"
 38086 ;; Parameters:    Size  Location     Type
 38087 ;;		None
 38088 ;; Auto vars:     Size  Location     Type
 38089 ;;  ReadIOCC        1    0[COMRAM] unsigned char 
 38090 ;; Return value:  Size  Location     Type
 38091 ;;                  1    wreg      void 
 38092 ;; Registers used:
 38093 ;;		wreg
 38094 ;; Tracked objects:
 38095 ;;		On entry : 0/0
 38096 ;;		On exit  : 0/0
 38097 ;;		Unchanged: 0/0
 38098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38100 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38102 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38103 ;;Total ram usage:        1 bytes
 38104 ;; Hardware stack levels used:    1
 38105 ;; This function calls:
 38106 ;;		Nothing
 38107 ;; This function is called by:
 38108 ;;		_isr
 38109 ;; This function uses a non-reentrant model
 38110 ;;
 38111                           
 38112                           	psect	text219
 38113  007ACA                     __ptext219:
 38114                           	opt stack 0
 38115  007ACA                     _RXReadyISRHandlerST7540:
 38116                           	opt stack 20
 38117                           
 38118                           ;ST7540.c: 198: char ReadIOCC;
 38119                           ;ST7540.c: 199: if((flagST7540 & 2) && !PORTAbits.RA4)
 38120                           
 38121                           ; BSR set to: 14
 38122                           ;incstack = 0
 38123  007ACA  B24C               	btfsc	_flagST7540,1,c
 38124  007ACC  B889               	btfsc	3977,4,c	;volatile
 38125  007ACE  D001               	goto	i2l7486
 38126                           
 38127                           ;ST7540.c: 200: SSP1CON1bits.SSPEN = 1;
 38128  007AD0  8A95               	bsf	3989,5,c	;volatile
 38129  007AD2                     i2l7486:
 38130                           
 38131                           ;ST7540.c: 201: ReadIOCC = PORTAbits.RA5;
 38132  007AD2  0E00               	movlw	0
 38133  007AD4  BA89               	btfsc	3977,5,c	;volatile
 38134  007AD6  0E01               	movlw	1
 38135  007AD8  6E01               	movwf	RXReadyISRHandlerST7540@ReadIOCC,c
 38136  007ADA  0012               	return		;funcret
 38137  007ADC                     __end_of_RXReadyISRHandlerST7540:
 38138                           	opt stack 0
 38139  0000                     pclatu	equ	0xFFB
 38140                           pclath	equ	0xFFA
 38141                           tblptru	equ	0xFF8
 38142                           tblptrh	equ	0xFF7
 38143                           tblptrl	equ	0xFF6
 38144                           tablat	equ	0xFF5
 38145                           prodh	equ	0xFF4
 38146                           prodl	equ	0xFF3
 38147                           intcon	equ	0xFF2
 38148                           postinc0	equ	0xFEE
 38149                           fsr0h	equ	0xFEA
 38150                           fsr0l	equ	0xFE9
 38151                           wreg	equ	0xFE8
 38152                           indf1	equ	0xFE7
 38153                           postinc1	equ	0xFE6
 38154                           postdec1	equ	0xFE5
 38155                           plusw1	equ	0xFE3
 38156                           fsr1h	equ	0xFE2
 38157                           fsr1l	equ	0xFE1
 38158                           indf2	equ	0xFDF
 38159                           postinc2	equ	0xFDE
 38160                           postdec2	equ	0xFDD
 38161                           plusw2	equ	0xFDB
 38162                           fsr2h	equ	0xFDA
 38163                           fsr2l	equ	0xFD9
 38164                           status	equ	0xFD8
 38165                           pclatu	equ	0xFFB
 38166                           pclath	equ	0xFFA
 38167                           tblptru	equ	0xFF8
 38168                           tblptrh	equ	0xFF7
 38169                           tblptrl	equ	0xFF6
 38170                           tablat	equ	0xFF5
 38171                           prodh	equ	0xFF4
 38172                           prodl	equ	0xFF3
 38173                           intcon	equ	0xFF2
 38174                           postinc0	equ	0xFEE
 38175                           fsr0h	equ	0xFEA
 38176                           fsr0l	equ	0xFE9
 38177                           wreg	equ	0xFE8
 38178                           indf1	equ	0xFE7
 38179                           postinc1	equ	0xFE6
 38180                           postdec1	equ	0xFE5
 38181                           plusw1	equ	0xFE3
 38182                           fsr1h	equ	0xFE2
 38183                           fsr1l	equ	0xFE1
 38184                           indf2	equ	0xFDF
 38185                           postinc2	equ	0xFDE
 38186                           postdec2	equ	0xFDD
 38187                           plusw2	equ	0xFDB
 38188                           fsr2h	equ	0xFDA
 38189                           fsr2l	equ	0xFD9
 38190                           status	equ	0xFD8
 38191                           
 38192                           	psect	rparam
 38193  0000                     pclatu	equ	0xFFB
 38194                           pclath	equ	0xFFA
 38195                           tblptru	equ	0xFF8
 38196                           tblptrh	equ	0xFF7
 38197                           tblptrl	equ	0xFF6
 38198                           tablat	equ	0xFF5
 38199                           prodh	equ	0xFF4
 38200                           prodl	equ	0xFF3
 38201                           intcon	equ	0xFF2
 38202                           postinc0	equ	0xFEE
 38203                           fsr0h	equ	0xFEA
 38204                           fsr0l	equ	0xFE9
 38205                           wreg	equ	0xFE8
 38206                           indf1	equ	0xFE7
 38207                           postinc1	equ	0xFE6
 38208                           postdec1	equ	0xFE5
 38209                           plusw1	equ	0xFE3
 38210                           fsr1h	equ	0xFE2
 38211                           fsr1l	equ	0xFE1
 38212                           indf2	equ	0xFDF
 38213                           postinc2	equ	0xFDE
 38214                           postdec2	equ	0xFDD
 38215                           plusw2	equ	0xFDB
 38216                           fsr2h	equ	0xFDA
 38217                           fsr2l	equ	0xFD9
 38218                           status	equ	0xFD8
 38219                           
 38220                           	psect	temp
 38221  000057                     btemp:
 38222                           	opt stack 0
 38223  000057                     	ds	1
 38224  0000                     int$flags	set	btemp
 38225                           pclatu	equ	0xFFB
 38226                           pclath	equ	0xFFA
 38227                           tblptru	equ	0xFF8
 38228                           tblptrh	equ	0xFF7
 38229                           tblptrl	equ	0xFF6
 38230                           tablat	equ	0xFF5
 38231                           prodh	equ	0xFF4
 38232                           prodl	equ	0xFF3
 38233                           intcon	equ	0xFF2
 38234                           postinc0	equ	0xFEE
 38235                           fsr0h	equ	0xFEA
 38236                           fsr0l	equ	0xFE9
 38237                           wreg	equ	0xFE8
 38238                           indf1	equ	0xFE7
 38239                           postinc1	equ	0xFE6
 38240                           postdec1	equ	0xFE5
 38241                           plusw1	equ	0xFE3
 38242                           fsr1h	equ	0xFE2
 38243                           fsr1l	equ	0xFE1
 38244                           indf2	equ	0xFDF
 38245                           postinc2	equ	0xFDE
 38246                           postdec2	equ	0xFDD
 38247                           plusw2	equ	0xFDB
 38248                           fsr2h	equ	0xFDA
 38249                           fsr2l	equ	0xFD9
 38250                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        49
    BSS         1598
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      86
    BANK0           160     67     159
    BANK1           256      2     252
    BANK2           256      0     154
    BANK3           256      0     192
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          222      0       0

Pointer List with Targets:

    bluetoothCRC@data	PTR unsigned char  size(2) Largest target is 11
		 -> checkBluetoothCRC@data(BANK0[11]), sendPacket@txReg(BANK0[11]), 

    processBTPacket@tempDetInfo	PTR unsigned char  size(2) Largest target is 404
		 -> ABB_1.det_arrays.info.data(BIGRAM[1]), ABB_1.det_arrays.info(BIGRAM[404]), 

    writeEUSART@data	PTR unsigned char  size(2) Largest target is 22
		 -> setBaudRate@txreg(COMRAM[11]), setDeviceName@txreg(BANK0[22]), setSlaveMode@txreg(BANK0[11]), sendAtCommand@txreg(COMRAM[5]), 
		 -> sendPacket@txReg(BANK0[11]), 

    programRetryChecks@retry	PTR unsigned char  size(2) Largest target is 1
		 -> fireUIDs@attempts(BANK0[1]), programUIDs@attempts(BANK0[1]), 

    commandResponse@data	PTR unsigned char  size(2) Largest target is 9
		 -> checkLineForConnectedUIDs@txPacket(BANK0[5]), selfCheckUID@txPacket(BANK0[3]), programUID@txPacket(BANK0[9]), readUID@txPacket(BANK0[5]), 

    calcrc@ptr	PTR unsigned char  size(2) Largest target is 10
		 -> TAG_Response(COMRAM[10]), 

    checkCounter@specific	PTR struct . size(2) Largest target is 61
		 -> state(BANK1[61]), 

    addDataToOutgoingQueue@data	PTR unsigned char  size(2) Largest target is 917
		 -> ABB_1.det_arrays(BIGRAM[909]), ABB_1(BIGRAM[917]), 

    addPacketToOutgoingQueue@data	PTR unsigned char  size(2) Largest target is 909
		 -> ABB_1.det_arrays.info(BIGRAM[404]), ABB_1.det_arrays.UIDs(BIGRAM[505]), ABB_1.det_arrays(BIGRAM[909]), NULL(NULL[0]), 

    CRC16@data_p	PTR unsigned char  size(2) Largest target is 79
		 -> bufferRXST7540UCA(BANK2[75]), bufferTXST7540UCA(BANK2[79]), 

    sp__PacketDataST7540	PTR unsigned char  size(2) Largest target is 75
		 -> bufferRXST7540UCA(BANK2[75]), 

    buildMessageST7540@statusPtr	PTR unsigned short  size(2) Largest target is 3
		 -> ABB_1.info.statusBits(BIGRAM[2]), ABB_1.info(BIGRAM[3]), 

    S81$data	PTR unsigned char  size(2) Largest target is 917
		 -> ABB_1.det_arrays(BIGRAM[909]), NULL(NULL[0]), ABB_1(BIGRAM[917]), 

    outgoingQueue.queue_store.data	PTR unsigned char  size(2) Largest target is 917
		 -> ABB_1.det_arrays.info(BIGRAM[404]), ABB_1.det_arrays.UIDs(BIGRAM[505]), ABB_1.det_arrays(BIGRAM[909]), NULL(NULL[0]), 
		 -> ABB_1(BIGRAM[917]), 

    ReadConfigST7540@configDataUS	PTR unsigned um size(2) Largest target is 3
		 -> InitST7540@configDataRXUS(BANK0[3]), 

    ReadConfigST7540@frameDataUS	PTR unsigned um size(2) Largest target is 3
		 -> InitST7540@frameDataRXUS(BANK0[3]), 

    initialiseState@specific	PTR struct . size(2) Largest target is 61
		 -> state(BANK1[61]), 

    readStructureFromEeprom@data	PTR unsigned char  size(2) Largest target is 917
		 -> ABB_1.det_arrays(BIGRAM[909]), ABB_1(BIGRAM[917]), 

    writeStructureToEeprom@structure	PTR unsigned char  size(2) Largest target is 917
		 -> ABB_1.det_arrays(BIGRAM[909]), ABB_1(BIGRAM[917]), 

    readByteFromEeprom@byte	PTR unsigned char  size(2) Largest target is 917
		 -> ABB_1.det_arrays(BIGRAM[909]), ABB_1(BIGRAM[917]), 

    writeByteToEeprom@byte	PTR unsigned char  size(2) Largest target is 917
		 -> ABB_1.det_arrays(BIGRAM[909]), ABB_1(BIGRAM[917]), 

    checkForExistingUID@receivedUID	PTR unsigned long  size(2) Largest target is 22
		 -> btPacket.receive(BANK0[11]), btPacket(BANK0[22]), response(BANK0[4]), TAG_Response(COMRAM[10]), 

    checkForExistingUID@currentUID	PTR unsigned long  size(2) Largest target is 505
		 -> ABB_1.det_arrays.UIDs.UID(BIGRAM[4]), ABB_1.det_arrays.UIDs(BIGRAM[505]), 

    variance@values	PTR unsigned short  size(2) Largest target is 10
		 -> readEarthADC@ADCStore(BANK0[10]), readCableADC@ADCStore(BANK0[10]), readEDDADC@ADCStore(BANK0[10]), readS1StateADC@ADCStore(BANK0[10]), 
		 -> readBatteryADC@ADCStore(BANK0[10]), 

    checkStatusBits@status	PTR unsigned short  size(2) Largest target is 3
		 -> ABB_1.info.statusBits(BIGRAM[2]), ABB_1.info(BIGRAM[3]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    _readTagRoutine->_addNewTag
    _tagFor1->i2__delay_ms
    _tagFor0->i2__delay_ms
    _addNewTag->i2_checkForExistingUID
    i2_checkForExistingUID->i2___wmul
    _READ_TAG_REVERSE->_CHECK_CRC16
    _initialiseTagADC_1->i2__delay_us
    _SCAN_TAG_1->_rxWord
    _UIO_noMAK_1->i2__delay_us
    _UIO_WRITE_1->i2__delay_us
    _UIO_SAK_1->i2__delay_us
    _UIO_MAK_1->i2__delay_us
    _READ_TAG->_CHECK_CRC16
    _initialiseTagADC->i2__delay_us
    _SCAN_TAG->_rxWord
    _rxWord->_detectFallingEdge
    _rxWord->_detectRisingEdge
    _detectRisingEdge->_readTagADC
    _detectFallingEdge->_readTagADC
    _UIO_noMAK->i2__delay_us
    _UIO_WRITE->i2__delay_us
    _UIO_SAK->i2__delay_us
    _UIO_MAK->i2__delay_us
    _CHECK_CRC16->_calcrc
    _readEUSART->_receiveBluetooth
    _stateCounterHandler->_checkCounter
    _wake->i2_initialiseModem
    i2_initialiseStates->i2_initialiseState
    i2_initialiseModem->i2_InitST7540
    i2_InitST7540->i2_WriteConfigST7540
    i2_WriteConfigST7540->i2__delay_ms
    i2__delay_ms->i2__delay_us

Critical Paths under _main in BANK0

    _testMemory->___wmul
    _initialise->_initialiseModem
    _initialiseShaftTest->_initialiseState
    _initialiseReadSupply->_initialiseState
    _initialiseReadKeyCable->_initialiseState
    _initialiseLed->_initialiseState
    _initialiseDetMemory->_readStructureFromEeprom
    _readStructureFromEeprom->___wmul
    _readStructureFromEeprom->_readByteFromEeprom
    _initialiseDetWindows->___wmul
    _device->_currentStateHandler
    _sleep->_writeStructureToEeprom
    _writeStructureToEeprom->___wmul
    _writeStructureToEeprom->_writeByteToEeprom
    _program->_programUIDs
    _programUIDs->_programRetryChecks
    _selfCheckUID->_commandResponse
    _readUID->_commandResponse
    _programInitialise->_clearEDDStatusbits
    _mainsWake->_initialiseModem
    _initialiseModem->_InitST7540
    _InitST7540->_WriteConfigST7540
    _WriteConfigST7540->__delay_ms
    _mainsSleep->__delay_ms
    _fire->_fireUIDs
    _prepareForProgramming->__delay_ms
    _initialiseStates->_initialiseState
    _fireUIDs->_programRetryChecks
    _programRetryChecks->_programUID
    _programUID->_commandResponse
    _EDD_Calibrate->_Tx_Word
    _checkForUnfiredEdds->_checkLineForConnectedUIDs
    _checkLineForConnectedUIDs->_commandResponse
    _commandResponse->_Tx_Word
    _rxWordEDD->_Delay_ms
    _rxWordEDD->_detectFallingEdgeEDD
    _rxWordEDD->_detectRisingEdgeEDD
    _detectRisingEdgeEDD->_readEddADC
    _detectFallingEdgeEDD->_readEddADC
    __delay_ms->__delay_us
    _EDD_Energy_Store->_Tx_Word
    _EDD_Blast->_Tx_Word
    _Tx_Word->_Delay_ms
    _shaftTestStateHandler->_readCableADC
    _shaftTestStateHandler->_readEarthADC
    _readEarthADC->_variance
    _readEarthADCSetup->__delay_us
    _readCableADC->_variance
    _readCableADCSetup->__delay_us
    _readSupplyStateHandler->_readBatteryADC
    _readBatteryADC->_variance
    _readBatteryADCSetup->__delay_us
    _readKeyCableStateHandler->_readEDDADC
    _readKeyCableStateHandler->_readS1StateADC
    _readS1StateADC->_variance
    _readS1StateADCSetup->__delay_us
    _readEDDADC->_variance
    _variance->___lldiv
    _readEDDADCSetup->__delay_us
    _outgoingMessages->_buildMessageST7540
    _buildMessageST7540->_CRC16
    _incomingCommands->_addPacketToIncomingQueue
    _handleIncomingQueuePacket->_addDataToOutgoingQueue
    _addPacketToIncomingQueue->_PacketReadParamST7540
    _PacketReadParamST7540->_CheckCRCST7540
    _CheckCRCST7540->_CRC16
    _bluetooth->_processBTPacket
    _sendPacket->_bluetoothCRC
    _processBTPacket->_checkBluetoothCRC
    _checkForExistingUID->___wmul
    _checkBluetoothCRC->_bluetoothCRC
    _bluetoothCRC->_power
    _power->___wmul
    _bluetoothSetupSwitch->_setDeviceName
    _setSlaveMode->_writeEUSART
    _setDeviceName->_writeEUSART
    _resetBluetooth->__delay_us
    _addDataToOutgoingQueue->___wmul
    _checkStatusBits->_addPacketToOutgoingQueue
    _activateBluetooth->_initialiseState

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _device->_currentStateHandler

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  246686
                             _device
                 _deviceStateHandler
                         _initialise
                         _testMemory
 ---------------------------------------------------------------------------------
 (1) _testMemory                                          18    18      0    8724
                                              6 BANK0     18    18      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _initialise                                           0     0      0   29489
                      _initialise12V
                      _initialise24V
                _initialiseBluetooth
                _initialiseDetMemory
                  _initialiseEDDPins
                      _initialiseLed
                    _initialiseModem
                      _initialisePic
             _initialiseReadKeyCable
               _initialiseReadSupply
                _initialiseShaftTest
                      _initialiseTag
                   _initialiseTimer0
                   _initialiseTimer1
                   _initialiseTimer2
                   _initialiseTimer4
                   _initialiseTimer6
                   _initialiseTimer8
            _initialiseWatchDogTimer
                   _intialiseAcOr36V
 ---------------------------------------------------------------------------------
 (2) _intialiseAcOr36V                                     0     0      0       0
              _initialiseACinterrupt
 ---------------------------------------------------------------------------------
 (3) _initialiseACinterrupt                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialiseWatchDogTimer                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialiseTimer8                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialiseTimer6                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialiseTimer4                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialiseTimer2                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialiseTimer1                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialiseTimer0                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialiseTag                                        0     0      0       0
                            _ppsLock
                          _ppsUnlock
                    _tagForInterrupt
 ---------------------------------------------------------------------------------
 (2) _initialiseShaftTest                                  0     0      0    2188
                    _initialiseState
 ---------------------------------------------------------------------------------
 (2) _initialiseReadSupply                                 0     0      0    2188
                    _initialiseState
 ---------------------------------------------------------------------------------
 (2) _initialiseReadKeyCable                               0     0      0    2188
                    _initialiseState
 ---------------------------------------------------------------------------------
 (2) _initialisePic                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialiseLed                                        0     0      0    2188
                    _initialiseState
                          _setOffLed
 ---------------------------------------------------------------------------------
 (2) _initialiseEDDPins                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialiseDetMemory                                  2     2      0   15424
                                             13 BANK0      2     2      0
                             ___wmul
                 _clearEDDStatusbits
               _initialiseDetWindows
            _readStructureFromEeprom
 ---------------------------------------------------------------------------------
 (3) _readStructureFromEeprom                              7     3      4     950
                                              6 BANK0      7     3      4
                             ___wmul (ARG)
                 _readByteFromEeprom
 ---------------------------------------------------------------------------------
 (4) _readByteFromEeprom                                   6     4      2     204
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _initialiseDetWindows                                 6     6      0    7206
                                              6 BANK0      6     6      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _initialiseBluetooth                                  0     0      0       0
            _initialiseBluetoothPins
 ---------------------------------------------------------------------------------
 (3) _initialiseBluetoothPins                              0     0      0       0
                            _ppsLock
                          _ppsUnlock
 ---------------------------------------------------------------------------------
 (2) _initialise24V                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialise12V                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _deviceStateHandler                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _device                                               0     0      0  208473
                  _activateBluetooth
                    _checkStatusBits
                _currentStateHandler
                     _disengageRelay
                               _fire
                         _mainsSleep
                          _mainsWake
                            _program
                              _sleep
                     _sleepBluetooth
             _writeStructureToEeprom
 ---------------------------------------------------------------------------------
 (2) _sleep                                                2     2      0    9805
                                             12 BANK0      2     2      0
                       _Set_Line_Low
                             ___wmul
                          __delay_ms
                         _modemSleep
                          _setOffLed
                           _sleep12V
                     _sleepBluetooth
                           _tagSleep
                   _turnOffCableTest
             _writeStructureToEeprom
 ---------------------------------------------------------------------------------
 (2) _writeStructureToEeprom                               6     2      4    1135
                                              6 BANK0      6     2      4
                             ___wmul (ARG)
                  _writeByteToEeprom
 ---------------------------------------------------------------------------------
 (3) _writeByteToEeprom                                    6     4      2     235
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _program                                              0     0      0   44985
                   _initialiseStates
              _prepareForProgramming
                  _programInitialise
                        _programUIDs
              _returnFromProgramming
                          _setOffLed
 ---------------------------------------------------------------------------------
 (3) _programUIDs                                         11    11      0   40788
                                             46 BANK0     11    11      0
                      _EDD_Calibrate
                          __delay_ms
           _addPacketToOutgoingQueue
          _checkLineForConnectedUIDs
                 _programRetryChecks
                         _programUID
                            _readUID
                       _selfCheckUID
                         _setBlueLed
 ---------------------------------------------------------------------------------
 (4) _selfCheckUID                                        12    10      2    5375
                                             21 BANK0     12    10      2
                    _commandResponse
 ---------------------------------------------------------------------------------
 (4) _readUID                                             16    16      0   12863
                                             21 BANK0     16    16      0
                _checkForExistingUID
                    _commandResponse
 ---------------------------------------------------------------------------------
 (3) _programInitialise                                    0     0      0     254
                     _EDD_Init_Comms
                 _clearEDDStatusbits
 ---------------------------------------------------------------------------------
 (3) _clearEDDStatusbits                                   8     8      0     254
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (2) _mainsWake                                            0     0      0    9256
                          __delay_ms
                    _initialiseModem
                   _initialiseStates
                     _reset4SecTimer
                    _tagForInterrupt
 ---------------------------------------------------------------------------------
 (3) _tagForInterrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _reset4SecTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialiseModem                                      1     1      0    5313
                                             28 BANK0      1     1      0
                         _InitST7540
                   _initialiseQueues
                    _initialiseState
 ---------------------------------------------------------------------------------
 (3) _initialiseQueues                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitST7540                                          12    12      0    3088
                                             16 BANK0     12    12      0
                     _InitST7540Pins
                   _ReadConfigST7540
                  _WriteConfigST7540
               _initST7540Interrupts
 ---------------------------------------------------------------------------------
 (4) _initST7540Interrupts                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _WriteConfigST7540                                   11     5      6    2252
                                              5 BANK0     11     5      6
                          __delay_ms
 ---------------------------------------------------------------------------------
 (4) _ReadConfigST7540                                     9     5      4     442
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) _InitST7540Pins                                       0     0      0       0
                      _initST7540PPS
 ---------------------------------------------------------------------------------
 (5) _initST7540PPS                                        0     0      0       0
                            _ppsLock
                          _ppsUnlock
 ---------------------------------------------------------------------------------
 (3) _ppsUnlock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ppsLock                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _mainsSleep                                           0     0      0    1656
                       _Set_Line_Low
                          __delay_ms
                         _modemSleep
                          _setOffLed
                           _sleep12V
                     _sleepBluetooth
                           _tagSleep
                   _turnOffCableTest
 ---------------------------------------------------------------------------------
 (3) _turnOffCableTest                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _tagSleep                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _sleepBluetooth                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _sleep12V                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _modemSleep                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _fire                                                 1     1      0   35605
                                             55 BANK0      1     1      0
                          _EDD_Blast
                   _EDD_Energy_Store
                     _EDD_Init_Comms
                          __delay_ms
             _addDataToOutgoingQueue
                _checkForUnfiredEdds
                           _fireUIDs
                   _initialiseStates
              _prepareForProgramming
              _returnFromProgramming
                          _setRedLed
 ---------------------------------------------------------------------------------
 (3) _returnFromProgramming                                0     0      0       0
                       _Set_Line_Low
 ---------------------------------------------------------------------------------
 (3) _prepareForProgramming                                0     0      0    1656
                      _Set_Line_High
                          __delay_ms
 ---------------------------------------------------------------------------------
 (3) _initialiseStates                                     2     2      0    2287
                                              3 BANK0      2     2      0
                    _initialiseState
 ---------------------------------------------------------------------------------
 (3) _fireUIDs                                             9     9      0    8893
                                             46 BANK0      9     9      0
                      _EDD_Calibrate
                 _programRetryChecks
 ---------------------------------------------------------------------------------
 (4) _programRetryChecks                                   3     1      2    5918
                                             43 BANK0      3     1      2
                         _programUID
 ---------------------------------------------------------------------------------
 (4) _programUID                                          22    22      0    5668
                                             21 BANK0     22    22      0
                    _commandResponse
 ---------------------------------------------------------------------------------
 (4) _EDD_Calibrate                                        1     1      0    2768
                                             10 BANK0      1     1      0
                           _Delay_ms
                      _Set_Line_High
              _Tx_Calibration_Pulses
                            _Tx_Word
 ---------------------------------------------------------------------------------
 (5) _Tx_Calibration_Pulses                                6     6      0     204
                                              0 BANK0      6     6      0
                        _Delay_100us
                      _Set_Line_High
                       _Set_Line_Low
 ---------------------------------------------------------------------------------
 (3) _checkForUnfiredEdds                                  8     8      0    6910
                                             28 BANK0      8     8      0
                      _Set_Line_High
                       _Set_Line_Low
                          __delay_ms
          _checkLineForConnectedUIDs
 ---------------------------------------------------------------------------------
 (4) _checkLineForConnectedUIDs                            7     7      0    5093
                                             21 BANK0      7     7      0
                    _commandResponse
 ---------------------------------------------------------------------------------
 (5) _commandResponse                                     11     8      3    4843
                                             10 BANK0     11     8      3
                           _Delay_ms
                            _Tx_Word
                          _rxWordEDD
 ---------------------------------------------------------------------------------
 (6) _rxWordEDD                                            0     0      0    1468
                           _Delay_ms
               _detectFallingEdgeEDD
                _detectRisingEdgeEDD
 ---------------------------------------------------------------------------------
 (7) _detectRisingEdgeEDD                                  5     5      0     127
                                              2 BANK0      5     5      0
                         _readEddADC
 ---------------------------------------------------------------------------------
 (7) _detectFallingEdgeEDD                                 5     5      0     127
                                              2 BANK0      5     5      0
                         _readEddADC
 ---------------------------------------------------------------------------------
 (8) _readEddADC                                           2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) __delay_ms                                            4     2      2    1656
                                              1 BANK0      4     2      2
                          __delay_us
 ---------------------------------------------------------------------------------
 (3) _Set_Line_Low                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EDD_Init_Comms                                       0     0      0       0
                      _Set_Line_High
                   _initialiseEddADC
 ---------------------------------------------------------------------------------
 (5) _initialiseEddADC                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EDD_Energy_Store                                     1     1      0    2595
                                             10 BANK0      1     1      0
                           _Delay_ms
                            _Tx_Word
 ---------------------------------------------------------------------------------
 (3) _EDD_Blast                                            1     1      0    2688
                                             10 BANK0      1     1      0
                           _Delay_ms
                            _Tx_Word
 ---------------------------------------------------------------------------------
 (6) _Tx_Word                                              3     3      0    1316
                                              7 BANK0      3     3      0
                        _Delay_500us
                           _Delay_ms
                      _Set_Line_High
                               _Tx_0
                               _Tx_1
 ---------------------------------------------------------------------------------
 (7) _Tx_1                                                 0     0      0       0
                        _Delay_500us
                      _Delay_500us_X
 ---------------------------------------------------------------------------------
 (7) _Tx_0                                                 0     0      0       0
                        _Delay_500us
                      _Delay_500us_X
 ---------------------------------------------------------------------------------
 (8) _Delay_500us_X                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Delay_500us                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _Set_Line_High                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _Delay_ms                                             7     5      2    1214
                                              0 BANK0      7     5      2
                        _Delay_100us
 ---------------------------------------------------------------------------------
 (8) _Delay_100us                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _disengageRelay                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _currentStateHandler                                  5     5      0  102702
                                             64 BANK0      3     3      0
                                              0 BANK1      2     2      0
                          _bluetooth
              _bluetoothStateHandler
                   _incomingCommands
       _incomingCommandsStateHandler
                                _led
                    _ledStateHandler
                   _outgoingMessages
       _outgoingMessagesStateHandler
                       _readKeyCable
           _readKeyCableStateHandler
                         _readSupply
             _readSupplyStateHandler
                          _shaftTest
              _shaftTestStateHandler
 ---------------------------------------------------------------------------------
 (3) _shaftTestStateHandler                                0     0      0   18404
                       _readCableADC
                       _readEarthADC
 ---------------------------------------------------------------------------------
 (4) _readEarthADC                                        18    16      2    9202
                                             34 BANK0     18    16      2
                          __delay_us
                  _readEarthADCSetup
                           _variance
 ---------------------------------------------------------------------------------
 (5) _readEarthADCSetup                                    0     0      0      31
                          __delay_us
 ---------------------------------------------------------------------------------
 (4) _readCableADC                                        18    16      2    9202
                                             34 BANK0     18    16      2
                          __delay_us
                  _readCableADCSetup
                           _variance
 ---------------------------------------------------------------------------------
 (5) _readCableADCSetup                                    0     0      0      31
                          __delay_us
 ---------------------------------------------------------------------------------
 (3) _shaftTest                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _readSupplyStateHandler                               2     2      0    9428
                                             52 BANK0      2     2      0
                     _readBatteryADC
                  _readMainsInterval
 ---------------------------------------------------------------------------------
 (4) _readMainsInterval                                    2     2      0      37
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _readBatteryADC                                      18    16      2    9202
                                             34 BANK0     18    16      2
                          __delay_us
                _readBatteryADCSetup
                           _variance
 ---------------------------------------------------------------------------------
 (5) _readBatteryADCSetup                                  0     0      0      31
                          __delay_us
 ---------------------------------------------------------------------------------
 (3) _readSupply                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _readKeyCableStateHandler                             0     0      0   18404
                         _readEDDADC
                     _readS1StateADC
 ---------------------------------------------------------------------------------
 (4) _readS1StateADC                                      18    16      2    9202
                                             34 BANK0     18    16      2
                          __delay_us
                _readS1StateADCSetup
                           _variance
 ---------------------------------------------------------------------------------
 (5) _readS1StateADCSetup                                  0     0      0      31
                          __delay_us
 ---------------------------------------------------------------------------------
 (4) _readEDDADC                                          18    16      2    9202
                                             34 BANK0     18    16      2
                          __delay_us
                    _readEDDADCSetup
                           _variance
 ---------------------------------------------------------------------------------
 (5) _variance                                            21    18      3    8859
                                             13 BANK0     21    18      3
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     549
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (5) _readEDDADCSetup                                      0     0      0      31
                          __delay_us
 ---------------------------------------------------------------------------------
 (3) _readKeyCable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _outgoingMessagesStateHandler                         0     0      0       0
                     _LineIdleST7540
                 _TransmitBusyST7540
 ---------------------------------------------------------------------------------
 (4) _TransmitBusyST7540                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _LineIdleST7540                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _outgoingMessages                                     0     0      0    1468
                _StartTransmitST7540
                 _buildMessageST7540
 ---------------------------------------------------------------------------------
 (4) _buildMessageST7540                                  15    15      0    1465
                                             13 BANK0     15    15      0
                              _CRC16
 ---------------------------------------------------------------------------------
 (4) _StartTransmitST7540                                  1     1      0       3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _ledStateHandler                                      0     0      0       0
                _checkIfTagIsRemoved
 ---------------------------------------------------------------------------------
 (4) _checkIfTagIsRemoved                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _led                                                  0     0      0       0
                         _setBlueLed
                        _setGreenLed
                          _setOffLed
                          _setRedLed
 ---------------------------------------------------------------------------------
 (3) _setRedLed                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _setOffLed                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _setGreenLed                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _setBlueLed                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _incomingCommandsStateHandler                         0     0      0       0
                    _DataReadyST7540
 ---------------------------------------------------------------------------------
 (4) _DataReadyST7540                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _incomingCommands                                     0     0      0   10137
               _ReceiveNewDataST7540
           _addPacketToIncomingQueue
          _handleIncomingQueuePacket
 ---------------------------------------------------------------------------------
 (4) _handleIncomingQueuePacket                            3     3      0    8982
                                             17 BANK0      3     3      0
             _addDataToOutgoingQueue
 ---------------------------------------------------------------------------------
 (4) _addPacketToIncomingQueue                             6     6      0    1152
                                             28 BANK0      6     6      0
                   _PacketDataST7540
              _PacketReadParamST7540
 ---------------------------------------------------------------------------------
 (5) _PacketReadParamST7540                                7     5      2    1053
                                             21 BANK0      7     5      2
                     _CheckCRCST7540
 ---------------------------------------------------------------------------------
 (6) _CheckCRCST7540                                       8     8      0     945
                                             13 BANK0      8     8      0
                              _CRC16
 ---------------------------------------------------------------------------------
 (5) _CRC16                                               13     9      4     775
                                              0 BANK0     13     9      4
 ---------------------------------------------------------------------------------
 (5) _PacketDataST7540                                     2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ReceiveNewDataST7540                                 1     1      0       3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _bluetoothStateHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bluetooth                                            0     0      0   44762
             _addDataToOutgoingQueue
               _bluetoothSetupSwitch
                    _processBTPacket
                         _sendPacket
 ---------------------------------------------------------------------------------
 (4) _sendPacket                                          18    18      0    9550
                                             32 BANK0     18    18      0
                       _bluetoothCRC
                        _writeEUSART
 ---------------------------------------------------------------------------------
 (4) _processBTPacket                                     13    13      0   16411
                                             51 BANK0     13    13      0
                  _checkBluetoothCRC
                _checkForExistingUID
 ---------------------------------------------------------------------------------
 (5) _checkForExistingUID                                 14    12      2    7374
                                              6 BANK0     14    12      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _checkBluetoothCRC                                   19    19      0    8743
                                             32 BANK0     19    19      0
                       _bluetoothCRC
 ---------------------------------------------------------------------------------
 (5) _bluetoothCRC                                        17    14      3    8323
                                             15 BANK0     17    14      3
                              _power
 ---------------------------------------------------------------------------------
 (6) _power                                                9     5      4    7554
                                              6 BANK0      9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _bluetoothSetupSwitch                                 0     0      0    9952
                     _resetBluetooth
                      _setDeviceName
                       _setSlaveMode
 ---------------------------------------------------------------------------------
 (5) _setSlaveMode                                        11    11      0     909
                                              8 BANK0     11    11      0
                        _writeEUSART
 ---------------------------------------------------------------------------------
 (5) _setDeviceName                                       24    24      0    9012
                                              8 BANK0     24    24      0
                            ___lwdiv
                             ___wmul
                        _writeEUSART
 ---------------------------------------------------------------------------------
 (5) _writeEUSART                                          8     5      3     872
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     703
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _resetBluetooth                                       0     0      0      31
                          __delay_us
 ---------------------------------------------------------------------------------
 (6) __delay_us                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _addDataToOutgoingQueue                              11     6      5    8849
                                              6 BANK0     11     6      5
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    7014
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _checkStatusBits                                      4     4      0    1141
                                              8 BANK0      4     4      0
           _addPacketToOutgoingQueue
 ---------------------------------------------------------------------------------
 (4) _addPacketToOutgoingQueue                             8     2      6    1076
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (2) _activateBluetooth                                    0     0      0    2188
                    _initialiseState
                     _initialiseUART
 ---------------------------------------------------------------------------------
 (3) _initialiseUART                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _initialiseState                                      3     0      3    2188
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _isr                                                15    15      0    7313
                                             29 COMRAM    15    15      0
            _RXReadyISRHandlerST7540
                _SPIISRHandlerST7540
                         _acOr36VISR
                              _msIsr
                         _readEUSART
                     _readTagRoutine
                    _sec4OverflowIsr
                      _us100DelayIsr
                           _us100Isr
                           _us500Isr
 ---------------------------------------------------------------------------------
 (11) _us500Isr                                            0     0      0       0
                       _eddCommsIsr4
 ---------------------------------------------------------------------------------
 (12) _eddCommsIsr4                                        0     0      0       0
                    i2_Set_Line_High
                     i2_Set_Line_Low
 ---------------------------------------------------------------------------------
 (13) i2_Set_Line_Low                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_Set_Line_High                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _us100Isr                                            0     0      0       0
                       _eddCommsIsr8
 ---------------------------------------------------------------------------------
 (12) _eddCommsIsr8                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _us100DelayIsr                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _sec4OverflowIsr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _readTagRoutine                                      1     1      0    4058
                                             27 COMRAM     1     1      0
                           _READ_TAG
                   _READ_TAG_REVERSE
                          _addNewTag
                            _tagFor0
                            _tagFor1
                       i2_setBlueLed
                  i2_tagForInterrupt
 ---------------------------------------------------------------------------------
 (12) i2_setBlueLed                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _tagFor1                                             0     0      0     298
                        i2__delay_ms
 ---------------------------------------------------------------------------------
 (12) _tagFor0                                             0     0      0     298
                        i2__delay_ms
 ---------------------------------------------------------------------------------
 (12) _addNewTag                                           7     7      0     734
                                             20 COMRAM     7     7      0
         i2_addPacketToOutgoingQueue
              i2_checkForExistingUID
 ---------------------------------------------------------------------------------
 (13) i2_checkForExistingUID                              14    12      2     348
                                              6 COMRAM    14    12      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (14) i2___wmul                                            6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (13) i2_addPacketToOutgoingQueue                          8     2      6     296
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (12) _READ_TAG_REVERSE                                    2     2      0    1318
                                             12 COMRAM     2     2      0
                        _CHECK_CRC16
                         _SCAN_TAG_1
                 _initialiseTagADC_1
 ---------------------------------------------------------------------------------
 (13) _initialiseTagADC_1                                  0     0      0      22
                        i2__delay_us
 ---------------------------------------------------------------------------------
 (13) _SCAN_TAG_1                                          3     1      2     851
                                              8 COMRAM     3     1      2
                          _UIO_MAK_1
                          _UIO_SAK_1
                        _UIO_WRITE_1
                        _UIO_noMAK_1
                             _rxWord
                        i2__delay_ms
                        i2__delay_us
 ---------------------------------------------------------------------------------
 (14) _UIO_noMAK_1                                         0     0      0      22
                        i2__delay_us
 ---------------------------------------------------------------------------------
 (14) _UIO_WRITE_1                                         5     5      0     136
                                              1 COMRAM     5     5      0
                        i2__delay_us
 ---------------------------------------------------------------------------------
 (14) _UIO_SAK_1                                           1     1      0      49
                                              1 COMRAM     1     1      0
                        i2__delay_us
 ---------------------------------------------------------------------------------
 (14) _UIO_MAK_1                                           0     0      0      22
                        i2__delay_us
 ---------------------------------------------------------------------------------
 (12) _READ_TAG                                            2     2      0    1318
                                             12 COMRAM     2     2      0
                        _CHECK_CRC16
                           _SCAN_TAG
                   _initialiseTagADC
 ---------------------------------------------------------------------------------
 (13) _initialiseTagADC                                    0     0      0      22
                        i2__delay_us
 ---------------------------------------------------------------------------------
 (13) _SCAN_TAG                                            3     1      2     851
                                              8 COMRAM     3     1      2
                            _UIO_MAK
                            _UIO_SAK
                          _UIO_WRITE
                          _UIO_noMAK
                             _rxWord
                        i2__delay_ms
                        i2__delay_us
 ---------------------------------------------------------------------------------
 (14) _rxWord                                              4     4      0     302
                                              4 COMRAM     4     4      0
                  _detectFallingEdge
                   _detectRisingEdge
                        i2__delay_us
 ---------------------------------------------------------------------------------
 (15) _detectRisingEdge                                    2     2      0      23
                                              2 COMRAM     2     2      0
                         _readTagADC
 ---------------------------------------------------------------------------------
 (15) _detectFallingEdge                                   2     2      0      23
                                              2 COMRAM     2     2      0
                         _readTagADC
 ---------------------------------------------------------------------------------
 (16) _readTagADC                                          2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _UIO_noMAK                                           0     0      0      22
                        i2__delay_us
 ---------------------------------------------------------------------------------
 (14) _UIO_WRITE                                           5     5      0     136
                                              1 COMRAM     5     5      0
                        i2__delay_us
 ---------------------------------------------------------------------------------
 (14) _UIO_SAK                                             1     1      0      49
                                              1 COMRAM     1     1      0
                        i2__delay_us
 ---------------------------------------------------------------------------------
 (14) _UIO_MAK                                             0     0      0      22
                        i2__delay_us
 ---------------------------------------------------------------------------------
 (13) _CHECK_CRC16                                         2     2      0     355
                                             10 COMRAM     2     2      0
                             _calcrc
 ---------------------------------------------------------------------------------
 (14) _calcrc                                             10     6      4     310
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (11) _readEUSART                                          0     0      0       0
                   _receiveBluetooth
              _receiveBluetoothSetup
 ---------------------------------------------------------------------------------
 (12) _receiveBluetoothSetup                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _receiveBluetooth                                    6     6      0       0
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (11) _msIsr                                               0     0      0     666
              _checkOutgoingMessages
                _stateCounterHandler
 ---------------------------------------------------------------------------------
 (12) _stateCounterHandler                                 0     0      0     666
                       _checkCounter
 ---------------------------------------------------------------------------------
 (13) _checkCounter                                        4     2      2     666
                                              0 COMRAM     4     2      2
                     _updateStateIds
 ---------------------------------------------------------------------------------
 (14) _updateStateIds                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _checkOutgoingMessages                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _acOr36VISR                                          0     0      0    2566
                         _checkPulse
                               _wake
 ---------------------------------------------------------------------------------
 (12) _wake                                                0     0      0    2566
                        i2__delay_ms
                  i2_initialiseModem
                 i2_initialiseStates
                   i2_reset4SecTimer
                  i2_tagForInterrupt
 ---------------------------------------------------------------------------------
 (12) i2_tagForInterrupt                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_initialiseStates                                  2     2      0     616
                                              3 COMRAM     2     2      0
                  i2_initialiseState
 ---------------------------------------------------------------------------------
 (13) i2_initialiseModem                                   1     1      0    1652
                                             28 COMRAM     1     1      0
                       i2_InitST7540
                 i2_initialiseQueues
                  i2_initialiseState
 ---------------------------------------------------------------------------------
 (14) i2_initialiseState                                   3     0      3     548
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (14) i2_initialiseQueues                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_InitST7540                                       12    12      0    1080
                                             16 COMRAM    12    12      0
                   i2_InitST7540Pins
                 i2_ReadConfigST7540
                i2_WriteConfigST7540
             i2_initST7540Interrupts
 ---------------------------------------------------------------------------------
 (15) i2_initST7540Interrupts                              0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i2_WriteConfigST7540                                11     5      6     603
                                              5 COMRAM    11     5      6
                        i2__delay_ms
 ---------------------------------------------------------------------------------
 (13) i2__delay_ms                                         4     2      2     298
                                              1 COMRAM     4     2      2
                        i2__delay_us
 ---------------------------------------------------------------------------------
 (14) i2__delay_us                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) i2_ReadConfigST7540                                  9     5      4     253
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (15) i2_InitST7540Pins                                    0     0      0       0
                    i2_initST7540PPS
 ---------------------------------------------------------------------------------
 (16) i2_initST7540PPS                                     0     0      0       0
                          i2_ppsLock
                        i2_ppsUnlock
 ---------------------------------------------------------------------------------
 (17) i2_ppsUnlock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (17) i2_ppsLock                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _checkPulse                                          0     0      0       0
                     _reset13msTimer
                   i2_reset4SecTimer
 ---------------------------------------------------------------------------------
 (13) i2_reset4SecTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _reset13msTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _SPIISRHandlerST7540                                 1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RXReadyISRHandlerST7540                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _device
     _activateBluetooth
       _initialiseState
       _initialiseUART
     _checkStatusBits
       _addPacketToOutgoingQueue
     _currentStateHandler
       _bluetooth
         _addDataToOutgoingQueue
           ___wmul
         _bluetoothSetupSwitch
           _resetBluetooth
             __delay_us
           _setDeviceName
             ___lwdiv
             ___wmul
             _writeEUSART
           _setSlaveMode
             _writeEUSART
         _processBTPacket
           _checkBluetoothCRC
             _bluetoothCRC
               _power
                 ___wmul
           _checkForExistingUID
             ___wmul
         _sendPacket
           _bluetoothCRC
             _power
               ___wmul
           _writeEUSART
       _bluetoothStateHandler
       _incomingCommands
         _ReceiveNewDataST7540
         _addPacketToIncomingQueue
           _PacketDataST7540
           _PacketReadParamST7540
             _CheckCRCST7540
               _CRC16
         _handleIncomingQueuePacket
           _addDataToOutgoingQueue
             ___wmul
       _incomingCommandsStateHandler
         _DataReadyST7540
       _led
         _setBlueLed
         _setGreenLed
         _setOffLed
         _setRedLed
       _ledStateHandler
         _checkIfTagIsRemoved
       _outgoingMessages
         _StartTransmitST7540
         _buildMessageST7540
           _CRC16
       _outgoingMessagesStateHandler
         _LineIdleST7540
         _TransmitBusyST7540
       _readKeyCable
       _readKeyCableStateHandler
         _readEDDADC
           __delay_us
           _readEDDADCSetup
             __delay_us
           _variance
             ___lldiv
             ___wmul
         _readS1StateADC
           __delay_us
           _readS1StateADCSetup
             __delay_us
           _variance
             ___lldiv
             ___wmul
       _readSupply
       _readSupplyStateHandler
         _readBatteryADC
           __delay_us
           _readBatteryADCSetup
             __delay_us
           _variance
             ___lldiv
             ___wmul
         _readMainsInterval
       _shaftTest
       _shaftTestStateHandler
         _readCableADC
           __delay_us
           _readCableADCSetup
             __delay_us
           _variance
             ___lldiv
             ___wmul
         _readEarthADC
           __delay_us
           _readEarthADCSetup
             __delay_us
           _variance
             ___lldiv
             ___wmul
     _disengageRelay
     _fire
       _EDD_Blast
         _Delay_ms
           _Delay_100us
         _Tx_Word
           _Delay_500us
           _Delay_ms
             _Delay_100us
           _Set_Line_High
           _Tx_0
             _Delay_500us
             _Delay_500us_X
           _Tx_1
             _Delay_500us
             _Delay_500us_X
       _EDD_Energy_Store
         _Delay_ms
           _Delay_100us
         _Tx_Word
           _Delay_500us
           _Delay_ms
             _Delay_100us
           _Set_Line_High
           _Tx_0
             _Delay_500us
             _Delay_500us_X
           _Tx_1
             _Delay_500us
             _Delay_500us_X
       _EDD_Init_Comms
         _Set_Line_High
         _initialiseEddADC
       __delay_ms
         __delay_us
       _addDataToOutgoingQueue
         ___wmul
       _checkForUnfiredEdds
         _Set_Line_High
         _Set_Line_Low
         __delay_ms
           __delay_us
         _checkLineForConnectedUIDs
           _commandResponse
             _Delay_ms
               _Delay_100us
             _Tx_Word
               _Delay_500us
               _Delay_ms
                 _Delay_100us
               _Set_Line_High
               _Tx_0
                 _Delay_500us
                 _Delay_500us_X
               _Tx_1
                 _Delay_500us
                 _Delay_500us_X
             _rxWordEDD
               _Delay_ms
                 _Delay_100us
               _detectFallingEdgeEDD
                 _readEddADC
               _detectRisingEdgeEDD
                 _readEddADC
       _fireUIDs
         _EDD_Calibrate
           _Delay_ms
             _Delay_100us
           _Set_Line_High
           _Tx_Calibration_Pulses
             _Delay_100us
             _Set_Line_High
             _Set_Line_Low
           _Tx_Word
             _Delay_500us
             _Delay_ms
               _Delay_100us
             _Set_Line_High
             _Tx_0
               _Delay_500us
               _Delay_500us_X
             _Tx_1
               _Delay_500us
               _Delay_500us_X
         _programRetryChecks
           _programUID
             _commandResponse
               _Delay_ms
                 _Delay_100us
               _Tx_Word
                 _Delay_500us
                 _Delay_ms
                   _Delay_100us
                 _Set_Line_High
                 _Tx_0
                   _Delay_500us
                   _Delay_500us_X
                 _Tx_1
                   _Delay_500us
                   _Delay_500us_X
               _rxWordEDD
                 _Delay_ms
                   _Delay_100us
                 _detectFallingEdgeEDD
                   _readEddADC
                 _detectRisingEdgeEDD
                   _readEddADC
       _initialiseStates
         _initialiseState
       _prepareForProgramming
         _Set_Line_High
         __delay_ms
           __delay_us
       _returnFromProgramming
         _Set_Line_Low
       _setRedLed
     _mainsSleep
       _Set_Line_Low
       __delay_ms
         __delay_us
       _modemSleep
       _setOffLed
       _sleep12V
       _sleepBluetooth
       _tagSleep
       _turnOffCableTest
     _mainsWake
       __delay_ms
         __delay_us
       _initialiseModem
         _InitST7540
           _InitST7540Pins
             _initST7540PPS
               _ppsLock
               _ppsUnlock
           _ReadConfigST7540
           _WriteConfigST7540
             __delay_ms
               __delay_us
           _initST7540Interrupts
         _initialiseQueues
         _initialiseState
       _initialiseStates
         _initialiseState
       _reset4SecTimer
       _tagForInterrupt
     _program
       _initialiseStates
         _initialiseState
       _prepareForProgramming
         _Set_Line_High
         __delay_ms
           __delay_us
       _programInitialise
         _EDD_Init_Comms
           _Set_Line_High
           _initialiseEddADC
         _clearEDDStatusbits
       _programUIDs
         _EDD_Calibrate
           _Delay_ms
             _Delay_100us
           _Set_Line_High
           _Tx_Calibration_Pulses
             _Delay_100us
             _Set_Line_High
             _Set_Line_Low
           _Tx_Word
             _Delay_500us
             _Delay_ms
               _Delay_100us
             _Set_Line_High
             _Tx_0
               _Delay_500us
               _Delay_500us_X
             _Tx_1
               _Delay_500us
               _Delay_500us_X
         __delay_ms
           __delay_us
         _addPacketToOutgoingQueue
         _checkLineForConnectedUIDs
           _commandResponse
             _Delay_ms
               _Delay_100us
             _Tx_Word
               _Delay_500us
               _Delay_ms
                 _Delay_100us
               _Set_Line_High
               _Tx_0
                 _Delay_500us
                 _Delay_500us_X
               _Tx_1
                 _Delay_500us
                 _Delay_500us_X
             _rxWordEDD
               _Delay_ms
                 _Delay_100us
               _detectFallingEdgeEDD
                 _readEddADC
               _detectRisingEdgeEDD
                 _readEddADC
         _programRetryChecks
           _programUID
             _commandResponse
               _Delay_ms
                 _Delay_100us
               _Tx_Word
                 _Delay_500us
                 _Delay_ms
                   _Delay_100us
                 _Set_Line_High
                 _Tx_0
                   _Delay_500us
                   _Delay_500us_X
                 _Tx_1
                   _Delay_500us
                   _Delay_500us_X
               _rxWordEDD
                 _Delay_ms
                   _Delay_100us
                 _detectFallingEdgeEDD
                   _readEddADC
                 _detectRisingEdgeEDD
                   _readEddADC
         _programUID
           _commandResponse
             _Delay_ms
               _Delay_100us
             _Tx_Word
               _Delay_500us
               _Delay_ms
                 _Delay_100us
               _Set_Line_High
               _Tx_0
                 _Delay_500us
                 _Delay_500us_X
               _Tx_1
                 _Delay_500us
                 _Delay_500us_X
             _rxWordEDD
               _Delay_ms
                 _Delay_100us
               _detectFallingEdgeEDD
                 _readEddADC
               _detectRisingEdgeEDD
                 _readEddADC
         _readUID
           _checkForExistingUID
             ___wmul
           _commandResponse
             _Delay_ms
               _Delay_100us
             _Tx_Word
               _Delay_500us
               _Delay_ms
                 _Delay_100us
               _Set_Line_High
               _Tx_0
                 _Delay_500us
                 _Delay_500us_X
               _Tx_1
                 _Delay_500us
                 _Delay_500us_X
             _rxWordEDD
               _Delay_ms
                 _Delay_100us
               _detectFallingEdgeEDD
                 _readEddADC
               _detectRisingEdgeEDD
                 _readEddADC
         _selfCheckUID
           _commandResponse
             _Delay_ms
               _Delay_100us
             _Tx_Word
               _Delay_500us
               _Delay_ms
                 _Delay_100us
               _Set_Line_High
               _Tx_0
                 _Delay_500us
                 _Delay_500us_X
               _Tx_1
                 _Delay_500us
                 _Delay_500us_X
             _rxWordEDD
               _Delay_ms
                 _Delay_100us
               _detectFallingEdgeEDD
                 _readEddADC
               _detectRisingEdgeEDD
                 _readEddADC
         _setBlueLed
       _returnFromProgramming
         _Set_Line_Low
       _setOffLed
     _sleep
       _Set_Line_Low
       ___wmul
       __delay_ms
         __delay_us
       _modemSleep
       _setOffLed
       _sleep12V
       _sleepBluetooth
       _tagSleep
       _turnOffCableTest
       _writeStructureToEeprom
         ___wmul (ARG)
         _writeByteToEeprom (ARG)
     _sleepBluetooth
     _writeStructureToEeprom
       ___wmul (ARG)
       _writeByteToEeprom (ARG)
   _deviceStateHandler
   _initialise
     _initialise12V
     _initialise24V
     _initialiseBluetooth
       _initialiseBluetoothPins
         _ppsLock
         _ppsUnlock
     _initialiseDetMemory
       ___wmul
       _clearEDDStatusbits
       _initialiseDetWindows
         ___wmul
       _readStructureFromEeprom
         ___wmul (ARG)
         _readByteFromEeprom (ARG)
     _initialiseEDDPins
     _initialiseLed
       _initialiseState
       _setOffLed
     _initialiseModem
       _InitST7540
         _InitST7540Pins
           _initST7540PPS
             _ppsLock
             _ppsUnlock
         _ReadConfigST7540
         _WriteConfigST7540
           __delay_ms
             __delay_us
         _initST7540Interrupts
       _initialiseQueues
       _initialiseState
     _initialisePic
     _initialiseReadKeyCable
       _initialiseState
     _initialiseReadSupply
       _initialiseState
     _initialiseShaftTest
       _initialiseState
     _initialiseTag
       _ppsLock
       _ppsUnlock
       _tagForInterrupt
     _initialiseTimer0
     _initialiseTimer1
     _initialiseTimer2
     _initialiseTimer4
     _initialiseTimer6
     _initialiseTimer8
     _initialiseWatchDogTimer
     _intialiseAcOr36V
       _initialiseACinterrupt
   _testMemory
     ___wmul

 _isr (ROOT)
   _RXReadyISRHandlerST7540
   _SPIISRHandlerST7540
   _acOr36VISR
     _checkPulse
       _reset13msTimer
       i2_reset4SecTimer
     _wake
       i2__delay_ms
         i2__delay_us
       i2_initialiseModem
         i2_InitST7540
           i2_InitST7540Pins
             i2_initST7540PPS
               i2_ppsLock
               i2_ppsUnlock
           i2_ReadConfigST7540
           i2_WriteConfigST7540
             i2__delay_ms
               i2__delay_us
           i2_initST7540Interrupts
         i2_initialiseQueues
         i2_initialiseState
       i2_initialiseStates
         i2_initialiseState
       i2_reset4SecTimer
       i2_tagForInterrupt
   _msIsr
     _checkOutgoingMessages
     _stateCounterHandler
       _checkCounter
         _updateStateIds
   _readEUSART
     _receiveBluetooth
     _receiveBluetoothSetup
   _readTagRoutine
     _READ_TAG
       _CHECK_CRC16
         _calcrc
       _SCAN_TAG
         _UIO_MAK
           i2__delay_us
         _UIO_SAK
           i2__delay_us
         _UIO_WRITE
           i2__delay_us
         _UIO_noMAK
           i2__delay_us
         _rxWord
           _detectFallingEdge
             _readTagADC
           _detectRisingEdge
             _readTagADC
           i2__delay_us
         i2__delay_ms
           i2__delay_us
         i2__delay_us
       _initialiseTagADC
         i2__delay_us
     _READ_TAG_REVERSE
       _CHECK_CRC16
         _calcrc
       _SCAN_TAG_1
         _UIO_MAK_1
           i2__delay_us
         _UIO_SAK_1
           i2__delay_us
         _UIO_WRITE_1
           i2__delay_us
         _UIO_noMAK_1
           i2__delay_us
         _rxWord
           _detectFallingEdge
             _readTagADC
           _detectRisingEdge
             _readTagADC
           i2__delay_us
         i2__delay_ms
           i2__delay_us
         i2__delay_us
       _initialiseTagADC_1
         i2__delay_us
     _addNewTag
       i2_addPacketToOutgoingQueue
       i2_checkForExistingUID
         i2___wmul
     _tagFor0
       i2__delay_ms
         i2__delay_us
     _tagFor1
       i2__delay_ms
         i2__delay_us
     i2_setBlueLed
     i2_tagForInterrupt
   _sec4OverflowIsr
   _us100DelayIsr
   _us100Isr
     _eddCommsIsr8
   _us500Isr
     _eddCommsIsr4
       i2_Set_Line_High
       i2_Set_Line_Low

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DDD      0     395      33       25.8%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C0      12       75.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      9A      10       60.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      2      FC       7       98.4%
BITBANK13           DE      0       0      31        0.0%
BANK13              DE      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     43      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      56       1       91.5%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     34B       8        0.0%
DATA                 0      0     6E0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Aug 22 10:15:32 2017

                         ?_InitST7540Pins 0001               readStructureFromEeprom@size 0068  
                           ?_bluetoothCRC 006F                      __end_ofi2_setBlueLed 7BC4  
                  __size_of_initST7540PPS 001C                 __end_of_readMainsInterval 726E  
                                       _j 0045                       ??_readCableADCSetup 0061  
                       i2_initialiseModem 6DBA             __size_of_initST7540Interrupts 0018  
                       i2_initialiseState 6BD6                               __CFG_CP$OFF 000000  
                   __end_of_us100DelayIsr 7BBC                 ??_readStructureFromEeprom 006A  
                                      _ii 0040                                        _tx 003C  
            __size_of_detectRisingEdgeEDD 0052                       ___wmul@multiplicand 0062  
                      ?i2_initialiseModem 0001             detectRisingEdge@currentTagADC 0003  
                      ?i2_initialiseState 0001                              UIO_SAK_1@SAK 0002  
                      _readByteFromEeprom 6D20                        i2_initialiseQueues 7954  
                      i2_initialiseStates 5DC6                               __CFG_LVP$ON 000000  
                                     l200 1EB6                                       l201 1EC2  
                                     l130 2A4E                                       l210 1EF6  
                                     l203 1ECA                                       l212 1F14  
                                     l204 1ED2                                       l133 2A7E  
                                     l141 1D1A                                       l134 2A8C  
                                     l214 1F30                                       l206 1EEA  
                                     l150 1D4E                                       l135 2A9A  
                                     l215 1F28                                       l143 1D22  
                                     l160 1DB4                                       l152 1D6C  
                                     l161 1DAC                                       l145 1D3E  
                                     l218 1F38                                       l410 0CD8  
                                     l323 7B3E                                       l171 1DF2  
                                     l155 1D80                                       l147 1D36  
       __size_of_readKeyCableStateHandler 00AE                                       l164 1DC2  
                                     l317 7B4A                                       l181 1E42  
                                     l173 1E06                                       l149 1D46  
                                     l190 1E8A                                       l415 1D16  
                                     l183 1E4A                                       l175 1E0E  
                                     l336 7674                                       l192 1E82  
                                     l184 1E52                                       l329 7B00  
                                     l185 1E5A                                       l169 1DEA  
                                     l194 1E92                                       l186 1E62  
                                     l178 1E26                                       l603 5388  
                                     l195 1EA6                                       l187 1E6E  
                                     l179 1E2E                                       l380 6D5E  
                                     l197 1E9E                                       l189 1E76  
                                     l710 5B3A                                       l374 6480  
                                     l199 1EAE                                       l720 3EBC  
                                     l721 3E98                                       l705 5B0A  
                                     l716 3E7A                                       l708 5B20  
                                     l709 5B44                                       l752 798A  
                                     l592 550E                                       l818 3CD6  
                                     l844 5894                                       l772 4F2C  
                                     l773 4F36                                       l872 411C  
                                     l874 4120                       __end_ofi2_ppsUnlock 7866  
                          _LineIdleST7540 7B52                               _UIO_noMAK_1 7A5E  
                                     _PR2 000FBC                                       _PR4 000FB6  
                            __CFG_CPD$OFF 000000                                       _PR6 000FB0  
                                     _PR8 000F29                 ?_readKeyCableStateHandler 0001  
                        ?_commandResponse 006A                         ?_ReadConfigST7540 0060  
             __size_of_initialiseTagADC_1 0034                         _activateBluetooth 719C  
                                     _led 3978                        __size_of_EDD_Blast 0068  
                                     _isr 0008                                       prod 000FF3  
                                     wreg 000FE8              __size_of_initialiseDetMemory 00CA  
                   __end_of_setDeviceName 3E76                       ??i2_initialiseModem 001D  
                      selfCheckUID@window 0075                        ??_ReadConfigST7540 0064  
                     ??i2_initialiseState 0004                          i2_reset4SecTimer 7AA6  
                      ?_activateBluetooth 0001                       ?_readByteFromEeprom 0060  
                     ?i2_initialiseQueues 0001                       ?i2_initialiseStates 0001  
                    __size_of_CHECK_CRC16 0038                     __end_of_EDD_Calibrate 723A  
                      bluetoothCRC@intCrc 007E                               i2__delay_ms 712E  
                             i2__delay_us 7730                        bluetoothCRC@length 0071  
                             ?_SCAN_TAG_1 0009                   ?_writeStructureToEeprom 0066  
                            __CFG_ZCD$OFF 000000                          ??_initialiseUART 0060  
               __end_of_readCableADCSetup 73F4                                      l2103 6A66  
                                    l1081 4926                                      l1090 7246  
                                    l2050 176C                                      l1076 48A4  
                                    l2117 61C0                                      l1077 48A6  
                                    l2053 1738                                      l2045 1588  
                                    l2403 46D8                                      l2251 4B92  
                                    l3204 5678                                      l2404 46DA  
                                    l2252 4BB6                                      l2166 6958  
                                    l1454 2B7C                                      l2255 4BBA  
                                    l1640 4A72                                      l2360 4FA4  
                                    l2408 475A                                      l2248 4B6A  
                                    l1633 4A0C                                      l2361 4FB2  
                                    l2363 4FE0                                      l1644 4AF2  
                                    l1628 498A                                      l2613 6700  
                                    l1629 498C                                      l2357 4F8A  
                                    l2277 37D4                                      l2630 10CE  
                                    l2702 4636                                      l2390 47C0  
                                    l1639 4A70                                      l2704 4644  
                            _BAUD3CONbits 000EF0                                      l3257 62B4  
                                    l2609 66B6                                      l2633 10E4  
                                    l2642 1364                                      l2394 4840  
                                    l2635 1108                                      l2707 465A  
                                    l1931 6CC4                                      l2732 62D6  
                                    l2389 47BE                                      l1941 7576  
                                    l1790 651E                                      l1918 5D26  
                                    ?_led 0001                                      l2647 1400  
                                    l2680 35C8                                      l1936 68EA  
                                    l1864 2264                                      l2681 35E0  
                                    l2676 3568                                      l2679 35B0  
                                    l2688 45D2                                      l2697 4610  
                                    ?_isr 0001                              _UIO_data_out 0042  
                                    u9210 57F6                                      i2l91 008E  
                                    u9300 32D8                                      u9060 3B12  
                                    u9310 32E8                                      u9302 32DA  
                                    i2l96 0142                                      u9320 32F6  
                                    u9312 32EA                                      u9330 32F8  
                                    u9090 3B50                                      u9450 5A68  
                                    u9740 5D26                                      u9830 6456  
                                    u9860 1A78                                      u9781 7488  
                                    u9791 3D4E                                      u9880 44B2  
                                    _TMR0 000FD3                                      _TMR1 000FCD  
                                    u9890 44D2                                      _TMR2 000FBB  
                                    _TMR4 000FB5                                      _TMR6 000FAF  
                                    _TMR8 000F28                         ??_readEDDADCSetup 0061  
                                    _Tx_0 78EC                                      _Tx_1 78D2  
                           __CFG_FCMEN$ON 000000                       ??_activateBluetooth 0063  
           detectRisingEdgeEDD@currentADC 0065               __end_of_checkIfTagIsRemoved 7B6A  
                                    _fire 4B38                                      _main 6836  
                         ?i2_Set_Line_Low 0001                           __end_of_UIO_MAK 7AA6  
                         __end_of_UIO_SAK 7398              __size_of_initialiseBluetooth 0006  
                                    _wake 6F5C                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0057  
          __size_of_checkOutgoingMessages 0008                      readCableADC@ADCStore 0086  
           __end_of_checkOutgoingMessages 7BCC                    __end_of_updateStateIds 7506  
                programUID@levelOfSuccess 0086                                      prodh 000FF4  
                                    prodl 000FF3                                      start 017E  
           buildMessageST7540@packetCRCUS 0077                             __CFG_CSWEN$ON 000000  
               __end_ofi2_initialiseModem 6E04                      ??_readByteFromEeprom 0062  
          __size_of_Tx_Calibration_Pulses 0096                            ??_bluetoothCRC 0072  
                    ??i2_initialiseQueues 0001                      ??i2_initialiseStates 0004  
           __end_of_Tx_Calibration_Pulses 5D30                 __end_ofi2_initialiseState 6C2C  
                            ___param_bank 000000            detectFallingEdge@currentTagADC 0003  
           __size_of_initialiseDetWindows 00C2                              UIO_WRITE@cmd 0004  
                             _writeEUSART 66A6                             __CFG_SCANE$ON 000000  
                  i2_initST7540Interrupts 79CE             __size_of_bluetoothSetupSwitch 0038  
               __size_of_intialiseAcOr36V 000C                                     ??_led 0060  
                                   ??_isr 001E      readSupplyStateHandler@batteryVoltage 0094  
                  __end_of_LineIdleST7540 7B5E                __end_of_clearEDDStatusbits 1D18  
                                   ?_Tx_0 0001                                     ?_Tx_1 0001  
                            programUIDs@i 0096                 _handleIncomingQueuePacket 40C2  
                                   l13000 62DE                                     l13002 62EA  
                                   l13020 6E26                                     l13006 630C  
                                   l13014 6E06                                     l13200 5A86  
                                   l13016 6E10                                     l14000 22F4  
                                   l13114 3388                                     l13026 6E34  
                                   l13108 3348                                     l13116 338E  
                                   l13300 4EC0                                     l13124 55FC  
                                   l14012 2328                                     l14100 0D20  
                                   l13150 6276                                     l13310 4F00  
                                   l13126 560C                                     l13070 51C0  
                                   l13062 516A                                     l14030 2460  
                        __end_of_READ_TAG 641A                                     l13304 4ED4  
                                   l13136 5666                                     l13128 5612  
                                   l14032 246A                                     l14024 2404  
                                   l14008 2324                                     l14120 0FC8  
                                   l14112 0E7C                                     l13146 6264  
                                   l13322 4F54                                     l13074 51C4  
                                   l13066 51A0                                     l13058 514A  
                                   l14042 24DC                                     l14050 24E8  
                                   l14114 0EE8                                     l14106 0D9C  
                                   l13148 6270                                     l13092 66D6  
                                   l13316 4F40                                     l13180 28BC  
                                   l13164 2748                                     l13076 51CA  
                                   l13500 5CC8                                     l14036 2480  
                                   l14124 103C                                     l14108 0E08  
                                   l15100 172E                                     l13334 2D5C  
                                   l13158 62A6                                     l14222 3832  
                                   l14206 46FE                                     l14214 4780  
                                   l13510 5CEA                                     l14062 65EC  
                                   l13270 3E8E                                     l13254 5B16  
                                   l14046 24E4                                     l14134 10B6  
                                   l14126 10A8                                     l14118 0F5C  
                                   l13336 2D76                                     l14320 70D2  
                                   l13096 326E                                     l13176 27FE  
                                   l13168 278C                                     l14144 6730  
                                   l13504 5CDE                                     l14080 660E  
                                   l14072 6606                                     l14056 65DC  
                                   l13354 2DE4                                     l13338 2D9E  
                                   l14314 70C0                                     l13098 3278  
                                   l13194 5A7C                                     l14250 1102  
                                   l14306 1404                                     l14226 3884  
                                   l14410 5BA0                                     l14154 676C  
                                   l14090 6616                                     l14138 10BA  
                                   l15106 1740                                     l14330 6EA0  
                                   l16002 688C                                     l13364 2E60  
                                   l14316 70C6                                     l14324 70D8  
                                   l13188 5A14                                     l14252 110C  
                                   l14308 1428                                     l14404 5B88  
                                   l14148 6760                                     l14084 6612  
                                   l14076 660A                                     l13358 2DF4  
                                   l14318 70CC                                     l13198 5A80  
                                   l14262 1144                                     l14422 5BC8  
                                   l14430 595C                                     l14510 5108  
                                   l15310 30F2                                     l13518 5D0E  
                                   l13462 2188                                     l15142 36CE  
                                   l15070 1590                                     l15046 145C  
                                   l14334 6EC2                                     l14342 6CFE  
                         __end_of_Tx_Word 6568                                     l13376 2EEE  
                                   l14280 1304                                     l14272 11CA  
                                   l13800 1962                                     l14416 5BB4  
                                   l14440 5990                                     l14432 5964  
                                   l14520 44FA                                     l14184 47E4  
                                   l14192 4866                                     l15304 30DE  
                                   l12920 652A                                     l15152 3768  
                                   l15144 36D4                                     l14096 0CF0  
                                   l15056 1482                                     l15072 15BC  
                                   l13642 5808                                     l12842 7684  
                                   l14290 1380                                     l14266 115A  
                                   l14258 1130                                     l14602 6210  
                                   l14426 5BD8                                     l14442 5998  
                                   l14506 50FC                                     l14514 44E0  
                                   l15322 311A                                     l12922 652E  
                                   l13466 21BC                                     l14354 6A50  
                                   l15066 151C                                     l15058 1488  
                                   l14362 5458                                     l14338 6CDC  
                                   l13580 4006                                     l14620 399A  
                                   l14612 397A                                     l14700 2BBC  
                                   l14604 6218                                     l14452 59CC  
                                   l14444 59A0                                     l14540 4562  
                                   l14532 453E                                     l15316 3106  
                                   l12772 6902                                     l12940 3AE6  
                                   l15180 2536                                     l13492 5CA4  
                                   l15156 37DC                                     l14380 5356  
                                   l13732 44D6                                     l14356 6A54  
                                   l15092 1696                                     l15084 1672  
                                   l14286 136E                                     l14710 2BEE  
                                   l14702 2BC4                                     l14606 6220  
                                   l14454 59D4                                     l14446 59A8  
                                   l14438 5988                                     l14462 505C  
                                   l14550 4596                                     l14534 4546  
                                   l14518 44F2                                     l12774 690C  
                                   l12926 653E                                     l15190 26F2  
                                   l13486 2288                                     l15158 3808  
                                   l15086 167C                                     l14366 546E  
                                   l14296 1390                                     l12880 3C34  
                                   l14800 6810                                     l14640 39EA  
                                   l14632 39CA                                     l14624 39AA  
                                   l14616 398A                                     l14720 2C2A  
                                   l14712 2C00                                     l14704 2BD6  
                                   l13744 7B5A                                     l14608 6228  
                                   l14456 59DC                                     l14472 5080  
                                   l14544 457A                                     l14528 4526  
                                   l14560 45BE                                     l15352 31D2  
                                   l15328 312E                                     l15336 3142  
                                   l12784 692E                                     l12928 6554  
                                   l12952 3B1A                                     l12944 3B02  
                                   l15184 267E                                     l13496 5CBA  
                                   l14384 536C                                     l15096 170A  
               __end_of_activateBluetooth 71D2                                     l13586 404A  
                                   l12890 3C62                                     l14802 6818  
                                   l14730 2C5C                                     l14722 2C32  
                                   l14714 2C08                                     l14706 2BDE  
                                   l13754 17A4                                     l14394 5B5C  
                                   l14458 59E4                                     l13914 48CA  
                                   l13922 494C                                     l14554 45AE  
                                   l14546 4582                                     l15338 3176  
                                   l12778 6922                                     l12786 6934  
                                   l12954 3B24                                     l15178 252A  
                                   l13690 1A7A                                     l13596 40BE  
                                   l14900 3584                                     l13860 414C  
                                   l13844 40E0                                     l14660 3A3A  
                                   l14652 3A1A                                     l14644 39FA  
                                   l14636 39DA                                     l14628 39BA  
                                   l14740 2C8E                                     l14732 2C64  
                                   l14724 2C3A                                     l14716 2C10  
                                   l14708 2BE6                                     l14564 6772  
                                   l14580 67B6                                     l14476 5090  
                                   l14556 45B6                                     l14820 4FD0  
                                   l15348 3194                                     l15356 3214  
                                   l15292 30B6                                     l12972 3BA6  
                                   l15188 26EC                                     l15700 036C  
                                   l14902 3590                                     l12894 3CCE  
                                   l12886 3C58                                     l13862 416E  
                                   l14750 2CC0                                     l14742 2C96  
                                   l14734 2C6C                                     l14726 2C42  
                                   l14718 2C18                                     l14574 679A  
                                   l14566 677E                                     l14590 61DC  
                                   l14398 5B70                                     l14486 50B4  
                                   l12982 3BD4                                     l12966 3B58  
                                   l12958 3B40                                     l15470 4B7E  
                                   l13880 3058                                     l13856 4124  
                                   l14664 3A4A                                     l14656 3A2A  
                                   l14648 3A0A                                     l14752 2CC8  
                                   l14744 2C9E                                     l14736 2C74  
                                   l14728 2C54                                     l14680 2B56  
                                   l14576 67A6                                     l14592 61E4  
                                   l14496 50D8                                     l14808 4F98  
                                   l12968 3B8A                                     l12984 3BE4  
                                   l15632 5222                                     l15712 0550  
                                   l12898 3CE4                                     l13866 4190  
                                   l14770 696C                                     l14674 3A6A  
                                   l14754 2CD0                                     l14746 2CB0  
                                   l14738 2C86                                     l14690 2B8A  
                                   l14762 2CFE                                     l13794 18CC  
                                   l14594 61EC                                     l14586 61CC  
                                   l13970 49B0                                     l14850 501E  
                                   l14834 4FFC                                     l15298 30CA  
                                   l12986 3BF0                                     l12978 3BB8  
                                   l15810 29B2                                     l15730 0756  
                                   l15706 0390                                     l14932 3610  
                                   l14924 35F8                                     l13876 2FE8  
                                   l13868 41D0                                     l14772 6978  
                                   l14668 3A5A                                     l14748 2CB8  
                                   l14756 2CD8                                     l14692 2B92  
                                   l13796 18D2                                     l13948 4A96  
                                   l13956 4B18                                     l14852 502A  
                                   l15812 29B8                                     l15804 29A4  
                                   l15724 0732                                     l14942 3664  
                                   l14950 45E8                                     l14782 6998  
                                   l14758 2CF6                                     l14694 2B9A  
                                   l14686 2B74                                     l13894 724E  
                                   l14862 56A4                                     l15902 1D56  
                                   l15742 0938                                     l15718 0574  
                                   l14776 6988                                     l14792 67F0  
                                   l14696 2BAC                                     l14688 2B82  
                                   l13896 7254                                     l14880 5704  
                                   l14872 56D8                                     l14864 56AC  
                                   l14856 568C                                     l15816 29C2  
                                   l15736 0914                                     l14890 353E  
                                   l14962 461E                                     l14954 45F8  
                                   l14786 67D6                                     l14698 2BB4  
                                   l13978 4A32                                     l14882 570C  
                                   l14874 56E0                                     l14866 56B4  
                                   l14858 5694                                     l15850 2A20  
                                   l15834 29F4                                     l15818 29C8  
                                   l15770 2952                                     l15762 2940  
                                   l15914 1D88                                     l15754 0B1A  
                                   l14892 354A                                     l14972 4652  
                                   l14964 4626                                     l14956 4600  
                                   l14948 45E0                                     l14980 4678  
                                   l14796 6800                                     l14788 67DE  
                                   l14876 56E8                                     l14868 56BC  
                                   l13996 22C4                                     l15764 2946  
                                   l15940 1E16                                     l15932 1DDA  
                                   l15748 0AF6                                     l14894 3556  
                                   l14966 462E                                     l14958 4608  
                                   l14798 6808                                     l14886 5714  
                                   l15870 2A6C                                     l15918 1D98  
                                   l15694 01AC                                     l14976 4668  
                                   l15856 2A3A                                     l15776 2960  
                                   l15928 1DCA                                     l14978 4670  
                                   l15874 2A74                                     l15962 1EFE  
                                   l15956 1EDA                       bluetoothCRC@testBit 0078  
                                   l15798 2996                                     l15894 2AC8  
                                   l15888 2ABE                                     l15976 1F40  
                                   l15898 1D2A                                     ?_fire 0001  
                                   _ABB_1 03C0                                     ?_main 0001  
                                   _ADCLK 000F57                                     _ADPCH 000F5F  
                        __end_of_SCAN_TAG 4DD6                                     _ADREF 000F58  
                   __size_of_eddCommsIsr4 0014                     __size_of_eddCommsIsr8 0096  
                                   _ADRES 000F63                                     _CRC16 3C10  
                                   ?_wake 0001                         ??_initialiseModem 007C  
                         __end_of___lldiv 568A                                     u10100 4AF2  
                                   _FLAGS 0037                                     u10050 4926  
                                   u10140 4A0C                                     u10070 7B66  
                                   u11220 6A96                                     u10420 4840  
                                   u11300 01AA                                     u11400 0B18  
                                   u11320 038E                                     u10460 475A  
                                   u11340 0572                 __size_of_READ_TAG_REVERSE 0074  
                                   u10550 1364                                     u11360 0754  
                                   u10650 5978                                     u11380 0936  
                                   u10670 59BC           i2checkForExistingUID@currentUID 0011  
           checkForExistingUID@currentUID 0070                            __CFG_DEBUG$OFF 000000  
                         __end_of___lwdiv 62BE                    ?_returnFromProgramming 0001  
                                   i2l336 7734                                     i2l603 5E5A  
                                   i2l293 4E64                                     i2l710 608A  
                       ??_initialiseState 0063                             _outgoingQueue 0100  
                                   i2l720 4214                                     i2l721 41F4  
                                   i2l705 6060                                     i2l730 65D0  
                                   i2l716 41DA                                     i2l708 6072  
                                   i2l709 6092                                     i2l727 65A0  
                                   i2l844 5944                   __end_of_sec4OverflowIsr 79B6  
            __size_of_SPIISRHandlerST7540 006E                                     _TMR0H 000FD4  
                                   _TMR0L 000FD3                               _Delay_100us 7AFA  
            __size_of_initialiseShaftTest 0038                               _Delay_500us 7B46  
                            __delay_us@us 0060                 __size_of_turnOffCableTest 0004  
                      readEDDADC@ADCStore 0086                   __end_of_tagForInterrupt 77A2  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
            ReadConfigST7540@configDataUS 0062                    ?_shaftTestStateHandler 0001  
                 __size_of_readS1StateADC 00E6                            __CFG_EBTR0$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000            __end_of_writeStructureToEeprom 6ED8  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                      selfCheckUID@attempts 0080  
                             readEDDADC@i 0092                                     _dataR 018E  
                          __CFG_EBTRB$OFF 000000                             _initST7540PPS 77A2  
                        ?i2_Set_Line_High 0001            detectFallingEdgeEDD@currentADC 0065  
                         __end_of_readUID 24EC                           __end_of_tagFor0 7954  
                         __end_of_tagFor1 793A                                     _index 0044  
                                   _msIsr 4DD6                                     _sleep 42E2  
                      __CFG_MCLRE$EXTMCLR 000000               __end_of_checkForExistingUID 5AB6  
                                   _power 62BE                                     _state 01A7  
                      __size_of_UIO_MAK_1 0012           __end_of_readStructureFromEeprom 6D20  
                ?_initialiseBluetoothPins 0001                        __size_of_UIO_SAK_1 0030  
                 __end_of_checkStatusBits 6ACC            ??_incomingCommandsStateHandler 0060  
           readS1StateADC@currentVariance 0090                                     pclath 000FFA  
                         __end_of_ppsLock 77F6                            _EDD_Init_Comms 79FC  
                                   tablat 000FF5                             power@exponent 0068  
                      __size_of_UIO_WRITE 005A                          __end_ofi2___wmul 766E  
                         __end_of_program 7786                                     plusw1 000FE3  
                                   plusw2 000FDB                        variance@sampleSize 006F  
                              _InitST7540 43E8                                     status 000FD8  
                   _bluetoothStateHandler 45D0               i2ReadConfigST7540@discardUC 0008  
                           ?_readCableADC 0082                        __size_of_UIO_noMAK 0012  
                    selfCheckUID@txPacket 007D                          __end_of_Delay_ms 6956  
                         ?_updateStateIds 0001                  __size_ofi2_initST7540PPS 001C  
           i2ReadConfigST7540@frameDataUS 0001                         __end_of_EDD_Blast 66A6  
                     UIO_WRITE_1@uio_data 0005                            _reset13msTimer 7AB8  
                         __initialization 5BFC      __end_of_outgoingMessagesStateHandler 6246  
   __size_of_outgoingMessagesStateHandler 0088              _outgoingMessagesStateHandler 61BE  
                            __end_of_Tx_0 7906                              __end_of_Tx_1 78EC  
                 ??_initialiseACinterrupt 0060               __end_of_currentStateHandler 3258  
                            _eddCommsIsr4 7A26                              _eddCommsIsr8 5D30  
                            __end_of_fire 4C1A                              __end_of_main 6896  
               __size_of_EDD_Energy_Store 0042                   __size_of_resetBluetooth 001A  
                            __end_of_wake 6F9C                __size_of_readMainsInterval 0034  
              detectFallingEdgeEDD@change 0064                             ?_readEarthADC 0082  
                             i2_ppsUnlock 784A                  __end_of_detectRisingEdge 76F2  
          __size_of_prepareForProgramming 004A                       __size_of_SCAN_TAG_1 00DE  
           __end_of_prepareForProgramming 6DBA                          ??_disengageRelay 0060  
             __end_of_StartTransmitST7540 799E                                    CRC16@i 0068  
                         ?_LineIdleST7540 0001            __size_ofi2_checkForExistingUID 0092  
             ?i2_addPacketToOutgoingQueue 0001                  _addPacketToOutgoingQueue 57FA  
                                  ??_Tx_0 0060                                    ??_Tx_1 0060  
           __end_ofi2_checkForExistingUID 5F82                             i2__delay_ms@i 0004  
                           ?_readKeyCable 0001                              ?_setGreenLed 0001  
             __size_of_programRetryChecks 0068                        __size_ofi2_ppsLock 001C  
                                  ??_fire 0097                                    ??_main 00A3  
                                  ?_CRC16 0060                                    ??_wake 001E  
              EDD_Blast@EDD_blast_command 006A             __size_of_initialiseReadSupply 0020  
             __end_of_readBatteryADCSetup 7422                             __activetblptr 000002  
                       ?_initialiseEddADC 0001           PacketReadParamST7540@retValueUS 007A  
                 i2initialiseState@number 0003                      bluetoothCRC@loopBits 007C  
                       ?_initialiseTagADC 0001                        ??_initialiseEddADC 0060  
                          ?_initST7540PPS 0001                      _detectFallingEdgeEDD 6896  
                       ?_initialiseTimer0 0001                         ?_initialiseTimer1 0001  
                       ?_initialiseTimer2 0001                         ?_initialiseTimer4 0001  
                       ?_initialiseTimer6 0001                         ?_initialiseTimer8 0001  
                                  _ADCON1 000F59                    __end_of_EDD_Init_Comms 7A12  
                      ??_initialiseTagADC 0002                                 ??_UIO_MAK 0002  
                                  ?_msIsr 0001                                 ??_UIO_SAK 0002  
                       ?_initialiseQueues 0001                         ?_initialiseStates 0001  
              __size_of_readCableADCSetup 002E                                    ?_sleep 0001  
                                  ?_power 0066                ?_checkLineForConnectedUIDs 0001  
                                  _RC3REG 000EEA                        ??_initialiseTimer0 0060  
                      ??_initialiseTimer1 0060                        ??_initialiseTimer2 0060  
                      ??_initialiseTimer4 0060                        ??_initialiseTimer6 0060  
                                  _RE0PPS 000E72                        ??_initialiseTimer8 0060  
                                  _RC7PPS 000E69                                 CRC16@data 0069  
                                  i2l2103 6DFA                                    i2l1332 79C0  
                                  i2l1246 6B38                                    i2l1255 6ADE  
                                  i2l1248 6B4A                                    i2l1344 7278  
                                  i2l1257 6AF0                                    i2l1338 72AC  
                                  i2l1757 5D9A                                    i2l2752 53B8  
                                  i2l2744 6FD4                                    i2l2754 53BE  
                                  i2l2836 6E70                                    i2l7502 79AE  
                                  i2l9130 41EC                                    i2l9114 606A  
                                  _FVRCON 000EC4                                    i2l7486 7AD2  
                                  i2l9520 737E                                    i2l6928 7A34  
                                  i2l9602 6B02                                    i2l8388 7744  
                                  i2l8580 7148                                    i2l9604 6B1C  
                                  i2l8574 7130                                    i2l9526 738C  
                                  i2l9518 737C                                    i2l9542 5F94  
                                  i2l9630 734C                                    i2l8576 7138  
                                  i2l9528 738E                                    i2l9560 5FC8  
                                  i2l9552 5FB2                                    i2l9640 735E  
                                  i2l9632 734E                                    i2l8586 7154  
                                  i2l9490 6B5C                                    i2l9546 5FA0  
                                  i2l9562 5FCA                                    i2l9660 64BA  
                                  i2l9492 6B76                                    i2l8844 770E  
                                  i2l9572 5FEC                                    i2l9548 5FA2  
                                  i2l9580 600A                                    i2l9654 6494  
                                  i2l9566 5FDA                                    i2l9574 5FF0  
                                  i2l9558 5FC4                                    i2l9638 735C  
                                  i2l9664 64D8                                    i2l8856 76EE  
                                  i2l9578 6008                                    i2l9668 64E6  
                      ??_initialiseQueues 0060                        ??_initialiseStates 0063  
                                  _NVMDAT 000F76             __size_of_ReceiveNewDataST7540 0012  
                                  _RX3PPS 000E13                     __size_of_checkCounter 0094  
                                  _TX3REG 000EEB                            ??_readCableADC 0084  
                        __end_of_us100Isr 7B94                     __size_ofi2_setBlueLed 0008  
                        __end_of_us500Isr 7B76                    __end_of_reset13msTimer 7ACA  
                ?_RXReadyISRHandlerST7540 0001               __size_of_buildMessageST7540 02E6  
                          __CFG_PWRTE$OFF 000000                            _reset4SecTimer 7A3A  
                          __CFG_XINST$OFF 000000                  __size_of_processBTPacket 0376  
                        __end_of_fireUIDs 3818                        programUID@attempts 0087  
              __size_ofi2_initialiseModem 004A                                _acOr36VISR 77F6  
                                  _gDigit 0046                __size_ofi2_initialiseState 0056  
                      checkBluetoothCRC@i 0090                            ??_readEarthADC 0084  
                               ??_Tx_Word 0067                                    ___wmul 7166  
                                  _calcrc 648A                            __CFG_STVREN$ON 000000  
                               ??___lldiv 0068             ?_outgoingMessagesStateHandler 0001  
              __end_of_TransmitBusyST7540 7BDE                                    _device 293E  
                               ??___lwdiv 0064                  __end_of_PacketDataST7540 7B16  
                ??_initialiseReadKeyCable 0063                         ?_outgoingMessages 0001  
                       __end_of_UIO_MAK_1 7A82          i2checkForExistingUID@receivedUID 0007  
          checkForExistingUID@receivedUID 0066                         __end_of_UIO_SAK_1 7368  
                          ??_readKeyCable 0060                                    clear_0 5C44  
                                  clear_1 5C56                                    clear_2 5C62  
                                  clear_3 5C6E                                    clear_4 5C7A  
                                  clear_5 5C86                          __end_of_tagSleep 78D2  
                                  _period 00C6                         __end_of_UIO_WRITE 6B80  
          __size_of_receiveBluetoothSetup 003E                __size_of_activateBluetooth 0036  
            __size_ofi2_WriteConfigST7540 0092                   ??_PacketReadParamST7540 0077  
                                  _rxWord 5F82                         ?i2_InitST7540Pins 0001  
           __end_of_receiveBluetoothSetup 6FDA                             _incomingQueue 0300  
                      ??_outgoingMessages 007C                        programUID@txPacket 007B  
                       ?_incomingCommands 0001                          __end_of_sleep12V 7BEC  
               __size_of_receiveBluetooth 00C4                                 ??_readUID 0075  
                               ??_tagFor0 0006                                 ??_tagFor1 0006  
                         _DataReadyST7540 7BDE                         __end_of_UIO_noMAK 7A94  
                        ?_sec4OverflowIsr 0001                        ??i2_InitST7540Pins 0001  
                        __end_of_variance 293E                    __size_of_initialise12V 000A  
                  __size_of_initialise24V 000A                 i2initialiseState@specific 0001  
                      ??_incomingCommands 0082                          ?_tagForInterrupt 0001  
                 __size_of_readBatteryADC 00E6                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                               ??_ppsLock 0060                    __size_of_initialiseLed 0026  
                  __size_of_initialisePic 002A                    __size_of_initialiseTag 0020  
                            _checkCounter 5E5C                     ?_detectFallingEdgeEDD 0001  
                                  power@i 006B                      __end_of_bluetoothCRC 33CA  
                               ??_program 0099                              i2_setBlueLed 7BBC  
                         ?_EDD_Init_Comms 0001               __size_of_deviceStateHandler 02C0  
                 __size_of_sleepBluetooth 0006              __size_of_readS1StateADCSetup 002E  
                        commandResponse@i 0071                        __size_of_addNewTag 0172  
                        ?_checkStatusBits 0001                  __size_of_ledStateHandler 0200  
                     _detectRisingEdgeEDD 6C7E                             ?_Set_Line_Low 0001  
                  ?_bluetoothStateHandler 0001                              ?_UIO_WRITE_1 0001  
                             ?_InitST7540 0001                                __accesstop 0060  
                 __end_of__initialization 5C8C                            rxWord@halfBits 0005  
             __end_of_checkForUnfiredEdds 2720                              ?_programUIDs 0001  
                       __end_ofi2_ppsLock 7882                           __CFG_FEXTOSC$HS 000000  
             __size_ofi2_ReadConfigST7540 010C                    __end_of_reset4SecTimer 7A4C  
                        ??_InitST7540Pins 0060                        __size_of__delay_ms 0048  
                      __size_of__delay_us 0024                                 ?_READ_TAG 0001  
                 __size_of_CheckCRCST7540 00B6                             __end_of_CRC16 3D44  
                           ___rparam_used 000001                          bluetoothCRC@data 006F  
                         ?_reset13msTimer 0001                                 ?_SCAN_TAG 0009  
                     _initialiseDetMemory 51F8                           readS1StateADC@i 0092  
                __end_ofi2_reset4SecTimer 7AB8                            __pcstackCOMRAM 0001  
                       UIO_WRITE_1@nDigit 0006                             ?_selfCheckUID 0075  
        __size_of_initialiseWatchDogTimer 0014                              __pidataBANK0 7882  
                            __pidataBANK1 79E6                          _intialiseAcOr36V 7B16  
                  __size_of_Delay_500us_X 000C               ReadConfigST7540@frameDataUS 0060  
                           __end_of_msIsr 4EB0                  _addPacketToIncomingQueue 2F00  
                           __end_of_sleep 43E8                         ??i2_initST7540PPS 0001  
                           __end_of_power 6332                      ?_detectRisingEdgeEDD 0001  
                          UIO_WRITE_1@cmd 0004                                 READ_TAG@i 000D  
                       _initialiseEDDPins 7ADC                                   ??_CRC16 0064  
                     _initialiseBluetooth 7BCC                          _READ_TAG_REVERSE 6332  
                            ?_UIO_noMAK_1 0001                                 ?i2___wmul 0001  
                         ??_initST7540PPS 0060                           _readEDDADCSetup 7450  
                   initialiseDetWindows@i 006A                                addNewTag@i 001A  
                        _turnOffCableTest 7BE4                        ?_initialiseEDDPins 0001  
                    ?_initialiseDetMemory 0001                            _readS1StateADC 496C  
                               ?_Delay_ms 0060              addDataToOutgoingQueue@length 006F  
                       _bufferRXST7540UCA 024F             SPIISRHandlerST7540@dataReadUC 0001  
                      __size_of_bluetooth 0170                              ?i2__delay_ms 0002  
                            ?i2__delay_us 0001                            i2__delay_us@us 0001  
                            ??_SCAN_TAG_1 000B              __end_of_initST7540Interrupts 7986  
      __size_of_handleIncomingQueuePacket 0114                          ??i2_Set_Line_Low 0001  
                                 ??_msIsr 0005                          programUID@window 008A  
                                 ??_sleep 006C                                   ??_power 006A  
             readEarthADC@currentVariance 0090                       ??_initialiseEDDPins 0060  
         __end_of_RXReadyISRHandlerST7540 7ADC                                _checkPulse 6E4C  
                          ??_Set_Line_Low 0060                                __pbssBANK0 00A3  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                        __size_of_mainsWake 0042  
                              _bitCounter 00C3                      ?_initialiseBluetooth 0001  
               __size_of_ReadConfigST7540 0130                           ?_reset4SecTimer 0001  
     __size_ofi2_addPacketToOutgoingQueue 00B0                                ??_READ_TAG 000D  
                              _flagST7540 004C                     bluetoothCRC@loopBytes 007A  
                       _programInitialise 7B2E                       _SPIISRHandlerST7540 6568  
                              ??_SCAN_TAG 000B                       _initialiseShaftTest 7086  
                 ?i2_initST7540Interrupts 0001                             _initialise12V 7B80  
                           _initialise24V 7B76                              _T2CLKCONbits 000FBF  
                 __size_of_readTagRoutine 008A                         UIO_WRITE@uio_data 0005  
                             ?_acOr36VISR 0001              StartTransmitST7540@discardUC 0060  
                          ??_selfCheckUID 0077                           _initialiseModem 6A14  
                           _initialiseLed 75FC                             _initialisePic 7530  
                           _initialiseTag 7692                        ?_programInitialise 0001  
                         _initialiseState 69B6                    __size_of_Set_Line_High 0004  
            __size_of_stateCounterHandler 008E                         _bufferTXST7540UCA 0200  
                 setDeviceName@tempSerial 007E                               sendPacket@i 0090  
                          _resetBluetooth 7906                          _EDD_Energy_Store 6F1A  
                            ?_writeEUSART 0060                                   ?___wmul 0060  
                                 ?_calcrc 0001                        __size_of_setOffLed 0008  
                 programUID@windowCompare 0088                           __CFG_PPS1WAY$ON 000000  
                      __size_of_setRedLed 0008                         setSlaveMode@txreg 0068  
                      __size_of_shaftTest 00D2                   __end_of_DataReadyST7540 7BE4  
                                 ?_device 0001                     ??_detectRisingEdgeEDD 0062  
                           ?_setSlaveMode 0001                       setDeviceName@F17421 01E4  
               __end_of_initialiseEDDPins 7AEC                   ??_returnFromProgramming 0060  
                    checkForExistingUID@i 0072                        __end_of_SCAN_TAG_1 4CF8  
         __size_of_initialiseReadKeyCable 002A                         __end_of_addNewTag 353C  
                       ??_processBTPacket 0093                       ??_programInitialise 0068  
              __end_of_initialiseTagADC_1 72A2                                   ?_rxWord 0001  
                 ??_shaftTestStateHandler 0094                    __end_of_readS1StateADC 4A52  
                     __size_of_InitST7540 00F6            ??_outgoingMessagesStateHandler 0060  
                              ??i2___wmul 0005                         __end_of__delay_ms 6E4C  
                           ??_CHECK_CRC16 000B                         __end_of__delay_us 7692  
                    ?_SPIISRHandlerST7540 0001                        __size_of_ppsUnlock 001C  
                    __end_of_readCableADC 4886                      ?_initialiseShaftTest 0001  
                            ?_Delay_100us 0001                                   i2l10108 55C6  
                                 i2l12000 4E40                                   i2l12010 4E7C  
                                 _INT0PPS 000DF0                                   i2l12004 4E58  
                                 i2l12022 4EA6                                   i2l12016 4E94  
                                 i2l12008 4E74                                   i2l11240 5F58  
                                 i2l12040 615A                                   i2l12018 4E98  
                                 i2l12122 772A                                   i2l11234 5EFA  
                                 i2l11244 5F5C                                   i2l12060 618C  
                                 i2l12044 616A                                   i2l11262 5E44  
                                 i2l11246 5F60                                   i2l12054 6180  
                                 i2l12038 6158                                   i2l11272 58B8  
                                 i2l12064 619C                                   i2l11258 5E34  
                                 i2l12074 61B2                                   i2l12058 618A  
                   ??_initialiseDetMemory 006D                                   i2l11294 6DE8  
                                 i2l11606 5D7A                                   i2l12096 6588  
                                 i2l11296 6DEA                                   i2l10840 4D5E  
                                 i2l12512 00AA                                   i2l11570 60A8  
                                 i2l10850 4D92                                   i2l11810 6408  
                                 i2l11802 63EA                                   i2l11618 5DC0  
                                 i2l12506 009C                              ?_Delay_500us 0001  
                                 _INT3PPS 000DF3                                   i2l11572 60B6  
                                 i2l10860 4DB4                                   i2l10908 4C80  
                                 i2l12540 00EE                                   i2l12532 00DA  
                                 i2l12524 00C6                                   i2l10926 4CD0  
                                 i2l10918 4CB4                                   i2l11830 6366  
                                 i2l12518 00B8                                   i2l10792 5EDC  
                                 i2l11584 6114                                   i2l11920 53D6  
                                 i2l11912 53B2                                   i2l10928 4CD6  
                                 i2l12480 005C                                   i2l11578 6102  
                                 i2l11922 53E2                                   i2l11914 53C4  
                                 i2l11930 544A                                   i2l10946 712A  
                                 i2l10858 4DAE                                   i2l11818 6416  
                                 i2l11850 63A2                                   i2l11842 6394  
                                 i2l11834 6376                                   i2l12562 0134  
                                 i2l12546 00FC                                   i2l12556 0126  
                                 i2l12492 0078                                   i2l11950 6E7C  
                                 i2l11926 53F4                                   i2l11774 343E  
                                 i2l11598 5D50                                   i2l12486 006A  
                                 i2l11944 6E60                                   i2l11928 543A  
                                 i2l11784 349C                                   i2l11768 33E8  
                                 i2l11970 7804                                   i2l11778 344E  
                                 i2l11948 6E78                                   i2l11964 77F8  
                                 i2l11980 4DF0                                   i2l11966 77FE  
                                 i2l11982 4DF8                                   i2l11798 63DA  
                                 i2l11992 4E20                                   i2l11994 4E28  
                                 i2l11986 4E08                                   i2l11988 4E10  
                                 i2l11998 4E38     i2addPacketToOutgoingQueue@destination 0005  
     addPacketToOutgoingQueue@destination 0064                      __size_of_setGreenLed 0008  
                               ?_us100Isr 0001                    ??_detectFallingEdgeEDD 0062  
                      __size_of_rxWordEDD 0146                                 ?_us500Isr 0001  
                                 _SP3BRGH 000EED                                   _SP3BRGL 000EEC  
                            _T4CLKCONbits 000FB9                                ??_Delay_ms 0062  
            __end_of_initialiseDetWindows 5510             readBatteryADC@currentVariance 0090  
                                 _NVMADRH 000F75                                   _NVMADRL 000F74  
                                 _NVMCON2 000F78              __end_of_bluetoothSetupSwitch 70F6  
                ??_addDataToOutgoingQueue 006B                                   _PPSLOCK 000DEF  
                                 _SSP1BUF 000F91                                 ?_fireUIDs 0001  
                          _packetNumberUC 00C8                      __end_of_readEarthADC 47A0  
                                 _UIO_MAK 7A94                writeStructureToEeprom@size 0068  
                                 _UIO_SAK 7368                        _clearEDDStatusbits 1A56  
                           _Delay_500us_X 7B3A                  __size_of_commandResponse 00CC  
                        ??_updateStateIds 0001         __end_of_handleIncomingQueuePacket 41D6  
                         writeEUSART@data 0060                    __size_of_us100DelayIsr 0008  
                         writeEUSART@size 0062                     ??_initialiseBluetooth 0060  
                    __end_of_readKeyCable 5BFC                 __end_of_programInitialise 7B3A  
                              _readEDDADC 4A52                           sendPacket@txReg 0085  
                               ?_tagSleep 0001            __end_ofi2_initST7540Interrupts 79E6  
              processBTPacket@tempDetInfo 009A                       ?_clearEDDStatusbits 0001  
                              _mainsSleep 6C2C                         _checkBluetoothCRC 3FA6  
                              _readEUSART 7712                            ?_initialise12V 0001  
                          ?_initialise24V 0001                  ??_readSupplyStateHandler 0094  
                  __end_of_resetBluetooth 7920                ??_addPacketToOutgoingQueue 0066  
                          ?_initialiseLed 0001                                 ?_sleep12V 0001  
                          ?_initialisePic 0001                            ?_initialiseTag 0001  
                                 __Hparam 0000                                _readEddADC 755A  
                       ??_ledStateHandler 0060                        ?_checkBluetoothCRC 0001  
                                 __Lparam 0000                              _T6CLKCONbits 000FB3  
                   _checkOutgoingMessages 7BC4                  ?_readStructureFromEeprom 0066  
                        ??_LineIdleST7540 0060               __size_of_readByteFromEeprom 0050  
                               ?_variance 006D                    __size_of_setDeviceName 0132  
             __size_ofi2_initialiseQueues 001A               __size_ofi2_initialiseStates 0096  
            __size_of_checkIfTagIsRemoved 000C                                   _Tx_Word 64FA  
                              _readTagADC 79B6                         __end_of_bluetooth 36AC  
                 commandResponse@RxLength 006A          __size_of_initialiseBluetoothPins 0026  
                            ?i2_ppsUnlock 0001                            ??_setSlaveMode 0068  
                               _EDD_Blast 663E            __size_of_initialiseACinterrupt 000C  
                                 ___lldiv 55CE                           __size_of___wmul 0036  
                  __size_of_EDD_Calibrate 0034                           __size_of_calcrc 0070  
           __end_of_initialiseACinterrupt 7B2E                   commandResponse@TxLength 0070  
                                 ___lwdiv 6246                         i2__delay_ms@delay 0002  
                   _Tx_Calibration_Pulses 5C9A                   __end_of_readEDDADCSetup 747E  
                       ?_detectRisingEdge 0001                  _readKeyCableStateHandler 595A  
                         __size_of_device 0204         i2addPacketToOutgoingQueue@command 0003  
         addPacketToOutgoingQueue@command 0062          i2addPacketToOutgoingQueue@length 0004  
          addPacketToOutgoingQueue@length 0063                       ??_checkBluetoothCRC 0080  
             Tx_Calibration_Pulses@j_6087 0064                                   __pcinit 5BFC  
                       __end_of_mainsWake 6F1A                                _readSupply 505A  
                                 __ramtop 0E00                                _initialise 6B80  
                   fire@missingPulseCheck 0097                        ??_detectRisingEdge 0003  
                         readUID@attempts 0080                                   __ptext0 6836  
                                 __ptext1 0182                                   __ptext2 6B80  
                                 __ptext3 7B16                                   __ptext4 7B22  
                                 __ptext5 7A12                                   __ptext6 6FDA  
                                 __ptext7 7016                                   __ptext8 72D6  
                                 __ptext9 704E                           __size_of_rxWord 0092  
                   ??_SPIISRHandlerST7540 0001                      ??_clearEDDStatusbits 0060  
                         ?_readS1StateADC 0082                     ??_initialiseShaftTest 0063  
                                 calcrc@i 0008                              writeEUSART@i 0066  
                   __size_of_bluetoothCRC 0172                                 _T1CONbits 000FCF  
                        _receiveBluetooth 538A                                   _readUID 228E  
                                 _tagFor0 793A                                   _tagFor1 7920  
                               _T2CONbits 000FBD                                _modemSleep 7AEC  
                            __size_of_led 0152                              __size_of_isr 0176  
                              ??_us100Isr 0001                            _readBatteryADC 4886  
                              ??_us500Isr 0001                                 _T4CONbits 000FB7  
                            _T8CLKCONbits 000F2C                        readMainsInterval@i 0060  
                                 _ppsLock 77DA                             _Set_Line_High 7BF0  
                     sendAtCommand@F17415 00FA                                 _T6CONbits 000FB1  
                     __size_of_acOr36VISR 001C                                   _program 776A  
                              _setBlueLed 7BAC                            ?_Delay_500us_X 0001  
                              ??_fireUIDs 008E                            _sleepBluetooth 7BD2  
             CheckCRCST7540@expectedCRCUS 0070                                 _T8CONbits 000F2A  
                         readUID@txPacket 007B                         __end_of_setOffLed 7BA4  
                              _sendPacket 3818                       __end_of_CHECK_CRC16 712E  
                       __end_of_setRedLed 7B9C                      end_of_initialization 5C8C  
                       __end_of_shaftTest 505A                    _initialiseReadKeyCable 7506  
                             ?_checkPulse 0001               ??_checkLineForConnectedUIDs 0075  
                 buildMessageST7540@index 007B                 __end_of_checkBluetoothCRC 40C2  
                 __end_of_initialiseModem 6A70                                 Delay_ms@i 0063  
                               Delay_ms@j 0065              __end_of_initialiseReadSupply 76D2  
                           ?i2_InitST7540 0001                       i2_WriteConfigST7540 6014  
                 __end_of_initialiseState 6A14                             __Lmediumconst 0000  
                     i2___wmul@multiplier 0001                                ??_tagSleep 0060  
               __size_of_initialiseEddADC 0028                            _CheckCRCST7540 5744  
                    currentStateHandler@i 01FA                  __size_ofi2_Set_Line_High 0004  
                    __size_of_UIO_WRITE_1 005A                         __end_of_ppsUnlock 77DA  
            __size_of_checkForExistingUID 00AE                           ___lldiv@divisor 0064  
               __size_of_initialiseTagADC 0034                                ??_sleep12V 0060  
                         ?_resetBluetooth 0001                      __size_of_programUIDs 033C  
                         ___lldiv@counter 006C                         __end_of_rxWordEDD 3C10  
                 _initialiseWatchDogTimer 7A12                   __size_of_initialiseUART 002E  
               __size_of_initialiseTimer0 0030                 __size_of_initialiseTimer1 001C  
               __size_of_initialiseTimer2 0038                 __size_of_initialiseTimer4 0032  
               __size_of_initialiseTimer6 0038                 __size_of_initialiseTimer8 003C  
                              ??_variance 0070                         _readEarthADCSetup 7398  
                             variance@sum 007C                 __size_of_initialiseQueues 001A  
               __size_of_initialiseStates 00C8                                   postdec1 000FE5  
                                 postdec2 000FDD                              _bluetoothCRC 3258  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                         READ_TAG_REVERSE@i 000D  
                programRetryChecks@window 008D                                ?_EDD_Blast 0001  
                     _readS1StateADCSetup 7422                      _initST7540Interrupts 796E  
              __end_of_programRetryChecks 663E                          ?_DataReadyST7540 0001  
                      ?_readEarthADCSetup 0001                 detectRisingEdgeEDD@change 0064  
              __size_of_initialiseEDDPins 0010                         ?_PacketDataST7540 0060  
                              _testMemory 0182                     __CFG_WDTCPS$WDTCPS_31 000000  
            __end_of_ReceiveNewDataST7540 7A5E                             _us100DelayIsr 7BB4  
                    __end_of_Set_Line_Low 7BF0                      ?i2_WriteConfigST7540 0006  
             CheckCRCST7540@receivedCRCUS 0072                                _setupIndex 00C0  
                               _PORTAbits 000F89                                 _PORTBbits 000F8A  
                   _prepareForProgramming 6D70                                 _PORTCbits 000F8B  
        __size_of_RXReadyISRHandlerST7540 0012                               testMemory@i 006C  
                               _PORTEbits 000F8D                                 _PORTHbits 000F90  
                      ??_PacketDataST7540 0062              __size_of_currentStateHandler 01A4  
                  __end_of_readBatteryADC 496C            __size_of_PacketReadParamST7540 00D8  
                               _UIO_MAK_1 7A70                          ??_EDD_Init_Comms 0060  
                   i2_checkForExistingUID 5EF0             __end_of_PacketReadParamST7540 4F88  
                               _UIO_SAK_1 7338                       ??_readEarthADCSetup 0061  
                              _programUID 1FD8                                 _UIO_WRITE 6B26  
                  __end_of_sleepBluetooth 7BD8                      __CFG_WDTCCS$LFINTOSC 000000  
                          ?_Set_Line_High 0001                      __size_of_UIO_noMAK_1 0012  
            __size_of_StartTransmitST7540 0018                                 _TRISAbits 000F81  
                               _TRISBbits 000F82                                 _TRISCbits 000F83  
                               _TRISDbits 000F84                                 _TRISEbits 000F85  
                               _TRISFbits 000F86                 readByteFromEeprom@address 0064  
                               _TRISGbits 000F87                                 _TRISHbits 000F88  
                          CHECK_CRC16@crc 000B                               Tx_Word@byte 0069  
                           _setDeviceName 3D44                        _TransmitBusyST7540 7BD8  
                    __end_of_selfCheckUID 10BE                   ??_bluetoothStateHandler 0060  
                    checkCounter@specific 0001                                 _UIO_noMAK 7A82  
         __size_of_addDataToOutgoingQueue 01BE                      ?_readS1StateADCSetup 0001  
                           _EDD_Calibrate 7206              __size_of_readBatteryADCSetup 002E  
                __end_of_intialiseAcOr36V 7B22                 __size_of_outgoingMessages 0064  
                   checkStatusBits@status 006A                          ??_reset13msTimer 0001  
                    __size_ofi2__delay_ms 0038                    __end_of_CheckCRCST7540 57FA  
                    __size_ofi2__delay_us 001E                            ??i2_InitST7540 0011  
               __size_ofi2_InitST7540Pins 0028                              ??_InitST7540 0070  
                             ?_readEDDADC 0082                __size_of_programInitialise 000C  
                     ?_TransmitBusyST7540 0001                           ??_initialise12V 0060  
                         ??_initialise24V 0060                __end_of_buildMessageST7540 1A56  
               __size_of_incomingCommands 0060                          _ReadConfigST7540 3E76  
                         ??_initialiseLed 0063                         _detectFallingEdge 76F2  
                         ??_initialisePic 0060                           ??_initialiseTag 0060  
                __end_of_READ_TAG_REVERSE 63A6                           i2_initST7540PPS 782E  
                             ?_mainsSleep 0001                ??_addPacketToIncomingQueue 007C  
                             ?_readEUSART 0001                    ?_checkOutgoingMessages 0001  
                       ??_commandResponse 006D                 __end_of_readEarthADCSetup 73C6  
                          _readTagRoutine 6134           __size_of_readSupplyStateHandler 00F2  
                __end_of_turnOffCableTest 7BE8                               ?_readEddADC 0060  
                      ?_detectFallingEdge 0001                          processBTPacket@i 009C  
                             power@result 006D                         __size_of_READ_TAG 0074  
                               i2_ppsLock 7866                         __size_of_SCAN_TAG 00DE  
                             rxWord@watch 0008                               ?_readTagADC 0001  
                  ?_Tx_Calibration_Pulses 0001                         ?i2_reset4SecTimer 0001  
                    _initialiseDetWindows 544E                     ?_initST7540Interrupts 0001  
                    _bluetoothSetupSwitch 70BE                 _checkLineForConnectedUIDs 670C  
                   __size_of_readCableADC 00E6                            ?_us100DelayIsr 0001  
                        ?_readEDDADCSetup 0001                       ??_detectFallingEdge 0003  
                      ??i2_reset4SecTimer 0001                               __delay_ms@i 0063  
                          __end_of___wmul 719C                            __end_of_calcrc 64FA  
                   ??i2_WriteConfigST7540 000C                      __size_of_writeEUSART 0066  
                             ?_readSupply 0001                            __end_of_device 2B42  
                    ??_TransmitBusyST7540 0060                               ?_initialise 0001  
                     __size_of_checkPulse 0048                  ??_writeStructureToEeprom 006A  
                        testMemory@i_1270 0070                          testMemory@i_1271 0072  
                        testMemory@i_1272 0074                          testMemory@i_1273 0076  
                        testMemory@i_1269 006E                           ?_readBatteryADC 0082  
          i2addPacketToOutgoingQueue@data 0001                          i2___wmul@product 0005  
                              ?_UIO_MAK_1 0001                 checkBluetoothCRC@indexCrc 0092  
                          __end_of_rxWord 6014                        __end_of_InitST7540 44DE  
                   __size_of_readEarthADC 00E6                               ?_modemSleep 0001  
                              ?_UIO_SAK_1 0001                               _CHECK_CRC16 70F6  
                   _receiveBluetoothSetup 6F9C                                ?_UIO_WRITE 0001  
                     start_initialization 5BFC                           ??_Delay_500us_X 0060  
                         ?_sleepBluetooth 0001                __end_of_deviceStateHandler 1FD8  
                          ?_setDeviceName 0001      addDataToOutgoingQueue@length_tracker 0070  
                       __size_ofi2___wmul 0026                      __size_of_Delay_100us 000E  
                             __end_of_led 3ACA                       _stateCounterHandler 60A6  
                    __size_of_Delay_500us 000C                               __end_of_isr 017E  
                         UIO_WRITE@nDigit 0006                     __size_of_readKeyCable 00A2  
                             ?_setBlueLed 0001                            ?_EDD_Calibrate 0001  
                 __size_of_disengageRelay 0004                     ??_readS1StateADCSetup 0061  
                __end_of_EDD_Energy_Store 6F5C                                ?_UIO_noMAK 0001  
              addDataToOutgoingQueue@data 0066                         __size_of_Delay_ms 0060  
                        ??_reset4SecTimer 0060                               ?_sendPacket 0001  
              addDataToOutgoingQueue@size 0069                         _writeByteToEeprom 641A  
                    __end_of_setSlaveMode 74AC                __end_ofi2_ReadConfigST7540 42E2  
                __size_of_sec4OverflowIsr 0018                 __end_of_detectFallingEdge 7712  
                         ?_CheckCRCST7540 0001                __size_of_checkBluetoothCRC 011C  
                        ?_initialiseModem 0001                  __size_of_tagForInterrupt 001C  
                      ?_writeByteToEeprom 0060                   InitST7540@frameDataRXUS 0076  
                        ?_initialiseState 0060                   InitST7540@frameDataTXUS 0070  
                  __end_of_readTagRoutine 61BE                 ??_initialiseWatchDogTimer 0060  
                           readUID@i_6063 0083                                  CRC16@crc 006B  
        __end_of_addPacketToOutgoingQueue 58AA           writeStructureToEeprom@structure 0066  
          i2WriteConfigST7540@frameDataUS 0006                           _processBTPacket 10BE  
                            _readCableADC 47A0             addDataToOutgoingQueue@command 0068  
                            ??_acOr36VISR 001E                          __CFG_LPBOREN$OFF 000000  
                              ?i2_ppsLock 0001                   _initialiseBluetoothPins 7622  
                __size_of_checkStatusBits 005C                      ?_stateCounterHandler 0001  
                     ??_writeByteToEeprom 0062                     ?_initialiseDetWindows 0001  
                  _addDataToOutgoingQueue 2D42                     ?_bluetoothSetupSwitch 0001  
                   writeByteToEeprom@byte 0060              __size_of_checkForUnfiredEdds 0234  
                 initialiseModem@attempts 007C                                  ??___wmul 0064  
                                ??_calcrc 0005                               ??_EDD_Blast 006A  
                         _bufferRXNextUCA 0048                              _readEarthADC 46BA  
                       ??i2_Set_Line_High 0001                                  ??_device 00A3  
                             __pdataBANK0 00E4                               __pdataBANK1 01E4  
                           readUID@window 007A                               ?_testMemory 0001  
                  ?_prepareForProgramming 0001               readCableADC@currentVariance 0090  
                    __size_ofi2_ppsUnlock 001C                           _bufferTXNextUCA 004A  
                                ??_rxWord 0005            __size_of_returnFromProgramming 0034  
                            _readKeyCable 5B5A             __end_of_returnFromProgramming 7206  
                  ?i2_checkForExistingUID 0007                     checkBluetoothCRC@data 0085  
                     __size_of_readEDDADC 00E6                      _initialiseReadSupply 76B2  
         RXReadyISRHandlerST7540@ReadIOCC 0001                           ??_Set_Line_High 0060  
                      setSlaveMode@F17418 00EF                               __pbssBIGRAM 03C0  
                  _readSupplyStateHandler 44DE                               ?_programUID 0001  
          __size_of_shaftTestStateHandler 00BA                                 _addNewTag 33CA  
                     __size_of_mainsSleep 0052             __end_of_shaftTestStateHandler 5744  
                             __pbssCOMRAM 002D                       __size_of_readEUSART 001E  
                         bluetoothCRC@crc 0076                             __pcstackBANK0 0060  
                           __pcstackBANK1 01FA                     __end_of_initST7540PPS 77BE  
                     __size_of_readEddADC 002A                 __end_of_writeByteToEeprom 648A  
                     _checkIfTagIsRemoved 7B5E                                 __delay_ms 6E04  
                               __delay_us 766E                         __size_of_us100Isr 000A  
                      _maxProgramAttempts 00C9                                  ?_UIO_MAK 0001  
                 __end_ofi2_initST7540PPS 784A                         __size_of_us500Isr 000C  
                                ?_UIO_SAK 0001                        __end_of_acOr36VISR 7812  
                     __size_of_readTagADC 0018                             readCableADC@i 0092  
                         _ledStateHandler 2B42                        _initialiseTagADC_1 726E  
                       __size_of_fireUIDs 016C                         programUIDs@i_6446 0094  
       checkLineForConnectedUIDs@attempts 007B                    readS1StateADC@ADCStore 0086  
                    _ReceiveNewDataST7540 7A4C                          _initialiseEddADC 75AC  
                     __size_of_readSupply 00D2                         i2_tagForInterrupt 7812  
                         ?_readTagRoutine 0001                       __size_of_initialise 0056  
                     programUIDs@attempts 0098                ??_readKeyCableStateHandler 0094  
                __end_of_receiveBluetooth 544E                       ?_initialiseTagADC_1 0001  
               CheckCRCST7540@packetLenUC 0074                          _initialiseTagADC 72A2  
              __size_of_readEarthADCSetup 002E                 ReadConfigST7540@discardUC 0067  
             __end_of_detectRisingEdgeEDD 6CD0                        ?i2_tagForInterrupt 0001  
                          _initialiseUART 74AC                         __size_of_tagSleep 001A  
                     __size_of_modemSleep 000E                          ___lwdiv@dividend 0060  
                   ??_stateCounterHandler 0005                    ??_initST7540Interrupts 0060  
                        _initialiseTimer0 7308                          _initialiseTimer1 774E  
                        _initialiseTimer2 704E                          _initialiseTimer4 72D6  
                        _initialiseTimer6 7016                          _initialiseTimer8 6FDA  
                           ?_eddCommsIsr4 0001                             ?_eddCommsIsr8 0001  
                   __size_of_Set_Line_Low 0004                      ?_checkIfTagIsRemoved 0001  
                        _initialiseQueues 789E                          _initialiseStates 52C2  
                         ??_us100DelayIsr 0001                                 __pintcode 0008  
       checkLineForConnectedUIDs@txPacket 0076                                  ?_Tx_Word 0001  
                       __size_of_sleep12V 0004                                 __ptext100 595A  
                               __ptext101 496C                                 __ptext110 7B52  
                               __ptext102 7422                                 __ptext111 6770  
                               __ptext103 4A52                                 __ptext200 7812  
                               __ptext120 7BAC                                 __ptext112 1770  
                               __ptext104 2720                                 __ptext201 5DC6  
                               __ptext121 67D4                                 __ptext113 7986  
                               __ptext105 55CE                                 __ptext210 41D6  
                               __ptext202 6DBA                                 __ptext130 7A4C  
                               __ptext122 7BDE                                 __ptext114 2B42  
                               __ptext106 7450                                 __ptext211 75D4  
                               __ptext203 6BD6                                 __ptext131 45D0  
                               __ptext123 6956                                 __ptext115 7B5E  
                               __ptext107 5B5A                                 __ptext212 782E  
                               __ptext204 7954                                 __ptext140 747E  
                               __ptext132 353C                                 __ptext124 40C2  
                               __ptext116 3978                                 __ptext108 61BE  
                               __ptext213 784A                                 __ptext205 5510  
                               __ptext141 3D44                                 __ptext133 3818  
                               __ptext125 2F00                                 __ptext117 7B94  
                               __ptext109 7BD8                                 __ptext214 7866  
                               __ptext206 79CE                                 __ptext150 719C  
                               __ptext142 66A6                                 __ptext134 10BE  
                               __ptext126 4EB0                                 __ptext118 7B9C  
                               __ptext215 6E4C                                 __ptext207 6014  
                               __ptext151 74AC                                 __ptext143 6246  
                               __ptext135 5A08                                 __ptext127 5744  
                               __ptext119 7BA4                                 __ptext216 7AA6  
                               __ptext208 712E                                 __ptext160 7BB4  
                               __ptext152 69B6                                 __ptext144 7906  
                               __ptext136 3FA6                                 __ptext128 3C10  
                               __ptext217 7AB8                                 __ptext209 7730  
                               __ptext161 799E                                 __ptext145 766E  
                               __ptext137 3258                                 __ptext129 7B08  
                               __ptext218 6568                                 __ptext170 6332  
                               __ptext162 6134                                 __ptext154 7B6A  
                               __ptext146 2D42                                 __ptext138 62BE  
                               __ptext219 7ACA                                 __ptext171 726E  
                               __ptext163 7BBC                                 __ptext155 7A26  
                               __ptext147 7166                                 __ptext139 70BE  
                               __ptext180 5F82                                 __ptext172 4C1A  
                               __ptext164 7920                                 __ptext156 7BF8  
                               __ptext148 6A70                                 __ptext181 76D2  
                               __ptext173 7A5E                                 __ptext165 793A  
                               __ptext157 7BFC                                 __ptext149 57FA  
                               __ptext190 7712                                 __ptext182 76F2  
                               __ptext174 6ACC                                 __ptext166 33CA  
                               __ptext158 7B8A                                 __ptext191 6F9C  
                               __ptext183 79B6                                 __ptext175 7338  
                               __ptext167 5EF0                                 __ptext159 5D30  
                               __ptext192 538A                                 __ptext184 7A82  
                               __ptext176 7A70                                 __ptext168 7648  
                               __ptext193 4DD6                                 __ptext185 6B26  
                               __ptext177 63A6                                 __ptext169 58AA  
                               __ptext194 60A6                                 __ptext186 7368  
                               __ptext178 72A2                                 __ptext195 5E5C  
                               __ptext187 7A94                                 __ptext179 4CF8  
                               __ptext196 74DA                                 __ptext188 70F6  
                               __ptext197 7BC4                                 __ptext189 648A  
                               __ptext198 77F6                                 __ptext199 6F5C  
                        ??_readS1StateADC 0084                       __size_of_setBlueLed 0008  
                                ?___lldiv 0060                 readEDDADC@currentVariance 0090  
                                ?___lwdiv 0060               __end_of_initialiseDetMemory 52C2  
                     ??i2_tagForInterrupt 0001                         __size_of_variance 021E  
                  readTagRoutine@attempts 001C                   __size_of_InitST7540Pins 0028  
                     __size_of_sendPacket 0160                   _RXReadyISRHandlerST7540 7ACA  
                readStructureFromEeprom@i 006B                             ??_setGreenLed 0060  
                    __end_ofi2_InitST7540 55CE                                 _bluetooth 353C  
            ??i2_addPacketToOutgoingQueue 0007                     ?_initialiseReadSupply 0001  
         __end_of_initialiseWatchDogTimer 7A26           __size_of_writeStructureToEeprom 0044  
                   __size_of_selfCheckUID 03E4                            __size_of_CRC16 0134  
                  ?_receiveBluetoothSetup 0001                           ??_setDeviceName 0068  
                               calcrc@crc 0009                      ??_initialiseTagADC_1 0002  
                             ??_UIO_MAK_1 0002                                  ?_readUID 0001  
                               calcrc@ptr 0001                                  ?_tagFor0 0001  
                                ?_tagFor1 0001                               ??_UIO_SAK_1 0002  
                            _expectedDets 00C1                                ?_addNewTag 0001  
                     _checkForExistingUID 5A08            handleIncomingQueuePacket@index 0073  
        __size_of_readStructureFromEeprom 0050                                 _mainsWake 6ED8  
                             ??_UIO_WRITE 0002                           ??_EDD_Calibrate 006A  
                     i2initialiseStates@i 0004                                  ?_ppsLock 0001  
                 writeStructureToEeprom@i 006A                   ?_initialiseReadKeyCable 0001  
                      setDeviceName@txreg 0068               __end_of_initialiseBluetooth 7BD2  
                           readEarthADC@i 0092                                ?__delay_ms 0061  
                              ?__delay_us 0001                          __CFG_WDTE$SWDTEN 000000  
                                ?_program 0001             __size_of_detectFallingEdgeEDD 0060  
                        ___lwdiv@quotient 0065                               ??_UIO_noMAK 0002  
               __size_of_detectRisingEdge 0020                          _outgoingMessages 6770  
                          __size_of_msIsr 00DA                               _CPUDOZEbits 000E42  
                          __size_of_sleep 0106                   __end_of_processBTPacket 1434  
                          __size_of_power 0074                              ??_checkPulse 0001  
               __end_ofi2_tagForInterrupt 782E                __size_of_detectFallingEdge 0020  
                        ??_resetBluetooth 0061                                  _COUNTERS 00A3  
                        i2_InitST7540Pins 75D4                     ?_ReceiveNewDataST7540 0001  
                            _Set_Line_Low 7BEC                       __size_of_testMemory 0B58  
              ?_handleIncomingQueuePacket 0001                          _incomingCommands 6956  
                               _tag_state 0047                               CRC16@data_p 0060  
                          ___wmul@product 0064          __end_of_addPacketToIncomingQueue 30B4  
                                _LATAbits 000F79                                  _LATBbits 000F7A  
                                _LATCbits 000F7B                                 _setOffLed 7B9C  
                                _LATDbits 000F7C                       _currentStateHandler 30B4  
                                _LATEbits 000F7D                    __end_of_initialiseUART 74DA  
                                _LATFbits 000F7E                                  _LATGbits 000F7F  
                               _setRedLed 7B94                                  _LATHbits 000F80  
                               _shaftTest 4F88                 ??_initialiseBluetoothPins 0060  
                                _READ_TAG 63A6                                  _PIE0bits 000E29  
                             CRC16@length 0062                                  _IPR3bits 000E22  
              __end_of_readByteFromEeprom 6D70                                  _PIE3bits 000E2C  
                                _IPR5bits 000E24                                  _PIE4bits 000E2D  
                    ?_checkForExistingUID 0066                                  _PIE5bits 000E2E  
              __end_ofi2_initialiseQueues 796E                                  _SCAN_TAG 4CF8  
              __end_ofi2_initialiseStates 5E5C                                  _PMD1bits 000E4D  
                                _PMD2bits 000E4E                   __size_ofi2_Set_Line_Low 0004  
                                _PMD5bits 000E51                    ??_initialiseDetWindows 0066  
         i2WriteConfigST7540@configDataUS 0009             WriteConfigST7540@configDataUS 0068  
              i2InitST7540@configDataRXUS 0014                         ??_sec4OverflowIsr 0001  
                          ??_eddCommsIsr4 0001                            ??_eddCommsIsr8 0001  
              i2InitST7540@configDataTXUS 001A                       __size_of_programUID 02B6  
                  ??_bluetoothSetupSwitch 0080                                  _PIR0bits 000E33  
        i2ReadConfigST7540@bitsReceivedUC 0009            ReadConfigST7540@bitsReceivedUC 0068  
                     _StartTransmitST7540 7986                     ??_checkIfTagIsRemoved 0060  
                                _PIR3bits 000E36                               ??i2_ppsLock 0001  
                                _PIR4bits 000E37                                  _PIR5bits 000E38  
                                i2u731_40 5F44                                  i2u652_40 55AE  
                                i2u653_40 55C2                                  i2u593_40 6004  
                                i2u594_40 6006                                  i2u754_40 5D72  
                                i2u755_40 5D74                           __delay_ms@delay 0061  
                                i2u870_48 011C                         ??_tagForInterrupt 0060  
                 programRetryChecks@retry 008B                                  i2u869_40 011A  
                          variance@i_1220 0080                              _selfCheckUID 0CDA  
                               _ppsUnlock 77BE               __end_of_SPIISRHandlerST7540 65D6  
             __end_of_initialiseShaftTest 70BE                       _readBatteryADCSetup 73F4  
                               fireUIDs@i 0095                                 _rxWordEDD 3ACA  
                              ?_bluetooth 0001                         ??_checkStatusBits 0068  
                   _initialiseACinterrupt 7B22                         _WriteConfigST7540 5AB6  
                              _ADCON0bits 000F60                                UIO_SAK@SAK 0002  
                      __end_of_checkPulse 6E94                      ?_currentStateHandler 0001  
                       ___wmul@multiplier 0060                  __end_of_ReadConfigST7540 3FA6  
                                i2___wmul 7648               __size_of_clearEDDStatusbits 02C2  
                          variance@values 006D                   __end_of_ledStateHandler 2D42  
       __size_of_addPacketToOutgoingQueue 00B0                        ?_WriteConfigST7540 0065  
          __end_of_initialiseReadKeyCable 7530                                  _WPUEbits 000EAE  
               ?_addPacketToOutgoingQueue 0060  EDD_Energy_Store@EDD_energy_store_command 006A  
                              ?_mainsWake 0001                               calcrc@count 0003  
                   __size_of_setSlaveMode 002E                      ?_StartTransmitST7540 0001  
      __size_of_checkLineForConnectedUIDs 0064                                  _Delay_ms 68F6  
                           ?_checkCounter 0001            buildMessageST7540@dataBufLocUC 007A  
                     __end_of_setGreenLed 7BAC                            _disengageRelay 7BF4  
                      _programRetryChecks 65D6                __size_of_writeByteToEeprom 0070  
                              rxWord@word 0006            PacketReadParamST7540@paramName 0079  
           i2WriteConfigST7540@bitsSentUC 0010                             ?i2_setBlueLed 0001  
                         _commandResponse 512C                      ?_readBatteryADCSetup 0001  
                        ?i2_initST7540PPS 0001                                 copy_data0 5C10  
                               copy_data1 5C30                       ??_WriteConfigST7540 006B  
               __size_of_PacketDataST7540 000E                         ?_intialiseAcOr36V 0001  
                        __size_of_UIO_MAK 0012                          __size_of_UIO_SAK 0030  
          __size_of_bluetoothStateHandler 00EA                              _TAG_Response 004D  
           __end_of_bluetoothStateHandler 46BA                       clearEDDStatusbits@i 0066  
                           ??_UIO_WRITE_1 0002                   ??_checkOutgoingMessages 0001  
             buildMessageST7540@statusPtr 0075                              ??_readEDDADC 0084  
                     ?_programRetryChecks 008B                             ??_programUIDs 008E  
                  _writeStructureToEeprom 6E94                        ??_intialiseAcOr36V 0060  
                              ?_setOffLed 0001                                ?_setRedLed 0001  
                            ??_mainsSleep 0065                           ?_initialiseUART 0001  
                              ?_shaftTest 0001                     ??_checkForExistingUID 0068  
                            ??_readEUSART 0007                         ?_READ_TAG_REVERSE 0001  
                 ??_Tx_Calibration_Pulses 0060                         setBaudRate@F17425 00E4  
                            ??_readEddADC 0062                                  __Hrparam 0000  
                 __CFG_RSTOSC$EXTOSC_4PLL 000000                           readBatteryADC@i 0092  
                          _bufferRXLenUCA 0049                         ?_turnOffCableTest 0001  
                         _bluetoothStatus 00C2                        ??_READ_TAG_REVERSE 000D  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                 __size_of_updateStateIds 002C            i2ReadConfigST7540@configDataUS 0003  
                            ??_readTagADC 0003                            _bufferTXLenUCA 004B  
               ??_RXReadyISRHandlerST7540 0001                                ?_ppsUnlock 0001  
                      ??_turnOffCableTest 0060                          ??_readBatteryADC 0084  
                        __size_of_Tx_Word 006E                 __end_of_WriteConfigST7540 5B5A  
                              ?_rxWordEDD 0001                        _buildMessageST7540 1770  
                   i2___wmul@multiplicand 0003                              _setSlaveMode 747E  
                        __size_of___lldiv 00BC                    ??_initialiseReadSupply 0063  
                            ??_readSupply 0060                          __size_of___lwdiv 0078  
                            ??_initialise 007D                          ??_sleepBluetooth 0060  
                    ??_programRetryChecks 008D                     ??_currentStateHandler 00A0  
                writeByteToEeprom@address 0064                             ??_UIO_noMAK_1 0002  
         __end_of_initialiseBluetoothPins 7648                                _ANSELAbits 000E92  
                              _ANSELBbits 000E9A                                _ANSELEbits 000EAF  
                              _ANSELFbits 000EB4                                _ANSELGbits 000EBC  
                            ??_modemSleep 0060                                  _eddState 00B8  
                 __size_of_LineIdleST7540 000C                        __end_of_readEDDADC 4B38  
                            ?_CHECK_CRC16 0001                    __end_of_disengageRelay 7BF8  
                     ?_buildMessageST7540 0001                               ??_addNewTag 0015  
                                _btPacket 00CA                     ??_StartTransmitST7540 0060  
                                _us100Isr 7B8A                                _T0CON0bits 000FD5  
                          ??_checkCounter 0003                                _T0CON1bits 000FD6  
                        __size_of_readUID 025E                          __size_of_tagFor0 001A  
                        __size_of_tagFor1 001A                  __size_of_DataReadyST7540 0006  
                                _us500Isr 7B6A                        __end_of_mainsSleep 6C7E  
                                _halfBits 00C5                        __end_of_readEUSART 7730  
                        ??_CheckCRCST7540 006D                           ___lwdiv@divisor 0062  
                          ??i2_setBlueLed 0001                 __size_ofi2_reset4SecTimer 0012  
                   _PacketReadParamST7540 4EB0                             ??i2__delay_ms 0004  
                           ??i2__delay_us 0001                              ??_setBlueLed 0060  
                         ___lwdiv@counter 0064                               ??__delay_ms 0063  
                             ??__delay_us 0060                     ??_readBatteryADCSetup 0061  
                                __ptext10 774E                                  __ptext11 7308  
                                __ptext20 6CD0                                  __ptext12 7692  
                                __ptext21 6D20                                  __ptext13 7086  
                                __ptext30 6E94                                  __ptext22 544E  
                                __ptext14 76B2                                  __ptext31 641A  
                                __ptext23 7BCC                                  __ptext15 7506  
                                __ptext40 7A3A                                  __ptext32 776A  
                                __ptext24 7622                                  __ptext16 7530  
                                __ptext41 6A14                                  __ptext33 1434  
                                __ptext25 7B76                                  __ptext17 75FC  
                                __ptext50 77DA                                  __ptext42 789E  
                                __ptext34 0CDA                                  __ptext26 7B80  
                                __ptext18 7ADC                                  __ptext51 6C2C  
                                __ptext43 43E8                                  __ptext35 228E  
                                __ptext27 1D18                                  __ptext19 51F8  
                                __ptext60 52C2                                  __ptext52 7BE4  
                                __ptext44 796E                                  __ptext36 7B2E  
                                __ptext28 293E                                  __ptext61 36AC  
                                __ptext53 78B8                                  __ptext45 5AB6  
                                __ptext37 1A56                                  __ptext29 42E2  
                                __ptext70 6C7E                                  __ptext62 65D6  
                                __ptext54 7BD2                                  __ptext46 3E76  
                                __ptext38 6ED8                                  __ptext71 6896  
                                __ptext63 1FD8                                  __ptext55 7BE8  
                                __ptext47 7584                                  __ptext39 7786  
                                __ptext80 78D2                                  __ptext72 755A  
                                __ptext64 7206                                  __ptext56 7AEC  
                                __ptext48 77A2                                  __ptext81 78EC  
                                __ptext73 6E04                                  __ptext65 5C9A  
                                __ptext57 4B38                                  __ptext49 77BE  
                                __ptext90 46BA                                  __ptext82 7B3A  
                                __ptext74 7BEC                                  __ptext66 24EC  
                                __ptext58 71D2                                  __ptext91 7398  
                                __ptext83 7B46                                  __ptext75 79FC  
                                __ptext67 670C                                  __ptext59 6D70  
                                __ptext92 47A0                                  __ptext84 7BF0  
                                __ptext76 75AC                                  __ptext68 512C  
                                __ptext93 73C6                                  __ptext85 68F6  
                                __ptext77 6F1A                                  __ptext69 3ACA  
                                __ptext94 4F88                                  __ptext86 7AFA  
                                __ptext78 663E                                  __ptext95 44DE  
                                __ptext87 7BF4                                  __ptext79 64FA  
                                __ptext96 723A                                  __ptext88 30B4  
                                __ptext97 4886                                  __ptext89 568A  
                                __ptext98 73F4                                  __ptext99 505A  
                                _fireUIDs 36AC                       _checkForUnfiredEdds 24EC  
                        __size_of_ppsLock 001C                        __end_of_readEddADC 7584  
       __end_of_checkLineForConnectedUIDs 6770                              _SSP1CON1bits 000F95  
                ??i2_initST7540Interrupts 0001                              ??_sendPacket 0080  
                       ?_EDD_Energy_Store 0001                          __size_of_program 001C  
                  ??_ReceiveNewDataST7540 0060                      readEarthADC@ADCStore 0086  
                        ?_processBTPacket 0001                        __end_of_readTagADC 79CE  
              __size_ofi2_tagForInterrupt 001C                               _OSCCON1bits 000E43  
                             _OSCCON2bits 000E44                     commandResponse@i_6055 0073  
                      ??_EDD_Energy_Store 006A                                  _byteRead 00C4  
                           __size_of_Tx_0 001A                             __size_of_Tx_1 001A  
                                _readFlag 00B6              addPacketToOutgoingQueue@data 0060  
                         i2_Set_Line_High 7BFC                             __size_of_fire 00E2  
                           __size_of_main 0060                            _previousTagADC 003E  
        __end_of_readKeyCableStateHandler 5A08                                  _tagSleep 78B8  
                           __size_of_wake 0040                        _deviceStateHandler 1D18  
                      __end_of_readSupply 512C                        __end_of_initialise 6BD6  
                   __end_of_initialise12V 7B8A                     __end_of_initialise24V 7B80  
                    ??_buildMessageST7540 006D                   ?_addDataToOutgoingQueue 0066  
                    __CFG_WDTCWS$WDTCWS_7 000000                     __end_of_initialiseLed 7622  
                   __end_of_initialisePic 755A                     __end_of_initialiseTag 76B2  
                                _sleep12V 7BE8                            _previousStatus 00BE  
                      __CFG_BORV$VBOR_190 000000                   initialiseState@specific 0060  
                  readByteFromEeprom@byte 0060               __end_ofi2_WriteConfigST7540 60A6  
                     __end_of_UIO_WRITE_1 6B26                                 variance@i 007A  
                      __end_of_modemSleep 7AFA                   ??_prepareForProgramming 0065  
                                _variance 2720                             ??_writeEUSART 0063  
                     __end_of_programUIDs 1770                                  _response 00E0  
                    ?_checkForUnfiredEdds 0001                                _RC3STAbits 000EEE  
                   __size_ofi2_InitST7540 00BE                        i2_ReadConfigST7540 41D6  
                     ?_deviceStateHandler 0001                                  int$flags 0057  
                 ??i2_checkForExistingUID 0009                            _InitST7540Pins 7584  
                      __end_of_setBlueLed 7BB4                        rxWord@eddReadState 0007  
                            ??_testMemory 0066                    ?_initialiseACinterrupt 0001  
                               power@base 0066                              _SSP1STATbits 000F94  
      __end_ofi2_addPacketToOutgoingQueue 595A                i2_addPacketToOutgoingQueue 58AA  
                 ?_readSupplyStateHandler 0001                        __end_of_sendPacket 3978  
                             ??_bluetooth 00A0               __size_of_TransmitBusyST7540 0006  
                             _setGreenLed 7BA4              WriteConfigST7540@frameDataUS 0065  
                     ?i2_ReadConfigST7540 0001                  __end_of_initialiseEddADC 75D4  
       __size_of_addPacketToIncomingQueue 01B4              i2WriteConfigST7540@discardUC 000F  
                 __end_of_commandResponse 51F8                               _TAG_Request 002D  
               ?_addPacketToIncomingQueue 0001                   _readStructureFromEeprom 6CD0  
             __end_of_readS1StateADCSetup 7450                             ??_Delay_100us 0060  
                           ??_Delay_500us 0060      __end_of_incomingCommandsStateHandler 6836  
   __size_of_incomingCommandsStateHandler 0062              _incomingCommandsStateHandler 67D4  
                            ??_programUID 0075                                  readUID@i 0081  
                         ?_disengageRelay 0001                          ?_ledStateHandler 0001  
                             ??_mainsWake 007D                                _INTCONbits 000FF2  
                __end_of_initialiseTagADC 72D6                               _NVMCON1bits 000F77  
                __size_of_readEDDADCSetup 002E                                _FVRCONbits 000EC4  
                             _TMR1CLKbits 000FD2                    readBatteryADC@ADCStore 0086  
                    __end_of_eddCommsIsr4 7A3A                      __end_of_eddCommsIsr8 5DC6  
                __end_of_initialiseTimer0 7338                  __end_of_initialiseTimer1 776A  
                __end_of_initialiseTimer2 7086                  __end_of_initialiseTimer4 7308  
                __end_of_initialiseTimer6 704E                  __end_of_initialiseTimer8 7016  
                              Delay_ms@ms 0060                     __end_of_Delay_500us_X 7B46  
                __end_of_initialiseQueues 78B8                  __end_of_initialiseStates 538A  
                    ??_deviceStateHandler 0060                       __end_of_UIO_noMAK_1 7A70  
                              _SCAN_TAG_1 4C1A                          ??_readTagRoutine 001C  
                        _detectRisingEdge 76D2                                  intlevel2 0000  
                            _watchCounter 00BC                   __size_of_EDD_Init_Comms 0016  
                  programUID@delayCompare 0084               WriteConfigST7540@bitsSentUC 006F  
          __end_of_addDataToOutgoingQueue 2F00                      ??i2_ReadConfigST7540 0005  
                        ___lldiv@dividend 0060                              i2_InitST7540 5510  
                     __end_ofi2__delay_ms 7166                               ??_setOffLed 0060  
                     __end_ofi2__delay_us 774E                      checkForUnfiredEdds@i 0082  
                  Tx_Calibration_Pulses@i 0060                    Tx_Calibration_Pulses@j 0062  
                      __end_of_testMemory 0CDA                               ??_setRedLed 0060  
                             ??_shaftTest 0060                         __CFG_CLKOUTEN$OFF 000000  
                             _PPSLOCKbits 000DEF                               _WDTCON0bits 000E3D  
                          i2_Set_Line_Low 7BF8                         ?_receiveBluetooth 0001  
                   ??_checkForUnfiredEdds 007C                        __end_of_programUID 228E  
                 __size_of_reset13msTimer 0012                        ??_receiveBluetooth 0001  
                  __end_of_InitST7540Pins 75AC                             ??i2_ppsUnlock 0001  
                __size_of_initialiseModem 005C                              variance@mean 0078  
                             ??_ppsUnlock 0060      EDD_Calibrate@EDD_calibration_command 006A  
                __size_of_initialiseState 005E                  __end_of_outgoingMessages 67D4  
          __end_of_readSupplyStateHandler 45D0                    i2checkForExistingUID@i 0013  
                             ??_rxWordEDD 0067                __size_of_WriteConfigST7540 00A4  
                 ??_receiveBluetoothSetup 0001              buildMessageST7540@dataOffset 0079  
                       _readMainsInterval 723A                  __end_ofi2_InitST7540Pins 75FC  
               addPacketToIncomingQueue@i 0080                 i2InitST7540@frameDataRXUS 0011  
               i2InitST7540@frameDataTXUS 0017                  __end_of_incomingCommands 69B6  
                     __end_of_writeEUSART 670C                        ?_readMainsInterval 0001  
                             _testCounter 00C7                                _SSP1DATPPS 000E1A  
                        ___lldiv@quotient 0068                WriteConfigST7540@discardUC 006E  
                            _previous_ADC 003A                     _returnFromProgramming 71D2  
                  ?_PacketReadParamST7540 0075                     __end_of_Set_Line_High 7BF4  
                     commandResponse@data 006B             ?_incomingCommandsStateHandler 0001  
                   initialiseState@number 0062                     processBTPacket@i_8508 009E  
                 __end_ofi2_Set_Line_High 7C00                     _shaftTestStateHandler 568A  
               i2initialiseModem@attempts 001D                       ??_readMainsInterval 0060  
                         _sec4OverflowIsr 799E                       __end_of_Delay_100us 7B08  
         __size_ofi2_initST7540Interrupts 0018                          _PacketDataST7540 7B08  
                     __end_of_Delay_500us 7B52                                _TX3STAbits 000EEF  
                ?_initialiseWatchDogTimer 0001                           _tagForInterrupt 7786  
                             _previousADC 00BA                         ??_DataReadyST7540 0060  
                       _readCableADCSetup 73C6               __end_of_stateCounterHandler 6134  
                             _UIO_WRITE_1 6ACC                    __end_ofi2_Set_Line_Low 7BFC  
             ??_handleIncomingQueuePacket 0071                               _programUIDs 1434  
                      ?_readCableADCSetup 0001             ReceiveNewDataST7540@discardUC 0060  
                         _checkStatusBits 6A70                            Tx_Word@bit_pos 0067  
                    __end_of_checkCounter 5EF0                  InitST7540@configDataRXUS 0079  
                 __size_of_reset4SecTimer 0012                  InitST7540@configDataTXUS 0073  
                       initialiseStates@i 0063                            _updateStateIds 74DA  
            __end_of_detectFallingEdgeEDD 68F6                          fireUIDs@attempts 0094  
             readStructureFromEeprom@data 0066  
